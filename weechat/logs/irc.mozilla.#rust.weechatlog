2015-05-19 23:41:23	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-19 23:41:23	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-19 23:41:23	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-19 23:41:23	--	Channel #rust: 934 nicks (13 ops, 0 halfops, 3 voices, 918 normals)
2015-05-19 23:41:25	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-19 23:41:25	-->	adu (ajr@moz-0foa9t.md.comcast.net) has joined #rust
2015-05-19 23:41:30	<--	danobi (danobi@moz-an62ui.cicril.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-19 23:41:44	frangio	mbrubeck: that's nice i'll take a look at it, thanks
2015-05-19 23:42:32	&mbrubeck	I think there might be a typo in the code block in the Motivation section.
2015-05-19 23:42:42	-->	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has joined #rust
2015-05-19 23:42:43	&mbrubeck	`pub struct BazInner(());` should probably *not* have the `pub` keyword.
2015-05-19 23:42:50	<--	stomper (Mibbit@moz-966.099.5.189.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-19 23:42:52	-->	mcoffee (mcoffee@moz-erlnm0.bchsia.telus.net) has joined #rust
2015-05-19 23:42:55	<--	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-19 23:43:12	Mutabah	mbrubeck: The innards are private
2015-05-19 23:43:17	Mutabah	mbrubeck: So it isn't constructabe
2015-05-19 23:43:33	ubeatlenine	@niconii sorry my client went all weird
2015-05-19 23:43:40	--	NameNotFound is now known as zz_NameNotFound
2015-05-19 23:44:08	@niconii	ubeatlenine: gotcha, so what's your issue exactly
2015-05-19 23:44:20	@niconii	ubeatlenine: if you said anything about it, it didn't come through
2015-05-19 23:44:28	ubeatlenine	so i installed rust and tried `rustc --version`
2015-05-19 23:44:39	ubeatlenine	got back "rustc: error while loading shared libraries: librustc_driver-4e7c5e5c.so: cannot open shared object file: No such file or directory"
2015-05-19 23:44:45	@niconii	gotcha
2015-05-19 23:44:47	&mbrubeck	Mutabah: ah, indeed
2015-05-19 23:45:04	frangio	mbrubeck: so the idea is that the Baz variant is "private" simply because it isn't constructible 
2015-05-19 23:45:12	&mbrubeck	frangio: yeah
2015-05-19 23:45:21	@niconii	ubeatlenine: i thought that was supposed to be fixed by now, but i think you can run "sudo ldconfig" to fix it
2015-05-19 23:45:30	<--	p1start (p1start@moz-nftjhe.org) has quit (Ping timeout: 121 seconds)
2015-05-19 23:45:55	-->	redshift (redshift@moz-c8c.73t.246.204.IP) has joined #rust
2015-05-19 23:46:06	ubeatlenine	@niconii: I don't think that helped
2015-05-19 23:46:16	ubeatlenine	@niconii: same error
2015-05-19 23:46:35	-->	p1start (p1start@moz-nftjhe.org) has joined #rust
2015-05-19 23:46:35	@niconii	sorry, maybe it's "sudo ldconfig /usr/local/lib"
2015-05-19 23:46:38	-->	harrisonclarke (harrisoncla@moz-uur7pt.eastlink.ca) has joined #rust
2015-05-19 23:46:49	-->	redshift_ (redshift@moz-7qg.ain.246.204.IP) has joined #rust
2015-05-19 23:46:56	@niconii	anyway, how did you go about installing it?
2015-05-19 23:47:02	<--	danilo (danilo@moz-qhkkt5.yourvserver.net) has quit (Connection closed)
2015-05-19 23:47:13	frangio	mbrubeck: Mutabah: is there any reason why i can't simply do `pub type Foo2 = FooVariant` for the second example?
2015-05-19 23:47:20	posborne_	I'm porting some code to 1.0.0.  What's an alternative to Vec::clone_from_slice?
2015-05-19 23:47:24	@niconii	ubeatlenine: if it wasn't via rustup.sh that might be the reason
2015-05-19 23:47:24	ubeatlenine	@niconii: used the command from the manual
2015-05-19 23:47:28	Mutabah	frangio: Variants aren't types
2015-05-19 23:47:39	ubeatlenine	@niconii: that second command fixed it
2015-05-19 23:47:45	<--	tkellen (tkellen@moz-h2dliu.vt.comcast.net) has quit (Client exited)
2015-05-19 23:47:46	ubeatlenine	@niconii: thanks! :)
2015-05-19 23:47:49	-->	mcoffin (mcoffin@moz-f2a.v12.54.128.IP) has joined #rust
2015-05-19 23:47:51	&mbrubeck	frangio: I think that works.
2015-05-19 23:48:11	@niconii	ubeatlenine: hmm, okay... rustup is supposed to run ldconfig itself so you probably shouldn't have run into this
2015-05-19 23:48:15	frangio	Mutabah: FooVariant is actually a type i think, it's declared `enum FooVariant { .. }`
2015-05-19 23:48:27	Mutabah	Oh, yeah, guessed from naming
2015-05-19 23:48:30	<--	kefan (kefan@moz-ljgn4c.ma.comcast.net) has quit (Client exited)
2015-05-19 23:48:33	-->	GGist (Mibbit@moz-st7v59.wa.comcast.net) has joined #rust
2015-05-19 23:48:40	Mutabah	frangio: You might be able to... not sure
2015-05-19 23:48:43	@niconii	ubeatlenine: but yeah, no problem
2015-05-19 23:49:25	<--	redshift1 (redshift@moz-7qg.ain.246.204.IP) has quit (Ping timeout: 121 seconds)
2015-05-19 23:49:34	frangio	Mutabah: i actually can't get it to work. not sure if doing something wrong is.gd/AnFuZU
2015-05-19 23:49:35	 *	Mutabah is away (Screen Detached)
2015-05-19 23:49:53	-->	kefan (kefan@moz-ljgn4c.ma.comcast.net) has joined #rust
2015-05-19 23:50:02	-->	dpc__ (dpc@moz-t6gr4b.ca.comcast.net) has joined #rust
2015-05-19 23:50:03	-->	dpc_ (dpc@moz-t6gr4b.ca.comcast.net) has joined #rust
2015-05-19 23:50:03	<--	redshift (redshift@moz-c8c.73t.246.204.IP) has quit (Ping timeout: 121 seconds)
2015-05-19 23:50:10	frangio	http://is.gd/AnFuZU missed the http bit
2015-05-19 23:50:28	@niconii	frangio: you need foo::B::new()
2015-05-19 23:50:36	<--	p1start (p1start@moz-nftjhe.org) has quit (Ping timeout: 121 seconds)
2015-05-19 23:50:40	<--	harrisonclarke (harrisoncla@moz-uur7pt.eastlink.ca) has quit (Ping timeout: 121 seconds)
2015-05-19 23:50:57	frangio	niconii: ahh stupid me. awesome then
2015-05-19 23:51:44	<--	meh (meh@moz-a3egtu.42-151.net24.it) has quit (Ping timeout: 121 seconds)
2015-05-19 23:52:04	<--	slurps-mad-rips (slurps-mad-@moz-o2c.uaj.44.17.IP) has quit (Quit: Connection reset by bear)
2015-05-19 23:52:21	lahwran	given an Option<String> how would one get an Option<&str>?
2015-05-19 23:52:52	@huon	.as_ref() gives you an Option<&str> and .map can be used to borrow that to a &str
2015-05-19 23:53:00	lahwran	um
2015-05-19 23:53:05	lahwran	I tried as_ref()
2015-05-19 23:53:06	XMPPwocky	Option<&String>, they mean
2015-05-19 23:53:09	lahwran	oh
2015-05-19 23:53:16	lahwran	how do you borrow it to an &str?
2015-05-19 23:53:22	lahwran	I thought &String *was* &str
2015-05-19 23:53:29	-->	WindowsBunny1 (Peter@moz-vlal7g.east.verizon.net) has joined #rust
2015-05-19 23:53:29	XMPPwocky	.map(|x| &*x) iirc
2015-05-19 23:53:31	XMPPwocky	should work
2015-05-19 23:53:31	lahwran	when did they become different
2015-05-19 23:53:35	lahwran	whaaaat
2015-05-19 23:53:36	XMPPwocky	they've always been different
2015-05-19 23:53:37	lahwran	why are they different
2015-05-19 23:53:52	XMPPwocky	String is a type. str is a type. str is an *unsized* type and not very useful
2015-05-19 23:53:58	XMPPwocky	on its own
2015-05-19 23:54:04	XMPPwocky	so you almost always see &str
2015-05-19 23:54:14	XMPPwocky	&String is just a reference to String
2015-05-19 23:54:31	XMPPwocky	It's similar to &Vec<T> vs Vec<T> vs &[T]
2015-05-19 23:54:50	XMPPwocky	now, with deref coercions, &String will coerce to &str
2015-05-19 23:55:04	XMPPwocky	but Option<&String> can't coerce to Option<&str>
2015-05-19 23:55:06	@huon	s/similar to/exactly the same as/ :)
2015-05-19 23:55:08	-->	danobi (danobi@moz-an62ui.cicril.sbcglobal.net) has joined #rust
2015-05-19 23:55:09	XMPPwocky	withotu a little help
2015-05-19 23:55:25	<--	c74d (c74d3a4ebb6@moz-mii588.mggc.hibn.4404.2002.IP) has quit (Connection closed)
2015-05-19 23:55:44	<--	WindowsBunny (Peter@moz-prmara.east.verizon.net) has quit (Ping timeout: 121 seconds)
2015-05-19 23:55:51	-->	c74d (c74d3a4ebb6@moz-mii588.mggc.hibn.4404.2002.IP) has joined #rust
2015-05-19 23:56:06	-->	zmbush (zmbush@moz-jgtcvh.ca.comcast.net) has joined #rust
2015-05-19 23:56:13	-->	Rym_ (y@moz-c2u.sd4.38.217.IP) has joined #rust
2015-05-19 23:56:48	frangio	i've had this in my mind for the past few days... in general i think of &T types as represented by pointers, but &[T] &str are actually represented by pointer + length, right?
2015-05-20 18:18:45	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-20 18:18:45	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-20 18:18:45	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-20 18:18:45	--	Channel #rust: 986 nicks (16 ops, 0 halfops, 3 voices, 967 normals)
2015-05-20 18:18:47	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-20 18:19:08	<--	debuuu (debu@moz-8vj212.adsl.alicedsl.de) has quit (Ping timeout: 121 seconds)
2015-05-20 18:19:11	-->	mkpankov (user@moz-cd1.4ms.23.84.IP) has joined #rust
2015-05-20 18:19:22	<--	griff (griff@moz-bf2.sbd.199.62.IP) has quit (Client exited)
2015-05-20 18:19:41	logan_e	Stable would work too?
2015-05-20 18:20:02	logan_e	How would you reccomend installing stable using brew if I’ve already installed rust-nightly
2015-05-20 18:20:10	-->	harrisonclarke (harrisoncla@moz-6v8.jf9.227.142.IP) has joined #rust
2015-05-20 18:20:36	<--	Nextra (Nextra@moz-ue64rc.ewe-ip-backbone.de) has quit (Quit: Leaving)
2015-05-20 18:20:46	kralyk	Ah, nvm, rust -Vv
2015-05-20 18:20:53	<--	pgonda (peter@moz-s36.0tp.134.75.IP) has quit (Ping timeout: 121 seconds)
2015-05-20 18:21:02	bluss	logan_e: if stable works depends on if you need unstable features
2015-05-20 18:21:19	thelink2012	wow, size_of is not a compile time thing? :| http://is.gd/CoMqKt
2015-05-20 18:21:45	-->	thor (thor@moz-n7n1a4.res.rr.com) has joined #rust
2015-05-20 18:22:24	WindowsBunny	thelink2012: nope!
2015-05-20 18:22:29	-->	santiago (santiago@moz-8th.j2e.167.12.IP) has joined #rust
2015-05-20 18:23:00	klutzy	we currently lack of const fn
2015-05-20 18:23:11	logan_e	bluss: So rust stable will compile rand?
2015-05-20 18:23:30	bluss	logan_e: yes
2015-05-20 18:23:31	-->	asQuirreL (asQuirreL@moz-ro1qqu.ox.ac.uk) has joined #rust
2015-05-20 18:24:00	--	irc: disconnected from server
2015-05-20 18:24:11	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-20 18:24:11	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-20 18:24:11	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-20 18:24:12	--	Channel #rust: 987 nicks (16 ops, 0 halfops, 3 voices, 968 normals)
2015-05-20 18:24:13	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-20 18:24:14	<--	James (quassel@moz-739rgr.range86-148.btcentralplus.com) has quit (Ping timeout: 121 seconds)
2015-05-20 18:24:35	-->	pgonda (peter@moz-s36.0tp.134.75.IP) has joined #rust
2015-05-20 18:24:41	thelink2012	how could I for instance store a &u32 into a &[u8] of .len == 4? i.e. the [u8] pointer points to the u32 primitive or so
2015-05-20 18:25:10	logan_e	Alright, thanks!
2015-05-20 18:25:40	<--	kgrandon1 (Adium@moz-cjgs4r.2rkg.9kg1.0101.2620.IP) has quit (Quit: Leaving.)
2015-05-20 18:25:53	thelink2012	This is what I'm trying to archive https://gist.github.com/thelink2012/4a70a7e53fd923df52a5
2015-05-20 18:26:01	-->	kgrandon (Adium@moz-u3dg2t.sfo1.mozilla.com) has joined #rust
2015-05-20 18:26:01	-->	veqz (veqz@moz-nvr8g6.209.getinternet.no) has joined #rust
2015-05-20 18:26:05	<--	erz (erz@moz-fiq1tl.broadband.corbina.ru) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-20 18:26:10	<--	kgrandon (Adium@moz-u3dg2t.sfo1.mozilla.com) has quit (Connection closed)
2015-05-20 18:26:13	<--	Nashenas88 (Nashenas88@moz-gc3.p78.35.72.IP) has quit (Ping timeout: 121 seconds)
2015-05-20 18:26:25	klutzy	thelink2012: &[u8; 4] coerces to &[u8]: http://is.gd/OnXWer
2015-05-20 18:26:31	-->	woboats (tatterdemal@moz-a0dnkb.ca.comcast.net) has joined #rust
2015-05-20 18:26:58	klutzy	or you can create &[u8] from *const u8 and length via std::slice::from_raw_parts
2015-05-20 18:27:03	<--	jdm (jdm@moz-r3ae0i.ckpj.s0pt.0450.2001.IP) has quit (Quit: )
2015-05-20 18:27:30	<--	Stebalien (Stebalien@moz-9rcng0.csail.mit.edu) has quit (Quit: leaving)
2015-05-20 18:28:35	-->	stevedomin (sid21377@moz-ji6olo.highgate.irccloud.com) has joined #rust
2015-05-20 18:29:02	<--	fkaa (tundmatu@moz-501od2.business.telia.com) has quit (Ping timeout: 121 seconds)
2015-05-20 18:29:30	-->	durka42 (Adium@moz-qsuual.pa.comcast.net) has joined #rust
2015-05-20 18:29:31	-->	tmtwd (tmtwd@moz-0kkm5n.cable.rogers.com) has joined #rust
2015-05-20 18:30:26	<--	asQuirreL (asQuirreL@moz-ro1qqu.ox.ac.uk) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-20 18:30:30	-->	cworth (cworth@moz-232is7.cworth.org) has joined #rust
2015-05-20 18:31:14	<--	bjz (bjz@moz-puppgq.tpgi.com.au) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-20 18:31:42	pranz	is there a reference type that provides "interior immutability"?
2015-05-20 18:31:53	pranz	I have a big struct S
2015-05-20 18:32:20	pranz	with a field s.foo : SomeType
2015-05-20 18:32:26	cworth	Congratulations on Rust 1.0! I'm extremely impressed by the state of the documentation, compiler, etc., (and delighted to see that all of ~ and @ is gone---I think the current stuff is much easier for a beginner to grasp).
2015-05-20 18:33:06	ChrisMorgan	pranz: how big?
2015-05-20 18:33:12	-->	cursivecode (textual@moz-4u56i9.res.bhn.net) has joined #rust
2015-05-20 18:33:19	pranz	what I want to do is to have SomeType immutable, so that I can have multiple references to it but still be able to pass around S as &mut ref
2015-05-20 18:33:27	<--	plumshark (pat@moz-kudkpc.35n5.ltgp.0306.2602.IP) has quit (Connection closed)
2015-05-20 18:33:43	pranz	ChrisMorgan: some kbs big
2015-05-20 18:33:54	cworth	I've run into what is surely a newbie error, (trying to sort a vector of structs). Here's a minimal example showing my confusion:
2015-05-20 18:33:57	cworth	http://is.gd/uUxjSd
2015-05-20 18:33:57	<--	new_one (new_one@moz-cfhap5.mtv2.mozilla.com) has quit (Ping timeout: 121 seconds)
2015-05-20 18:34:03	-->	TorunR (Torun@moz-ga4pja.dip0.t-ipconnect.de) has joined #rust
2015-05-20 18:34:23	<--	arBmind (Andreas@moz-p7fbq4.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2015-05-20 18:34:25	ChrisMorgan	cworth: http://is.gd/DUQWNX
2015-05-20 18:34:33	-->	arBmind (Andreas@moz-s41ou5.adsl.alicedsl.de) has joined #rust
2015-05-20 18:34:40	ChrisMorgan	cworth: .cmp takes its parameters by reference
2015-05-20 18:35:00	cworth	ChrisMorgan: Simple enough. Thanks!
2015-05-20 18:35:07	-->	lov2cod (Adium@moz-40l.ob1.22.8.IP) has joined #rust
2015-05-20 18:36:27	<--	Azdle_ (Azdle@moz-738.tg8.232.50.IP) has quit (Ping timeout: 121 seconds)
2015-05-20 18:36:59	<--	Torun (Torun@moz-ga4pja.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2015-05-20 18:37:08	<--	hroi (hroi@moz-d273ub.static.netgroup.dk) has quit (Ping timeout: 121 seconds)
2015-05-20 18:37:30	-->	yuja (yuja@moz-4hssp3.so-net.ne.jp) has joined #rust
2015-05-20 18:38:07	-->	brainproxy (michael@moz-9vjtig.mo.charter.com) has joined #rust
2015-05-20 18:38:15	<--	lov2cod (Adium@moz-40l.ob1.22.8.IP) has quit (Quit: Leaving.)
2015-05-20 18:38:50	<--	SilverKey (SilverKey@moz-b7q751.biz.rr.com) has quit (Ping timeout: 121 seconds)
2015-05-20 18:39:56	<--	Guest72 (textual@moz-v5a.55v.34.199.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-20 18:40:27	-->	lyc (lyc@moz-jft.nr8.226.207.IP) has joined #rust
2015-05-20 18:41:36	<--	zcourts (zcourts@moz-7ms809.cable.virginm.net) has quit (Client exited)
2015-05-20 18:42:35	<--	simukis (nagisa@moz-8t068g.static.zebra.lt) has quit (Ping timeout: 121 seconds)
2015-05-20 18:42:48	-->	ogham (rally@moz-91e3hp.cable.virginm.net) has joined #rust
2015-05-20 18:43:16	<--	pgonda (peter@moz-s36.0tp.134.75.IP) has quit (Ping timeout: 121 seconds)
2015-05-20 18:43:53	mrmonday	pranz: http://doc.rust-lang.org/std/cell/index.html
2015-05-20 18:44:11	-->	zhoeon (fc@moz-cuhqb2.cable.teksavvy.com) has joined #rust
2015-05-20 18:44:24	-->	jevin (jevin@moz-sra.ovp.12.72.IP) has joined #rust
2015-05-20 18:44:29	<--	lyc (lyc@moz-jft.nr8.226.207.IP) has quit (Ping timeout: 121 seconds)
2015-05-20 18:44:40	<--	skeuomorf (skeuomorf@moz-k2d.2md.32.197.IP) has quit (Ping timeout: 121 seconds)
2015-05-20 18:44:44	<--	nicknikolov (nicknikolov@moz-k08.qm9.214.90.IP) has quit (Connection closed)
2015-05-20 18:45:05	-->	nicknikolov (nicknikolov@moz-k08.qm9.214.90.IP) has joined #rust
2015-05-20 18:45:07	-->	orangeshark (erik@moz-5k9tlj.44tj.56ot.0306.2602.IP) has joined #rust
2015-05-20 18:45:14	<--	blinky (Mibbit@moz-8f9.vti.225.77.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-20 18:45:40	-->	pck (Mibbit@moz-3k5d5c.dip0.t-ipconnect.de) has joined #rust
2015-05-20 18:45:43	<--	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-20 18:46:03	-->	kgrandon (Adium@moz-cjgs4r.2rkg.9kg1.0101.2620.IP) has joined #rust
2015-05-20 18:46:09	pranz	mrmonday: so my SomeType field should be Rc<SomeType> instead?
2015-05-20 18:46:19	<--	tamird (textual@moz-lje.m54.130.157.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-20 18:47:37	<--	cworth (cworth@moz-232is7.cworth.org) has quit (Ping timeout: 121 seconds)
2015-05-20 18:47:47	mrmonday	pranz: without knowing the specifics of what you're trying to do, yes, I suspect so :)
2015-05-20 18:47:55	bluss	cworth: thank you too. for v in &values {  is new shorthand for for v in values.iter() { by the way
2015-05-20 18:48:11	pranz	mrmonday: I will give it a try, thanks
2015-05-20 18:48:21	-->	Stents_ (Stents@moz-r8d.u6c.187.68.IP) has joined #rust
2015-05-20 18:48:44	<--	shellac (textual@moz-9b49cr.cable.virginm.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-20 18:49:07	<--	nicknikolov (nicknikolov@moz-k08.qm9.214.90.IP) has quit (Ping timeout: 121 seconds)
2015-05-20 18:49:38	--	AutomatedTester is now known as AutomatedTester|AFK
2015-05-20 18:50:08	-->	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has joined #rust
2015-05-20 18:50:47	<--	Stents (Stents@moz-r8d.u6c.187.68.IP) has quit (Ping timeout: 121 seconds)
2015-05-20 18:51:36	<--	mib_f8fiyu (Mibbit@moz-ov228b.nsvltn.sbcglobal.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-20 18:51:44	<--	apchris (apchris@moz-a8bii9.static.sonic.net) has quit (Ping timeout: 121 seconds)
2015-05-20 18:52:55	<--	kralyk (kralyk@moz-ote.edj.146.88.IP) has quit (Quit: WeeChat 1.2)
2015-05-20 18:53:35	aldanor	does anyone know if StaticMutex is expected to be stabilized at some point? :)
2015-05-20 18:53:47	<--	mnemnion (mnemnion@moz-kf3boi.ca.comcast.net) has quit (Connection closed)
2015-05-20 18:54:14	--	irc: disconnected from server
2015-05-20 18:55:19	-->	ubeatlen1 (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-20 18:55:19	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-20 18:55:19	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-20 18:55:19	--	Channel #rust: 976 nicks (15 ops, 0 halfops, 3 voices, 958 normals)
2015-05-20 18:55:19	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-20 18:56:23	<--	kaeluka (kaeluka@moz-tn3lqd.cust.bredbandsbolaget.se) has quit (Client exited)
2015-05-20 18:56:36	-->	new_one (new_one@moz-qv138a.ujol.1ibb.0101.2620.IP) has joined #rust
2015-05-20 18:57:13	<--	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-20 18:57:27	<--	Gabriel_7 (Gabriel@moz-t3q8lg.mtgr.92aj.0e35.2a01.IP) has quit (Connection closed)
2015-05-20 18:57:38	<--	ruda (ruda@moz-5vaq9s.gvt.net.br) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-20 18:57:44	nyx	Anyone know of a HashMap where K is a function of V? (or has some other way to have K refer to part of V)
2015-05-20 18:58:10	<--	mnemnion (mnemnion@moz-0q2t92.0r24.tle7.0009.2601.IP) has quit (Ping timeout: 121 seconds)
2015-05-20 18:58:33	--	irc: disconnected from server
2015-05-20 18:59:36	-->	ubeatlen1 (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-20 18:59:36	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-20 18:59:36	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-20 18:59:36	--	Channel #rust: 972 nicks (15 ops, 0 halfops, 3 voices, 954 normals)
2015-05-20 18:59:38	<--	mutsune (mutsune@moz-634799.mesh.ad.jp) has quit (Connection closed)
2015-05-20 18:59:39	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-20 19:00:19	-->	lov2cod1 (Adium@moz-8rkult.eodv.k60l.0119.2620.IP) has joined #rust
2015-05-20 19:00:24	logan_e	bluss: Thank you so much, looks like I had ~4 different versions of Rust installed lol
2015-05-20 19:01:38	--	irc: disconnected from server
2015-05-20 19:02:04	-->	ubeatlen1 (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-20 19:02:04	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-20 19:02:04	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-20 19:02:04	--	Channel #rust: 971 nicks (15 ops, 0 halfops, 3 voices, 953 normals)
2015-05-20 19:02:06	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-20 19:02:07	<--	jtdowney (jtdowney@moz-gh1isj.static.twtelecom.net) has quit (Quit: )
2015-05-20 19:02:13	-->	zcourts (zcourts@moz-7ms809.cable.virginm.net) has joined #rust
2015-05-20 19:02:13	<--	lov2cod1 (Adium@moz-40l.ob1.22.8.IP) has quit (Connection closed)
2015-05-20 19:02:13	-->	lov2cod2 (Adium@moz-8rkult.eodv.k60l.0119.2620.IP) has joined #rust
2015-05-20 19:02:32	<--	bitonic (bitonic@moz-1gt.ih7.55.213.IP) has quit (Ping timeout: 121 seconds)
2015-05-20 19:02:42	-->	DerisiveLogic_ (smuxi@moz-1jqqlg.biz.rr.com) has joined #rust
2015-05-20 19:02:42	<--	DerisiveLogic_ (smuxi@moz-1jqqlg.biz.rr.com) has quit (A TLS packet with unexpected length was received.)
2015-05-20 19:02:52	bluss	hm true. Querying uses the borrow trait, maybe it's not possible to use in this case
2015-05-20 19:03:16	<--	lov2cod (Adium@moz-40l.ob1.22.8.IP) has quit (Ping timeout: 121 seconds)
2015-05-20 19:03:18	<--	DerisiveLogic (smuxi@moz-1jqqlg.biz.rr.com) has quit (Ping timeout: 121 seconds)
2015-05-20 19:03:23	-->	Outlander (Mr@moz-tiv139.internode.on.net) has joined #rust
2015-05-20 19:03:25	<--	jviereck (Adium@moz-j1jj1v.dynamic.hispeed.ch) has quit (Quit: Leaving.)
2015-05-20 19:03:57	-->	lov2cod (Adium@moz-40l.ob1.22.8.IP) has joined #rust
2015-05-20 19:03:57	--	kimundi is now known as zz_kimundi
2015-05-20 19:05:10	-->	gattscha1do (richard@moz-9pa83m.dyn.telefonica.de) has joined #rust
2015-05-20 19:05:10	<--	lov2cod2 (Adium@moz-8rkult.eodv.k60l.0119.2620.IP) has quit (Connection closed)
2015-05-20 19:05:10	<--	loyd (loyd@moz-uft.32f.108.213.IP) has quit (Ping timeout: 121 seconds)
2015-05-20 19:05:10	<--	cursivecode (textual@moz-4u56i9.res.bhn.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-20 19:05:11	<--	colinsurprenant (colin@moz-rmn4e2.169.electronicbox.net) has quit (Client exited)
2015-05-20 19:05:11	<--	gattschardo (richard@moz-j8lr9c.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2015-05-20 19:05:21	<--	SneakySnake (nya@moz-i9is4u.pool.telekom.hu) has quit (Connection closed)
2015-05-20 19:05:30	<--	yuja (yuja@moz-4hssp3.so-net.ne.jp) has quit (Ping timeout: 121 seconds)
2015-05-20 19:05:31	-->	cworth (cworth@moz-cuv.t7p.56.172.IP) has joined #rust
2015-05-20 19:06:04	--	zz_NameNotFound is now known as NameNotFound
2015-05-20 19:06:12	--	irc: disconnected from server
2015-05-20 19:09:26	-->	ubeatlen1 (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-20 19:09:26	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-20 19:09:26	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-20 19:09:26	--	Channel #rust: 963 nicks (15 ops, 0 halfops, 3 voices, 945 normals)
2015-05-20 19:09:26	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-20 19:09:42	cworth	ChrisMorgan: OK.
2015-05-20 19:09:44	ChrisMorgan	(Observe “F: FnMut(&T, &T) -> Ordering”, i.e. the closure takes two &T values.)
2015-05-20 19:09:48	<--	Matthias247 (Miranda@moz-49li60.hsi14.kabel-badenwuerttemberg.de) has quit (Connection closed)
2015-05-20 19:09:49	-->	yichoi (yichoi@moz-t0r.chb.167.121.IP) has joined #rust
2015-05-20 19:09:54	nyx	talchas: still doesn't have a retreval (or selflookup as bluss termed it). That will also bloat my stored data a bit when it doesn't (theoretically) need to be.
2015-05-20 19:09:54	nyx	yep.
2015-05-20 19:10:21	--	irc: disconnected from server
2015-05-20 19:11:02	-->	ubeatlen1 (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-20 19:11:02	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-20 19:11:02	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-20 19:11:02	--	Channel #rust: 965 nicks (15 ops, 0 halfops, 3 voices, 947 normals)
2015-05-20 19:11:05	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-20 19:11:19	ChrisMorgan	It’s a closure.
2015-05-20 19:11:36	talchas	nyx: well, it would only bloat it by the enum discriminant (which might even be able to be folded in, depending)
2015-05-20 19:11:36	-->	pgonda (peter@moz-s36.0tp.134.75.IP) has joined #rust
2015-05-20 19:11:42	talchas	but yeah, even HashMap Entry doesn't have the necessary stuff
2015-05-20 19:12:03	<--	crispyzeal (crispyzeal@moz-rbvl83.fios.verizon.net) has quit (Quit: Leaving)
2015-05-20 19:12:08	-->	zmbush (zmbush@moz-jgtcvh.ca.comcast.net) has joined #rust
2015-05-20 19:12:14	cworth	ChrisMorgan: OK. I'll be reading and playing more, and back if I have further questions. Thanks again.
2015-05-20 19:12:17	cjwelborn	One of the little programs I wrote to learn depends on a text file for data. I have to hardcode the absolute path to this file for it to work. Is there an easy way to use a path relative to the binary that is executed? Using env::args and Path.parent() only works when ran in the project directory...
2015-05-20 19:13:03	--	irc: disconnected from server
2015-05-20 19:13:33	-->	ubeatlen1 (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-20 19:13:33	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-20 19:13:33	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-20 19:13:41	--	Channel #rust: 968 nicks (15 ops, 0 halfops, 3 voices, 950 normals)
2015-05-20 19:13:41	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-20 19:13:51	talchas	you could have K be Rc<Foo> and store an Rc<Foo> in your value type, but that's both ugly and even more overhead
2015-05-20 19:14:11	talchas	(I think it'll work without any changes or unsafe though)
2015-05-20 19:15:16	-->	desophos_ (desophos@moz-42b9fu.res.rr.com) has joined #rust
2015-05-20 19:15:23	<--	psy (psy@moz-tfj.hr7.224.43.IP) has quit (Ping timeout: 121 seconds)
2015-05-20 19:15:33	--	NameNotFound is now known as zz_NameNotFound
2015-05-20 19:16:12	-->	AnIrishDuck (fmurphy@moz-2a8.o26.130.216.IP) has joined #rust
2015-05-20 19:16:17	<--	lucian (lucian@moz-2c3pda.cable.virginm.net) has quit (Quit: Leaving...)
2015-05-20 19:16:54	<--	spider-mario (spidermario@moz-meu9c6.wb.wifirst.net) has quit (A TLS packet with unexpected length was received.)
2015-05-20 19:17:01	<--	minot2 (kkus@moz-olq.odm.234.165.IP) has quit (Ping timeout: 121 seconds)
2015-05-20 19:17:39	logan_e	can you make structs with members of type `Option`?
2015-05-20 19:17:49	<--	desophos (desophos@moz-2m5n18.98ku.27p0.6000.2606.IP) has quit (Ping timeout: 121 seconds)
2015-05-20 19:17:51	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Connection closed)
2015-05-20 19:17:54	-->	wolfviking0_ (wolfviking0@moz-8hd.3b6.246.162.IP) has joined #rust
2015-05-20 19:18:02	<--	wolfviking0_ (wolfviking0@moz-8hd.3b6.246.162.IP) has left #rust
2015-05-20 19:18:12	logan_e	Nm 
2015-05-20 19:18:13	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-20 19:18:34	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Connection closed)
2015-05-20 19:18:35	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-20 19:19:01	<--	wolfviking0 (wolfviking0@moz-8hd.3b6.246.162.IP) has quit (Ping timeout: 121 seconds)
2015-05-20 19:20:34	<--	areski (areski@moz-2lg0ha.user.ono.com) has quit (Ping timeout: 121 seconds)
2015-05-20 19:21:35	<--	kgrandon (Adium@moz-cjgs4r.2rkg.9kg1.0101.2620.IP) has quit (Quit: Leaving.)
2015-05-20 19:21:50	-->	meunierd (dmeunier@moz-glf54u.cpe.sourcecable.net) has joined #rust
2015-05-20 19:22:05	-->	murphm8_ (matt@moz-f26fc0.res.rr.com) has joined #rust
2015-05-20 19:22:07	<--	godlikesme (godlikesme@moz-2a2.dsd.174.79.IP) has quit (Ping timeout: 121 seconds)
2015-05-20 19:22:24	<--	madmalik (uid13697@moz-lfin5p.brockwell.irccloud.com) has quit (Quit: Connection closed for inactivity)
2015-05-20 19:22:29	<--	pcwalton (pcwalton@moz-l8ebtf.sfo1.mozilla.com) has quit (Client exited)
2015-05-20 19:22:37	-->	tno (tomas@moz-84v9q0.7pm2.so41.08a0.2001.IP) has joined #rust
2015-05-20 19:23:00	-->	pcwalton (pcwalton@moz-l8ebtf.sfo1.mozilla.com) has joined #rust
2015-05-20 19:23:01	--	Mode #rust [+ao pcwalton pcwalton] by ChanServ
2015-05-20 19:23:09	<--	Palmik (palmik@moz-73cl8b.vpn.muni.cz) has quit (Ping timeout: 121 seconds)
2015-05-20 19:23:47	<--	mfranzwa (Mibbit@moz-f58.v6b.107.17.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-20 19:25:12	-->	Palmik (palmik@moz-7pku2p.net.upcbroadband.cz) has joined #rust
2015-05-20 19:26:00	pranz	I'm trying to pass a function pointer to a function but it complains that the value does not live long enough
2015-05-20 19:26:15	pranz	but it is a standard function declared in `fn func ...` manner
2015-05-20 19:26:41	FreeFull	Can you show the full error?
2015-05-20 19:26:48	<--	gleb (gleb@moz-3u1drv.rusanovka-net.kiev.ua) has quit (Ping timeout: 121 seconds)
2015-05-20 19:27:01	pranz	sure, hold on
2015-05-20 19:27:23	<--	pgonda (peter@moz-s36.0tp.134.75.IP) has quit (Ping timeout: 121 seconds)
2015-05-20 19:27:47	pranz	FreeFull: http://lpaste.net/317017020790996992
2015-05-20 19:28:28	--	irc: disconnected from server
2015-05-20 19:51:10	-->	ubeatlen1 (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-20 19:51:10	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-20 19:51:10	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-20 19:51:13	--	Channel #rust: 952 nicks (15 ops, 0 halfops, 3 voices, 934 normals)
2015-05-20 19:51:16	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-20 19:51:20	-->	tamird (textual@moz-cb8kq7.east.verizon.net) has joined #rust
2015-05-20 19:51:53	<--	tamird (textual@moz-cb8kq7.east.verizon.net) has quit (Connection closed)
2015-05-20 19:51:57	-->	pgonda (peter@moz-s36.0tp.134.75.IP) has joined #rust
2015-05-20 19:52:10	-->	tamird (textual@moz-cb8kq7.east.verizon.net) has joined #rust
2015-05-20 19:52:28	<--	harrisonclarke (harrisoncla@moz-6v8.jf9.227.142.IP) has quit (Connection closed)
2015-05-20 19:52:31	<--	tamird (textual@moz-cb8kq7.east.verizon.net) has quit (Connection closed)
2015-05-20 19:52:42	<--	ismaelga (ismaelga@moz-ujg8q1.dsl.telepac.pt) has quit (Ping timeout: 121 seconds)
2015-05-20 19:53:29	<--	Simplebrain (Simplebrain@moz-1hs5ek.rev.poneytelecom.eu) has quit (Ping timeout: 121 seconds)
2015-05-20 19:54:10	--	irc: disconnected from server
2015-05-20 19:55:02	-->	ubeatlen1 (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-20 19:55:02	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-20 19:55:02	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-20 19:55:02	--	Channel #rust: 952 nicks (15 ops, 0 halfops, 3 voices, 934 normals)
2015-05-20 19:55:02	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-20 19:55:14	-->	dpc (dpc@moz-7gui97.nvidia.com) has joined #rust
2015-05-20 19:55:47	<--	dpc (dpc@moz-7gui97.nvidia.com) has quit (Connection closed)
2015-05-20 19:55:54	<--	dpc_ (dpc@moz-7gui97.nvidia.com) has quit (Quit: Leaving)
2015-05-20 19:56:06	-->	tamird (textual@moz-cb8kq7.east.verizon.net) has joined #rust
2015-05-20 19:56:17	<--	lov2cod (Adium@moz-40l.ob1.22.8.IP) has quit (Quit: Leaving.)
2015-05-20 19:57:33	-->	minot2 (kkus@moz-baj4jj.74.srtnet.com) has joined #rust
2015-05-20 19:57:38	-->	gazarsgo (sid23260@moz-astnfa.highgate.irccloud.com) has joined #rust
2015-05-20 19:58:02	<--	santiago (santiago@moz-8th.j2e.167.12.IP) has quit (Quit: Computer has gone to sleep.)
2015-05-20 19:58:07	<--	Astrum|Lap (Astrum|Lap@moz-7enfbr.co.comcast.net) has quit (Client exited)
2015-05-20 19:58:12	<--	cworth (cworth@moz-cuv.t7p.56.172.IP) has quit (Ping timeout: 121 seconds)
2015-05-20 19:59:03	-->	njn (chatzilla@moz-jkhneq.iinet.net.au) has joined #rust
2015-05-20 20:00:01	<--	KLP (KLP@moz-jveiei.fios.verizon.net) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-05-20 20:00:25	<--	senderista (tdbaker@moz-6nsjqs.wa.comcast.net) has quit (Client exited)
2015-05-20 20:00:47	--	irc: disconnected from server
2015-05-20 20:30:18	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-20 20:30:18	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-20 20:30:18	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-20 20:30:18	--	Channel #rust: 954 nicks (15 ops, 0 halfops, 3 voices, 936 normals)
2015-05-20 20:30:20	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-20 20:30:47	<--	aldeka (quassel@moz-qqf.of6.243.162.IP) has quit (Connection closed)
2015-05-20 20:30:48	-->	aldeka (quassel@moz-qqf.of6.243.162.IP) has joined #rust
2015-05-20 20:31:20	<--	c_wraith (c_wraith@moz-7i8.v6v.191.131.IP) has quit (Connection closed)
2015-05-20 20:32:16	--	irc: disconnected from server
2015-05-20 20:32:28	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-20 20:32:28	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-20 20:32:28	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-20 20:32:28	--	Channel #rust: 952 nicks (15 ops, 0 halfops, 3 voices, 934 normals)
2015-05-20 20:32:30	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-20 20:33:23	-->	c_wraith (c_wraith@moz-7i8.v6v.191.131.IP) has joined #rust
2015-05-20 20:33:32	bluss	swgillespie: I've put the rustc graph approach into a separate crate (petgraph). It's actually not impossible to modify the graph
2015-05-20 20:33:39	<--	Robozman (quassel@moz-81ou38.dyn.optonline.net) has quit (Connection closed)
2015-05-20 20:33:46	-->	Robozman (quassel@moz-81ou38.dyn.optonline.net) has joined #rust
2015-05-20 20:33:59	swgillespie	bluss: oh nice! it sounded like the trouble with modifying the graph is in deletion
2015-05-20 20:34:09	swgillespie	at least from that blog post
2015-05-20 20:35:00	bluss	it wasn't implemented in rustc, I implemented it. Only caveat is that indices shift
2015-05-20 20:36:02	--	nsm|away is now known as nsm
2015-05-20 20:36:22	bluss	for me that's fine. You know it's guaranteed that indices are valid as long as you only add and what happens at remove is fairly easy to understand and removal is relatively cheap
2015-05-20 20:37:11	bluss	by indices shift I mean that if you remove a node, 0 or 1 other nodes will change its index. (.swap_remove)
2015-05-20 20:37:26	-->	acgtyrant (acgtyrant@moz-3kd.b79.160.124.IP) has joined #rust
2015-05-20 20:38:28	--	irc: disconnected from server
2015-05-20 20:38:40	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-20 20:38:40	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-20 20:38:40	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-20 20:38:40	--	Channel #rust: 954 nicks (15 ops, 0 halfops, 3 voices, 936 normals)
2015-05-20 20:38:42	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-20 20:39:40	--	irc: disconnected from server
2015-05-20 20:39:52	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-20 20:39:52	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-20 20:39:52	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-20 20:39:52	--	Channel #rust: 954 nicks (15 ops, 0 halfops, 3 voices, 936 normals)
2015-05-20 20:39:54	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-20 20:40:04	bluss	std::str::Chars<'a>
2015-05-20 20:40:46	<--	ygrek_ (user@moz-8j9aeu.org.ua) has quit (Client exited)
2015-05-20 20:41:19	<--	acgtyrant (acgtyrant@moz-3kd.b79.160.124.IP) has quit (Connection closed)
2015-05-20 20:41:19	&mbrubeck	gandalf: Perhaps more importantly, it implements the trait `Iterator<Item=char>`
2015-05-20 20:41:59	--	irc: disconnected from server
2015-05-20 20:42:11	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-20 20:42:11	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-20 20:42:11	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-20 20:42:11	--	Channel #rust: 953 nicks (15 ops, 0 halfops, 3 voices, 935 normals)
2015-05-20 20:42:12	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-20 20:42:30	gandalf	bluss: so, if I'm creating a class Parser, that will have a method parse and I want this method to walk through chars, but I'd like to store this iterator as a property, not a local variable of parse, what should be the type of the Parser.source ?
2015-05-20 20:43:16	bluss	Chars<'x> where 'x is some lifetime parameter you need to put in the struct
2015-05-20 20:43:21	bluss	on the struct
2015-05-20 20:43:27	gandalf	ok, thnx
2015-05-20 20:44:10	--	irc: disconnected from server
2015-05-20 20:44:22	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-20 20:44:22	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-20 20:44:22	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-20 20:44:22	--	Channel #rust: 953 nicks (15 ops, 0 halfops, 3 voices, 935 normals)
2015-05-20 20:44:23	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-20 20:44:44	swgillespie	you can also parameterize your Parser by the iterator, with Parser<I: Iterator<Item=char>>
2015-05-20 20:44:48	<--	ahihi2 (ahihi@moz-0djiqt.bb.dnainternet.fi) has quit (Connection closed)
2015-05-20 20:44:53	-->	hroi (hroi@moz-d273ub.static.netgroup.dk) has joined #rust
2015-05-20 20:44:54	-->	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has joined #rust
2015-05-20 20:45:08	gandalf	swgillespie: All I need is to be able to iterate over the chars
2015-05-20 20:45:08	bluss	that's a good point
2015-05-20 20:45:08	swgillespie	although i did not know you could rewind chars, that's pretty cool
2015-05-20 20:45:32	<--	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-20 20:45:40	gandalf	Not sure what rewind means in this context, but I will just be doing iter.next() only
2015-05-20 20:45:46	gandalf	sometimes will need to peak ahead
2015-05-20 20:45:55	gandalf	(my first project in rust :))
2015-05-20 20:46:00	bluss	actually I think it's best to avoid putting trait bounds on the struct declaration itself (unless you really need it *)  it just forces more typing on other impls
2015-05-20 20:46:02	<--	lyc (lyc@moz-jft.nr8.226.207.IP) has quit (Ping timeout: 121 seconds)
2015-05-20 20:46:11	bluss	you can put trait bounds on impl blocks instead
2015-05-20 20:46:13	-->	naerbnic (naerbnic@moz-t919up.hfc.comcastbusiness.net) has joined #rust
2015-05-20 20:46:19	gandalf	so, how should I structure the class then?
2015-05-20 20:46:21	<--	johnsoft (johnsoft@moz-69mrig.res.rr.com) has quit (Ping timeout: 121 seconds)
2015-05-20 20:46:35	-->	johnsoft (johnsoft@moz-69mrig.res.rr.com) has joined #rust
2015-05-20 20:46:54	-->	ogham (rally@moz-91e3hp.cable.virginm.net) has joined #rust
2015-05-20 20:46:57	<--	new_one (new_one@moz-qv138a.ujol.1ibb.0101.2620.IP) has quit (Ping timeout: 121 seconds)
2015-05-20 20:47:00	bluss	gandalf: by rewind I simply mean; let old = self.source.clone(); /* speculativ parsing here */  /* nothing found */  self.source = old;
2015-05-20 20:47:09	gandalf	right now I have sth like: https://pastebin.mozilla.org/8834204
2015-05-20 20:47:19	gandalf	(that's in the middle of rewriting)
2015-05-20 20:47:31	gandalf	oh, cool
2015-05-20 20:48:21	--	irc: disconnected from server
2015-05-20 20:48:38	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-20 20:48:38	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-20 20:48:38	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-20 20:48:38	--	Channel #rust: 954 nicks (15 ops, 0 halfops, 3 voices, 936 normals)
2015-05-20 20:48:40	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-20 20:48:43	bluss	gandalf: by the way, .chars() borrows the input string
2015-05-20 20:48:48	<--	naerbnic (naerbnic@moz-t919up.hfc.comcastbusiness.net) has quit (Client exited)
2015-05-20 20:49:00	<--	hroi (hroi@moz-d273ub.static.netgroup.dk) has quit (Ping timeout: 121 seconds)
2015-05-20 20:49:03	gandalf	yeah, I think it'll be easier for me to learn if I use a concrete type, I just don't know which type should I use here
2015-05-20 20:49:08	bluss	so using it sort of means that the Parser has to borrow the input string too (i.e. not take it by value)
2015-05-20 20:49:23	bluss	playbot: "abc".chars().no_such_method()
2015-05-20 20:49:24	--	Notice(playbot): <anon>:9:23: 9:39 error: type `core::str::Chars<'_>` does not implement any method in scope named `no_such_method`
2015-05-20 20:49:25	--	Notice(playbot): <anon>:9         "abc".chars().no_such_method()
2015-05-20 20:49:25	--	Notice(playbot): output truncated; full output at: http://bit.ly/1FxPdTg
2015-05-20 20:49:36	<--	Kingsquee (kingsley@moz-3fm07c.bchsia.telus.net) has quit (Quit: Konversation terminated!)
2015-05-20 20:49:40	bluss	see rustc says ^ core::str::Chars<'_>   but it's really std::str::Chars
2015-05-20 20:49:48	bluss	because core is an internal part of libstd
2015-05-20 20:50:06	-->	playjax (chatzilla@moz-lk6ctn.optusnet.com.au) has joined #rust
2015-05-20 20:50:13	gandalf	ok, so I'll use std::str::Chars for now
2015-05-20 20:50:32	gandalf	how do I set the lifetime param on the impl?
2015-05-20 20:50:48	bluss	struct Parser<'a>
2015-05-20 20:50:50	-->	logan_e (logan_e@moz-ltn.qg3.218.73.IP) has joined #rust
2015-05-20 20:50:55	bluss	and impl<'a> Parser<'a>
2015-05-20 20:51:00	gandalf	thnx
2015-05-20 20:51:11	bluss	that's typical if you want parser to contain a borrowed value
2015-05-20 20:52:31	gandalf	Thanks!
2015-05-20 20:52:48	gandalf	I think I'm close. I see errors about source not living long enough
2015-05-20 20:52:49	gandalf	https://pastebin.mozilla.org/8834205
2015-05-20 20:53:03	gandalf	in line 8
2015-05-20 20:53:41	--	irc: disconnected from server
2015-05-20 20:53:53	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-20 20:53:53	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-20 20:53:53	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-20 20:53:53	--	Channel #rust: 953 nicks (15 ops, 0 halfops, 3 voices, 935 normals)
2015-05-20 20:53:55	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-20 20:54:20	bluss	new needs to borrow the input, not take ownership (responsibility) of it
2015-05-20 20:54:25	gandalf	ok
2015-05-20 20:54:27	bluss	so you can take a &'a str instead
2015-05-20 20:54:46	bluss	pub fn new(source: &'a str) -> Parser<'a>
2015-05-20 20:54:55	<--	zzing (textual@moz-tal0ve.cpe.pppoe.ca) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-20 20:55:05	bluss	now you know what the 'a means.. it's the lifetime of whatever string the Parser was constructed with
2015-05-20 20:55:06	<--	tikue (tim@moz-n71.k1b.0.198.IP) has quit (Connection closed)
2015-05-20 20:55:10	gandalf	yeah!
2015-05-20 20:55:51	gandalf	ok, that works. Last error is about "for c in self.source" in parse "cannot move out of borrowed content"
2015-05-20 20:56:03	-->	narann (narann@moz-j49beg.dsl.netrevolution.com) has joined #rust
2015-05-20 20:56:08	gandalf	I'm reading about borrowing, but it's still a bit complex now :)
2015-05-20 20:56:40	<--	krdln (krdln@moz-ohe9vg.dynamic.chello.pl) has left #rust
2015-05-20 20:56:45	<--	flaki (sid26072@moz-k9a1ua.uxbridge.irccloud.com) has quit (Quit: )
2015-05-20 20:56:50	-->	flaki (sid26072@moz-kltomo.highgate.irccloud.com) has joined #rust
2015-05-20 20:58:02	-->	Astrum|Lap (Astrum|Lap@moz-skcefh.co.comcast.net) has joined #rust
2015-05-20 20:58:09	<--	brson (brson@moz-cfhap5.mtv2.mozilla.com) has quit (Quit: leaving)
2015-05-20 20:59:24	<--	hjr3 (hradtke@moz-dmp.av4.169.69.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2015-05-20 20:59:33	-->	razor87 (Mibbit@moz-qa6.164.39.106.IP) has joined #rust
2015-05-20 20:59:38	gandalf	bluss: should I clone source in parse?
2015-05-20 20:59:52	<--	godlikesme (godlikesme@moz-rhe.k4a.16.195.IP) has quit (Ping timeout: 121 seconds)
2015-05-20 20:59:59	razor87	hi everyone
2015-05-20 21:00:24	-->	Torun (Torun@moz-ga4pja.dip0.t-ipconnect.de) has joined #rust
2015-05-20 21:00:53	bluss	gandalf: I think you want to just iterate the self.source you have
2015-05-20 21:01:11	bluss	gandalf: you can't give it away to the for loop but you can give it a mutable reference
2015-05-20 21:01:34	bluss	gandalf: for c in &mut self.source {  and for c in self.source.by_ref() {  are equivalent
2015-05-20 21:01:39	--	kingmahl_ is now known as kingmahl
2015-05-20 21:01:45	bluss	in this case
2015-05-20 21:02:11	gandalf	oh, ok. Hmmm, I thought &mut will work a bit differently
2015-05-20 21:02:52	bluss	well you're right, that's a bit confusing
2015-05-20 21:03:39	bluss	you could clone self.source too, but then you don't modify it in place
2015-05-20 21:03:57	glandium	rillian: ping
2015-05-20 21:03:58	bluss	that could be useful if you're not sure you want to keep that progress the iterator makes
2015-05-20 21:03:58	gandalf	no, it works!
2015-05-20 21:04:05	bluss	great
2015-05-20 21:04:08	gandalf	I definitely want to keep the progress
2015-05-20 21:04:09	gandalf	thanks :)
2015-05-20 21:04:09	<--	rbranson (rbranson@moz-i7m.9o0.201.199.IP) has quit (Quit: Computer has gone to sleep.)
2015-05-20 21:04:17	gandalf	I should be able to take it from here
2015-05-20 21:04:54	<--	slurps-mad-rips (slurps-mad-@moz-c1h.8dv.168.17.IP) has quit (Ping timeout: 121 seconds)
2015-05-20 21:04:57	-->	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has joined #rust
2015-05-20 21:07:00	--	zz_NameNotFound is now known as NameNotFound
2015-05-20 21:07:17	<--	blaenk (blaenkdenum@moz-em283u.res.rr.com) has quit (Connection closed)
2015-05-20 21:08:53	--	irc: disconnected from server
2015-05-20 21:09:05	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-20 21:09:05	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-20 21:09:05	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-20 21:09:05	--	Channel #rust: 948 nicks (14 ops, 0 halfops, 3 voices, 931 normals)
2015-05-20 21:09:07	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-20 21:09:24	<--	kamalmarhubi (sid26581@moz-fhnfba.uxbridge.irccloud.com) has quit (Quit: )
2015-05-20 21:09:25	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-20 21:09:26	-->	kamalmarhubi (sid26581@moz-93tqk9.highgate.irccloud.com) has joined #rust
2015-05-20 21:10:05	--	irc: disconnected from server
2015-05-20 21:10:18	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-20 21:10:18	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-20 21:10:18	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-20 21:10:18	--	Channel #rust: 949 nicks (14 ops, 0 halfops, 3 voices, 932 normals)
2015-05-20 21:10:20	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-20 21:12:31	<--	blaenk (blaenkdenum@moz-em283u.res.rr.com) has quit (Connection closed)
2015-05-20 21:12:53	-->	blaenk (blaenkdenum@moz-em283u.res.rr.com) has joined #rust
2015-05-20 21:12:58	<--	thor (thor@moz-n7n1a4.res.rr.com) has quit (Ping timeout: 121 seconds)
2015-05-20 21:13:11	<--	razor87 (Mibbit@moz-qa6.164.39.106.IP) has left #rust
2015-05-20 21:13:23	-->	naerbnic (naerbnic@moz-t919up.hfc.comcastbusiness.net) has joined #rust
2015-05-20 21:13:27	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Ping timeout: 121 seconds)
2015-05-20 21:14:04	-->	alanhoff (Mibbit@moz-fai.6rq.153.179.IP) has joined #rust
2015-05-20 21:14:12	<--	zmbush (zmbush@moz-jgtcvh.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-20 21:14:39	alanhoff	Hello folks, is there any service that can compile open source rust binaries for multiple platforms?
2015-05-20 21:15:05	XMPPwocky	not sure what you mean by service?
2015-05-20 21:15:16	XMPPwocky	Oh, you mean compiling rust *application* binaries?
2015-05-20 21:15:39	Yurume	buildbot as a service? :)
2015-05-20 21:15:46	Yurume	(sorry, I'm not aware of any.)
2015-05-20 21:16:03	XMPPwocky	travis used to offer OS X builds
2015-05-20 21:16:27	--	NameNotFound is now known as zz_NameNotFound
2015-05-20 21:16:57	alanhoff	Oh :-(
2015-05-20 21:17:32	-->	jtdowney (jtdowney@moz-obnifk.il.comcast.net) has joined #rust
2015-05-20 21:17:33	alanhoff	So if someone what's to use my rust application, he needs to download and compile it?
2015-05-20 21:17:53	<--	jtdowney (jtdowney@moz-obnifk.il.comcast.net) has quit (Quit: )
2015-05-20 21:18:03	XMPPwocky	well, you can compile and ship binaries too
2015-05-20 21:18:18	XMPPwocky	rust statically links by default, so most simple applications should Just Work
2015-05-20 21:19:18	--	irc: disconnected from server
2015-05-20 21:19:30	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-20 21:19:30	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-20 21:19:30	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-20 21:19:30	--	Channel #rust: 946 nicks (14 ops, 0 halfops, 3 voices, 929 normals)
2015-05-20 21:19:32	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-20 21:19:45	-->	Stents (Stents@moz-r8d.u6c.187.68.IP) has joined #rust
2015-05-20 21:19:57	<--	naerbnic (naerbnic@moz-t919up.hfc.comcastbusiness.net) has quit (Client exited)
2015-05-20 21:21:31	<--	logan_e (logan_e@moz-ltn.qg3.218.73.IP) has quit (Ping timeout: 121 seconds)
2015-05-20 21:21:50	<--	eichin (sid27120@moz-qnfe1r.uxbridge.irccloud.com) has quit (Quit: )
2015-05-20 21:21:52	-->	eichin (sid27120@moz-568f37.highgate.irccloud.com) has joined #rust
2015-05-20 21:22:26	<--	Stents_ (Stents@moz-r8d.u6c.187.68.IP) has quit (Ping timeout: 121 seconds)
2015-05-20 21:22:43	<--	bluss (bluss@moz-ec5o68.cust.bredbandsbolaget.se) has quit (Ping timeout: 121 seconds)
2015-05-20 21:23:04	-->	fkaa (tundmatu@moz-501od2.business.telia.com) has joined #rust
2015-05-20 21:23:48	-->	EspressoDan (EspressoDan@moz-gnsthu.dynamic.ashlandfiber.net) has joined #rust
2015-05-20 21:24:30	--	irc: disconnected from server
2015-05-20 21:24:47	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-20 21:24:47	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-20 21:24:47	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-20 21:24:47	--	Channel #rust: 947 nicks (14 ops, 0 halfops, 3 voices, 930 normals)
2015-05-20 21:24:49	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-20 21:25:19	<--	panicbit (panicbit@moz-rcvp1e.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2015-05-20 21:26:15	calc0000	what's the convention on whether or not to add Cargo.lock to repos?
2015-05-20 21:27:03	-->	logan_e (logan_e@moz-ltn.qg3.218.73.IP) has joined #rust
2015-05-20 21:28:04	<--	jfredett (Adium@moz-a9ilmn.fios.verizon.net) has quit (Quit: Leaving.)
2015-05-20 21:28:05	-->	jfredett (Adium@moz-a9ilmn.fios.verizon.net) has joined #rust
2015-05-20 21:28:06	durka42	TRPL says yes for executables, no for libraries
2015-05-20 21:28:09	durka42	I'm not really sure why
2015-05-20 21:28:47	--	irc: disconnected from server
2015-05-20 21:28:59	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-20 21:28:59	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-20 21:28:59	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-20 21:28:59	--	Channel #rust: 947 nicks (14 ops, 0 halfops, 3 voices, 930 normals)
2015-05-20 21:29:01	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-20 21:29:35	rillian	glandium: pong
2015-05-20 21:29:36	<--	gsingh93 (gulshan@moz-ln1ktu.st3l.iv8o.0004.2601.IP) has quit (Ping timeout: 121 seconds)
2015-05-20 21:29:55	-->	bluss (bluss@moz-ec5o68.cust.bredbandsbolaget.se) has joined #rust
2015-05-20 21:30:29	-->	summerlight (summerlight@moz-99k.2mj.130.121.IP) has joined #rust
2015-05-20 21:30:52	<--	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-20 21:31:20	<--	Rym_ (y@moz-c2u.sd4.38.217.IP) has quit (Connection closed)
2015-05-20 21:31:31	<--	ogham (rally@moz-91e3hp.cable.virginm.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-20 21:31:33	-->	Rym_ (y@moz-c2u.sd4.38.217.IP) has joined #rust
2015-05-20 21:32:41	Yurume	durka42, calc0000: Cargo.lock "locks" the dependencies, while Cargo.toml only gives a restriction on dependencies. you probably want the exact set of dependencies for executables but not for libraries.
2015-05-20 21:32:44	<--	pcwalton (pcwalton@moz-l8ebtf.sfo1.mozilla.com) has quit (Client exited)
2015-05-20 21:33:20	calc0000	oh I see
2015-05-20 21:33:24	-->	hroi (hroi@moz-d273ub.static.netgroup.dk) has joined #rust
2015-05-20 21:33:25	-->	fyolnish (fyolnish@moz-mgsbdv.ocn.ne.jp) has joined #rust
2015-05-20 21:33:32	calc0000	so libraries would express compatibility with, say, mio v0.3.*
2015-05-20 21:33:44	calc0000	but executables would say "I was built specifically with mio v0.3.3" or whatever
2015-05-20 21:34:06	-->	popow (Thunderbird@moz-03f.kd0.252.223.IP) has joined #rust
2015-05-20 21:34:10	<--	fyolnish (fyolnish@moz-mgsbdv.ocn.ne.jp) has quit (Connection closed)
2015-05-20 21:34:12	-->	fyolnish (fyolnish@moz-mgsbdv.ocn.ne.jp) has joined #rust
2015-05-20 21:35:14	<--	logan_e (logan_e@moz-ltn.qg3.218.73.IP) has quit (Ping timeout: 121 seconds)
2015-05-20 21:36:25	-->	cursivecode (textual@moz-4u56i9.res.bhn.net) has joined #rust
2015-05-20 21:36:33	<--	harrisonclarke (harrisoncla@moz-b21rr4.eastlink.ca) has quit (Connection closed)
2015-05-20 21:36:43	glandium	rillian: what does rust do for tls on windows?
2015-05-20 21:37:04	-->	logan_e (logan_e@moz-ltn.qg3.218.73.IP) has joined #rust
2015-05-20 21:37:07	-->	SiegeLord (sl@moz-9jtaei.ca.comcast.net) has joined #rust
2015-05-20 21:37:28	-->	new_one (new_one@moz-778gcu.kbni.1u98.0009.2601.IP) has joined #rust
2015-05-20 21:37:31	<--	hroi (hroi@moz-d273ub.static.netgroup.dk) has quit (Ping timeout: 121 seconds)
2015-05-20 21:38:59	--	irc: disconnected from server
2015-05-20 21:39:11	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-20 21:39:11	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-20 21:39:11	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-20 21:39:11	--	Channel #rust: 951 nicks (13 ops, 0 halfops, 3 voices, 935 normals)
2015-05-20 21:39:12	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-20 21:39:22	<--	Borg (Borg@moz-97jvbc.redstation.co.uk) has quit (Connection closed)
2015-05-20 21:40:01	aatch	glandium, there is a system that we can use for TLS on windows.
2015-05-20 21:40:22	glandium	aatch: so it's using TlsGetValue?
2015-05-20 21:40:28	rillian	glandium: I have no idea
2015-05-20 21:40:43	aatch	glandium, if you use the `thread_local!` macro, it will use it instead of just marking the variable as thread-local.
2015-05-20 21:40:51	Johannes	Is it possible to use reference to traitobjects as key in a hashtable? I would like to map user implemented traitobject to some hidden internal representation..
2015-05-20 21:41:24	<--	gandalf (zbraniecki@moz-u3dg2t.sfo1.mozilla.com) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-20 21:41:24	aatch	glandium, and yes, it appears we use the Tls* functions.
2015-05-20 21:41:26	glandium	rillian: because if rust is using TlsGetValue for windows, that means it shouldn't be hard to use pthread_getspecific
2015-05-20 21:41:37	glandium	for osx10.6
2015-05-20 21:41:41	klutzy	there are two tls ways, dynamic one (TlsGetValue or pthread_ stuff) and static one (uses special section)
2015-05-20 21:42:01	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-20 21:42:09	<--	turtil (turtil@moz-gfc.es4.23.103.IP) has quit (Quit: WeeChat 1.1.1)
2015-05-20 21:42:15	<--	Robozman (quassel@moz-81ou38.dyn.optonline.net) has quit (Quit: No Ping reply in 180 seconds.)
2015-05-20 21:42:24	<--	lyc (lyc@moz-0ob.2ig.25.175.IP) has quit (Ping timeout: 121 seconds)
2015-05-20 21:42:40	talchas	I mean, is it broken on osx10.6 or something?
2015-05-20 21:42:45	-->	lyc (lyc@moz-jft.nr8.226.207.IP) has joined #rust
2015-05-20 21:43:09	sam113101	why does "cargo new" generate a library template instead of binary template? do people write libraries more often than they write binaries?
2015-05-20 21:43:13	rillian	glandium: as I understood acrichto, the issue is pthread is much slower than the static calls used in Mac 10.7+
2015-05-20 21:43:26	-->	Robozman (quassel@moz-81ou38.dyn.optonline.net) has joined #rust
2015-05-20 21:43:26	-->	Gamecubic (cubic@moz-bglmk5.mc.videotron.ca) has joined #rust
2015-05-20 21:43:31	bluss	Johannes: it's possible
2015-05-20 21:43:38	klutzy	sam113101: you could `cargo new --bin`. (don't know why lib is default, but I like it)
2015-05-20 21:43:56	aatch	*something* has to be the default.
2015-05-20 21:44:01	sam113101	klutzy: I know, just curious as to why lib is the default, instead of bin
2015-05-20 21:44:06	glandium	rillian: well, you can't have it both ways
2015-05-20 21:44:11	bombela	like sam113101 i wonder the same thing
2015-05-20 21:44:22	glandium	rillian: we make the same tradeoff in firefox
2015-05-20 21:44:31	bombela	when you start playing with rust & cargo, you usually want to write a tiny program, not a lib :)
2015-05-20 21:44:32	rillian	sam113101: package managers encourage packaging everything as modules, so yes, libraries are probably more common.
2015-05-20 21:44:39	-->	lyc_ (lyc@moz-jft.nr8.226.207.IP) has joined #rust
2015-05-20 21:44:42	aatch	I guess lib makes more sense, you can have multiple bins in a cargo package, but only one lib
2015-05-20 21:44:44	bombela	rillian: thats a good point
2015-05-20 21:44:47	glandium	rillian: and it's perfectly fine to do the same in rust if the target os is osx 10.6
2015-05-20 21:44:55	<--	meunierd (dmeunier@moz-glf54u.cpe.sourcecable.net) has quit (Client exited)
2015-05-20 21:45:23	-->	thelink2012 (Mibbit@moz-59l.6ju.214.186.IP) has joined #rust
2015-05-20 21:45:32	rillian	bombela: I'm not sure it's the default I would have picked; I think of libraries as 'more special', and they're usually a refactoring step.
2015-05-20 21:45:42	<--	alanhoff (Mibbit@moz-fai.6rq.153.179.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-20 21:45:51	glandium	that is, rustc could look at the value of the MACOSX_DEPLOYMENT_TARGET environment variable and choose a different tls implementation based on that
2015-05-20 21:46:13	rillian	bombela: otoh you can make your tiny programmes example code for your library :)
2015-05-20 21:46:37	rillian	glandium: I like that idea
2015-05-20 21:46:47	<--	lyc (lyc@moz-jft.nr8.226.207.IP) has quit (Ping timeout: 121 seconds)
2015-05-20 21:47:06	-->	FallingAlways (FallingTime@moz-ruksei.cable.rogers.com) has joined #rust
2015-05-20 21:47:09	thelink2012	is the order on which (sideffects(), sideffects(), sideffects()) the side effect functions well defined in Rust? AFAIR it's undefined behaviour in C++
2015-05-20 21:47:13	glandium	rillian: fwiw, the MACOSX_DEPLOYMENT_TARGET environment variable is something clang looks at too (and gcc when there was a mac gcc)
2015-05-20 21:47:19	rillian	I don't understand rust's linkage model very well. I sounded like they'd need to build libstd both ways and choose one at link time
2015-05-20 21:47:32	<--	Shackra (Jorge@moz-7bh.ng6.177.186.IP) has quit (Ping timeout: 121 seconds)
2015-05-20 21:47:41	aatch	thelink2012, I don't believe it's defined right now.
2015-05-20 21:47:58	glandium	rillian: I'd presume tls is inlined
2015-05-20 21:48:05	glandium	rather than part of a static library
2015-05-20 21:48:14	-->	Shackra (Jorge@moz-7bh.ng6.177.186.IP) has joined #rust
2015-05-20 21:48:30	-->	grobinson (grobinson@moz-qq19th.dyn.optonline.net) has joined #rust
2015-05-20 21:48:40	rillian	glandium: makes sense. I haven't tried linking rust code which actually _uses_ tls
2015-05-20 21:49:10	--	irc: disconnected from server
2015-05-20 21:49:22	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-20 21:49:22	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-20 21:49:22	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-20 21:49:22	--	Channel #rust: 950 nicks (13 ops, 0 halfops, 3 voices, 934 normals)
2015-05-20 21:49:23	rillian	or I can if you'd rather
2015-05-20 21:49:24	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-20 21:49:26	thelink2012	aatch: Hmm, alright. It'd be very goodfor it to be well defined in Rust because putting it like this in a match is awesome
2015-05-20 21:49:29	glandium	rillian: I can
2015-05-20 21:49:33	rillian	thanks
2015-05-20 21:49:44	<--	bluss (bluss@moz-ec5o68.cust.bredbandsbolaget.se) has quit (Ping timeout: 121 seconds)
2015-05-20 21:50:12	-->	mattico (matt@moz-d3u46j.mpls.qwest.net) has joined #rust
2015-05-20 21:50:22	-->	KLP (KLP@moz-jveiei.fios.verizon.net) has joined #rust
2015-05-20 21:50:29	<--	davebettin (davebettin@moz-acc.cl4.35.72.IP) has quit (Ping timeout: 121 seconds)
2015-05-20 21:50:48	rillian	glandium: do you know how apple's link can tell we're using tls? I looked at the disassembly and couldn't figure out what it was keying on
2015-05-20 21:50:49	aatch	thelink2012, well right now we generate the calls left-to-right, and the CFG that's built during compilation treats them the same. I don't imagine that changing any time soon.
2015-05-20 21:51:28	<--	cursivecode (textual@moz-4u56i9.res.bhn.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-20 21:51:37	glandium	rillian: relocations, I guess
2015-05-20 21:51:47	<--	KLP (KLP@moz-jveiei.fios.verizon.net) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-05-20 21:51:56	-->	msch (sid28472@moz-6ur912.highgate.irccloud.com) has joined #rust
2015-05-20 21:52:06	<--	lyc_ (lyc@moz-jft.nr8.226.207.IP) has quit (Connection closed)
2015-05-20 21:52:10	<--	meh (meh@moz-a3egtu.42-151.net24.it) has quit (Ping timeout: 121 seconds)
2015-05-20 21:52:18	thelink2012	aatch: So it's alright to do something like this match (self.parser.take(), self.parser.take(), self.parser.take()) so that the order on which the takes are called won't bug everything :P ?
2015-05-20 21:52:38	mattico	Is there any way to have a String or Box<str> in a const struct?
2015-05-20 21:52:40	rillian	it complains when it hits the specific functions in libstd, but I didn't notice a syscall. Oh well.
2015-05-20 21:52:53	aatch	thelink2012, probably not. Like I said, it's not *actually* defined, but that's what it does.
2015-05-20 21:52:57	<--	housl (housl@moz-qnjt4k.ut.comcast.net) has quit (Quit: WeeChat 1.1.1)
2015-05-20 21:53:06	-->	tikue (tim@moz-n71.k1b.0.198.IP) has joined #rust
2015-05-20 21:53:08	swgillespie	mattico: String and Box both imply heap allocation and that can't be done for consts, I think
2015-05-20 21:53:29	--	irc: disconnected from server
2015-05-20 21:53:41	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-20 21:53:41	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-20 21:53:41	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-20 21:53:41	--	Channel #rust: 947 nicks (13 ops, 0 halfops, 3 voices, 931 normals)
2015-05-20 21:53:43	talchas	rillian: yeah, it's not a syscall, or any sort of call
2015-05-20 21:53:43	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-20 21:53:45	mattico	swgillespie: I thought so, but I wanted to make sure before I have to add <'a> to every single struct in my program -_-
2015-05-20 21:54:03	swgillespie	mattico: you can use a &'static str, if you want a global constant string
2015-05-20 21:54:16	-->	turtil (turtil@moz-gfc.es4.23.103.IP) has joined #rust
2015-05-20 21:54:19	talchas	on linux it's an %fs-relative or %gs-relative lookup (depending on 32-vs-64)
2015-05-20 21:54:30	rillian	talchas: is there a write up of how tls works I could read?
2015-05-20 21:54:58	mattico	swgillespie: for the global constant itself, but each element of the global static array is used to initilize a vec which can also have runtime-created elements.
2015-05-20 21:55:03	talchas	(and there is a syscall to tell the kernel what to load for fs/gs that's called by pthreads once when you create each thread)
2015-05-20 21:55:15	swgillespie	i see.
2015-05-20 21:55:15	rillian	i.e. I don't understand why there's a platform version dependence if it's not a syscall
2015-05-20 21:55:18	rillian	talchas: ah
2015-05-20 21:55:22	mattico	swgillespie: thanks!
2015-05-20 21:55:29	swgillespie	no problem
2015-05-20 21:55:30	swgillespie	!
2015-05-20 21:55:36	talchas	yeah, the syscall is just not one at the use site
2015-05-20 21:56:19	-->	plumshark (pat@moz-ju1nj2.35n5.ltgp.0306.2602.IP) has joined #rust
2015-05-20 21:57:25	glandium	rillian: non-pthread_* tls relies on the dynamic linker and/or the libc
2015-05-20 21:58:02	glandium	rillian: and on osx 10.6, the dynamic linker and/or the libc doesn't support non-pthread_* tls
2015-05-20 21:58:08	<--	swgillespie (swgillespie@moz-1i5.3un.220.167.IP) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-20 21:58:39	<--	grobinson (grobinson@moz-qq19th.dyn.optonline.net) has quit (A TLS packet with unexpected length was received.)
2015-05-20 21:59:07	-->	dpc_ (dpc@moz-t6gr4b.ca.comcast.net) has joined #rust
2015-05-20 21:59:26	aatch	This might help: http://www.akkadia.org/drepper/tls.pdf
2015-05-20 21:59:58	<--	morton (Mibbit@moz-d5r.43f.38.216.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-20 22:00:10	-->	KLP (KLP@moz-jveiei.fios.verizon.net) has joined #rust
2015-05-20 22:00:30	drasa	I frequently keep thinking that it would be nice to debug print a [u8] as a string of hexadecimals, but apparently there isn't any built in formatter to do that?
2015-05-20 22:00:32	glandium	aatch: osx presumably works differently, but it shouldn't be too different
2015-05-20 22:00:33	-->	c0170 (c0170@moz-4stj9o.cable.virginm.net) has joined #rust
2015-05-20 22:00:48	<--	ismaelga (ismaelga@moz-2n0f5l.rev.vodafone.pt) has quit (Connection closed)
2015-05-20 22:01:01	aatch	glandium, well I know that it's somewhat more complex than on Linux.
2015-05-20 22:01:34	rillian	aatch: thanks
2015-05-20 22:01:35	<--	KLP (KLP@moz-jveiei.fios.verizon.net) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-05-20 22:01:38	-->	Guest_ (textual@moz-rtn.fg7.77.192.IP) has joined #rust
2015-05-20 22:01:42	aatch	glandium, since HHVM (which I've done some work on) uses TLS directly on Linux, but opted to use pthreads on OSX.
2015-05-20 22:01:59	-->	gopar (gopar@moz-5039uj.ca.comcast.net) has joined #rust
2015-05-20 22:02:01	<--	maraoz (maraoz@moz-1d0.g5p.29.181.IP) has quit (Quit: Leaving)
2015-05-20 22:02:08	aatch	glandium, this is the JIT generating code for the access, btw.
2015-05-20 22:02:08	-->	maraoz (maraoz@moz-1d0.g5p.29.181.IP) has joined #rust
2015-05-20 22:02:47	glandium	aatch: isn't it just a case that the internals of tls on linux is well documented, but not on osx?
2015-05-20 22:02:49	-->	dpc (dpc@moz-t6gr4b.ca.comcast.net) has joined #rust
2015-05-20 22:02:53	-->	takronix_ (takronix@moz-nm15k0.hr.cox.net) has joined #rust
2015-05-20 22:03:37	aatch	glandium, I think it's a bit of both. I think it's more complex and the lack of documentation compounds the issue.
2015-05-20 22:03:50	<--	dpc (dpc@moz-t6gr4b.ca.comcast.net) has quit (Connection closed)
2015-05-20 22:03:53	<--	zz_kimundi (kimundi@moz-e86r7p.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2015-05-20 22:04:03	-->	ismaelga (ismaelga@moz-2n0f5l.rev.vodafone.pt) has joined #rust
2015-05-20 22:04:08	-->	dpc__ (dpc@moz-t6gr4b.ca.comcast.net) has joined #rust
2015-05-20 22:04:19	<--	dpc_ (dpc@moz-t6gr4b.ca.comcast.net) has quit (Connection closed)
2015-05-20 22:05:03	plumshark	pub fn unwrap(&self) -> &'a Display {
2015-05-20 22:05:03	plumshark	 &'a self.displ
2015-05-20 22:05:03	plumshark	 }, getting error: expected `:`, found `self`
2015-05-20 22:05:07	<--	demilux (demilux@moz-fk1.kt4.14.64.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-20 22:05:14	plumshark	oh shoot I thought I removed the linebreaks, sorry.
2015-05-20 22:05:20	plumshark	anyway, am I missing something?
2015-05-20 22:05:39	thelink2012	hmm is there a way to check if I reached EOF without doing any actual IO  (like C `feof`)?
2015-05-20 22:05:47	talchas	you don't use lifetimes in values
2015-05-20 22:05:51	aatch	plumshark, don't put the `'a` in the `&'a self.displ`.
2015-05-20 22:06:03	-->	zz_kimundi (kimundi@moz-pgadja.dip0.t-ipconnect.de) has joined #rust
2015-05-20 22:06:31	--	zz_kimundi is now known as kimundi
2015-05-20 22:06:36	<--	c0170 (c0170@moz-4stj9o.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2015-05-20 22:07:01	plumshark	Then it tells me it "cannot infer an appropriate lifetime for borrow expression due to conflicting requirements" when I just return the reference
2015-05-20 22:07:12	<--	barosl (barosl@moz-tmp.qma.67.220.IP) has quit (Quit: Leaving)
2015-05-20 22:07:17	talchas	thelink2012: assuming you're reading from a file, any short read means eof
2015-05-20 22:07:26	-->	ajhager (aajhager@moz-mcdsgi.iplsin.sbcglobal.net) has joined #rust
2015-05-20 22:07:40	<--	XMPPwocky (wocky@moz-70npf7.net) has quit (Quit: leaving)
2015-05-20 22:07:40	aatch	plumshark, well that's because `&self` doesn't live long enough
2015-05-20 22:07:42	talchas	(feof is just remembering this)
2015-05-20 22:08:17	--	zz_NameNotFound is now known as NameNotFound
2015-05-20 22:08:25	thelink2012	talchas: short read?
2015-05-20 22:08:31	benbangert	is the code for bors around somewhere?
2015-05-20 22:09:41	--	irc: disconnected from server
2015-05-20 22:09:53	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-20 22:09:53	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-20 22:09:53	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-20 22:09:53	--	Channel #rust: 948 nicks (13 ops, 0 halfops, 3 voices, 932 normals)
2015-05-20 22:09:55	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-20 22:09:55	drasa	But with &'a Display you are basically telling that 'a is something else that has noting to do with self's lifetime
2015-05-20 22:09:56	-->	blaenk (blaenkdenum@moz-em283u.res.rr.com) has joined #rust
2015-05-20 22:10:06	-->	grant (grant@moz-jfh.0nq.187.64.IP) has joined #rust
2015-05-20 22:10:32	glandium	aatch: relatedly, I thought hhvm was using llvm by now, that'd fix the problem, I guess
2015-05-20 22:10:43	<--	harrisonclarke (harrisoncla@moz-b21rr4.eastlink.ca) has quit (Connection closed)
2015-05-20 22:10:56	plumshark	here's the cut version http://pastebin.com/WdwC5BEX - what's confusing to me is that self does have the 'a lifetime, right?
2015-05-20 22:10:58	talchas	I can't remember for certain if short reads definitely mean EOF, but 0 read does
2015-05-20 22:11:00	aatch	glandium, LLVM is too slow to use as a main code-generator
2015-05-20 22:11:26	drasa	plumshark: self has elided lifetime there
2015-05-20 22:11:34	<--	ajhager (aajhager@moz-mcdsgi.iplsin.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-20 22:11:41	<--	wqer` (user@moz-rn4tf7.541k.ockc.8900.2605.IP) has quit (Connection closed)
2015-05-20 22:12:53	--	irc: disconnected from server
2015-05-20 22:13:05	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-20 22:13:05	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-20 22:13:05	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-20 22:13:05	--	Channel #rust: 946 nicks (13 ops, 0 halfops, 3 voices, 930 normals)
2015-05-20 22:13:07	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-20 22:13:15	drasa	plumshark: I'm not too good with lifetimes myself, but I think that if you won't mention self's lifetime, and then name the return parameter lifetime to 'a, it thinks that they are totally different lifetimes.
2015-05-20 22:13:36	-->	Robozman (quassel@moz-81ou38.dyn.optonline.net) has joined #rust
2015-05-20 22:13:36	talchas	I think in theory short reads can be from signals, but read-from-file on linux ignores signals
2015-05-20 22:13:40	-->	KLP (KLP@moz-jveiei.fios.verizon.net) has joined #rust
2015-05-20 22:13:43	-->	XMPPwocky (wocky@moz-70npf7.net) has joined #rust
2015-05-20 22:14:17	drasa	Ah yeah, here's the rule:
2015-05-20 22:14:18	drasa	If there is exactly one input lifetime position (elided or not), that lifetime is assigned to all elided output lifetimes.
2015-05-20 22:14:30	drasa	"assigned to all ELIDED output lifetimes"
2015-05-20 22:14:31	-->	clg (Mibbit@moz-ql0jml.res.rr.com) has joined #rust
2015-05-20 22:14:47	drasa	but you are not eliding the output lifetime, but specifying it explicitly
2015-05-20 22:15:02	<--	clg (Mibbit@moz-ql0jml.res.rr.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-20 22:15:04	drasa	And that makes it think that it's different from the input lifetime.
2015-05-20 22:15:18	<--	cjwelborn (cjwelborn@moz-np6hed.al.charter.com) has quit (Quit: sys.exit(1))
2015-05-20 22:15:27	-->	mr_evil (Mibbit@moz-ql0jml.res.rr.com) has joined #rust
2015-05-20 22:15:33	talchas	plumshark: note that the 'a in the impl is the lifetime /contained/ in self, not the lifetime of the reference to self you have in the method
2015-05-20 22:15:37	<--	blaenk (blaenkdenum@moz-em283u.res.rr.com) has quit (Connection closed)
2015-05-20 22:15:48	<--	logan_e (logan_e@moz-ltn.qg3.218.73.IP) has quit (Ping timeout: 121 seconds)
2015-05-20 22:15:59	-->	blaenk (blaenkdenum@moz-em283u.res.rr.com) has joined #rust
2015-05-20 22:16:12	-->	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has joined #rust
2015-05-20 22:17:07	plumshark	I see that removing the 'a in the &Display return type let it compile, I will read over this again to get over the confusion
2015-05-20 22:17:44	--	NameNotFound is now known as zz_NameNotFound
2015-05-20 22:17:48	drasa	plumshark: Basically what you're stumbling upon, is lifetime elision rules
2015-05-20 22:18:07	--	nsm is now known as nsm|away
2015-05-20 22:19:18	--	irc: disconnected from server
2015-05-20 22:19:30	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-20 22:19:30	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-20 22:19:30	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-20 22:19:30	--	Channel #rust: 950 nicks (13 ops, 0 halfops, 3 voices, 934 normals)
2015-05-20 22:19:32	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-20 22:19:48	plumshark	Although know I'm a little thrown off about the meaning of 'a - so 'a is inside self's lifetime, they aren't equal?
2015-05-20 22:19:56	plumshark	now*
2015-05-20 22:20:29	-->	Barca (Mibbit@moz-j9a.ns7.133.129.IP) has joined #rust
2015-05-20 22:20:48	<--	KLP (KLP@moz-jveiei.fios.verizon.net) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-05-20 22:21:54	drasa	If you write &'a self, then 'a means "the lifetime of this reference to "self", which must not live longer than "self" lives, and btw. which I'm calling here 'a"
2015-05-20 22:22:55	drasa	And then you can write  &'a Display, which means that the reference to "self" and &Display live equally long. (= not longer than self lives)
2015-05-20 22:23:10	<--	mr_evil (Mibbit@moz-ql0jml.res.rr.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-20 22:23:38	-->	cursivecode (textual@moz-4u56i9.res.bhn.net) has joined #rust
2015-05-20 22:23:49	-->	tschottdorf (tobias@moz-d021av.aipg.hajb.2000.2604.IP) has joined #rust
2015-05-20 22:23:53	talchas	plumshark: note that you could write GliumDisplay<'static>, among other things
2015-05-20 22:24:30	--	irc: disconnected from server
2015-05-20 22:24:42	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-20 22:24:42	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-20 22:24:42	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-20 22:24:42	--	Channel #rust: 950 nicks (13 ops, 0 halfops, 3 voices, 934 normals)
2015-05-20 22:24:44	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-20 22:25:22	aatch	See, this is why I don't like lifetime elision.
2015-05-20 22:25:33	-->	choplin (choplin@moz-aac0o0.dion.ne.jp) has joined #rust
2015-05-20 22:25:53	<--	Barca (Mibbit@moz-j9a.ns7.133.129.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-20 22:26:32	talchas	aatch: even for plain fn foo(&self) {}? that would get painful fast
2015-05-20 22:26:34	-->	alanhoff (alanhoff@moz-r8s4se.server.torland.is) has joined #rust
2015-05-20 22:26:40	alanhoff	Hello folks
2015-05-20 22:26:52	aatch	talchas, that's not elision though, it never has been
2015-05-20 22:26:59	alanhoff	Any guides/tutorials/guides/insights for folks coming from JS?
2015-05-20 22:27:00	-->	blank_name (blank_name@moz-5t8mvg.mi.frontiernet.net) has joined #rust
2015-05-20 22:27:00	aatch	talchas, it's an anonymous lifetimie.
2015-05-20 22:27:05	aatch	lifetime*
2015-05-20 22:27:13	plumshark	it's starting to make some sense, I guess I will just need more experience. Thank you all
2015-05-20 22:27:23	<--	capcar (mathieu@moz-mi55kn.mc.videotron.ca) has quit (Ping timeout: 121 seconds)
2015-05-20 22:27:24	talchas	aatch: sure, but I don't know that removing elision would help here
2015-05-20 22:27:29	plumshark	Mostly just trying to figure out what the underlying assumption I was making that ended up being wrong
2015-05-20 22:27:44	aatch	talchas, we didn't always have elision, in fact it's pretty new.
2015-05-20 22:27:59	<--	mdbooth (mdbooth@moz-ap66ir.range81-159.btcentralplus.com) has quit (Ping timeout: 121 seconds)
2015-05-20 22:27:59	-->	godlikesme (godlikesme@moz-2a2.dsd.174.79.IP) has joined #rust
2015-05-20 22:28:11	talchas	plumshark: the 'a isn't how long self is living
2015-05-20 22:28:19	talchas	it can be entirely unrelated
2015-05-20 22:28:41	aatch	talchas, it muddies the issue. Elision makes it hard to distinguish between "anonymous lifetime" and "elided lifetime".
2015-05-20 22:29:42	--	irc: disconnected from server
2015-05-20 22:29:54	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-20 22:29:54	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-20 22:29:54	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-20 22:29:54	--	Channel #rust: 952 nicks (13 ops, 0 halfops, 3 voices, 936 normals)
2015-05-20 22:29:56	plumshark	right, I should have seen it as a generic component of some of GliumDisplay's types rather than the life of the struct 
2015-05-20 22:29:56	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-20 22:29:57	<--	kgrandon (Adium@moz-u3dg2t.sfo1.mozilla.com) has quit (Quit: Leaving.)
2015-05-20 22:29:59	plumshark	is there no 'self lifetime?
2015-05-20 22:30:19	-->	lyc (lyc@moz-jft.nr8.226.207.IP) has joined #rust
2015-05-20 22:30:33	aatch	plumshark, nope. Turns out it's not actually useful.
2015-05-20 22:30:53	<--	Romster (Romster@moz-4g83e8.rev.eftel.com) has quit (Ping timeout: 121 seconds)
2015-05-20 22:30:55	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Connection closed)
2015-05-20 22:31:11	plumshark	I suppose I could see it making code a lot more dependent on where it is being called from rather than the other way around, which doesn't seem like a good thing
2015-05-20 22:31:16	XMPPwocky	https://gist.github.com/XMPPwocky/d820f45ac138bb4d6c3f
2015-05-20 22:31:57	-->	Romster (Romster@moz-4g83e8.rev.eftel.com) has joined #rust
2015-05-20 22:32:27	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-20 22:33:08	<--	rmgk (ragnar@moz-rbmqlt.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2015-05-20 22:33:24	<--	logan_e (logan_e@moz-ltn.qg3.218.73.IP) has quit (Ping timeout: 121 seconds)
2015-05-20 22:33:42	-->	m_kato (m_kato@moz-86b4bs.bitcat.net) has joined #rust
2015-05-20 22:34:03	<--	steshaw (sid30841@moz-eom82r.uxbridge.irccloud.com) has quit (Quit: )
2015-05-20 22:34:12	-->	steshaw (sid30841@moz-mij4a1.highgate.irccloud.com) has joined #rust
2015-05-20 22:35:56	-->	ajhager (aajhager@moz-mcdsgi.iplsin.sbcglobal.net) has joined #rust
2015-05-20 22:35:59	-->	mdbooth (mdbooth@moz-ap66ir.range81-159.btcentralplus.com) has joined #rust
2015-05-20 22:36:09	-->	logan_e (logan_e@moz-ltn.qg3.218.73.IP) has joined #rust
2015-05-20 22:36:56	drasa	XMPPwocky: That's an excellent writeup!
2015-05-20 22:37:20	drasa	Btw. I've been thinking about enums
2015-05-20 22:37:22	XMPPwocky	not totally correct, but it's accurate enough in my experience
2015-05-20 22:37:28	drasa	If there's an Option
2015-05-20 22:37:36	drasa	Option<&T>
2015-05-20 22:37:37	XMPPwocky	specifically, it tends to fall down when &mut gets involved
2015-05-20 22:37:59	drasa	And struct that contains that
2015-05-20 22:38:14	<--	pgonda (peter@moz-s36.0tp.134.75.IP) has quit (Ping timeout: 121 seconds)
2015-05-20 22:38:22	drasa	Obviously, there's a restricting lifetime involved, that applies to the whole struct
2015-05-20 22:38:43	<--	Tobba (Tobba@moz-o13d22.bredband.telia.com) has quit (Ping timeout: 121 seconds)
2015-05-20 22:38:52	drasa	But if the Option<&T> is None, then there's no restriction
2015-05-20 22:39:07	--	irc: disconnected from server
2015-05-20 22:39:19	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-20 22:39:19	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-20 22:39:19	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-20 22:39:19	--	Channel #rust: 952 nicks (13 ops, 0 halfops, 3 voices, 936 normals)
2015-05-20 22:39:19	XMPPwocky	no
2015-05-20 22:39:21	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-20 22:39:26	XMPPwocky	the contents of the enum is not part of the type
2015-05-20 22:39:33	-->	mindtree (Mitch@moz-6ghmaa.iprimus.net.au) has joined #rust
2015-05-20 22:39:40	XMPPwocky	an enum's "restrictions" are the union of all the restrictions on its variants
2015-05-20 22:39:42	<--	Azdle (Azdle@moz-fv6arh.mn.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-20 22:39:48	drasa	Okay
2015-05-20 22:40:13	aatch	You can have `None : Option<&'static T>`, the compiler is happy to infer that.
2015-05-20 22:40:16	<--	zhoeon (fc@moz-cuhqb2.cable.teksavvy.com) has quit (Quit: leaving)
2015-05-20 22:40:32	aatch	But only at the construction of the Option.
2015-05-20 22:41:15	-->	gsingh93 (gulshan@moz-ln1ktu.st3l.iv8o.0004.2601.IP) has joined #rust
2015-05-20 22:41:46	<--	ismaelga (ismaelga@moz-2n0f5l.rev.vodafone.pt) has quit (Connection closed)
2015-05-20 22:42:07	-->	ismaelga (ismaelga@moz-2n0f5l.rev.vodafone.pt) has joined #rust
2015-05-20 22:42:26	<--	joh (uid13099@moz-2c7ap3.ealing.irccloud.com) has quit (Quit: Connection closed for inactivity)
2015-05-20 22:42:32	<--	mfranzwa (mike@moz-or1vuv.ca.comcast.net) has quit (Client exited)
2015-05-20 22:42:47	_habnabit	does anyone know of a good example of a rust library that binds to a C library and allocates its own space for C-level structs? i.e. doesn't rely on allocation functions in the library
2015-05-20 22:43:05	-->	madalynn (Mibbit@moz-nek.ngq.59.218.IP) has joined #rust
2015-05-20 22:43:20	-->	jminer (Instantbird@moz-b1u.qch.163.66.IP) has joined #rust
2015-05-20 22:43:28	aatch	_habnabit, not off the top of my head, what are you looking for?
2015-05-20 22:43:29	<--	madalynn (Mibbit@moz-nek.ngq.59.218.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-20 22:44:11	_habnabit	aatch, just wondering if there's any common idioms for how to do that. or, is it really as simple as making structs in rust with the same layout, using the C packing feature, and taking pointers to those?
2015-05-20 22:44:35	<--	Ralith (ralith@moz-miv.lne.251.63.IP) has quit (Ping timeout: 121 seconds)
2015-05-20 22:44:48	aatch	_habnabit, yep, we even have an attribute for specifying C layout `#[repr(C)]`
2015-05-20 22:44:58	_habnabit	aatch, yeah, that's what i meant
2015-05-20 22:45:06	<--	annodomini (lambda@moz-hceqmj.hfc.comcastbusiness.net) has quit (Client exited)
2015-05-20 22:45:36	&mbrubeck	_habnabit: Maybe stuff like this from rust-azure? https://github.com/servo/rust-azure/blob/master/src/azure_hl.rs#L531-L537
2015-05-20 22:45:39	drasa	http://stackoverflow.com/questions/27650312/show-u8-slice-in-hex-representation Hmm, there isn't any answers that work directly on 1.0 stable ...
2015-05-20 22:45:46	aatch	_habnabit, if you need to pass an uninitialised value to some initialisation function, we have a function for that `uninitialized`.
2015-05-20 22:46:00	_habnabit	aatch, oh, neat
2015-05-20 22:46:08	_habnabit	looks like that's what's in mbrubeck's link
2015-05-20 22:46:09	<--	ismaelga (ismaelga@moz-2n0f5l.rev.vodafone.pt) has quit (Ping timeout: 121 seconds)
2015-05-20 22:46:17	<--	gsingh93 (gulshan@moz-ln1ktu.st3l.iv8o.0004.2601.IP) has quit (Ping timeout: 121 seconds)
2015-05-20 22:46:25	&mbrubeck	_habnabit: And here's the type of the struct it's using: http://doc.servo.org/src/azure/azure.rs.html#327-335
2015-05-20 22:46:38	Mutabah	drasa: Write a formatter for it?
2015-05-20 22:46:53	_habnabit	mbrubeck, thanks!
2015-05-20 22:46:56	-->	dassio (mac@moz-rrv.37l.160.167.IP) has joined #rust
2015-05-20 22:46:58	aatch	_habnabit, the intrinsic that function uses is actually one of my earlier contributions to the compiler :D
2015-05-20 22:47:08	_habnabit	aatch, nice
2015-05-20 22:47:15	aatch	It's literally a no-op.
2015-05-20 22:47:38	&mbrubeck	I love how many things in Rust are "do nothing... with a specific type"
2015-05-20 22:47:39	-->	blank_na1e (blank_name@moz-0lko1v.mi.frontiernet.net) has joined #rust
2015-05-20 22:48:30	_habnabit	so, somewhat relatedly, i'm porting a C library i wrote to rust, and i ended up letting the user do their own memory allocation. so, there's a library function for 'get the size of this struct' and then the user is expected to call that function, allocate that much memory, and pass a pointer to it for allocation. could i preserve this API in rust, or would it be worth revisiting/redoing?
2015-05-20 22:48:41	_habnabit	err
2015-05-20 22:48:58	_habnabit	pass a pointer to it for initialization, not allocation
2015-05-20 22:49:14	-->	Stents_ (Stents@moz-r8d.u6c.187.68.IP) has joined #rust
2015-05-20 22:49:19	<--	dpc__ (dpc@moz-t6gr4b.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-20 22:49:20	<--	new_one (new_one@moz-778gcu.kbni.1u98.0009.2601.IP) has quit (Ping timeout: 121 seconds)
2015-05-20 22:49:27	<--	lyc (lyc@moz-jft.nr8.226.207.IP) has quit (Connection closed)
2015-05-20 22:49:46	<--	john (john@moz-n1mnap.ri.cox.net) has quit (Ping timeout: 121 seconds)
2015-05-20 22:49:56	aatch	_habnabit, well it's hardly idiomatic Rust. But if you want to keep the same rough API, it's actually easier since you can use a generic function for getting the size.
2015-05-20 22:50:11	<--	blank_name (blank_name@moz-5t8mvg.mi.frontiernet.net) has quit (Ping timeout: 121 seconds)
2015-05-20 22:50:22	-->	pcwalton (pcwalton@moz-6kjabm.ca.comcast.net) has joined #rust
2015-05-20 22:50:22	--	Mode #rust [+ao pcwalton pcwalton] by ChanServ
2015-05-20 22:50:37	geofft	_habnabit: do you care about alignment? (can the user give you a misaligned pointer?) 
2015-05-20 22:51:01	_habnabit	aatch, would idiomatic rust be passing back a pointer to C code?
2015-05-20 22:51:04	aatch	_habnabit, idiomatic Rust though takes advantage of RVO and would return the data by-value
2015-05-20 22:51:09	_habnabit	aatch, ah
2015-05-20 22:51:10	geofft	(that said, I do sorta wish Rust had a stable Box_but_with_this_malloc) 
2015-05-20 22:51:32	<--	Stents (Stents@moz-r8d.u6c.187.68.IP) has quit (Ping timeout: 121 seconds)
2015-05-20 22:51:37	_habnabit	geofft, my code cares only insofar as some CPUs will complain about nonaligned access of words, i think
2015-05-20 22:51:44	-->	swgillespie (swgillespie@moz-rn1.vmq.232.104.IP) has joined #rust
2015-05-20 22:51:45	<--	pcwalton (pcwalton@moz-6kjabm.ca.comcast.net) has quit (Client exited)
2015-05-20 22:51:47	aatch	geofft, well theres work on that front happening, you'd basically just have your own allocator.
2015-05-20 22:52:03	-->	pcwalton (pcwalton@moz-6kjabm.ca.comcast.net) has joined #rust
2015-05-20 22:52:03	--	Mode #rust [+ao pcwalton pcwalton] by ChanServ
2015-05-20 22:52:05	geofft	ooh. link? (I should really keep up with PRs / internals more than I do) 
2015-05-20 22:52:14	<--	pcwalton (pcwalton@moz-6kjabm.ca.comcast.net) has quit (Client exited)
2015-05-20 22:53:00	aatch	geofft, https://github.com/rust-lang/rfcs/blob/master/text/0809-box-and-in-for-stdlib.md
2015-05-20 22:54:00	_habnabit	aatch, in my current case, consumers of the library aren't using it from C but from python via cffi. i don't think cffi can handle that, though
2015-05-20 22:54:07	<--	colinsurprenant (colin@moz-q9ee1n.74.electronicbox.net) has quit (Client exited)
2015-05-20 22:54:49	aatch	_habnabit, ah, well then letting the Python runtime handle memory allocation is probably for the best.
2015-05-20 22:55:09	_habnabit	aatch, right; that's what i'm doing at the moment
2015-05-20 22:55:23	<--	markstory (textual@moz-tb3ghu.cable.rogers.com) has quit (Quit: Textual IRC Client: www.textualapp.com)
2015-05-20 22:55:37	geofft	to the technical question, you can certainly keep the api via std::mem::size_of, but unless you tell the user about alignment, the transmute from the user buffer _is_ unsafe 
2015-05-20 22:55:49	_habnabit	okay
2015-05-20 22:55:57	_habnabit	can i get the required alignment?
2015-05-20 22:56:20	<--	logan_e (logan_e@moz-ltn.qg3.218.73.IP) has quit (Ping timeout: 121 seconds)
2015-05-20 22:56:28	aatch	_habnabit, yep, `std::mem::align_of`
2015-05-20 22:56:33	_habnabit	okay cool
2015-05-20 22:56:48	-->	lyc (lyc@moz-jft.nr8.226.207.IP) has joined #rust
2015-05-20 22:56:48	<--	creationix (creationix@moz-ebi8rk.cpe.cableone.net) has quit (Client exited)
2015-05-20 22:56:54	-->	colinsurprenant (colin@moz-q9ee1n.74.electronicbox.net) has joined #rust
2015-05-20 22:57:04	_habnabit	std::mem looks neat
2015-05-20 22:57:07	geofft	I think alignment is the only real thing to worry about but I'm only 90% sure about that 
2015-05-20 22:57:24	geofft	aatch: shiny. (although using `box` as a keyword for things that aren't boxes is sorta confusing) 
2015-05-20 22:57:29	-->	mr_sticky (Mibbit@moz-s68.sa8.39.106.IP) has joined #rust
2015-05-20 22:57:44	geofft	(although although, plenty of Rust stuff is sorta confusing at first and I got used to it after 30 seconds, so whatever) 
2015-05-20 22:58:04	aatch	geofft, well they aren't `Box`-es, but `Rc` is kind of a box, it's a ref-counted box.
2015-05-20 22:58:23	_habnabit	sooo align_of being N just means that (some_pointer % N) == 0, right
2015-05-20 22:58:33	-->	logan_e (logan_e@moz-ltn.qg3.218.73.IP) has joined #rust
2015-05-20 22:58:39	<--	lyc (lyc@moz-jft.nr8.226.207.IP) has quit (Connection closed)
2015-05-20 22:58:50	-->	v21 (vee@moz-tqa.5lr.4.171.IP) has joined #rust
2015-05-20 22:58:54	aatch	_habnabit, correct.
2015-05-20 22:58:58	_habnabit	okay
2015-05-20 22:59:01	-->	grobinson (grobinson@moz-qq19th.dyn.optonline.net) has joined #rust
2015-05-20 22:59:02	<--	mr_sticky (Mibbit@moz-s68.sa8.39.106.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-20 22:59:21	-->	lyc (lyc@moz-jft.nr8.226.207.IP) has joined #rust
2015-05-20 23:00:19	--	irc: disconnected from server
2015-05-20 23:00:31	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-20 23:00:31	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-20 23:00:31	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-20 23:00:31	--	Channel #rust: 946 nicks (13 ops, 0 halfops, 3 voices, 930 normals)
2015-05-20 23:00:33	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-20 23:01:36	<--	EspressoDan (EspressoDan@moz-gnsthu.dynamic.ashlandfiber.net) has quit (Client exited)
2015-05-20 23:02:59	<--	kimundi (kimundi@moz-pgadja.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2015-05-20 23:03:59	<--	grobinson (grobinson@moz-qq19th.dyn.optonline.net) has quit (Ping timeout: 121 seconds)
2015-05-20 23:04:06	-->	zz_kimundi (kimundi@moz-uvfh0m.dip0.t-ipconnect.de) has joined #rust
2015-05-20 23:04:26	-->	cwraith (c_wraith@moz-7i8.v6v.191.131.IP) has joined #rust
2015-05-20 23:04:32	--	zz_kimundi is now known as kimundi
2015-05-20 23:05:22	@huon	benbangert: hey, did you get an answer about bors?
2015-05-20 23:05:38	--	irc: disconnected from server
2015-05-20 23:05:50	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-20 23:05:50	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-20 23:05:50	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-20 23:05:50	--	Channel #rust: 945 nicks (13 ops, 0 halfops, 3 voices, 929 normals)
2015-05-20 23:05:52	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-20 23:06:00	@huon	benbangert: if not, bors runs on https://github.com/barosl/homu
2015-05-20 23:06:26	benbangert	huon: sweet!
2015-05-20 23:06:55	<--	Hyperion (Hyperion@moz-382v9o.ca.comcast.net) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-05-20 23:06:57	bombela	I am correct that for a: &mut, then f(a) is equal to f(&mut *a) because of some sort of syntactic sugar?
2015-05-20 23:07:17	<--	c_wraith (c_wraith@moz-7i8.v6v.191.131.IP) has quit (Ping timeout: 121 seconds)
2015-05-20 23:07:31	@huon	benbangert: incidentally, I wrote a blog post about using it for my own code :) http://huonw.github.io/blog/2015/03/rust-infrastructure-can-be-your-infrastructure/
2015-05-20 23:07:34	bombela	because for example match a {}... will MOVE the &mut because &mut is not copyable.
2015-05-20 23:07:47	@huon	bombela: if `f` takes a `&mut ...` explicitly, yes
2015-05-20 23:08:04	bombela	&huon yes, f takes &mut, I should have been more precise.
2015-05-20 23:08:07	@huon	bombela: (if `f` takes a pure generic that is implemented by &mut ... then it will move too)
2015-05-20 23:08:14	thelink2012	should I manually implement Display or Debug for a 'printer' that needs to be implemented manually? When should I choose one to the other?
2015-05-20 23:08:33	bombela	@huon great thanks, that what I had observed, but wanted to be sure that the f(a) was effectively syntatic sugar.
2015-05-20 23:08:33	@huon	bombela: (this is often called "reborrowing")
2015-05-20 23:08:53	@huon	thelink2012: the guideline is that types should essentially always implement Debug
2015-05-20 23:08:58	bombela	@huon, got it, makes sense, thank you very much
2015-05-20 23:09:03	@huon	thelink2012: and additionally Display when it makes sense
2015-05-20 23:09:15	-->	popow1 (Thunderbird@moz-03f.kd0.252.223.IP) has joined #rust
2015-05-20 23:09:21	<--	alanhoff (alanhoff@moz-r8s4se.server.torland.is) has quit (Quit: Leaving)
2015-05-20 23:09:35	--	zz_NameNotFound is now known as NameNotFound
2015-05-20 23:09:56	@huon	thelink2012: https://github.com/rust-lang/rfcs/blob/master/text/0565-show-string-guidelines.md
2015-05-20 23:10:09	-->	Ralith (ralith@moz-tiaj7p.customer.broadstripe.net) has joined #rust
2015-05-20 23:10:12	<--	Shackra (Jorge@moz-7bh.ng6.177.186.IP) has quit (Ping timeout: 121 seconds)
2015-05-20 23:10:24	<--	popow (Thunderbird@moz-03f.kd0.252.223.IP) has quit (Ping timeout: 121 seconds)
2015-05-20 23:10:48	-->	hjr3 (hradtke@moz-e235ok.fios.verizon.net) has joined #rust
2015-05-20 23:11:22	-->	new_one (new_one@moz-tgdal6.kbni.1u98.0009.2601.IP) has joined #rust
2015-05-20 23:11:59	-->	if_e1se (uid16886@moz-dcasj5.highgate.irccloud.com) has joined #rust
2015-05-20 23:13:14	<--	james4k__ (james@moz-1pbfu0.consolidated.net) has quit (Ping timeout: 121 seconds)
2015-05-20 23:13:25	-->	EspressoDan (EspressoDan@moz-gnsthu.dynamic.ashlandfiber.net) has joined #rust
2015-05-20 23:14:09	-->	Sawbones (Sawbones@moz-9qofb4.res.bhn.net) has joined #rust
2015-05-20 23:14:09	carllerche	Is there a stable way to exit w/ a specific exit code?
2015-05-20 23:14:22	@steveklabnik	std::process::exit?
2015-05-20 23:14:30	@steveklabnik	yeah
2015-05-20 23:14:32	@steveklabnik	http://doc.rust-lang.org/stable/std/process/fn.exit.html
2015-05-20 23:14:39	thelink2012	huon: Thanks got it
2015-05-20 23:14:52	<--	godlikesme (godlikesme@moz-2a2.dsd.174.79.IP) has quit (Ping timeout: 121 seconds)
2015-05-20 23:15:27	carllerche	cool, i was looking std::env thx
2015-05-20 23:15:44	-->	Shackra (Jorge@moz-7bh.ng6.177.186.IP) has joined #rust
2015-05-20 23:16:08	-->	adu (ajr@moz-0foa9t.md.comcast.net) has joined #rust
2015-05-20 23:17:39	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Connection closed)
2015-05-20 23:17:51	<--	idegen (greg@moz-9c4nle.or.frontiernet.net) has quit (Quit: Leaving.)
2015-05-20 23:17:58	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-20 23:18:23	_habnabit	was i imagining it or is there a circular buffer of bytes in the rust stdlib somewhere?
2015-05-20 23:18:41	_habnabit	there's VecDeque but that's not for bytes
2015-05-20 23:18:48	mindtree	hey all, is it possible to use macro rules to generate a list of Ids? I'd like to do something like `widget_ids{ A, B, C <- 4, D }` which would expand to `const A: WidgetId = 0; const B: WidgetId = 1; const C: WidgetId = 2; const D: WidgetId = 6;` at the module level
2015-05-20 23:19:03	--	NameNotFound is now known as zz_NameNotFound
2015-05-20 23:19:18	carllerche	_habnabit: there is a RingBuf in the bytes crate
2015-05-20 23:19:25	-->	SilverKey (SilverKey@moz-liif3j.res.rr.com) has joined #rust
2015-05-20 23:19:25	Mutabah	mindtree: ... maybe
2015-05-20 23:19:33	<--	SilverKey (SilverKey@moz-liif3j.res.rr.com) has quit (Quit: Cheerio!)
2015-05-20 23:19:35	carllerche	I don't remember if there was in std
2015-05-20 23:19:42	_habnabit	carllerche, oh, is that a separate dependency?
2015-05-20 23:19:43	carllerche	(also, i thought i was in #mio for a sec)
2015-05-20 23:19:49	talchas	mindtree: do you mean C = 4, D = 5 or something?
2015-05-20 23:19:58	-->	mdinger (mdinger@moz-j2k5ts.9bf5.ppaa.0306.2602.IP) has joined #rust
2015-05-20 23:20:13	mindtree	Mutabah: I tried doing it with a static mut COUNTER, but I kept running into recursive const definition errors :/
2015-05-20 23:20:14	carllerche	_habnabit: yeah, i maintain a crate: https://crates.io/crates/bytes
2015-05-20 23:20:15	talchas	and while the answer is probably yes, the code will be very ugly
2015-05-20 23:20:18	_habnabit	carllerche, ah, thanks
2015-05-20 23:20:21	carllerche	_habnabit: but it is mostly for use w/ mio right now
2015-05-20 23:20:33	Mutabah	mindtree: nah, use const evaluation
2015-05-20 23:20:40	Mutabah	mindtree: append +1 on each iteration
2015-05-20 23:20:50	talchas	ah, yeah, the +1 thing will make it much less horrible
2015-05-20 23:20:54	mindtree	Mutabah: but how do I do the iteration in macro_rules?
2015-05-20 23:21:01	Mutabah	mindtree: recursive macro
2015-05-20 23:21:09	<--	eric_lagergren (barsonme@moz-lr1hrn.wa.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-20 23:21:11	talchas	mindtree: so the standard trick with macro_rules is "handle the first item, recurse on the rest"
2015-05-20 23:21:12	mindtree	Mutabah: ahhh, ofc!
2015-05-20 23:21:19	genbattle	Just sending a message to the author of https://rustbyexample.org/ asking him to update or remove his content, spotted it in a google result list.
2015-05-20 23:21:21	Mutabah	Yep :)
2015-05-20 23:21:46	mindtree	Mutabah, talchas, you have opened my eyes, off to the recursive macro land I go
2015-05-20 23:21:52	 *	mindtree dissappears into the darkness
2015-05-20 23:21:54	talchas	if you want to see the most crazy and horrible things, you can look up scheme's syntax-rules which is very similar to macro_rules
2015-05-20 23:22:00	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Ping timeout: 121 seconds)
2015-05-20 23:22:04	Havvy	mindtree:  G'luck. I hate recursive macro land myself.
2015-05-20 23:22:54	_habnabit	carllerche, actually now i'm not sure if this is what i want or if i could just use an iterator instead....
2015-05-20 23:23:15	carllerche	_habnabit: yeah, i don't know your use case, when I first saw the question I thought I was in #mio :P
2015-05-20 23:23:22	_habnabit	basically i have a function that gives me 64 bytes at a time but sometimes i need >64 bytes, and i don't read all at once
2015-05-20 23:23:43	XMPPwocky	Recursive Macro Land is the worst theme park :(
2015-05-20 23:24:33	-->	leshow (leshow@moz-t8rd84.cpe.teksavvy.com) has joined #rust
2015-05-20 23:24:46	genbattle	is it possible to get the size of the statically sized array at runtime?
2015-05-20 23:25:00	-->	gattschardo (richard@moz-rdin3g.dyn.telefonica.de) has joined #rust
2015-05-20 23:25:03	genbattle	i.e. like C++'s std::array<>
2015-05-20 23:25:41	talchas	.len() still works I think
2015-05-20 23:26:14	bombela	rustbot: let a = [1,2,3]; a.len()
2015-05-20 23:26:22	bombela	dammit wrong one
2015-05-20 23:26:33	bombela	playbot-mini: let a = [1,2,3]; a.len()
2015-05-20 23:26:34	--	Notice(playbot-mini): <anon>:1:1: 1:4 error: expected item, found `let`
2015-05-20 23:26:34	--	Notice(playbot-mini): <anon>:1 let a = [1,2,3]; a.len()
2015-05-20 23:26:34	--	Notice(playbot-mini): output truncated; full output at: http://bit.ly/1cPjp16
2015-05-20 23:26:48	bombela	playbot-mini: [1,2,3].len()
2015-05-20 23:26:48	--	Notice(playbot-mini): <anon>:1:1: 1:2 error: expected item, found `[`
2015-05-20 23:26:48	--	Notice(playbot-mini): <anon>:1 [1,2,3].len()
2015-05-20 23:26:48	--	Notice(playbot-mini): output truncated; full output at: http://bit.ly/1HvJGz4
2015-05-20 23:26:49	leshow	playbot-mini: [1,2,3,4].len();
2015-05-20 23:26:49	--	Notice(playbot-mini): <anon>:1:1: 1:2 error: expected item, found `[`
2015-05-20 23:26:49	<--	belew.mozilla.org has kicked playbot-mini (Channel flood triggered (limit is 5 lines in 3 secs))
2015-05-20 23:26:49	-->	playbot-mini (playbot-min@moz-1vk5qd.compute.amazonaws.com) has joined #rust
2015-05-20 23:26:54	posborne_	So, I'm publishing a new crate which depends on others... What is the best practice for freezing dependencies?
2015-05-20 23:26:54	-->	godlikesme (godlikesme@moz-2a2.dsd.174.79.IP) has joined #rust
2015-05-20 23:26:55	Mutabah	wow
2015-05-20 23:26:58	XMPPwocky	nice
2015-05-20 23:27:05	posborne_	E.g. Do I freeze at the version I test with
2015-05-20 23:27:05	bombela	oops
2015-05-20 23:27:13	posborne_	Or do a >= or *?
2015-05-20 23:27:16	leshow	playbot-mini: let a = [1,2,3,4].len();
2015-05-20 23:27:17	--	Notice(playbot-mini): <anon>:1:1: 1:4 error: expected item, found `let`
2015-05-20 23:27:17	--	Notice(playbot-mini): <anon>:1 let a = [1,2,3,4].len();
2015-05-20 23:27:17	--	Notice(playbot-mini): output truncated; full output at: http://bit.ly/1HvJIa9
2015-05-20 23:27:22	XMPPwocky	iiuc, you can freeze at the major version
2015-05-20 23:27:27	bombela	playbot: [1,2,3].len()
2015-05-20 23:27:29	--	Notice(playbot): 3
2015-05-20 23:27:30	XMPPwocky	crates.io follows semver
2015-05-20 23:27:35	bombela	:p
2015-05-20 23:27:40	leshow	i did that!
2015-05-20 23:27:45	bombela	on mini!
2015-05-20 23:27:54	leshow	what's the difference between mini and the other one
2015-05-20 23:27:59	<--	gattscha1do (richard@moz-9pa83m.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2015-05-20 23:28:03	bombela	I wonder... one works the other not?
2015-05-20 23:28:04	XMPPwocky	mini doesn't have a giant wrapper around the actual code
2015-05-20 23:28:05	bombela	lol
2015-05-20 23:28:15	leshow	wrapper?
2015-05-20 23:28:19	posborne_	XMPPwock, right, so 0.x.* if I just want 0.x
2015-05-20 23:28:30	bombela	I guess the non-mini wraps the expressions and print them nicely
2015-05-20 23:28:32	XMPPwocky	leshow: playbot wraps it in fn main() and some stuff to print it out
2015-05-20 23:28:33	bombela	as we saw
2015-05-20 23:28:35	posborne_	XMPPwock, for nix I need 0.3.6+
2015-05-20 23:28:37	leshow	playbot: let a = [1,2,3,4,5].len(); 
2015-05-20 23:28:39	--	Notice(playbot): ()
2015-05-20 23:28:40	XMPPwocky	leshow: because -mini doesn't
2015-05-20 23:28:42	leshow	playbot: let a = [1,2,3,4,5].len()
2015-05-20 23:28:43	--	Notice(playbot): <anon>:10:5: 10:6 error: expected one of `.`, `;`, or an operator, found `}`
2015-05-20 23:28:43	--	Notice(playbot): <anon>:10     });
2015-05-20 23:28:43	--	Notice(playbot): output truncated; full output at: http://bit.ly/1cPjuC0
2015-05-20 23:28:55	XMPPwocky	leshow: you can't just put an expr in
2015-05-20 23:29:00	leshow	playbot: let a = [1,2,3,4,5].len(); println!("{}",a);
2015-05-20 23:29:01	--	Notice(playbot): 5
2015-05-20 23:29:02	--	Notice(playbot): ()
2015-05-20 23:29:07	bombela	playbot-mini: let a = [1,2,3]; a.len()
2015-05-20 23:29:07	--	Notice(playbot-mini): <anon>:1:1: 1:4 error: expected item, found `let`
2015-05-20 23:29:08	--	Notice(playbot-mini): <anon>:1 let a = [1,2,3]; a.len()
2015-05-20 23:29:08	--	Notice(playbot-mini): output truncated; full output at: http://bit.ly/1cPjp16
2015-05-20 23:29:13	XMPPwocky	playbot-mini: fn main() { println!("hi"); }
2015-05-20 23:29:14	--	Notice(playbot-mini): hi
2015-05-20 23:29:16	bombela	playbot: let a = [1,2,3]; a.len()
2015-05-20 23:29:18	--	Notice(playbot): 3
2015-05-20 23:29:23	-->	zhoeon (fc@moz-cuhqb2.cable.teksavvy.com) has joined #rust
2015-05-20 23:29:25	leshow	playbot-mini: let a = [1,2,3,4,5].len(); println!("{}",a);
2015-05-20 23:29:25	--	Notice(playbot-mini): <anon>:1:1: 1:4 error: expected item, found `let`
2015-05-20 23:29:26	--	Notice(playbot-mini): <anon>:1 let a = [1,2,3,4,5].len(); println!("{}",a);
2015-05-20 23:29:26	--	Notice(playbot-mini): output truncated; full output at: http://bit.ly/1cPjyla
2015-05-20 23:29:34	leshow	playbot worked, mini didn't lol
2015-05-20 23:29:50	--	irc: disconnected from server
2015-05-20 23:30:07	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-20 23:30:07	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-20 23:30:07	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-20 23:30:07	--	Channel #rust: 948 nicks (13 ops, 0 halfops, 2 voices, 933 normals)
2015-05-20 23:30:09	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-20 23:30:09	XMPPwocky	look at what regular playbot actually puts in the playpen
2015-05-20 23:30:12	XMPPwocky	it's this giant wrapper
2015-05-20 23:30:17	leshow	fn main() { let a = [1,2,3,4].len(); println!("{}",a); }
2015-05-20 23:30:20	<--	logan_e (logan_e@moz-ltn.qg3.218.73.IP) has quit (Ping timeout: 121 seconds)
2015-05-20 23:30:21	XMPPwocky	playbot: don't compile this
2015-05-20 23:30:21	--	Notice(playbot): <anon>:9:12: 9:14 error: expected one of `!`, `.`, `::`, `;`, `{`, `}`, or an operator, found `'t`
2015-05-20 23:30:22	--	Notice(playbot): <anon>:9         don't compile this
2015-05-20 23:30:22	--	Notice(playbot): output truncated; full output at: http://bit.ly/1HvJShB
2015-05-20 23:30:26	XMPPwocky	see that bit.ly
2015-05-20 23:30:29	leshow	playbot-mini: fn main() { let a = [1,2,3,4].len(); println!("{}",a); }
2015-05-20 23:30:30	--	Notice(playbot-mini): 4
2015-05-20 23:30:34	leshow	there we go
2015-05-20 23:31:06	thelink2012	where can I find all the cfg things? i.e. is cfg(debug) a thing?
2015-05-20 23:31:07	bombela	huhu
2015-05-20 23:31:07	-->	mnemnion (mnemnion@moz-5g3dul.0r24.tle7.0009.2601.IP) has joined #rust
2015-05-20 23:31:15	geofft	I love how playbot the IRC client uses bit.ly, and playbot the website uses is.gd 
2015-05-20 23:31:16	leshow	anybody have a good blog post or article on rust's expression system
2015-05-20 23:31:31	bombela	playbot: "I love you rust <3"
2015-05-20 23:31:32	--	Notice(playbot): "I love you rust <3"
2015-05-20 23:31:34	zhoeon	if I was to design a very network based graphical application, is Rust in its current state very approacheable to manage the networking in a concurrent way? My goal shares features with a multiplayer video game but it is not.
2015-05-20 23:31:37	leshow	i don't have a ruby background so eveyrthing is in expression thing is new to me
2015-05-20 23:31:53	bombela	playbot: "bombela: you dat sexy dude"
2015-05-20 23:31:54	--	Notice(playbot): "bombela: you dat sexy dude"
2015-05-20 23:32:03	bombela	playbot: rhoo stop it you :$
2015-05-20 23:32:04	--	Notice(playbot): <anon>:9:14: 9:18 error: expected one of `!`, `.`, `::`, `;`, `{`, `}`, or an operator, found `stop`
2015-05-20 23:32:04	--	Notice(playbot): <anon>:9         rhoo stop it you :$
2015-05-20 23:32:04	--	Notice(playbot): output truncated; full output at: http://bit.ly/1cPjGB1
2015-05-20 23:32:29	XMPPwocky	zhoeon: i'd say so, not knowing what exactly you're doing
2015-05-20 23:32:33	XMPPwocky	3d graphics libraries are pretty great
2015-05-20 23:32:39	XMPPwocky	networking libraries are probably great, i haven't used any
2015-05-20 23:32:58	<--	dassio (mac@moz-rrv.37l.160.167.IP) has quit (Ping timeout: 121 seconds)
2015-05-20 23:33:34	-->	dassio (mac@moz-udf.37l.160.167.IP) has joined #rust
2015-05-20 23:33:48	bombela	playbot: struct S(i32); let a = S(42); a.0
2015-05-20 23:33:49	--	Notice(playbot): 42
2015-05-20 23:34:28	zhoeon	So far the graphical aspect is very nice with Rust. I have limited networking experience as well this will be a learning experience but I would rather not get a roadblock on functionality. I don't think it would be the case but anyways.
2015-05-20 23:34:48	bombela	having .0 on tuple struct is kinda cool, but isn't also defeating the purpose of using struct(i32) to wrap a type with a different semantic? 
2015-05-20 23:35:11	Mutabah	bombela: You need to access the internals somehpw
2015-05-20 23:35:22	geofft	bombela: I believe it's not public, so another module can't do that 
2015-05-20 23:35:31	bombela	oh, if its not public...
2015-05-20 23:35:37	bombela	that changes everything
2015-05-20 23:35:45	<--	dmac (dmac@moz-4kcd1c.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-20 23:35:46	XMPPwocky	it's not public by default
2015-05-20 23:35:47	-->	logan_e (logan_e@moz-ltn.qg3.218.73.IP) has joined #rust
2015-05-20 23:36:23	bombela	because having .0 is indeed very conveniant, you don't need to mess with crazy match/let destructuring to manipulate the content (having some destructuring borrowing for too long etc)
2015-05-20 23:36:38	--	irc: disconnected from server
2015-05-20 23:41:33	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-20 23:41:33	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-20 23:41:33	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-20 23:41:33	--	Channel #rust: 949 nicks (13 ops, 0 halfops, 2 voices, 934 normals)
2015-05-20 23:41:35	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-20 23:41:44	geofft	genbattle: I think you can tell Jekyll to do a redirect 
2015-05-20 23:41:55	geofft	if they're open to a PR to do a redirect, we could try to figure that one out 
2015-05-20 23:42:03	drasa	I wonder would it be too hard to get a Lower + UpperHex formatters for &[u8] in stdlib, that would be useful in many situations where the current [124, 45, 54, 9, 233] style format is just inadequate
2015-05-20 23:42:07	genbattle	niconii, I asked him to update/take down his content, or at least show a notice saying it's out of date
2015-05-20 23:42:12	geofft	(alternatively, if the problem is hosting / GitHub, I can host a redirect on a reliable server) 
2015-05-20 23:42:18	genbattle	the notice could probably be put in pretty easily with the PR
2015-05-20 23:42:31	drasa	I wonder if that'd require a RFC
2015-05-20 23:42:43	<--	Sawbones (Sawbones@moz-9qofb4.res.bhn.net) has quit (Connection closed)
2015-05-20 23:43:00	@niconii	genbattle: hmm, well, if they accept that at least, it's fine
2015-05-20 23:44:12	@niconii	well, to an extent, it wouldn't be ideal if it was only on the front page
2015-05-20 23:44:21	<--	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-20 23:44:31	<--	scott (uid25790@moz-e5ok1n.brockwell.irccloud.com) has quit (Quit: Connection closed for inactivity)
2015-05-20 23:44:34	@niconii	since most people are probably gonna find it by searching "rust arrays" or similar
2015-05-20 23:44:46	@niconii	so they might not even see the front page
2015-05-20 23:44:56	thelink2012	is there a cfg(debug) attribute? I just tried debug itself and it doesn't seem to be it
2015-05-20 23:45:06	-->	hroi (hroi@moz-d273ub.static.netgroup.dk) has joined #rust
2015-05-20 23:45:26	&mbrubeck	thelink2012: There's cfg(debug_asserts) which is enabled in debug builds.
2015-05-20 23:45:28	@niconii	a redirect would be best if they'll accept that
2015-05-20 23:45:51	geofft	genbattle: also... rustbyexample.com is open source, do they want a big PR to just sync .org with with .com's HEAD? 
2015-05-20 23:45:51	<--	godlikesme (godlikesme@moz-2a2.dsd.174.79.IP) has quit (Ping timeout: 121 seconds)
2015-05-20 23:46:00	&mbrubeck	thelink2012: Sorry, I mean cfg(debug_assertions)
2015-05-20 23:46:29	&mbrubeck	The amount of code that needs updating on rustbyexample.org seems reasonably small.  I bet we could just get it all up to 1.0
2015-05-20 23:46:35	&mbrubeck	Rip out some stuff about "unique pointers"
2015-05-20 23:46:47	<--	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-20 23:46:53	@niconii	hmm, true, i guess it wouldn't be too difficult to get it up to date
2015-05-20 23:47:02	geofft	wait, do I have com/org backwards? 
2015-05-20 23:47:05	@niconii	however, having two resources both called "rust by example" would be confusing
2015-05-20 23:47:20	@niconii	geofft: nah, i think you've got them right
2015-05-20 23:47:22	@niconii	geofft: 
2015-05-20 23:47:36	&mbrubeck	s/would be/is :)
2015-05-20 23:47:37	@niconii	geofft: .com is maintained by the rust community, .org is the outdated one
2015-05-20 23:47:48	@niconii	mbrubeck: haha, right
2015-05-20 23:47:53	bombela	playbot: let mut s = String::new(); File::open("/etc/passwd").unwrap().read_to_string(&mut s); s
2015-05-20 23:47:54	--	Notice(playbot): <anon>:9:36: 9:46 error: failed to resolve. Use of undeclared type or module `File`
2015-05-20 23:47:54	--	Notice(playbot): <anon>:9         let mut s = String::new(); File::open("/etc/passwd").unwrap().read_to_string(&mut s); s
2015-05-20 23:47:54	--	Notice(playbot): output truncated; full output at: http://bit.ly/1HvKTGq
2015-05-20 23:48:03	_habnabit	if i wanted to have the equivalent of `unsigned char nulls[64] = {0};` for calling a C function with 64 null bytes, would the best way to do that be `let nulls: [u8; 64] = mem::zeroed();` ?
2015-05-20 23:48:22	bombela	playbot: use std::io::prelude::*; use std::fs::File; let mut s = String::new(); File::open("/etc/passwd").unwrap().read_to_string(&mut s); s
2015-05-20 23:48:25	--	Notice(playbot): output truncated; full output at: http://bit.ly/1cPkK81
2015-05-20 23:48:45	&mbrubeck	_habnabit: let nulls = [0u8; 64];
2015-05-20 23:48:53	_habnabit	mbrubeck, oh, neat
2015-05-20 23:48:56	Hyeon	Folks
2015-05-20 23:49:04	Hyeon	How do I share a semaphore in multiple threads?
2015-05-20 23:49:13	<--	hroi (hroi@moz-d273ub.static.netgroup.dk) has quit (Ping timeout: 121 seconds)
2015-05-20 23:49:14	Hyeon	http://is.gd/BG141G I want to do something like this
2015-05-20 23:49:19	bombela	playbot: use std::fs::File; let mut s = String::new(); File::open("/etc/passwd").unwrap().read_to_string(&mut s); s
2015-05-20 23:49:21	--	Notice(playbot): output truncated; full output at: http://bit.ly/1cPkR3B
2015-05-20 23:49:25	Hyeon	Should I depend on RefCell?
2015-05-20 23:50:33	--	irc: disconnected from server
2015-05-20 23:50:45	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-20 23:50:45	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-20 23:50:45	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-20 23:50:45	--	Channel #rust: 945 nicks (13 ops, 0 halfops, 2 voices, 930 normals)
2015-05-20 23:50:47	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-20 23:51:03	aatch	AAAAAAHHHHH!!!!
2015-05-20 23:51:10	 *	aatch beats head against desk.
2015-05-20 23:51:56	aatch	I have spent two days wondering why this test was failing, only to discover that it's because the test itself is wrong!
2015-05-20 23:52:08	_habnabit	ouch
2015-05-20 23:52:13	-->	c74d3 (c74d3a4ebb6@moz-iklbs1.mggc.hibn.4404.2002.IP) has joined #rust
2015-05-20 23:52:21	SiegeLord	Sounds like you need to write tests for your tests
2015-05-20 23:52:29	geofft	sup dawg, I heard you like tests, so we wrote tests for your tests, so you can continuously integrate your continuous integration 
2015-05-20 23:52:44	<--	c74d (c74d3a4ebb6@moz-0ersgu.oc.cox.net) has quit (Ping timeout: 121 seconds)
2015-05-20 23:53:03	aatch	This is the problem with working with numbers big enough that 19 decimal digits is small.
2015-05-20 23:53:24	&mbrubeck	Hyeon: The book has a simple example using Arc and Mutex: http://doc.rust-lang.org/book/dining-philosophers.html
2015-05-20 23:53:26	SiegeLord	That's why TDD is BS. The way I write tests is by writing correct code, screwing around with the test until it passes and then making sure there are no regressions :P
2015-05-20 23:54:45	--	irc: disconnected from server
2015-05-20 23:54:57	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-20 23:54:57	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-20 23:54:57	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-20 23:54:57	--	Channel #rust: 947 nicks (13 ops, 0 halfops, 2 voices, 932 normals)
2015-05-20 23:54:59	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-20 23:55:12	&mbrubeck	Hyeon: I think the same should work for a Semaphore, though I haven't really used Semaphore.
2015-05-20 23:55:22	-->	soma (Mibbit@moz-ef5.7ab.191.107.IP) has joined #rust
2015-05-20 23:55:22	kenpratt	Could anyone point me in the right direction on how to use a DST inside an enum field? Simplified gist that doesn’t compile: https://gist.github.com/kenpratt/60e05b0e9ec3e4f7a5f1
2015-05-20 23:56:10	bombela	tests only proves that stuff works as intended in the scope of the tests... tests don't prevent bugs really.
2015-05-20 23:56:35	kenpratt	I currently have some code that I’m using enums & match for, but it would be much cleaner if I could separate things out into Structs as above, with a Trait to provide the common interface, but I can’t get it working with DSTs.
2015-05-20 23:56:35	&mbrubeck	kenpratt: You can do Shape(Box<Polygon>) instead of Shape(Polygon)
2015-05-20 23:56:56	&mbrubeck	kenpratt: Or you could make Polygon an enum rather than a trait
2015-05-20 23:57:07	&mbrubeck	(which makes it no longer a DST)
2015-05-20 23:57:17	kenpratt	mbrubeck: I tried Box, ran into trouble, I’ll see if I can repro in an example. And yes, I’m triyng to refactor *away* from an Enum :)
2015-05-20 23:57:21	aatch	bombela, these are making sure the code is actually correct. I.E. that I get the right answer out the end.
2015-05-20 23:57:36	bombela	aatch: 100% agree
2015-05-20 23:57:49	aatch	bombela, I tend to rely on regression tests for preventing bugs.
2015-05-20 23:57:50	<--	logan_e (logan_e@moz-ltn.qg3.218.73.IP) has quit (Ping timeout: 121 seconds)
2015-05-20 23:57:52	Hyeon	mbrubeck: Thanks
2015-05-20 23:58:04	Hyeon	I realized Arc as soon as I asked
2015-05-20 23:58:07	aatch	bombela, and testing known edge cases ahead-of-time
2015-05-20 23:58:11	<--	ygrek (user@moz-8j9aeu.org.ua) has quit (Ping timeout: 121 seconds)
2015-05-20 23:58:43	<--	c74d3 (c74d3a4ebb6@moz-iklbs1.mggc.hibn.4404.2002.IP) has quit (Ping timeout: 121 seconds)
2015-05-20 23:58:44	thelink2012	I understand it's better to pass &str instead of String but what about a situation where the String is passed by value to be consumed by the function? e.g. a new(name: String) or new(name: &str) to build a Object { item: String } ?
2015-05-20 23:58:49	bombela	aatch: I am all with you. I was just confirming that tests are the magic bullets to remove bugs :)
2015-05-20 23:58:54	bombela	*are NOT
2015-05-20 23:58:55	soma	Hello! Why do we need to put an '&' in front of range syntax( &vec[..] ) to get a slice? 
2015-05-20 23:59:06	<--	hjr3 (hradtke@moz-e235ok.fios.verizon.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2015-05-20 23:59:15	-->	demilux (demilux@moz-73qa6c.wa.comcast.net) has joined #rust
2015-05-20 23:59:34	soma	Is there any situation we would use only vec[..]?
2015-05-20 23:59:41	<--	}ls{ (uhelp@moz-ogmtg3.dip0.t-ipconnect.de) has quit (Quit: User terminated by real life interrupt)
2015-05-20 23:59:55	aatch	bombela, if there was a magic bullet to remove bugs, we'd be out of jobs :D
2015-05-21 00:00:57	--	irc: disconnected from server
2015-05-21 00:01:09	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-21 00:01:09	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-21 00:01:09	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-21 00:01:09	--	Channel #rust: 946 nicks (13 ops, 0 halfops, 2 voices, 931 normals)
2015-05-21 00:01:11	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-21 00:01:48	geofft	foo[..] gets you an unsized array, I guess? 
2015-05-21 00:01:58	bombela	also, we can somewhat understands vec[..] as: the full slice of the vec, which you cannot take by value since its size is not known at compile time (DST)
2015-05-21 00:02:09	<--	popow1 (Thunderbird@moz-03f.kd0.252.223.IP) has quit (Ping timeout: 121 seconds)
2015-05-21 00:02:13	-->	popow (Thunderbird@moz-03f.kd0.252.223.IP) has joined #rust
2015-05-21 00:02:25	aatch	soma, meaning that the return value is dereferenced. Since you can't dereference a &[T], you have to add the `&` to "counter" the dereference.
2015-05-21 00:02:28	bombela	while &vec[..] says you want a well.. shit a slice. I dont think I used the proper definition.
2015-05-21 00:02:33	geofft	(it seems like it's valid syntax, but it gets me a DST complaint, and I'm not sure how to do anything with it without an &) 
2015-05-21 00:02:55	Diggsey	is there anything unsafe about a hypothetical type `Cell<Rc<T>>`? It seem like it would be a useful construct for storing a reference to an immutable data structure.
2015-05-21 00:03:17	<--	demilux (demilux@moz-73qa6c.wa.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-21 00:03:39	aatch	Diggsey, well Rc<T> isn't Copy, so you can't *have* Cell<Rc<T>>
2015-05-21 00:03:55	Diggsey	well I know, but you could implement equivalent behaviour as CellRc<T>
2015-05-21 00:04:05	<--	kenpratt (kenpratt@moz-7k4bv9.res.rr.com) has quit (Connection closed)
2015-05-21 00:04:10	<--	d356 (d@moz-go99rq.res.bhn.net) has quit (Client exited)
2015-05-21 00:04:14	-->	d356 (d@moz-go99rq.res.bhn.net) has joined #rust
2015-05-21 00:04:20	reem	Diggsey: you might be looking for http://doc.rust-lang.org/stable/alloc/rc/struct.Rc.html#method.make_unique
2015-05-21 00:04:27	bombela	rust feels like the right tool for the job. like when you use a serrated knife to cut ripe tomatoes. this feels right.
2015-05-21 00:04:28	<--	hroi (hroi@moz-d273ub.static.netgroup.dk) has quit (Ping timeout: 121 seconds)
2015-05-21 00:04:28	<--	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-21 00:04:50	Diggsey	reem: The point was to allow internal mutability without requiring dynamically checking the borrow state
2015-05-21 00:04:53	bombela	(yes, I am slicing ripe tomatoes as we speak)
2015-05-21 00:05:08	<--	tschottdorf (tobias@moz-d021av.aipg.hajb.2000.2604.IP) has quit (Ping timeout: 121 seconds)
2015-05-21 00:05:11	<--	colinsurprenant (colin@moz-q9ee1n.74.electronicbox.net) has quit (Client exited)
2015-05-21 00:05:16	Hyeon	Is there any good way to force send unsafe object between threads?
2015-05-21 00:05:17	geofft	&tomato[..] 
2015-05-21 00:05:22	bombela	xD
2015-05-21 00:05:46	-->	kenpratt (kenpratt@moz-7k4bv9.res.rr.com) has joined #rust
2015-05-21 00:05:53	-->	logan_e (logan_e@moz-ltn.qg3.218.73.IP) has joined #rust
2015-05-21 00:06:10	Diggsey	reem: With a CellRc<T> you can mutate it by assigning a new Rc<T>, or access it by getting an Rc<T> to the current value, but never borrow it
2015-05-21 00:06:17	Hyeon	Nevermind, I used static
2015-05-21 00:06:18	bombela	also i am kinda takin a &mut tomato[..] by some weird unsafe {} ownership. they slicing is definitively not reversible in my case
2015-05-21 00:06:27	bombela	*the slicing
2015-05-21 00:06:46	-->	dmac (dmac@moz-2ig65r.ca.comcast.net) has joined #rust
2015-05-21 00:06:56	<--	adu (ajr@moz-0foa9t.md.comcast.net) has quit (Client exited)
2015-05-21 00:06:59	kenpratt	mbrubeck: here’s an example with Box that’s a bit closer to what i’m doing https://gist.github.com/kenpratt/2c784fce0bff59e9369c (it’s pretty contrived with pointers to the numbers, but in my code there’s a bunch more going on, with heavier objects).
2015-05-21 00:11:03	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-21 00:11:03	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-21 00:11:03	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-21 00:11:03	--	Channel #rust: 942 nicks (13 ops, 0 halfops, 2 voices, 927 normals)
2015-05-21 00:11:05	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-21 00:11:07	<--	zhoeon (fc@moz-cuhqb2.cable.teksavvy.com) has quit (Ping timeout: 121 seconds)
2015-05-21 00:11:12	-->	doomrobo (NotShirley@moz-96stu2.261j.6edk.2000.2604.IP) has joined #rust
2015-05-21 00:11:35	Mutabah	soma: And that value is passed as the index
2015-05-21 00:11:37	-->	demilux (demilux@moz-73qa6c.wa.comcast.net) has joined #rust
2015-05-21 00:11:50	&mbrubeck	kenpratt: The reason that's needed is something I haven't fully read up on... I believe it hasn't been added to the main documentation, but is specified at https://github.com/rust-lang/rfcs/blob/master/text/0192-bounds-on-object-and-generic-types.md#default-trait-bounds
2015-05-21 00:12:51	-->	zhoeon (fc@moz-cuhqb2.cable.teksavvy.com) has joined #rust
2015-05-21 00:12:52	kenpratt	mbrubeck: wow, thanks. i would never have found that :)
2015-05-21 00:13:12	-->	cstrahan (sid36118@moz-ed0n9r.highgate.irccloud.com) has joined #rust
2015-05-21 17:24:32	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-21 17:24:32	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-21 17:24:32	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-21 17:24:32	--	Channel #rust: 990 nicks (16 ops, 0 halfops, 2 voices, 972 normals)
2015-05-21 17:24:34	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-21 17:24:46	jshs	desophos: oh, could you try `rand_choices<'a, F: ?Sized, T: 'a>` ?
2015-05-21 17:24:46	&mbrubeck	rillian: Alternately, you can start a path with `self::` or `super::` to use a path relative from the current mod or its parent.
2015-05-21 17:24:56	&mbrubeck	so you can say `use self::new::ReadWriteExt;`
2015-05-21 17:25:01	rillian	so if foo.rs has 'mod byteorder' and byteorder/mod.rs has 'mod new', why can't it resolve byteorder/new.rs?
2015-05-21 17:25:10	<--	peter (peter@moz-e11i63.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2015-05-21 17:25:39	@niconii	rillian: is it possible you could show us byteorder/mod.rs and the full error messages you're getting
2015-05-21 17:25:47	-->	gattschardo (richard@moz-a0ascq.dyn.telefonica.de) has joined #rust
2015-05-21 17:26:03	desophos	jshs: that worked! why did that work?
2015-05-21 17:26:21	jshs	desophos: type parameters have a Sized bound by default
2015-05-21 17:26:27	-->	dassio (mac@moz-f5s.cn2.191.60.IP) has joined #rust
2015-05-21 17:26:44	<--	Simplebrain (Simplebrain@moz-6h4u6b.skybroadband.com) has quit (Quit: Leaving)
2015-05-21 17:26:55	<--	fredy (fredy@moz-s6pco4.okeanos.grnet.gr) has quit (Connection closed)
2015-05-21 17:26:57	jshs	desophos: since you're using F only through Boxes, you can allow unsized types
2015-05-21 17:27:00	&mbrubeck	rillian: If you write `mod new;` in byteorder/mod.rs, then it *will* look in byteorder/new.rs for the module contents.  The file location was *not* the cause of the "unresolved import" error that you pasted.
2015-05-21 17:27:03	rillian	niconii: yes. let me package it
2015-05-21 17:27:13	jshs	which is what `F: ?Sized` does
2015-05-21 17:27:21	rillian	mbrubeck: ok, so the _line_ number is wrong
2015-05-21 17:27:21	-->	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has joined #rust
2015-05-21 17:27:40	desophos	jshs: ah, ok. so Box can be unsized for some reason? i'm just glad it was a type declaration error and not a design error :)
2015-05-21 17:27:54	zofrex	I'm confused. /can/ I destructure a Vec in a match?
2015-05-21 17:27:57	<--	bvssvni2 (Mibbit@moz-qqolj8.bb.online.no) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-21 17:28:06	talchas	desophos: a Box is never unsized, but it can contain an unsized type
2015-05-21 17:28:14	rillian	mbrubeck: and while mod is relative, use is not, so 'use new' is different depending on where in the module tree it's included.
2015-05-21 17:28:16	&mbrubeck	rillian: Could be.  "unresolved import" should be pointing to a `use` item.
2015-05-21 17:28:19	desophos	talchas: okay, great. that makes sense now
2015-05-21 17:28:20	@niconii	zofrex: i don't think so??
2015-05-21 17:28:27	zofrex	oh. I found some old RFCs that said I could :(
2015-05-21 17:28:40	-->	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has joined #rust
2015-05-21 17:28:44	rillian	mbrubeck: aha, you're right. I confused the line numbers in the two cases
2015-05-21 17:28:48	@niconii	zofrex: unless the RFCs were actually accepted, those are just suggestions for features to add
2015-05-21 17:28:50	zofrex	ohhhh I have to turn it into a slice first. reading fail.
2015-05-21 17:28:55	&mbrubeck	rillian: Well, you can write `use byteorder::new;` anywhere in the module tree.
2015-05-21 17:28:57	zofrex	they were accepted, I just can't read :)
2015-05-21 17:29:01	@niconii	zofrex: ah, i see
2015-05-21 17:29:09	rillian	mbrubeck: so use statements should always been absolute, and using a local use is sloppy?
2015-05-21 17:29:09	desophos	talchas: because the genes field needs to be Sized, right? and Box is always Sized but it can contain an unsized type, so it doesn't matter what's in the box
2015-05-21 17:29:20	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-21 17:29:47	rillian	mbrubeck: this works fine with the original crate. This is all me trying to hack the gecko build to let me use less mangled source
2015-05-21 17:29:48	&mbrubeck	rillian: You can use either form, `use byteorder::new::Foo` with an absolute path, or `use self::new::Foo` for a relative path.  Neither is "sloppy".  But for relative paths, you need to start with "self" or "super"
2015-05-21 17:29:50	-->	cursivecode (textual@moz-4u56i9.res.bhn.net) has joined #rust
2015-05-21 17:30:18	-->	ShamHolyShit (Mibbit@moz-jq68pr.dyn.centurytel.net) has joined #rust
2015-05-21 17:30:22	<--	ainieco (ainieco@moz-8fc.ksd.162.188.IP) has quit (Quit: leaving)
2015-05-21 17:30:42	<--	Matthias247 (Miranda@moz-49li60.hsi14.kabel-badenwuerttemberg.de) has quit (Client exited)
2015-05-21 17:30:42	ShamHolyShit	Guys, I bought dayz, i played it. it sucks dick. is rust any better?
2015-05-21 17:31:00	&mbrubeck	ShamHolyShit: This is about the Rust programming language, not the game.
2015-05-21 17:31:01	reem	ShamHolyShit: this channel is for rust the programming language, not rust the game
2015-05-21 17:31:06	&mbrubeck	jinx
2015-05-21 17:31:09	reem	hehe
2015-05-21 17:31:23	jshs	desophos: the thing which is unsized is `Fn() -> &'a [Gene]` (the type, not the trait) behind the Box returned by all_genes
2015-05-21 17:31:25	ShamHolyShit	I have doubts of this
2015-05-21 17:31:37	<--	killercup (killercup@moz-qj5qhi.dip0.t-ipconnect.de) has quit (Quit: Bye)
2015-05-21 17:31:38	ShamHolyShit	Oh
2015-05-21 17:31:41	ShamHolyShit	you arent lying
2015-05-21 17:31:43	ShamHolyShit	Shit
2015-05-21 17:31:44	<--	ziocroc (ziocroc@moz-bfu.33o.74.151.IP) has quit (Client exited)
2015-05-21 17:31:45	reem	ShamHolyShit: believe it: http://www.rust-lang.org/ :P
2015-05-21 17:31:50	desophos	jshs: right, and since it's in a Box it doesn't matter whether the type itself is sized
2015-05-21 17:32:00	jshs	right
2015-05-21 17:32:04	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-21 17:32:33	<--	debuuu (debu@moz-8vj212.adsl.alicedsl.de) has quit (Ping timeout: 121 seconds)
2015-05-21 17:32:36	<--	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-21 17:32:42	ShamHolyShit	oh well
2015-05-21 17:32:45	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-21 17:32:50	ShamHolyShit	im curious now, what is the primary purpose of the rust language
2015-05-21 17:32:53	ShamHolyShit	what does it excel in
2015-05-21 17:32:59	ShamHolyShit	where other coding languages do not
2015-05-21 17:33:04	-->	cworth` (cworth@moz-232is7.cworth.org) has joined #rust
2015-05-21 17:33:30	reem	ShamHolyShit: in (very) short: speed of C but safe (no segfaults) with a Haskell-ish type system
2015-05-21 17:33:37	&mbrubeck	ShamHolyShit: Writing low-level and fast code without buffer overflows or certain other common causes of crashes/security holes.
2015-05-21 17:33:41	<--	cworth (cworth@moz-4rq.crj.56.172.IP) has left #rust ("Leaving")
2015-05-21 17:33:57	-->	aepsil0n (eduard@moz-6491ha.mv2h.pepi.8071.2a02.IP) has joined #rust
2015-05-21 17:34:08	ShamHolyShit	so its good for beginners and of a decent enough quality
2015-05-21 17:34:08	<--	demilux (demilux@moz-fk1.kt4.14.64.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-21 17:34:12	--	cworth` is now known as cworth
2015-05-21 17:34:15	ShamHolyShit	kinda like python
2015-05-21 17:34:19	ShamHolyShit	cool
2015-05-21 17:34:24	&mbrubeck	It's a brand new language, so it's not as mature as one that's been around a long time
2015-05-21 17:34:27	thelink2012	is there some way to do something like this: let v = ntimes(n).eval(|| io.receive()).collect::<Vec<u32>>() ?
2015-05-21 17:34:29	desophos	it's, uh... really not like python
2015-05-21 17:34:35	&mbrubeck	But it's a good way to get into systems programming, I'd say.
2015-05-21 17:34:38	-->	jimblandy (user@moz-c3a.i8g.126.207.IP) has joined #rust
2015-05-21 17:34:41	<--	dpc__ (dpc@moz-t6gr4b.ca.comcast.net) has quit (Connection closed)
2015-05-21 17:34:47	-->	dpc__ (dpc@moz-t6gr4b.ca.comcast.net) has joined #rust
2015-05-21 17:34:50	XMPPwocky	thelink2012: .map ?
2015-05-21 17:35:03	-->	kngl (Adium@moz-rmgnkh.dynamic.voo.be) has joined #rust
2015-05-21 17:35:19	jshs	batteries (mostly) excluded
2015-05-21 17:35:19	reem	thelink2012: (0..n).map(|_| io.receive()).collect()
2015-05-21 17:35:21	XMPPwocky	http://doc.rust-lang.org/std/iter/trait.Iterator.html#method.map
2015-05-21 17:35:24	<--	Douman (Douman@moz-rj21b8.dynamic.mts-nn.ru) has quit (Quit: )
2015-05-21 17:35:35	<--	ShamHolyShit (Mibbit@moz-jq68pr.dyn.centurytel.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-21 17:35:58	thelink2012	Yes thanks my doubt was indeed where to begin my iteration, was trying to create a std::iter::Take manually and everything :P
2015-05-21 17:36:04	<--	jimb (user@moz-09a.i8g.126.207.IP) has quit (Ping timeout: 121 seconds)
2015-05-21 17:36:04	drasa	Now that I have built rustc...
2015-05-21 17:36:10	drasa	which one is the final binary?
2015-05-21 17:36:36	drasa	there seems to be multiple "stages"
2015-05-21 17:36:41	<--	zcourts (zcourts@moz-7ms809.cable.virginm.net) has quit (Client exited)
2015-05-21 17:36:53	@niconii	there's multiple stages because rustc is written in rust
2015-05-21 17:36:57	<--	dassio (mac@moz-f5s.cn2.191.60.IP) has quit (Ping timeout: 121 seconds)
2015-05-21 17:37:12	drasa	Is the end result stage2/rustc?
2015-05-21 17:37:14	<--	nicoch (nicoch@moz-g02d7k.be) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-21 17:37:33	rillian	niconii: https://github.com/rillian/byteorder-test if what I'm trying to get working
2015-05-21 17:37:35	-->	SpaceManiac (Tad@moz-g50q8a.dyn.suddenlink.net) has joined #rust
2015-05-21 17:37:36	rillian	bbiaw
2015-05-21 17:37:41	@niconii	drasa: i think so
2015-05-21 17:37:51	-->	wolfviking0_ (wolfviking0@moz-8hd.3b6.246.162.IP) has joined #rust
2015-05-21 17:38:10	-->	demilux_ (demilux@moz-fk1.kt4.14.64.IP) has joined #rust
2015-05-21 17:38:13	-->	dassio (mac@moz-f5s.cn2.191.60.IP) has joined #rust
2015-05-21 17:38:21	<--	wolfviking0 (wolfviking0@moz-rmt.3b6.246.162.IP) has quit (Ping timeout: 121 seconds)
2015-05-21 17:38:21	--	wolfviking0_ is now known as wolfviking0
2015-05-21 17:38:43	zofrex	I could understand joining #rust on freenode as thinking it's about the game... but on the Mozilla IRC? :P
2015-05-21 17:39:02	&mbrubeck	drasa: Yes. A few more details: https://github.com/rust-lang/rust/blob/master/Makefile.in#L120-L130
2015-05-21 17:39:07	zofrex	EduardoBautista: still muddling through but this example seems to work fine on rust 1.0 :)
2015-05-21 17:39:35	&mbrubeck	drasa: Better docs: https://github.com/rust-lang/rust-wiki-backup/blob/master/Note-compiler-snapshots.md
2015-05-21 17:39:45	dcrewi	is there some documentation somewhere about converting between ints and enums without fields?
2015-05-21 17:40:06	-->	Guest67 (textual@moz-gfs9v0.fios.verizon.net) has joined #rust
2015-05-21 17:40:21	EduardoBautista	zofrex: good to hear :)
2015-05-21 17:40:42	@steveklabnik	dcrewi: http://www.reddit.com/r/rust/comments/36pgn9/integer_to_enum_after_removal_of_fromprimitive/ came up on reddit today
2015-05-21 17:41:34	-->	fredy (fredy@moz-s6pco4.okeanos.grnet.gr) has joined #rust
2015-05-21 17:41:36	desophos	jshs, talchas: thanks for the help
2015-05-21 17:41:56	-->	meh (meh@moz-5b2553.42-151.net24.it) has joined #rust
2015-05-21 17:42:10	<--	tigrou3tac (fabien@moz-gdonfo.fbx.proxad.net) has quit (Ping timeout: 121 seconds)
2015-05-21 17:42:23	<--	dassio (mac@moz-f5s.cn2.191.60.IP) has quit (Ping timeout: 121 seconds)
2015-05-21 17:42:30	@niconii	rillian: change "mod new;" to "pub mod new;"
2015-05-21 17:43:02	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-21 17:43:23	desophos	another question: is it possible to do what i'm trying to do in lines 20-28 of https://dpaste.de/BUuj? 
2015-05-21 17:43:34	desophos	i.e. return a slice in a closure
2015-05-21 17:43:41	desophos	i get a lifetime error
2015-05-21 17:43:49	<--	davebettin (davebettin@moz-acc.cl4.35.72.IP) has quit (Ping timeout: 121 seconds)
2015-05-21 17:43:50	desophos	error: borrowed value does not live long enough
2015-05-21 17:43:55	@niconii	rillian: MP4Metadata.rs can't access byteorder::new because it's currently private to the byteorder module
2015-05-21 17:44:13	<--	csoriano_ (csoriano@moz-g6rkdc.net.upcbroadband.cz) has quit (Client exited)
2015-05-21 17:44:14	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-21 17:44:22	-->	mullre (mullein@moz-p9duhj.members.linode.com) has joined #rust
2015-05-21 17:44:24	-->	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has joined #rust
2015-05-21 17:44:26	<--	loyd (loyd@moz-jsb.32f.108.213.IP) has quit (Ping timeout: 121 seconds)
2015-05-21 17:44:31	-->	Matthias247 (Miranda@moz-49li60.hsi14.kabel-badenwuerttemberg.de) has joined #rust
2015-05-21 17:44:34	--	mullre is now known as mullein
2015-05-21 17:44:44	jshs	desophos: no, and it's not related to closures, but functions in general
2015-05-21 17:45:30	@niconii	desophos: you'll want to return a Vec<Gene>
2015-05-21 17:45:37	jshs	desophos: the array with the three Gene values is local to the function
2015-05-21 17:46:10	-->	jimb (user@moz-c3a.i8g.126.207.IP) has joined #rust
2015-05-21 17:46:13	<--	jimblandy (user@moz-c3a.i8g.126.207.IP) has quit (Quit: ERC (IRC client for Emacs 24.5.1))
2015-05-21 17:46:21	<--	jimb (user@moz-c3a.i8g.126.207.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-21 17:46:22	jshs	so references to it would be invalid after the function has returned
2015-05-21 17:46:31	-->	jimb (user@moz-c3a.i8g.126.207.IP) has joined #rust
2015-05-21 17:46:46	<--	nicknikolov (nicknikolov@moz-k08.qm9.214.90.IP) has quit (Connection closed)
2015-05-21 17:46:59	<--	simukis (nagisa@moz-8t068g.static.zebra.lt) has quit (Ping timeout: 121 seconds)
2015-05-21 17:47:20	-->	tristanseifert (tristanseif@moz-r0t7ns.res.rr.com) has joined #rust
2015-05-21 17:47:52	desophos	jshs: but i thought the point of a closure was to extend the lifetime of its scope... i guess i'm misunderstanding closures
2015-05-21 17:48:16	<--	pyon (pyon@moz-b0l.mdl.7.179.IP) has quit (Ping timeout: 121 seconds)
2015-05-21 17:48:16	<--	gopar (gopar@moz-5039uj.ca.comcast.net) has quit (Quit: Leaving)
2015-05-21 17:48:32	-->	dassio (mac@moz-f5s.cn2.191.60.IP) has joined #rust
2015-05-21 17:49:00	thelink2012	does any of the Iterator methods behaves like .map except it stops as soon as it returns None? e.g. (0..n).adap(|_| io.receive() /* Some or None, stop when None */).collect() ?
2015-05-21 17:49:17	<--	Dekker (Dekker@moz-qc61ff.tbcn.telia.com) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-21 17:49:30	<--	Quanttek_ (quassel@moz-25k96c.6fkd.dvrb.8108.2a02.IP) has quit (Ping timeout: 121 seconds)
2015-05-21 17:49:45	<--	pgonda (peter@moz-s36.0tp.134.75.IP) has quit (Ping timeout: 121 seconds)
2015-05-21 17:50:26	jshs	desophos: the point of closures is that they can capture values or references to values from their enclosing scope
2015-05-21 17:50:27	<--	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has quit (Connection closed)
2015-05-21 17:50:27	<--	selevt (selevt@moz-dtb4km.dtb2.ofgg.1af8.2001.IP) has quit (Ping timeout: 121 seconds)
2015-05-21 17:50:32	<--	hjr3 (hradtke@moz-dmp.av4.169.69.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2015-05-21 17:50:37	-->	rustyrazorblade (rustyrazorb@moz-ehrfqf.fios.verizon.net) has joined #rust
2015-05-21 17:50:48	@niconii	thelink2012: what would it collect, though? only the part of the iterator it went over? or the whole thing, including the ones that weren't processed?
2015-05-21 17:50:49	-->	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has joined #rust
2015-05-21 17:50:58	desophos	jshs: is that not the same thing?
2015-05-21 17:51:43	jshs	desophos: this particular closure doesn't capture anything ;)
2015-05-21 17:51:51	swgillespie	is it possible to pattern match on box without box patterns?
2015-05-21 17:52:08	thelink2012	niconii: It won't collect if the adaptator returns None, for instance if adap returns None during iteration 5 and N is 10, the collected len is 5
2015-05-21 17:52:14	thelink2012	not 10
2015-05-21 17:52:14	--	zz_NameNotFound is now known as NameNotFound
2015-05-21 17:52:34	-->	flyfische (flyfische@moz-7vvk0v.resnet.drexel.edu) has joined #rust
2015-05-21 17:53:07	bluss	thelink2012: you can do that with unfold I think
2015-05-21 17:53:08	flyfische	Hi, let's say I have an enum Instruction.  Is there a way I can bring that into scope in a function so I don't have to type Instruction:: for each member?
2015-05-21 17:53:13	-->	selevt (selevt@moz-dtb4km.dtb2.ofgg.1af8.2001.IP) has joined #rust
2015-05-21 17:53:46	@niconii	flyfische: use self::Instruction::*; should do it
2015-05-21 17:53:59	desophos	jshs: but shouldn't the enclosed value live until the closure goes out of scope, i.e. after it's invoked?
2015-05-21 17:54:00	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-21 17:54:00	flyfische	niconii: Thank you!
2015-05-21 17:54:06	<--	vmx (vmx@moz-qprbo6.pools.vodafone-ip.de) has quit (Quit: Leaving)
2015-05-21 17:54:12	<--	Altazimuth (Altazimuth@moz-rb7u6p.skybroadband.com) has quit (Ping timeout: 121 seconds)
2015-05-21 17:54:46	<--	saml (saml@moz-0pt9vd.cst.lightpath.net) has quit (Connection closed)
2015-05-21 17:54:59	@niconii	desophos: you're creating the array inside of the closure, though
2015-05-21 17:55:12	@niconii	desophos: it only exists *while* it's being invoked
2015-05-21 17:55:13	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-21 17:55:15	desophos	niconii: ahhh, i see
2015-05-21 17:56:14	desophos	i don't understand how lifetime works on returned values
2015-05-21 17:56:37	desophos	because shouldn't the value live until the invocation goes out of scope, because i returned it from the invocation?
2015-05-21 17:56:37	<--	joneshf-laptop (joneshf@moz-l4h.b5s.208.98.IP) has quit (Connection closed)
2015-05-21 17:56:39	-->	joneshf-laptop (joneshf@moz-l4h.b5s.208.98.IP) has joined #rust
2015-05-21 17:56:47	jshs	the thing is, you don't return the value
2015-05-21 17:57:05	@niconii	desophos: you're misunderstanding -- references do not keep values alive
2015-05-21 17:57:24	-->	asQuirreL (asQuirreL@moz-ro1qqu.ox.ac.uk) has joined #rust
2015-05-21 17:57:40	pjenvey	thelink2012 - I think that sounds like take while? itertools crate has it
2015-05-21 17:57:41	@niconii	desophos: you create the array inside the closure, and it goes out of scope
2015-05-21 17:57:44	desophos	and a slice is a reference... so that's why?
2015-05-21 17:57:52	<--	zyphrus (David@moz-1a4.urk.98.101.IP) has quit (Ping timeout: 121 seconds)
2015-05-21 17:57:58	<--	DoomBoom (DoomBoom@moz-a5b.m4r.89.86.IP) has quit (Quit: Leaving)
2015-05-21 17:58:01	@niconii	desophos: it doesn't matter that you returned a reference, it goes out of scope, so the reference is invalidated, so you can't do it
2015-05-21 17:58:20	desophos	because i'm returning the slice (a reference to the value) after the value itself goes out of scope
2015-05-21 17:58:28	<--	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has quit (Connection closed)
2015-05-21 17:58:30	<--	flyfische (flyfische@moz-7vvk0v.resnet.drexel.edu) has quit (Quit: WeeChat 1.1.1)
2015-05-21 17:58:34	@niconii	desophos: yes
2015-05-21 17:58:34	desophos	and the fix is to return an actual value?
2015-05-21 17:58:38	@niconii	desophos: yes
2015-05-21 17:58:41	desophos	i get it
2015-05-21 17:58:51	desophos	interesting
2015-05-21 17:59:12	desophos	thanks jshs and niconii!
2015-05-21 17:59:20	-->	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has joined #rust
2015-05-21 17:59:22	@niconii	desophos: yep, no problem
2015-05-21 17:59:41	-->	DemonOne (Avi@moz-v3f9fm.cablep.bezeqint.net) has joined #rust
2015-05-21 18:01:04	thelink2012	This is what I'm trying to simplify with a iterator/collect niconii bluss pjenvey https://gist.github.com/thelink2012/3d167134d7551dd6c013
2015-05-21 18:01:14	<--	ygrek (user@moz-8j9aeu.org.ua) has quit (Ping timeout: 121 seconds)
2015-05-21 18:01:16	<--	SneakySnake (nya@moz-i9is4u.pool.telekom.hu) has quit (Quit: Leaving)
2015-05-21 18:01:43	--	NameNotFound is now known as zz_NameNotFound
2015-05-21 18:03:05	desophos	yet another question: is it possible to obtain T from Option<&T> without cloning? i want to get the T from rand::Rng.choose(&[T]) (http://doc.rust-lang.org/rand/rand/trait.Rng.html#method.choose)
2015-05-21 18:03:25	bluss	thelink2012: I'm disappointed nothing simple comes to mind! I'll think a bit
2015-05-21 18:04:02	<--	willem (willem@moz-facs2s.dynamic.upc.nl) has quit (Quit: leaving)
2015-05-21 18:04:27	desophos	i can't dereference it because it's borrowed from the slice passed into the function, i assume; i get "error: cannot move out of borrowed content" when i try to dereference
2015-05-21 18:04:33	zofrex	steveklabnik: if you do the dominoes exercise I'd love to see what you come up with
2015-05-21 18:04:34	<--	wolfviking0 (wolfviking0@moz-8hd.3b6.246.162.IP) has quit (Ping timeout: 121 seconds)
2015-05-21 18:04:35	<--	Nextra (Nextra@moz-91stn7.ewe-ip-backbone.de) has quit (Quit: Leaving)
2015-05-21 18:04:36	desophos	and... actually idk
2015-05-21 18:04:37	-->	wolfviking0_ (wolfviking0@moz-8hd.3b6.246.162.IP) has joined #rust
2015-05-21 18:04:46	-->	nicknikolov (nicknikolov@moz-k08.qm9.214.90.IP) has joined #rust
2015-05-21 18:04:57	<--	Triton (cindela@moz-dlkpia.bb.dnainternet.fi) has quit (Ping timeout: 121 seconds)
2015-05-21 18:04:58	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-21 18:05:27	@steveklabnik	zofrex: i didn't quite finish mine, i got distracted :)
2015-05-21 18:05:28	<--	sminez (Thunderbird@moz-bmk.rn8.9.94.IP) has quit (Ping timeout: 121 seconds)
2015-05-21 18:05:40	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-21 18:05:52	zofrex	ah, well you did better than me, I got stuck :P
2015-05-21 18:06:33	&mbrubeck	desophos: I think you'll need to call `rnd.gen_range(0, values.len())` yourself to generate an index, and then move that item out of the collection.
2015-05-21 18:06:44	<--	lov2cod (Adium@moz-40l.ob1.22.8.IP) has quit (Quit: Leaving.)
2015-05-21 18:06:48	&mbrubeck	using Vec::swap_remove or whatever
2015-05-21 18:06:50	Azdle	Is there a variant of unwrap that lets me put in a custom panic message?
2015-05-21 18:06:51	<--	dnaeon (uid87120@moz-aae6vl.uxbridge.irccloud.com) has quit (Quit: )
2015-05-21 18:06:58	-->	dnaeon (uid87120@moz-9emdl0.kkpo.i718.8300.2604.IP) has joined #rust
2015-05-21 18:07:01	&mbrubeck	Azdle: There's Option::expect
2015-05-21 18:07:07	zofrex	maybe I'm missing something obvious but it seems like there's a pretty big leap between singleton and no repeat numbers
2015-05-21 18:07:22	<--	Halamix2 (Halamix2@moz-ov4k82.syrion.pl) has quit (Connection closed)
2015-05-21 18:07:23	&mbrubeck	Azdle: Or if you have a result, you could use result.ok().expect("oops")
2015-05-21 18:07:38	&mbrubeck	http://doc.rust-lang.org/std/option/enum.Option.html#method.expect
2015-05-21 18:07:54	<--	James (quassel@moz-739rgr.range86-148.btcentralplus.com) has quit (Ping timeout: 121 seconds)
2015-05-21 18:08:05	Azdle	Ah, I was just looking in Result. Thanks mbrubeck!
2015-05-21 18:08:30	<--	colinsurprenant (colin@moz-rmn4e2.169.electronicbox.net) has quit (Client exited)
2015-05-21 18:08:44	<--	chc4 (chc4@moz-pdo0at.ma.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-21 18:09:47	bluss	thelink2012: I think you could write (0..count).scan((), |_, _| self.parser.take())  but that looks a bit weird!
2015-05-21 18:10:12	thelink2012	bluss: Thanks for the tip I'll try
2015-05-21 18:10:24	EduardoBautista	if you want to import a crate under a different name, how do you do it?
2015-05-21 18:10:26	cworth	So, I'm trying to play along as questions are asked here, just for my own learning. If I have "let x = [1,2,3];" in a function, (so an array on the stack), I can return that from the function. So far so good.
2015-05-21 18:10:28	EduardoBautista	i know i have seen it someplace
2015-05-21 18:10:39	EduardoBautista	extern crate foo as "foobar" or something like that
2015-05-21 18:10:42	SpaceManiac	extern crate x as y; ?
2015-05-21 18:10:44	<--	swgillespie (swgillespie@moz-1i5.3un.220.167.IP) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-21 18:10:48	&mbrubeck	EduardoBautista: extern crate foo as bar;
2015-05-21 18:10:52	-->	swgillespie (swgillespie@moz-1i5.3un.220.167.IP) has joined #rust
2015-05-21 18:11:05	EduardoBautista	SpaceManiac: mbrubeck thanks!  and that means i would use "bar" in the file?
2015-05-21 18:11:15	&mbrubeck	yes
2015-05-21 18:11:18	EduardoBautista	thanks!
2015-05-21 18:11:23	cworth	But if what I want is a subset of that array, I obviously can't return a slice, (since that would be a reference into a value on the stack). So how can I generate an array value for returning by copying some subset of the array?
2015-05-21 18:11:36	bluss	thelink2012: std::iter::Unfold::new is unstable but Unfold::new((), |_| self.parser.take()).take(count) works too
2015-05-21 18:11:50	--	asuk is now known as asuk|afk
2015-05-21 18:12:47	<--	asuk|afk (asuk@moz-jsi7ll.pppoe.mtu-net.ru) has quit (Quit: My iMac has gone to sleep. ZZZzzz…)
2015-05-21 18:13:10	&mbrubeck	cworth: You could do `Vec::from(&array[start..end])` to copy the slice into a Vec
2015-05-21 18:13:27	&mbrubeck	cworth: `Vec::from(&x[start..end])` that is
2015-05-21 18:13:30	<--	essem2 (Thunderbird@moz-0g3v4k.biz.rr.com) has quit (Client exited)
2015-05-21 18:13:37	-->	veqz (veqz@moz-nvr8g6.209.getinternet.no) has joined #rust
2015-05-21 18:13:51	<--	zrneely (Mibbit@moz-pd9.h6j.189.18.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-21 18:13:52	<--	excaliburhissheath (excaliburhi@moz-cae.ea9.102.75.IP) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-05-21 18:13:55	-->	gavinb (gavinb@moz-k7t.4vm.152.1.IP) has joined #rust
2015-05-21 18:14:10	drasa	Is there any way to speed up the rustc compiling, now that I've made some changes and need to compile again?
2015-05-21 18:14:11	-->	jminer (Instantbird@moz-b1u.qch.163.66.IP) has joined #rust
2015-05-21 18:14:42	<--	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has quit (Connection closed)
2015-05-21 18:14:50	&mbrubeck	cworth: Or you want to return a fixed-length array, I think you'll need to create one and then just copy to it in a loop. Or using http://doc.rust-lang.org/std/ptr/fn.copy_nonoverlapping.html
2015-05-21 18:15:22	cworth	mbrubeck: Thanks, yes, I was trying to return an array. Thanks for the link.
2015-05-21 18:15:43	<--	mkpankov` (mkpankov@moz-1rk.3mh.23.84.IP) has quit (Ping timeout: 121 seconds)
2015-05-21 18:15:56	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-21 18:16:08	<--	EspressoDan (EspressoDan@moz-k3b.853.211.140.IP) has quit (Client exited)
2015-05-21 18:16:21	bluss	drasa: I think others know more, but you can build just `make rustc-stage1` to try just the stage1 compiler
2015-05-21 18:16:50	bluss	drasa: also the tests can be recompiled on their own and you can have it ignore other changes with NO_REBUILD=1
2015-05-21 18:16:57	gavinb	Anyone from the Rosetta proejct around? Wondering about the policy for version compatibility.
2015-05-21 18:16:58	bluss	but that's not always what you need
2015-05-21 18:17:07	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-21 18:17:21	-->	lyc (lyc@moz-jft.nr8.226.207.IP) has joined #rust
2015-05-21 18:17:25	gavinb	I just tried building rust-rosetta with 1.0 and there’s loads of feature gates that won’t work in stable.
2015-05-21 18:18:40	desophos	mbrubeck: thanks! that worked
2015-05-21 18:19:09	drasa	bluss: Does that result to the stage 2 compiler or stage 1?
2015-05-21 18:19:29	@steveklabnik	gavinb: they're trying to move to stable where possible
2015-05-21 18:19:31	bluss	rustc-stage1 builds stage1
2015-05-21 18:19:45	<--	gattschardo (richard@moz-a0ascq.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2015-05-21 18:19:45	<--	ahal (ahal@moz-b8e0a0.cpe.pppoe.ca) has quit (A TLS packet with unexpected length was received.)
2015-05-21 18:19:47	@steveklabnik	gavinb: hoverbear  is at least one of the rosetta people
2015-05-21 18:19:59	cworth	mbrubeck: Learning about unsafe stuff is interesting, but I'm trying to learn the safe stuff for now. Is a loop the only way?
2015-05-21 18:20:19	<--	new_one (new_one@moz-os3maj.ujol.1ibb.0101.2620.IP) has quit (Ping timeout: 121 seconds)
2015-05-21 18:20:41	-->	EspressoDan (EspressoDan@moz-k3b.853.211.140.IP) has joined #rust
2015-05-21 18:20:57	gavinb	steveklabnik: ok, thanks. Might start working on a few patches. Seems like now more than ever it needs to track 1.0 so newcomers can see real working code.
2015-05-21 18:21:05	<--	duesenfranz_ (jona@moz-711djm.tirol.surfer.at) has quit (Client exited)
2015-05-21 18:21:23	<--	lyc (lyc@moz-jft.nr8.226.207.IP) has quit (Ping timeout: 121 seconds)
2015-05-21 18:21:29	-->	gattschardo (richard@moz-1j312h.dyn.telefonica.de) has joined #rust
2015-05-21 18:21:30	cworth	I'm imagining something like "let sub_array: [i32; 1] = array[0..2];", (but with some magic to do copying rather than just getting the "mismatched types" error).
2015-05-21 18:21:55	-->	peter (peter@moz-e11i63.cable.virginm.net) has joined #rust
2015-05-21 18:23:15	-->	summerlight (summerlight@moz-99k.2mj.130.121.IP) has joined #rust
2015-05-21 18:23:15	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Connection closed)
2015-05-21 18:23:37	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-21 18:23:38	<--	larhat1 (Adium@moz-vlo5br.cable.virginm.net) has quit (Quit: Leaving.)
2015-05-21 18:24:20	<--	EspressoDan (EspressoDan@moz-k3b.853.211.140.IP) has quit (Client exited)
2015-05-21 18:24:28	<--	mmatyas (mmatyas@moz-4lg94m.inf.u-szeged.hu) has quit (Quit: Leaving)
2015-05-21 18:25:00	&pcwalton	yay, I successfully used associated types in lieu of HKT to make an Iterable trait
2015-05-21 18:25:06	&pcwalton	nmatsakis: aturon: ^
2015-05-21 18:25:27	@aturon	:) classic HKT encoding?
2015-05-21 18:25:32	@aturon	(i.e. lifetimes pulled out?)
2015-05-21 18:25:34	&pcwalton	yeah
2015-05-21 18:25:35	&pcwalton	fn compute_differences<'a,T,I,B>(old_objects: B, old_objects_len: usize, new_objects: B, new_objects_len: usize, invalid_rect: &mut Rect<Au>) where T: DisplayItemComparison + DisplayItemPrint + 'a, I: Iterator<Item=&'a T>, B: Iterable<ConcreteIterator=I> + Copy
2015-05-21 18:25:54	<--	Guest72 (textual@moz-41t.55v.34.199.IP) has quit (Ping timeout: 121 seconds)
2015-05-21 18:25:57	<--	JagaJaga (JagaJaga@moz-ua8.hhl.62.178.IP) has quit (Ping timeout: 121 seconds)
2015-05-21 18:25:59	<--	peter (peter@moz-e11i63.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2015-05-21 18:26:08	@aturon	gist the defn of Iterable?
2015-05-21 18:26:11	cworth	So this works of course: "let ret = [ f[0], f[1] ];".
2015-05-21 18:26:24	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-21 18:26:27	&pcwalton	aturon: trait Iterable { type ConcreteIterator; fn iter(self) -> Self::ConcreteIterator; }
2015-05-21 18:26:33	-->	bletch (Mibbit@moz-19veku.res.rr.com) has joined #rust
2015-05-21 18:26:51	<--	tadh (quassel@moz-iq6hhs.biz.rr.com) has quit (Ping timeout: 121 seconds)
2015-05-21 18:27:06	&pcwalton	then impl Iterable for &'a DisplayList
2015-05-21 18:27:07	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-21 18:27:16	@aturon	yep
2015-05-21 18:27:20	-->	tadh (quassel@moz-88tk3f.res.rr.com) has joined #rust
2015-05-21 18:27:26	@aturon	cool stuff :)
2015-05-21 18:27:39	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Ping timeout: 121 seconds)
2015-05-21 18:27:41	talchas	pcwalton: see IntoIterator :P
2015-05-21 18:27:42	cworth	It feels like there should be some sort of range-like syntax that would let me do a generalized version of that.
2015-05-21 18:28:10	&pcwalton	oh yeah, I probably could have used that
2015-05-21 18:28:11	&pcwalton	heh
2015-05-21 18:28:28	talchas	pcwalton: yours is in fact exactly IntoIterator :P
2015-05-21 18:28:56	<--	nicknikolov (nicknikolov@moz-k08.qm9.214.90.IP) has quit (Connection closed)
2015-05-21 18:29:01	<--	fkaa_ (tundmatu@moz-501od2.business.telia.com) has quit (Ping timeout: 121 seconds)
2015-05-21 18:29:06	-->	shellac (textual@moz-9b49cr.cable.virginm.net) has joined #rust
2015-05-21 18:29:23	-->	orangeshark (erik@moz-1vs3iq.44tj.56ot.0306.2602.IP) has joined #rust
2015-05-21 18:29:26	-->	grobinson (grobinson@moz-9p0.7ki.56.172.IP) has joined #rust
2015-05-21 18:29:37	<--	sinma (sinma@moz-qqee5m.ev7h.paus.2040.2a03.IP) has quit (Quit: Konversation terminated!)
2015-05-21 18:29:50	<--	grobinson (grobinson@moz-9p0.7ki.56.172.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-21 18:30:12	<--	lutter1 (lutter@moz-7v7ueu.PUBLIC.monkeybrains.net) has quit (Ping timeout: 121 seconds)
2015-05-21 18:30:17	<--	eddyb (eddyb@moz-ure.pug.25.188.IP) has quit (Ping timeout: 121 seconds)
2015-05-21 18:30:17	-->	grobinson (grobinson@moz-1uq.bbe.50.198.IP) has joined #rust
2015-05-21 18:30:24	<--	lutter (lutter@moz-7v7ueu.PUBLIC.monkeybrains.net) has quit (Ping timeout: 121 seconds)
2015-05-21 18:32:16	-->	xidorn (sid312@moz-rssrut.0j4i.jtu0.0101.2620.IP) has joined #rust
2015-05-21 18:32:56	-->	arBmind1 (Andreas@moz-rbctum.adsl.alicedsl.de) has joined #rust
2015-05-21 18:34:28	ChrisMorgan	For that matter, why exactly did we call IntoIterator that and not Iterable?
2015-05-21 18:34:43	<--	arBmind (Andreas@moz-s41ou5.adsl.alicedsl.de) has quit (Ping timeout: 121 seconds)
2015-05-21 18:34:54	@steveklabnik	gavinb: yup, exactly :)
2015-05-21 18:35:56	-->	EspressoDan (EspressoDan@moz-ct79sd.dynamic.ashlandfiber.net) has joined #rust
2015-05-21 18:36:08	-->	jimblandy (user@moz-09a.i8g.126.207.IP) has joined #rust
2015-05-21 18:36:14	-->	jzhu98 (jzhu98@moz-05cjau.h4qm.blhu.0306.2602.IP) has joined #rust
2015-05-21 18:36:21	<--	gleb (gleb@moz-3u1drv.rusanovka-net.kiev.ua) has quit (Ping timeout: 121 seconds)
2015-05-21 18:37:16	<--	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-21 18:37:22	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-21 18:37:23	<--	jzhu98 (jzhu98@moz-05cjau.h4qm.blhu.0306.2602.IP) has quit (Client exited)
2015-05-21 18:37:32	<--	simonoram (simonoram@moz-pllbvg.cable.virginm.net) has quit (Client exited)
2015-05-21 18:37:32	--	jimblandy is now known as jimb`
2015-05-21 18:37:34	<--	jimb (user@moz-c3a.i8g.126.207.IP) has quit (Ping timeout: 121 seconds)
2015-05-21 18:37:36	--	jimb` is now known as jimb
2015-05-21 18:37:41	<--	gavinb (gavinb@moz-k7t.4vm.152.1.IP) has quit (Connection closed)
2015-05-21 18:37:45	-->	gopar (gopar@moz-5039uj.ca.comcast.net) has joined #rust
2015-05-21 18:38:32	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-21 18:38:33	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-21 18:39:31	&mbrubeck	cworth: It's easy to write a function that takes [T; N] and returns [T; M] for a specific N and M.... but we can't yet write a version that's generic over M and N.  Which is why there's no library function that does what you want.
2015-05-21 18:39:36	-->	lutter (lutter@moz-7v7ueu.PUBLIC.monkeybrains.net) has joined #rust
2015-05-21 18:40:12	<--	summerlight (summerlight@moz-99k.2mj.130.121.IP) has quit (Ping timeout: 121 seconds)
2015-05-21 18:41:10	talchas	ChrisMorgan: I'm guessing that people would expect Iterable to have an iter(&self) -> SomeIterator function
2015-05-21 18:41:30	<--	Averell (averell@moz-4vu1de.nf3.eu) has quit (Connection closed)
2015-05-21 18:41:46	-->	lutter1 (lutter@moz-7v7ueu.PUBLIC.monkeybrains.net) has joined #rust
2015-05-21 18:42:12	@steveklabnik	aturon: pcwalton oh interesting
2015-05-21 18:42:47	<--	shellac (textual@moz-9b49cr.cable.virginm.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-21 18:42:53	ChrisMorgan	talchas: … which would be OK, because an intrinsic method outranks a trait method, so if a type implements its own iter method it will override the Iterable implementation for x.iter().
2015-05-21 18:43:21	-->	kidto (gabriel@moz-fj4h3j.as13285.net) has joined #rust
2015-05-21 18:43:31	talchas	ChrisMorgan: the issue is that that Iterable needs HKT
2015-05-21 18:43:36	ChrisMorgan	talchas: I will acknowledge that a method named into_iter is more in keeping with the other guidelines, .iter(&self), .iter_mut(&mut self) and .into_iter(self).
2015-05-21 18:43:43	<--	Astrum|Lap (Astrum|Lap@moz-7enfbr.co.comcast.net) has quit (Client exited)
2015-05-21 18:43:46	talchas	or has some other lifetime-naming-issue
2015-05-21 18:44:34	<--	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-21 18:44:36	pranz	I have a mutable reference to an Option<Box<T>>
2015-05-21 18:44:51	-->	new_one (new_one@moz-48b3at.ujol.1ibb.0101.2620.IP) has joined #rust
2015-05-21 18:44:52	-->	slurps-mad-rips (slurps-mad-@moz-o2c.uaj.44.17.IP) has joined #rust
2015-05-21 18:45:07	pranz	I feel like I should be able in some way to take ownership of the box if I also mutate the value of the ref to None
2015-05-21 18:45:18	ChrisMorgan	pranz: option.take()
2015-05-21 18:45:19	talchas	pranz: .take() iirc
2015-05-21 18:45:20	-->	gsingh93 (gulshan@moz-ln1ktu.st3l.iv8o.0004.2601.IP) has joined #rust
2015-05-21 18:45:41	pranz	ChrisMorgan, talchas: thanks for the quick answer!
2015-05-21 18:45:45	<--	erz (erz@moz-fiq1tl.broadband.corbina.ru) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-21 18:46:19	<--	vosen (vosen@moz-mtm1g4.dynamic.chello.pl) has quit (Connection closed)
2015-05-21 18:47:27	-->	shellac (textual@moz-9b49cr.cable.virginm.net) has joined #rust
2015-05-21 18:47:48	-->	ygrek (user@moz-8j9aeu.org.ua) has joined #rust
2015-05-21 18:47:52	<--	shadeslayer (shadeslayer@moz-45vi9r.jefferai.org) has quit (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
2015-05-21 18:48:20	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-21 18:48:26	@aturon	steveklabnik: (cc pcwalton) it's a sort of general trick, see https://github.com/aturon/rfcs/blob/associated-items/active/0000-associated-items.md#encoding-higher-kinded-types -- i think that freebroccolo has pushed it farther: https://github.com/freebroccolo/hkt.rs
2015-05-21 18:48:55	@aturon	(we opted against using this in the standard library, with one exception, because the encoding gets pretty unwieldy and we'd rather just use real HKT)
2015-05-21 18:49:13	-->	mkpankov` (mkpankov@moz-1rk.3mh.23.84.IP) has joined #rust
2015-05-21 18:49:33	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-21 18:50:23	<--	Jesse (jruderman@moz-pqc1f5.ca.comcast.net) has quit (Client exited)
2015-05-21 18:50:24	<--	logan_e (logan_e@moz-vldsru.csail.mit.edu) has quit (Client exited)
2015-05-21 18:50:45	<--	hhhhhhhhhh (mike@moz-44gc7d.as13285.net) has quit (Quit: WeeChat 1.2)
2015-05-21 18:50:52	<--	bjz (bjz@moz-puppgq.tpgi.com.au) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-21 18:51:06	<--	geri (Mibbit@moz-56cpfe.highway.telekom.at) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-21 18:51:25	-->	Kornel (Kornel@moz-l20jk6.81.in-addr.arpa) has joined #rust
2015-05-21 18:51:42	<--	lutter (lutter@moz-7v7ueu.PUBLIC.monkeybrains.net) has quit (Ping timeout: 121 seconds)
2015-05-21 18:51:51	@steveklabnik	neat
2015-05-21 18:51:54	Kornel	Does `[[u8]]` make any sense as a type? What would be the C equivalent of it?
2015-05-21 18:52:11	<--	kngl (Adium@moz-rmgnkh.dynamic.voo.be) has quit (Quit: Leaving.)
2015-05-21 18:52:36	GaryOak_	2d array
2015-05-21 18:53:01	talchas	Kornel: not quite
2015-05-21 18:53:03	<--	godlikesme (godlikesme@moz-2a2.dsd.174.79.IP) has quit (Ping timeout: 121 seconds)
2015-05-21 18:53:18	talchas	Kornel: [[u8; N]] makes sense, and is equivalent to char[N][] in C
2015-05-21 18:53:23	--	zz_NameNotFound is now known as NameNotFound
2015-05-21 18:53:25	<--	cakecatz (cakecatz@moz-edrvuc.sannet.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-21 18:53:25	talchas	(mostly equivalent anyway)
2015-05-21 18:53:37	-->	lutter (lutter@moz-7v7ueu.PUBLIC.monkeybrains.net) has joined #rust
2015-05-21 18:53:49	talchas	[[u8]] would be trying to be char[][] in C, which also doesn't quite make sense
2015-05-21 18:53:54	<--	DerisiveLogic (smuxi@moz-g93io6.res.rr.com) has quit (Ping timeout: 121 seconds)
2015-05-21 18:55:00	-->	cow_2001 (un@moz-pk4.og5.226.188.IP) has joined #rust
2015-05-21 18:55:07	Kornel	thanks talchas. So C's **char would be `[&[i8]]`? (or is it `&[&[]]`?)
2015-05-21 18:55:31	Kornel	(and by C's I mean safe Rust equivalent, not binary compat)
2015-05-21 18:55:45	<--	kaeluka (kaeluka@moz-tn3lqd.cust.bredbandsbolaget.se) has quit (Client exited)
2015-05-21 18:56:15	talchas	one of the two, usually you end up using slices as &[] rather than []
2015-05-21 18:56:20	-->	colinsurprenant (colin@moz-q9ee1n.74.electronicbox.net) has joined #rust
2015-05-21 18:56:39	desophos	if i'm in a for loop like `for gene in gen.genes.iter()`, and i want to pass `gene.image` to a function that takes it as a value, not a reference, what's the proper way to do that?
2015-05-21 18:56:52	-->	yuja (yuja@moz-4hssp3.so-net.ne.jp) has joined #rust
2015-05-21 18:57:00	cow_2001	is there an irc channel for Piston?
2015-05-21 18:57:00	desophos	normally i'd just pass a reference, but the function won't take that
2015-05-21 18:57:23	desophos	cow_2001: #rust-gamedev
2015-05-21 18:57:25	swgillespie	cow_2001: there's #rust-gamedev
2015-05-21 18:57:37	talchas	desophos: well, if it consumes the image, you need to either pass a copy, be consuming genes, or replace it with some other image
2015-05-21 18:57:38	cow_2001	swgillespie: desophos: many thanks!
2015-05-21 18:57:42	&mbrubeck	desophos: You need to clone it, or change your for loop to `for gene in gen.genes` which will take consume gen.genes by value.
2015-05-21 18:57:46	<--	cow_2001 (un@moz-pk4.og5.226.188.IP) has left #rust ("ASCII Muhammad - @o<-<")
2015-05-21 18:58:18	swgillespie	is there a reason why nested functions can't capture things from the parent function's scope?
2015-05-21 18:58:19	-->	njn (chatzilla@moz-jkhneq.iinet.net.au) has joined #rust
2015-05-21 18:58:33	desophos	talchas, mbrubeck: got it, thanks!
2015-05-21 18:59:01	talchas	swgillespie: if you want that, use a closure like "|x| x + 1"
2015-05-21 18:59:16	swgillespie	talchas: not if it's recursive :p
2015-05-21 18:59:18	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-21 18:59:29	swgillespie	which is what i'm trying to do
2015-05-21 19:00:05	<--	GaryOak_ (GaryOak_@moz-etoj16.hfc.comcastbusiness.net) has quit (Quit: Leaving...)
2015-05-21 19:00:21	talchas	I expect recursive closures tend to wind up with unclear borrowing/ownership semantics
2015-05-21 19:00:35	swgillespie	talchas: even if I'm capturing by immutable reference?
2015-05-21 19:00:43	talchas	if they're Fn it should be able to work fine
2015-05-21 19:00:45	-->	chc4 (chc4@moz-pdo0at.ma.comcast.net) has joined #rust
2015-05-21 19:01:07	swgillespie	no dice so far :/ http://is.gd/ciHhwq
2015-05-21 19:01:08	-->	lov2cod (Adium@moz-40l.ob1.22.8.IP) has joined #rust
2015-05-21 19:01:10	--	kimundi is now known as zz_kimundi
2015-05-21 19:01:12	talchas	but FnOnce would obviously make no sense, and FnMut might have implementation issues
2015-05-21 19:01:26	<--	Matthias247 (Miranda@moz-49li60.hsi14.kabel-badenwuerttemberg.de) has quit (Connection closed)
2015-05-21 19:01:29	talchas	swgillespie: yeah, they don't work, but I'm wondering if they could be made to work compiler-side
2015-05-21 19:01:31	-->	lov2cod1 (Adium@moz-8rkult.eodv.k60l.0119.2620.IP) has joined #rust
2015-05-21 19:01:31	swgillespie	I'm curious about the nested function though
2015-05-21 19:01:38	<--	lov2cod (Adium@moz-40l.ob1.22.8.IP) has quit (Connection closed)
2015-05-21 19:01:39	<--	arBmind1 (Andreas@moz-rbctum.adsl.alicedsl.de) has quit (Quit: Leaving.)
2015-05-21 19:01:44	talchas	nested functions are still useful when you just want the namespacing
2015-05-21 19:01:46	-->	Kingsquee (kingsley@moz-3fm07c.bchsia.telus.net) has joined #rust
2015-05-21 19:01:51	swgillespie	of course
2015-05-21 19:02:15	swgillespie	Some languages transform the nested function to accept as a parameter a function pointer to the function that encloses it
2015-05-21 19:02:38	swgillespie	and put anything that escapes the nested function onto the stack so the child function can do an offset on the function pointer to access it
2015-05-21 19:02:44	-->	h`e`y`ladies (Mibbit@moz-rgi.85v.115.76.IP) has joined #rust
2015-05-21 19:02:45	swgillespie	i wonder if that would work for rust
2015-05-21 19:02:58	swgillespie	i know very little about rust's soundness in general, though...
2015-05-21 19:03:33	<--	Gabriel_7 (Gabriel@moz-1au1g4.mtgr.92aj.0e35.2a01.IP) has quit (Connection closed)
2015-05-21 19:03:34	swgillespie	llvm even has an intrinsic for it i think
2015-05-21 19:03:36	-->	plumshark (pat@moz-p569rf.35n5.ltgp.0306.2602.IP) has joined #rust
2015-05-21 19:03:37	-->	krdln (krdln@moz-ohe9vg.dynamic.chello.pl) has joined #rust
2015-05-21 19:03:39	jshs	function pointer? do you mean base pointer?
2015-05-21 19:03:49	swgillespie	i meant frame pointer, sorry
2015-05-21 19:03:56		[shell] Command "maim" (rc 0), stdout:
2015-05-21 19:03:56		No file specified, using /home/david/1432249436.png
2015-05-21 19:03:57	swgillespie	f-words mixing in my head
2015-05-21 19:04:08	-->	logan_e (logan_e@moz-vldsru.csail.mit.edu) has joined #rust
2015-05-21 19:04:12	talchas	I mean, just thinking about it for like 10s I expect you could make "rec f |x| x * f(x - 1)" for Fn() without making it too horrible or something
2015-05-21 19:04:38	@niconii	swgillespie: at least it's only "function" and "frame" you mixed up ;)
2015-05-21 19:04:41	<--	yota (sdouche@moz-d75d0l.3iqc.r856.0e35.2a01.IP) has quit (Quit: WeeChat 1.1.1)
2015-05-21 19:04:43	swgillespie	niconii: :P
2015-05-21 19:05:11	-->	pgonda (peter@moz-s36.0tp.134.75.IP) has joined #rust
2015-05-21 19:05:19	h`e`y`ladies	i wanted to consume the twitter streaming API with rust. I was looking first at hyper, which seems unwieldy, and then I was looking at rust-curl, but that seems badly suited for consuming a request that doesn't end, since it appears to buffer the response.
2015-05-21 19:05:32	-->	blaenk (blaenkdenum@moz-em283u.res.rr.com) has joined #rust
2015-05-21 19:05:38	h`e`y`ladies	can anyone point me in a general direction to solve this?
2015-05-21 19:05:54	mcpherrin	I don't know if there's a better option than hyper
2015-05-21 19:05:55	<--	yuja (yuja@moz-4hssp3.so-net.ne.jp) has quit (Ping timeout: 121 seconds)
2015-05-21 19:06:10	mcpherrin	But I haven't ever handled a streaming http response in Rust.
2015-05-21 19:07:23	<--	mkpankov` (mkpankov@moz-1rk.3mh.23.84.IP) has quit (Ping timeout: 121 seconds)
2015-05-21 19:07:41		[shell] Command "ls" (rc 0), stdout:
2015-05-21 19:07:41		Desktop
2015-05-21 19:07:41		Downloads
2015-05-21 19:07:41		Dropbox
2015-05-21 19:07:41		mailman
2015-05-21 19:07:41		Music
2015-05-21 19:07:41		openage
2015-05-21 19:07:41		Pictures
2015-05-21 19:07:41		__pycache__
2015-05-21 19:07:48	<--	kidto (gabriel@moz-fj4h3j.as13285.net) has quit (Ping timeout: 121 seconds)
2015-05-21 19:07:59	<--	EspressoDan (EspressoDan@moz-ct79sd.dynamic.ashlandfiber.net) has quit (Client exited)
2015-05-21 19:08:10	-->	EspressoDan (EspressoDan@moz-ct79sd.dynamic.ashlandfiber.net) has joined #rust
2015-05-21 19:08:32	-->	yota (sdouche@moz-ua95ue.3iqc.r856.0e35.2a01.IP) has joined #rust
2015-05-21 19:08:59	<--	tkellen (tkellen@moz-f5ji1n.vt.comcast.net) has quit (Client exited)
2015-05-21 19:09:15	<--	pgonda (peter@moz-s36.0tp.134.75.IP) has quit (Ping timeout: 121 seconds)
2015-05-21 19:09:58	h`e`y`ladies	mcpherrin: ok, i'll try to ascend the hyper learning curve...
2015-05-21 19:10:01	<--	cursivecode (textual@moz-4u56i9.res.bhn.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-21 19:10:14	<--	kgrandon (Adium@moz-7ln97r.2rkg.9kg1.0101.2620.IP) has quit (Quit: Leaving.)
2015-05-21 19:10:20	<--	shellac (textual@moz-9b49cr.cable.virginm.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-21 19:11:29	<--	rbranson (rbranson@moz-i7m.9o0.201.199.IP) has quit (Quit: Computer has gone to sleep.)
2015-05-21 19:12:02	<--	blaenk (blaenkdenum@moz-em283u.res.rr.com) has quit (Connection closed)
2015-05-21 19:12:07	-->	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has joined #rust
2015-05-21 19:12:22	<--	yota (sdouche@moz-ua95ue.3iqc.r856.0e35.2a01.IP) has quit (Quit: WeeChat 1.1.1)
2015-05-21 19:12:26	-->	blaenk (blaenkdenum@moz-em283u.res.rr.com) has joined #rust
2015-05-21 19:13:15	ChrisMorgan	I haven’t asked this for quite some time: any suggestions for things to do with the domain name lib.rs (i.e. <http://lib.rs/>)?
2015-05-21 19:14:10	<--	EspressoDan (EspressoDan@moz-ct79sd.dynamic.ashlandfiber.net) has quit (Client exited)
2015-05-21 19:14:14	<--	Azdle (Azdle@moz-738.tg8.232.50.IP) has quit (Ping timeout: 121 seconds)
2015-05-21 19:16:30	jn	ChrisMorgan: rust libraries' documentation
2015-05-21 19:16:33	-->	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has joined #rust
2015-05-21 19:17:25	-->	kgrandon (Adium@moz-1drqsg.2rkg.9kg1.0101.2620.IP) has joined #rust
2015-05-21 19:17:26	@niconii	ChrisMorgan: go libraries' documentation, just to spice it up a little
2015-05-21 19:17:40	jn	niconii++
2015-05-21 19:18:08	-->	lyc (lyc@moz-jft.nr8.226.207.IP) has joined #rust
2015-05-21 19:18:26	-->	Sawbones (Sawbones@moz-9qofb4.res.bhn.net) has joined #rust
2015-05-21 19:18:35	mcpherrin	ChrisMorgan: A "Rust Library", a community curated collection of the best artictles, tutorials, blog posts, and discussions on Rust?
2015-05-21 19:19:27	mcpherrin	I'm imagining somewhere between a rust wiki & /r/rust
2015-05-21 19:19:31	@niconii	mcpherrin: ooh, i like that idea
2015-05-21 19:20:12	<--	blaenk (blaenkdenum@moz-em283u.res.rr.com) has quit (Connection closed)
2015-05-21 19:20:15	mcpherrin	But with librarian-magic applied: tagged/categorized etc
2015-05-21 19:20:28	ChrisMorgan	Sounds like work 😛
2015-05-21 19:20:49	mcpherrin	ChrisMorgan: it does ;p
2015-05-21 19:21:09	mcpherrin	ChrisMorgan: that's why I stuck the magic word "community" in there!
2015-05-21 19:21:17	logan_e	Is there such thing as on the fly rust serialiation?
2015-05-21 19:21:17	mcpherrin	community is a magic force taht does things for you
2015-05-21 19:21:18	logan_e	serialization
2015-05-21 19:21:32	mcpherrin	logan_e: what do you mean by "on the fly"?
2015-05-21 19:21:35	-->	blaenk (blaenkdenum@moz-em283u.res.rr.com) has joined #rust
2015-05-21 19:21:41	<--	kgrandon (Adium@moz-1drqsg.2rkg.9kg1.0101.2620.IP) has quit (Quit: Leaving.)
2015-05-21 19:22:10	<--	lyc (lyc@moz-jft.nr8.226.207.IP) has quit (Ping timeout: 121 seconds)
2015-05-21 19:22:14	mcpherrin	logan_e: https://github.com/serde-rs/serde is serialization stuff but I don't know what you need
2015-05-21 19:22:16	logan_e	I’m trying to find a library that can serialize arbitrary datastructures without having to have compile-time things that have to be implemented for each type
2015-05-21 19:22:17	-->	Jesin (Jesin@moz-48mne2.nsvltn.sbcglobal.net) has joined #rust
2015-05-21 19:22:18	-->	cow_2001 (un@moz-pk4.og5.226.188.IP) has joined #rust
2015-05-21 19:22:23	&mbrubeck	ChrisMorgan:  I think http://lib.rs should return some sort of valid, harmless Rust source code. Because you know at some point some buggy system is going to save and compile it.  :)
2015-05-21 19:22:36	logan_e	yeah, I saw that but it makes you derive a serializer for every type you want to serailize at compile time
2015-05-21 19:22:38	-->	skade (skade@moz-m9ib3m.pools.vodafone-ip.de) has joined #rust
2015-05-21 19:22:43	logan_e	or at least that was the imipression I got
2015-05-21 19:22:44	-->	peter (peter@moz-e11i63.cable.virginm.net) has joined #rust
2015-05-21 19:22:45	logan_e	I could be completely wrong
2015-05-21 19:22:59	Diggsey	logan_e: but all data-structures are defined at compile time?
2015-05-21 19:23:20	<--	logan_e (logan_e@moz-vldsru.csail.mit.edu) has quit (Client exited)
2015-05-21 19:23:28	bluss	logan_e: it makes you derive a visitor for that type at compile time
2015-05-21 19:23:59	Diggsey	logan_e: maybe if you explained more about what you're trying to do?
2015-05-21 19:24:11	<--	rovar (rovar@moz-6iq.47m.88.38.IP) has quit (NickServ (RECOVER command used by rovar_))
2015-05-21 19:24:11	--	rovar_ is now known as rovar
2015-05-21 19:24:24	-->	rovar_ (rovar@moz-6iq.47m.88.38.IP) has joined #rust
2015-05-21 19:24:32	<--	wolfviking0_ (wolfviking0@moz-8hd.3b6.246.162.IP) has quit (Client exited)
2015-05-21 19:24:54	<--	jminer (Instantbird@moz-b1u.qch.163.66.IP) has quit (Ping timeout: 121 seconds)
2015-05-21 19:25:17	-->	mkpankov` (mkpankov@moz-1rk.3mh.23.84.IP) has joined #rust
2015-05-21 19:25:22	&mbrubeck	log0ymxm: For more dynamic stuff you can do things like build a HashMap and serialize that...
2015-05-21 19:25:38	<--	Shackra (Jorge@moz-7bh.ng6.177.186.IP) has quit (Ping timeout: 121 seconds)
2015-05-21 19:25:55	<--	aepsil0n (eduard@moz-6491ha.mv2h.pepi.8071.2a02.IP) has quit (Connection closed)
2015-05-21 19:25:59	&mbrubeck	(That helps if you don't know the field names at compile time, though it does restrict the values.)
2015-05-21 19:26:21	-->	Shackra (Jorge@moz-7bh.ng6.177.186.IP) has joined #rust
2015-05-21 19:26:40	&mbrubeck	sorry, that was for logan_e who is gone
2015-05-21 19:26:47	<--	peter (peter@moz-e11i63.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2015-05-21 19:26:57	blaenk	wish you could drag the separation between output and code in the new playpen
2015-05-21 19:27:02	-->	rbranson (rbranson@moz-i7m.9o0.201.199.IP) has joined #rust
2015-05-21 19:27:45	<--	grobinson (grobinson@moz-1uq.bbe.50.198.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-21 19:27:58	-->	hyunsik (hyunsik@moz-3qgjl9.ca.comcast.net) has joined #rust
2015-05-21 19:29:29	<--	asQuirreL (asQuirreL@moz-ro1qqu.ox.ac.uk) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-21 19:30:04	<--	areski (areski@moz-2lg0ha.user.ono.com) has quit (Ping timeout: 121 seconds)
2015-05-21 19:30:13	-->	wenderen (uid34286@moz-9vna9c.charlton.irccloud.com) has joined #rust
2015-05-21 19:30:25	Diggsey	blaenk: PRs to rust-playpen seem to get accepted very quickly :P
2015-05-21 19:30:34	blaenk	sweet :D
2015-05-21 19:31:07	Diggsey	I submitted two a few days ago and their already live
2015-05-21 19:31:13	Diggsey	*they're
2015-05-21 19:31:22	<--	Sawbones (Sawbones@moz-9qofb4.res.bhn.net) has quit (Connection closed)
2015-05-21 19:31:39	<--	flugsio (flugsio@moz-283uu4.tbcn.telia.com) has quit (Quit: WeeChat 1.2)
2015-05-21 19:31:43	<--	new_one (new_one@moz-48b3at.ujol.1ibb.0101.2620.IP) has quit (Ping timeout: 121 seconds)
2015-05-21 19:32:03	<--	colinsurprenant (colin@moz-q9ee1n.74.electronicbox.net) has quit (Client exited)
2015-05-21 19:34:28	-->	excaliburhissheath (excaliburhi@moz-h98c6v.il.comcast.net) has joined #rust
2015-05-21 19:34:34	thelink2012	when I write if (x == 4) {} does (x == 4) creates a tuple or.....?
2015-05-21 19:35:04	mitsuhiko	i feel like working with pool allocator like situations in rust is way too painful
2015-05-21 19:35:12	mitsuhiko	(i'm not even using an actual pool allocator)
2015-05-21 19:35:20	mitsuhiko	lifetimes everywhere :(
2015-05-21 19:35:21	jn	thelink2012: it won't do anything interesting
2015-05-21 19:35:25	&mbrubeck	thelink2012: No, if it created a tuple it wouldn't work.
2015-05-21 19:35:29	<--	_ixti_ (ixti@moz-i3d.dae.119.188.IP) has quit (Ping timeout: 121 seconds)
2015-05-21 19:35:38	jn	thelink2012: unary tuples are written like (1,)
2015-05-21 19:36:06	thelink2012	oh
2015-05-21 19:36:17	<--	mkpankov` (mkpankov@moz-1rk.3mh.23.84.IP) has quit (Ping timeout: 121 seconds)
2015-05-21 19:36:26	-->	wolfviking0 (wolfviking0@moz-8hd.3b6.246.162.IP) has joined #rust
2015-05-21 19:36:35	<--	silven (quassel@moz-0roor3.priv.bahnhof.se) has quit (Ping timeout: 121 seconds)
2015-05-21 19:36:35	<--	zxq9 (ceverett@moz-qsm369.mesh.ad.jp) has quit (Quit: Konversation terminated!)
2015-05-21 19:37:01	-->	silven (quassel@moz-0roor3.priv.bahnhof.se) has joined #rust
2015-05-21 19:37:15	-->	Wild_Cat (Max@moz-fa8mvt.dsl.teksavvy.com) has joined #rust
2015-05-21 19:37:46	&pcwalton	countdown to someone writing rustz using the hkt.rs trick
2015-05-21 19:37:55	<--	Wild_Cat (Max@moz-fa8mvt.dsl.teksavvy.com) has quit (Connection closed)
2015-05-21 19:38:45	-->	Wild_Cat (Max@moz-fa8mvt.dsl.teksavvy.com) has joined #rust
2015-05-21 19:38:55	-->	mfranzwa (mike@moz-or1vuv.ca.comcast.net) has joined #rust
2015-05-21 19:39:13	<--	Jesin (Jesin@moz-48mne2.nsvltn.sbcglobal.net) has quit (Quit: Leaving)
2015-05-21 19:39:36	-->	Jesin (Jesin@moz-48mne2.nsvltn.sbcglobal.net) has joined #rust
2015-05-21 19:39:58	-->	new_one (new_one@moz-1t97tq.ujol.1ibb.0101.2620.IP) has joined #rust
2015-05-21 19:39:58	-->	colinsurprenant (colin@moz-q9ee1n.74.electronicbox.net) has joined #rust
2015-05-21 19:40:07	<--	colinsurprenant (colin@moz-q9ee1n.74.electronicbox.net) has quit (Client exited)
2015-05-21 19:40:26	<--	lov2cod1 (Adium@moz-8rkult.eodv.k60l.0119.2620.IP) has quit (Quit: Leaving.)
2015-05-21 19:40:34	@bstrie	mitsuhiko: you mean arenas?
2015-05-21 19:40:45	-->	mkpankov` (mkpankov@moz-1rk.3mh.23.84.IP) has joined #rust
2015-05-21 19:41:04	mitsuhiko	bstrie: if arena means grab a chunk of memory, allocate subsections from there and then free everything in one go, then yes
2015-05-21 19:41:16	mitsuhiko	i always thought arena is fixed chunks
2015-05-21 19:41:28	<--	rossm (ross@moz-rlsbqp.as13285.net) has quit (Ping timeout: 121 seconds)
2015-05-21 19:41:34	mitsuhiko	eg: all allocations have the same size
2015-05-21 19:42:10	<--	dpc__ (dpc@moz-t6gr4b.ca.comcast.net) has quit (Connection closed)
2015-05-21 19:43:13	<--	GGist (Mibbit@moz-07kde0.seattleu.edu) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-21 19:44:22	<--	housl (housl@moz-qnjt4k.ut.comcast.net) has quit (Quit: WeeChat 1.1.1)
2015-05-21 19:46:19	-->	kgrandon (Adium@moz-1uomml.2rkg.9kg1.0101.2620.IP) has joined #rust
2015-05-21 19:47:07	<--	excaliburhissheath (excaliburhi@moz-h98c6v.il.comcast.net) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-05-21 19:47:34	-->	mib_09qf6a (Mibbit@moz-20jp3s.ca.comcast.net) has joined #rust
2015-05-21 19:47:54	nathan7	mitsuhiko: not necessarily
2015-05-21 19:48:06	-->	tno (tomas@moz-bk2j2r.7pm2.so41.08a0.2001.IP) has joined #rust
2015-05-21 19:48:10	<--	dmac (dmac@moz-4kcd1c.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-21 19:48:17	nathan7	see jemalloc's arenas, for example
2015-05-21 19:48:30	ChrisMorgan	blaenk: easier suggested than done, but you’re welcome to try.
2015-05-21 19:49:08	ChrisMorgan	With acrichto apparently on holiday PRs for rust-playpen aren’t being landed so promptly, either. They’re taking a day or two rather than an hour or two! (Horror!)
2015-05-21 19:49:11	<--	Kornel (Kornel@moz-l20jk6.81.in-addr.arpa) has quit (Client exited)
2015-05-21 19:49:36	-->	wixo30 (Mibbit@moz-iah5ju.66.brainstorminternet.net) has joined #rust
2015-05-21 19:49:43	blaenk	ChrisMorgan: no need to actually drag the separation I guess, but as it is, the output covers a large portion of the screen sometimes. it'd be nice if it was kept to some reasonable size and showed scrollbars, at the very least, perhaps
2015-05-21 19:49:52	--	NameNotFound is now known as zz_NameNotFound
2015-05-21 19:50:12	blaenk	at least you're able to close the output, but then you can't refer to the code while you're looking at the output
2015-05-21 19:50:17	<--	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-21 19:50:20	ChrisMorgan	Case in point, https://github.com/rust-lang/rust-playpen/pull/111 hasn’t landed yet, so tests-and-lack-of-fn-main isn’t automatically detected ☹
2015-05-21 19:51:31	<--	wolfviking0 (wolfviking0@moz-8hd.3b6.246.162.IP) has quit (Client exited)
2015-05-21 19:51:31	ChrisMorgan	blaenk: feel free to tweak theh #result flex-basis down from 40% for your own personal use if you wish to.
2015-05-21 19:52:15	ChrisMorgan	Or have a screen wide enouguh that it tiles them horizontally instead of vertically.
2015-05-21 19:52:40	<--	skade (skade@moz-m9ib3m.pools.vodafone-ip.de) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-21 19:52:49	ChrisMorgan	blaenk: you can always scroll both panes fully, can you not?
2015-05-21 19:53:03	-->	jarrednicholls (uid19542@moz-cmdbn3.highgate.irccloud.com) has joined #rust
2015-05-21 19:53:22	<--	bletch (Mibbit@moz-19veku.res.rr.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-21 19:54:20	Kingsquee	how can I force rustc to use a local version of, say, getopts, rather than the version the compiler uses?
2015-05-21 19:54:26	Kingsquee	without cargo, of course
2015-05-21 19:54:41	<--	mib_09qf6a (Mibbit@moz-20jp3s.ca.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-21 19:54:45	-->	aaronk (aaronk@moz-2csnis.static.qwest.net) has joined #rust
2015-05-21 19:54:47	-->	lov2cod (Adium@moz-8rkult.eodv.k60l.0119.2620.IP) has joined #rust
2015-05-21 19:55:15	RCIX	Kingsquee, it may be different for core crates but its possible you can list a local version (or a github version) as dependence in cargo.toml
2015-05-21 19:55:31	-->	kingmahl (kingmahl@moz-klj.ksa.80.69.IP) has joined #rust
2015-05-21 19:56:05	<--	rbranson (rbranson@moz-i7m.9o0.201.199.IP) has quit (Quit: Computer has gone to sleep.)
2015-05-21 19:56:13	bluss	Kingsquee: cargo build --verbose reveals its tricks to do this.. it uses --extern cratename=filename
2015-05-21 19:56:23	<--	pnkfelix (pnkfelix@moz-eljppb.fbx.proxad.net) has quit (Ping timeout: 121 seconds)
2015-05-21 19:56:31	Kingsquee	ooh, okay
2015-05-21 19:56:36	Kingsquee	I was trying -l
2015-05-21 19:56:59	Kingsquee	thanks
2015-05-21 19:58:00	<--	tamird (textual@moz-lje.m54.130.157.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-21 19:58:36	-->	new_one_ (new_one@moz-pv5v7p.ujol.1ibb.0101.2620.IP) has joined #rust
2015-05-21 19:58:42	<--	panicbit (panicbit@moz-rcvp1e.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2015-05-21 19:59:21	-->	Kornel (Kornel@moz-l20jk6.81.in-addr.arpa) has joined #rust
2015-05-21 19:59:46	-->	blorgog (Mibbit@moz-7k2nrs.sub-70-194-35.myvzw.com) has joined #rust
2015-05-21 19:59:50	<--	new_one (new_one@moz-1t97tq.ujol.1ibb.0101.2620.IP) has quit (Ping timeout: 121 seconds)
2015-05-21 20:00:17	-->	fabianvf (fabianvf@moz-fjqmui.va.comcast.net) has joined #rust
2015-05-21 20:00:19	<--	Hinogary (Mibbit@moz-0bc03j.blue4.cz) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-21 20:01:05	-->	Borg (Borg@moz-97jvbc.redstation.co.uk) has joined #rust
2015-05-21 20:01:15	Gankro	dschatzberg is someone who is often on this channel, right? I feel like I've seen them?
2015-05-21 20:02:14	-->	rbranson (rbranson@moz-i7m.9o0.201.199.IP) has joined #rust
2015-05-21 20:02:35	ChrisMorgan	Gankro: looks to have been around for just under a year.
2015-05-21 20:02:56	ChrisMorgan	Fairly commonly for the last six months or so.
2015-05-21 20:03:13	bluss	I talked to them recently
2015-05-21 20:03:36	jarrednicholls	so are all types Sync/Send by default, if their contents are Sync/Send?
2015-05-21 20:03:38	Gankro	Anyone taken a look at his https://github.com/dschatzberg/intrusive/tree/master/src lib?
2015-05-21 20:04:19	<--	fabianvf (fabianvf@moz-fjqmui.va.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-21 20:04:19	jarrednicholls	unsafe impl Sync for .. { } and unsafe impl Send for .. { } I guess does the trick :D
2015-05-21 20:04:29	<--	gandalf (zbraniecki@moz-cp7c4m.ca.comcast.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-21 20:04:59	jarrednicholls	in other words, if something isn't Sync, we need to mark it !Sync explicitly
2015-05-21 20:05:34	<--	ajhager (aajhager@moz-mcdsgi.iplsin.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-21 20:05:46	<--	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-21 20:06:25	Diggsey	jarrednicholls: only if it actually *is* Sync :P
2015-05-21 20:06:28	-->	Stents_ (Stents@moz-r8d.u6c.187.68.IP) has joined #rust
2015-05-21 20:06:40	<--	veqz (veqz@moz-nvr8g6.209.getinternet.no) has quit (Ping timeout: 121 seconds)
2015-05-21 20:06:45	jarrednicholls	Diggsey: ?
2015-05-21 20:06:50	-->	wolfviking0 (wolfviking0@moz-8hd.3b6.246.162.IP) has joined #rust
2015-05-21 20:06:58	-->	jgallagher (john@moz-6ge.dhn.131.24.IP) has joined #rust
2015-05-21 20:07:00	ChrisMorgan	Or, “would otherwise be Sync”.
2015-05-21 20:07:06	&mbrubeck	Gankro: Yes, I'm pretty sure I was talking to dschatzberg here in the last day or two.
2015-05-21 20:07:30	Diggsey	Sync means that a type can be safely accessed from multiple threads concurrently via a shared borrow
2015-05-21 20:07:49	Diggsey	if that's true for your type, then go right ahead
2015-05-21 20:08:18	Gankro	They claim to have implemented a safe intrusive linked list, which I find to be... impossible
2015-05-21 20:08:30	-->	pgonda (peter@moz-s36.0tp.134.75.IP) has joined #rust
2015-05-21 20:08:49	<--	Stents (Stents@moz-r8d.u6c.187.68.IP) has quit (Ping timeout: 121 seconds)
2015-05-21 20:09:10	Diggsey	Gankro: they seem to use macros to generate unsafe implementations
2015-05-21 20:09:14	&mbrubeck	Gankro: Didn't pcwalton claim the same? https://www.reddit.com/r/rust/comments/2wpj70/safe_intrusive_doublylinked_lists_for_rust/
2015-05-21 20:09:23	-->	bytewise (bytewise@moz-3k87d6.adsl.alicedsl.de) has joined #rust
2015-05-21 20:09:24	&mbrubeck	and you objected there too :)
2015-05-21 20:09:40	&mbrubeck	"it's effectively mem::forget(), which is unsafe for a reason" -- not anymore! :)
2015-05-21 20:10:11	jarrednicholls	Diggsey: my question is, is a type Sync if all of its contents are also Sync by default?  I know this rule applies to Send via the compiler.
2015-05-21 20:10:12	Gankro	mbrubeck: Oh snap!
2015-05-21 20:10:46	Diggsey	jarrednicholls: yes, it is
2015-05-21 20:10:50	<--	lbn (lbn@moz-h4eamh.cable.virginm.net) has quit (Quit: Leaving.)
2015-05-21 20:10:50	bluss	mbrubeck: a lot has happened in 2 months!
2015-05-21 20:10:51	jarrednicholls	ok cool, thank you sir
2015-05-21 20:11:00	<--	eric_lagergren (barsonme@moz-hshokg.q6t2.2174.0008.2601.IP) has quit (Quit: Leaving)
2015-05-21 20:11:09	&mbrubeck	bluss: Yeah, in my memory this Reddit thread was from, like, a year ago.
2015-05-21 20:12:59	-->	copycat (Thunderbird@moz-dpm.8hc.223.111.IP) has joined #rust
2015-05-21 20:13:04	<--	wixo30 (Mibbit@moz-iah5ju.66.brainstorminternet.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-21 20:13:17	<--	zacts (user@moz-qrtjuh.nm.comcast.net) has quit (Quit: ERC Version 5.3 (IRC client for Emacs))
2015-05-21 20:13:33	-->	wixo30 (Mibbit@moz-iah5ju.66.brainstorminternet.net) has joined #rust
2015-05-21 20:13:38	-->	d356 (d@moz-go99rq.res.bhn.net) has joined #rust
2015-05-21 20:13:51	aaronk	what's the purpose of type aliases?
2015-05-21 20:14:08	-->	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has joined #rust
2015-05-21 20:14:16	&pcwalton	saving typing
2015-05-21 20:14:25	&pcwalton	also, associated types
2015-05-21 20:14:58	Diggsey	aaronk: sometimes you have long generic names like Iterator<Foo<Bar<T>>> or other craziness - it's easier just to give it a short name
2015-05-21 20:15:13	Gankro	mbrubeck: Ok pcwalton's design uses allocation, which is definitely sound
2015-05-21 20:15:33	Gankro	But it seems like dschatzberg was claiming allocation wasn't necessary
2015-05-21 20:15:40	aaronk	@Diggsey that example is much better than the examples here: http://doc.rust-lang.org/stable/book/type-aliases.html
2015-05-21 20:15:54	ChrisMorgan	pcwalton: associated types aren’t type aliases.
2015-05-21 20:16:17	-->	brainproxy (michael@moz-qbqsu1.secondstreetmedia.com) has joined #rust
2015-05-21 20:16:25	ChrisMorgan	pcwalton: I mean, type aliases really are aliases, with the result that you can’t do things like recursion in them because they truly are expanded as they are.
2015-05-21 20:16:32	aaronk	I first encountered a type alias in the Iron example:
2015-05-21 20:16:32	aaronk	impl Key for ResponseTime { type Value = u64; } 
2015-05-21 20:16:41	ChrisMorgan	Whereas associated types aren’t aliases like that.
2015-05-21 20:16:48	aaronk	not totally sure what that is for
2015-05-21 20:16:51	<--	dnaeon (uid87120@moz-9emdl0.kkpo.i718.8300.2604.IP) has quit (Quit: Connection closed for inactivity)
2015-05-21 20:16:56	ChrisMorgan	aaronk: that’s not a type alias, that’s an associated type.
2015-05-21 20:17:17	bluss	type aliases can have where clauses. It's rad
2015-05-21 20:17:26	Gankro	...nah dschatz's uses Box
2015-05-21 20:17:27	ChrisMorgan	Associated types are basically a restricted form of generics, with the restrictions making them more useful.
2015-05-21 20:17:32	Gankro	Alright my world is sound again
2015-05-21 20:17:44	Gankro	True Intrusive lists are still unpossible
2015-05-21 20:17:47	<--	Ralith (ralith@moz-miv.lne.251.63.IP) has quit (Ping timeout: 121 seconds)
2015-05-21 20:17:51	aaronk	@ChrisMorgan they both have the same syntax?
2015-05-21 20:17:53	-->	jophish (jophish@moz-epocft.broadband.tesco.net) has joined #rust
2015-05-21 20:17:59	-->	choplin (choplin@moz-goeln1.t6mc.g9m6.001a.240d.IP) has joined #rust
2015-05-21 20:18:04	h`e`y`ladies	can someone point me to an example of streaming an http response with hyper?
2015-05-21 20:18:19	Diggsey	dschatz's linked list implementation doesn't seem to allow moving elements between collections either which seems to kindof defeat the point of a linked list...
2015-05-21 20:18:22	<--	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-21 20:18:26	<--	wixo30 (Mibbit@moz-iah5ju.66.brainstorminternet.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-21 20:18:28	-->	ajhager (aajhager@moz-mcdsgi.iplsin.sbcglobal.net) has joined #rust
2015-05-21 20:18:32	bluss	Gankro: he's got the trait OwningPointer which can be impled by &mut according to a comment
2015-05-21 20:18:44	-->	delma_ (Mibbit@moz-8ibfpd.bb.dnainternet.fi) has joined #rust
2015-05-21 20:18:52	-->	lyc (lyc@moz-jft.nr8.226.207.IP) has joined #rust
2015-05-21 20:19:04	<--	jwilm (jwilm@moz-1rin99.hfc.comcastbusiness.net) has quit (Quit: Leaving...)
2015-05-21 20:19:09	-->	pyon (pyon@moz-b0l.mdl.7.179.IP) has joined #rust
2015-05-21 20:19:28	<--	sfalcon (textual@moz-jqf.n3j.210.209.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-21 20:19:32	delma_	So it seems to be impossible to have HashSet full of Trait objects?
2015-05-21 20:19:41	ChrisMorgan	aaronk: they both use the `type` keyword, if that’s what you mean. But they are disjoint.
2015-05-21 20:19:41	delma_	Cause Hash is not object safe
2015-05-21 20:19:45	Diggsey	aaronk: Associated types appear inside trait implementations, ie. it will look like "impl X for Y { type Z = ... }"
2015-05-21 20:19:49	bluss	delma_: it's possible
2015-05-21 20:20:01	delma_	bluss: how?
2015-05-21 20:20:17	aaronk	@ChrisMorgan @Diggsey ok so the difference is appearing inside a trait implementation?
2015-05-21 20:20:23	bluss	delma_: for Box<Trait> you don't need or want Trait to inherit Eq + Hash. Instead you must impl Eq + Hash on the Box<Trait> type itself
2015-05-21 20:20:40	delma_	aaahhhh
2015-05-21 20:20:41	Gankro	bluss: so I know nothing about this stuff, but my understanding is that e.g. an intrusive list was supposed to support totally on the stack + movable nodes
2015-05-21 20:20:44	<--	kgrandon (Adium@moz-1uomml.2rkg.9kg1.0101.2620.IP) has quit (Quit: Leaving.)
2015-05-21 20:20:50	Gankro	bluss: This design basically is "pick one"
2015-05-21 20:20:57	--	drasa is now known as GolDDranks
2015-05-21 20:21:16	ChrisMorgan	aaronk: a type alias is purely and truly an alias, just to save typing. Associated types are a really cool feature that add quite a bit of value to the language.
2015-05-21 20:21:19	Diggsey	aaronk: also when you declare a trait: "trait X { type Y; }", that's saying that there's an associated type "Y" which all trait implementations must "fill in"
2015-05-21 20:21:55	<--	jophish (jophish@moz-epocft.broadband.tesco.net) has quit (Ping timeout: 121 seconds)
2015-05-21 20:22:00	aaronk	@Diggsey ahhh interesting
2015-05-21 20:22:09	Diggsey	so if I then had "impl X for MyType { type Y = i32; }"
2015-05-21 20:22:10	<--	wolfviking0 (wolfviking0@moz-8hd.3b6.246.162.IP) has quit (Client exited)
2015-05-21 20:22:46	Diggsey	that means <MyType as X>::Y resolves to i32
2015-05-21 20:22:54	<--	lyc (lyc@moz-jft.nr8.226.207.IP) has quit (Ping timeout: 121 seconds)
2015-05-21 20:23:17	-->	kgrandon (Adium@moz-de7mjp.2rkg.9kg1.0101.2620.IP) has joined #rust
2015-05-21 20:23:28	-->	peter (peter@moz-e11i63.cable.virginm.net) has joined #rust
2015-05-21 20:23:36	<--	Takronix (Takronix@moz-nm15k0.hr.cox.net) has quit (Quit: Nettalk6 - www.ntalk.de)
2015-05-21 20:23:36	<--	blorgog (Mibbit@moz-7k2nrs.sub-70-194-35.myvzw.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-21 20:24:33	aaronk	coming from Go there's quite a bit more complexity to Rust. Will take a while to get the hang of things.
2015-05-21 20:24:36	c_wraith	ChrisMorgan: are those the same as associated types in Haskell?
2015-05-21 20:24:44	ChrisMorgan	No idea.
2015-05-21 20:24:49	c_wraith	ChrisMorgan: looks rather like it from the example you showed.
2015-05-21 20:25:48	GolDDranks	ChrisMorgan: Thanks for you answer @ stackoverflow
2015-05-21 20:26:39	ChrisMorgan	You’re welcome.
2015-05-21 20:27:32	<--	peter (peter@moz-e11i63.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2015-05-21 20:28:04	-->	dhole_ (dhole@moz-h5sigm.dynamic.jazztel.es) has joined #rust
2015-05-21 20:29:38	delma_	if I have trait A: B { } and I have impl Hash + Eq for Box<B> I cannot directly have HashSet<Box<A>>?
2015-05-21 20:30:14	<--	kgrandon (Adium@moz-de7mjp.2rkg.9kg1.0101.2620.IP) has quit (Quit: Leaving.)
2015-05-21 20:30:42	<--	dhole (dhole@moz-akqjce.dynamic.jazztel.es) has quit (Ping timeout: 121 seconds)
2015-05-21 20:30:54	<--	aldeka (quassel@moz-qqf.of6.243.162.IP) has quit (Connection closed)
2015-05-21 20:30:55	-->	aldeka (quassel@moz-qqf.of6.243.162.IP) has joined #rust
2015-05-21 20:31:12	-->	cursivecode (textual@moz-4u56i9.res.bhn.net) has joined #rust
2015-05-21 20:32:28	<--	new_one_ (new_one@moz-pv5v7p.ujol.1ibb.0101.2620.IP) has quit (Ping timeout: 121 seconds)
2015-05-21 20:33:33	delma_	Is there way to implement Hash + Eq for all subtraits of a trait?
2015-05-21 20:33:39	-->	phao (phao@moz-ke71b9.veloxzone.com.br) has joined #rust
2015-05-21 20:33:54	phao	wow 900 people!!!
2015-05-21 20:33:55	phao	more than ##C++ @ freenode
2015-05-21 20:34:15	<--	danyel (danyel@moz-qin5b9.dip0.t-ipconnect.de) has quit (Client exited)
2015-05-21 20:34:21	RCIX	ive been using atom + terminal plugin + rust syntax plugin for dev thus far
2015-05-21 20:34:21	XMPPwocky	we hit 1,000 at least when 1.0 came out
2015-05-21 20:34:28	<--	ajhager (aajhager@moz-mcdsgi.iplsin.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-21 20:34:34	Diggsey	delma: The problem isn't that it's a subtrait, it's because the implementation of Hash + Eq is specifically for Box<B>
2015-05-21 20:34:35	RCIX	what other options are there for rust IDE-likes
2015-05-21 20:34:49	phao	XMPPwocky, I see
2015-05-21 20:34:53	phao	pretty cool... 
2015-05-21 20:35:00	Diggsey	delma: And there's no inherent relationship between Box<B> and Box<A> even though A and B are related
2015-05-21 20:35:19	delma_	Yeah but how I implement it for Box<T> where T: B?
2015-05-21 20:35:56	Diggsey	delma: you should be able to just implement it for B
2015-05-21 20:36:07	Diggsey	Box<T> already implements Hash + Eq whenever T does
2015-05-21 20:36:14	-->	tamird (textual@moz-cb8kq7.east.verizon.net) has joined #rust
2015-05-21 20:36:20	<--	Jesin (Jesin@moz-48mne2.nsvltn.sbcglobal.net) has quit (Quit: Leaving)
2015-05-21 20:37:06	h`e`y`ladies	ISTM that hyper is a bit thin on usage examples. not criticizing, just noticing. it would be nice to flesh them out, but I may be missing another resource
2015-05-21 20:37:58	h`e`y`ladies	I have figured out that I need the ChunkedReader, but I am not finding much by way of documentation
2015-05-21 20:38:39	-->	fmcauley (fmcauley@moz-n1jjb3.res.rr.com) has joined #rust
2015-05-21 20:39:21	-->	Astrum|Lap (Astrum|Lap@moz-skcefh.co.comcast.net) has joined #rust
2015-05-21 20:40:15	-->	dpc (dpc@moz-t6gr4b.ca.comcast.net) has joined #rust
2015-05-21 20:41:30	--	zz_NameNotFound is now known as NameNotFound
2015-05-21 20:42:30	<--	mfranzwa (mike@moz-or1vuv.ca.comcast.net) has quit (Client exited)
2015-05-21 20:43:01	-->	gavinb (gavinb@moz-f0m.sk9.255.125.IP) has joined #rust
2015-05-21 20:44:10	<--	jshs (jshs@moz-09d96r.dip0.t-ipconnect.de) has quit (Client exited)
2015-05-21 20:44:29	<--	cursivecode (textual@moz-4u56i9.res.bhn.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-21 20:45:52	<--	aaronk (aaronk@moz-2csnis.static.qwest.net) has quit (Connection closed)
2015-05-21 20:46:22	<--	thelink2012 (Mibbit@moz-59l.6ju.214.186.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-21 20:47:13	-->	fyolnish (fyolnish@moz-soopfn.ocn.ne.jp) has joined #rust
2015-05-21 20:47:53	-->	diego (Mibbit@moz-69p.i83.83.201.IP) has joined #rust
2015-05-21 20:50:27	-->	logan_e (logan_e@moz-ltn.qg3.218.73.IP) has joined #rust
2015-05-21 20:50:46	<--	demilux_ (demilux@moz-fk1.kt4.14.64.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-21 20:50:48	fmcauley	this is a silly question but what do ‘Patterns’ mean in Rust? I’m reading through the section on in the online book it’s really explain the concept it really more exmple.
2015-05-21 20:51:04	--	NameNotFound is now known as zz_NameNotFound
2015-05-21 20:51:19	fmcauley	grammer fail
2015-05-21 20:51:45	fmcauley	I want to lean more of the Pattern concept was well as see examples of Patterns in Rust.
2015-05-21 20:51:48	-->	aatch (james@moz-8r6eer.orns.ubhm.e000.2406.IP) has joined #rust
2015-05-21 20:52:03	<--	dpc (dpc@moz-t6gr4b.ca.comcast.net) has quit (Connection closed)
2015-05-21 20:52:38	--	irc: disconnected from server
2015-05-21 20:52:55	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-21 20:52:55	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-21 20:52:55	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-21 20:52:55	--	Channel #rust: 933 nicks (15 ops, 0 halfops, 2 voices, 916 normals)
2015-05-21 20:52:56	-->	Morten (Morten@moz-ao432p.bb.online.no) has joined #rust
2015-05-21 20:52:57	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-21 20:53:10	-->	mfranzwa (mike@moz-or1vuv.ca.comcast.net) has joined #rust
2015-05-21 20:53:57	&mbrubeck	fmcauley: Rust's patterns are similar to other languages with pattern-matching, like Erlang, Haskell, and ML. So if the Rust docs don't make sense, it might help to look at some of those too.
2015-05-21 20:54:19	<--	blaenk (blaenkdenum@moz-em283u.res.rr.com) has quit (Connection closed)
2015-05-21 20:54:27	&mbrubeck	fmcauley: When you say `match x { y => z }`
2015-05-21 20:54:32	&mbrubeck	the `y` part is a pattern.
2015-05-21 20:54:39	-->	blaenk (blaenkdenum@moz-em283u.res.rr.com) has joined #rust
2015-05-21 20:54:41	-->	jminer (Instantbird@moz-b1u.qch.163.66.IP) has joined #rust
2015-05-21 20:54:44	fmcauley	Okay!
2015-05-21 20:54:59	fmcauley	I get it. (I think :((
2015-05-21 20:55:04	fmcauley	:)
2015-05-21 20:55:11	delma_	This is what I am currently trying with traits in HashSet: http://bit.ly/1JEO4v1
2015-05-21 20:55:33	cworth	Here's a simple example to illustrate a question I have. It's clear enough to me why this code gives the error it does (`target` does not live long enough):
2015-05-21 20:55:36	cworth	http://is.gd/EYTPpX
2015-05-21 20:55:49	cworth	But it's not clear to me what I should do to fix that.
2015-05-21 20:55:50	-->	zhb (zhb@moz-hie.84m.60.59.IP) has joined #rust
2015-05-21 20:56:02	&mbrubeck	if x is, say, an integer, then a pattern can be an integer literal, or it can be a variable gets bound to `x`.  match x { 0 => "none", 1 => "one", 2 => "a couple", z => "some" }
2015-05-21 20:56:19	<--	c_wraith (c_wraith@moz-7i8.v6v.191.131.IP) has quit (Quit: Leaving)
2015-05-21 20:56:55	--	irc: disconnected from server
2015-05-21 20:57:07	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-21 20:57:07	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-21 20:57:07	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-21 20:57:07	--	Channel #rust: 938 nicks (15 ops, 0 halfops, 2 voices, 921 normals)
2015-05-21 20:57:09	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-21 20:57:19	<--	mfranzwa (mike@moz-or1vuv.ca.comcast.net) has quit (Client exited)
2015-05-21 20:57:24	-->	mfranzwa (mike@moz-or1vuv.ca.comcast.net) has joined #rust
2015-05-21 20:57:37	-->	dpc (dpc@moz-2ov.l9q.228.216.IP) has joined #rust
2015-05-21 20:57:40	&mbrubeck	cworth: Or you can use Cow<str> which can be either String or &str, if you want to optimize where possible.
2015-05-21 20:57:41	-->	Jesin (Jesin@moz-48mne2.nsvltn.sbcglobal.net) has joined #rust
2015-05-21 20:58:04	-->	harrisonclarke (harrisoncla@moz-uur7pt.eastlink.ca) has joined #rust
2015-05-21 20:58:43	&mbrubeck	delma_: http://is.gd/WVt0ib
2015-05-21 20:58:51	<--	genbattle (genbattle@moz-4v0.gkd.16.182.IP) has quit (Quit: Leaving)
2015-05-21 20:59:08	cworth	mbrubeck: Thanks for the tip on String.
2015-05-21 20:59:24	<--	Kornel (Kornel@moz-l20jk6.81.in-addr.arpa) has quit (Client exited)
2015-05-21 20:59:39	-->	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has joined #rust
2015-05-21 20:59:44	bluss	delma_: subtyping and so is tricky with trait objects.
2015-05-21 21:00:10	cworth	mbrubeck: Is there a way to do something like "let foo = <some_string_expression> but allocated on the heap with the same lifetime as <some binding>?"
2015-05-21 21:00:19	-->	zynisch_o7 (zynisch_o7@moz-6eh1ju.dyn.optonline.net) has joined #rust
2015-05-21 21:00:37	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Connection closed)
2015-05-21 21:00:42	&mbrubeck	cworth: String is allocated on the heap, and will be deallocated when its owner goes out of scope.
2015-05-21 21:00:47	cworth	mbrubeck: I've got my example working with String now, so that's good.
2015-05-21 21:00:58	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-21 21:01:06	&mbrubeck	cworth: So if you move the String into the HashMap, it'll be destroyed when the HashMap is (unless someone moves it back out first).
2015-05-21 21:01:11	bluss	delma_: I don't know any other way that to impl Hash + Eq on the Box<B> type directly
2015-05-21 21:01:43	cworth	mbrubeck: Right. So the code I have working here is exactly what I described. And the move semantic is exactly what I wanted.
2015-05-21 21:01:57	&mbrubeck	Yup!
2015-05-21 21:02:15	<--	chickensalad (brandon@moz-ngh.k9n.131.104.IP) has quit (Connection closed)
2015-05-21 21:02:19	cworth	mbrubeck: So HashMap's insert is fancy in either implementing move or not, (something with the Borrow trait)?
2015-05-21 21:02:39	<--	hroi (hroi@moz-d273ub.static.netgroup.dk) has quit (Ping timeout: 121 seconds)
2015-05-21 21:03:10	delma_	mbrubeck: That doesn't really help... Cause final usage is having struct with HashSet of A:s and I need to access A:s methods.
2015-05-21 21:03:19	&mbrubeck	delma_: Ah, I see.
2015-05-21 21:03:27	<--	krdln (krdln@moz-ohe9vg.dynamic.chello.pl) has quit (Ping timeout: 121 seconds)
2015-05-21 21:03:36	delma_	that your edit just changed it from HashSet<A> to HashSet<Identfiable>
2015-05-21 21:03:37	-->	kgrandon (Adium@moz-od19rp.2rkg.9kg1.0101.2620.IP) has joined #rust
2015-05-21 21:03:42	-->	grobinson (grobinson@moz-tgg.u9o.56.172.IP) has joined #rust
2015-05-21 21:04:12	&mbrubeck	delma_: It was HashSet<B> before my edit.
2015-05-21 21:04:19	<--	phao (phao@moz-ke71b9.veloxzone.com.br) has left #rust ("Leaving")
2015-05-21 21:04:21	<--	gavinb (gavinb@moz-f0m.sk9.255.125.IP) has quit (Client exited)
2015-05-21 21:04:27	&mbrubeck	I man HashSet<Box<B>>
2015-05-21 21:05:01	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Ping timeout: 121 seconds)
2015-05-21 21:05:03	cworth	mbrubeck: I think what I need to do at this point is to implement some exceedingly cheesy vector and hash collections to really get all the semantics to sink in better.
2015-05-21 21:05:42	delma_	well same problem
2015-05-21 21:06:08	delma_	forgot explit type annotation
2015-05-21 21:06:19	delma_	copied and simplified the real code xD
2015-05-21 21:06:23	<--	kingmahl (kingmahl@moz-klj.ksa.80.69.IP) has quit (Quit: Konversation terminated!)
2015-05-21 21:06:24	&mbrubeck	cworth: HashMap's insert is like any other function - if you pass something by value it moves (or copies) it.  If you pass it a reference (like an &str or any other &T), it borrows the thing referenced.
2015-05-21 21:06:33	cworth	mbrubeck: Or rather, insert() is acting consistently, and the difference is that in my non-working case it's the reference that was moved.
2015-05-21 21:06:38	&mbrubeck	yeah
2015-05-21 21:06:43	cworth	mbrubeck: Yes, thanks.
2015-05-21 21:06:50	-->	kingmahl (kingmahl@moz-klj.ksa.80.69.IP) has joined #rust
2015-05-21 21:06:54	cworth	So I am starting to get it (I hope) ...
2015-05-21 21:07:56	<--	fmcauley (fmcauley@moz-n1jjb3.res.rr.com) has quit (Client exited)
2015-05-21 21:08:21	<--	lov2cod (Adium@moz-8rkult.eodv.k60l.0119.2620.IP) has quit (Quit: Leaving.)
2015-05-21 21:08:48	<--	jfredett (Adium@moz-a9ilmn.fios.verizon.net) has quit (Quit: Leaving.)
2015-05-21 21:09:00	-->	Outlander (Mr@moz-tiv139.internode.on.net) has joined #rust
2015-05-21 21:09:10	<--	jimb (user@moz-09a.i8g.126.207.IP) has quit (Ping timeout: 121 seconds)
2015-05-21 21:09:18	-->	danyel (danyel@moz-qin5b9.dip0.t-ipconnect.de) has joined #rust
2015-05-21 21:09:41	delma_	https://play.rust-lang.org/?gist=9569f73e745ae98a0ca2&version=stable
2015-05-21 21:09:58	delma_	Now it has even better problem: Doesn't find insert
2015-05-21 21:12:22	-->	KLP (KLP@moz-qdcjho.res.rr.com) has joined #rust
2015-05-21 21:13:37	<--	grobinson (grobinson@moz-tgg.u9o.56.172.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-21 21:13:39	<--	Guest67 (textual@moz-gfs9v0.fios.verizon.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-21 21:13:44	talchas	delma_: traits for Box<Identifiable> don't carry over for Box<A>
2015-05-21 21:14:03	delma_	Well how can I make them carry over?
2015-05-21 21:14:25	-->	nafis (nafis@moz-i1dvni.bc.googleusercontent.com) has joined #rust
2015-05-21 21:14:31	-->	tkellen (tkellen@moz-f5ji1n.vt.comcast.net) has joined #rust
2015-05-21 21:15:50	<--	Grimsley (Grimsley@moz-5b2o65.dglo.vc9u.0306.2602.IP) has quit (Quit: Leaving)
2015-05-21 21:15:58	<--	mfranzwa (mike@moz-or1vuv.ca.comcast.net) has quit (Client exited)
2015-05-21 21:17:06	-->	jdekstrand (Jennifer@moz-okjt9t.dyn.centurytel.net) has joined #rust
2015-05-21 21:17:24	talchas	I'm not sure there is
2015-05-21 21:17:36	<--	Sho (sho@moz-o6e.jgh.28.5.IP) has quit (Quit: Konversation terminated!)
2015-05-21 21:17:50	-->	zhoeon (fc@moz-cuhqb2.cable.teksavvy.com) has joined #rust
2015-05-21 21:18:02	delma_	:/
2015-05-21 21:18:17	<--	slurps-mad-rips (slurps-mad-@moz-o2c.uaj.44.17.IP) has quit (Quit: Connection reset by bear)
2015-05-21 21:19:29	<--	zhoeon (fc@moz-cuhqb2.cable.teksavvy.com) has quit (Quit: leaving)
2015-05-21 21:19:37	-->	lyc (lyc@moz-jft.nr8.226.207.IP) has joined #rust
2015-05-21 21:19:55	<--	rbranson (rbranson@moz-i7m.9o0.201.199.IP) has quit (Quit: Computer has gone to sleep.)
2015-05-21 21:19:57	-->	bombless (bombless@moz-pk7.rup.13.122.IP) has joined #rust
2015-05-21 21:21:44	aidanhs	is there a way to specify a type as part of an expression? e.g. the second statement here: `let x: usize = 1; myfn(&x: &usize);`
2015-05-21 21:21:47	aidanhs	?
2015-05-21 21:21:48	-->	wlsnx (zhuli@moz-d2d.7sg.64.112.IP) has joined #rust
2015-05-21 21:22:02	<--	danyel (danyel@moz-qin5b9.dip0.t-ipconnect.de) has quit (Client exited)
2015-05-21 21:22:13	aidanhs	it seems like that would be helpful in making deref coercions work
2015-05-21 21:22:20	-->	fkaa (tundmatu@moz-501od2.business.telia.com) has joined #rust
2015-05-21 21:22:50	@steveklabnik	aidanhs: that's called 'type ascription'
2015-05-21 21:23:05	@steveklabnik	it's ... not implemented yet? or something? i forget actually
2015-05-21 21:23:11	<--	bluss (bluss@moz-ec5o68.cust.bredbandsbolaget.se) has quit (Ping timeout: 121 seconds)
2015-05-21 21:23:27	shep-home	ohai steveklabnik 
2015-05-21 21:23:32	@steveklabnik	heyyy shep-home <3
2015-05-21 21:23:32	aidanhs	I'm just finding &** a little...opaque
2015-05-21 21:23:37	bombless	Hmm it's implemented I think, waiting for rebase and merging :)
2015-05-21 21:23:39	<--	lyc (lyc@moz-jft.nr8.226.207.IP) has quit (Ping timeout: 121 seconds)
2015-05-21 21:23:46	@steveklabnik	bombless: yeah, i guess i meant 'merged'
2015-05-21 21:23:52	@steveklabnik	it isn't implemented till it gets through ci ;)
2015-05-21 21:24:15	<--	SpaceManiac (Tad@moz-g50q8a.dyn.suddenlink.net) has quit (Ping timeout: 121 seconds)
2015-05-21 21:24:15	-->	peter (peter@moz-e11i63.cable.virginm.net) has joined #rust
2015-05-21 21:24:19	-->	cursivecode (textual@moz-4u56i9.res.bhn.net) has joined #rust
2015-05-21 21:24:54	-->	SiegeLord (sl@moz-9jtaei.ca.comcast.net) has joined #rust
2015-05-21 21:25:03	shep-home	bombless: I have discovered a truly marvellous implementation of type ascription, which this pull request is too small to contain
2015-05-21 21:25:30	-->	Azdle (Azdle@moz-fv6arh.mn.comcast.net) has joined #rust
2015-05-21 21:25:44	aidanhs	#23416 ?
2015-05-21 21:26:01	-->	mattico (matt@moz-d3u46j.mpls.qwest.net) has joined #rust
2015-05-21 21:26:48	shep-home	yeah https://github.com/rust-lang/rust/issues/23416
2015-05-21 21:26:59	-->	mithsv (mithsv@moz-gahb71.dynamic.caiway.nl) has joined #rust
2015-05-21 21:27:25	aidanhs	subscribed, thanks
2015-05-21 21:28:19	<--	peter (peter@moz-e11i63.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2015-05-21 21:28:24	Azdle	Is there a simple way to tell rust that the function I'm passing into another function, which is marked as unsafe (well it's an extern C), is being used in a safe way? That is to say I want to fix:  expected `extern "C" fn(*mut libc::types::common::c95::c_void) -> i32`, found `unsafe extern "C" fn(*mut libc::types::common::c95::c_void) -> i32`
2015-05-21 21:28:24	Azdle	(expected normal fn, found unsafe fn)
2015-05-21 21:29:25	-->	godlikesme (godlikesme@moz-2a2.dsd.174.79.IP) has joined #rust
2015-05-21 21:29:32	-->	arfy (arfy@moz-qpq7ka.tpgi.com.au) has joined #rust
2015-05-21 21:29:59	swgillespie	does rustc do all ast transformations before type resolution?
2015-05-21 21:30:25	aatch	Azdle, nope, unsafe means "trust me, I know what I'm doing", it's how you tell the compiler that the function is being used in a safe way.
2015-05-21 21:30:29	-->	mib_01i765 (Mibbit@moz-rq6tk6.res.rr.com) has joined #rust
2015-05-21 21:30:52	<--	mib_01i765 (Mibbit@moz-rq6tk6.res.rr.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-21 21:31:01	aatch	Azdle, remember, you shouldn't be doing anything that is *actually* unsafe, that would be bad. `unsafe` is more like `potentially unsafe`.
2015-05-21 21:31:12	aatch	swgillespie, yes.
2015-05-21 21:31:22	-->	dhole (dhole@moz-g7rne3.dynamic.jazztel.es) has joined #rust
2015-05-21 21:31:28	arfy	hi all. while I'm enjoying coding with rust so far, I'm finding it a little tricky navigating the standard library. For example. When dealing with strings, I'd expect all the string manipulation functions to be apart of std::string::String. However, for example, I had to go looking in another trait, to find such things as case conversion. Is there a reason for this organization, and what's the 
2015-05-21 21:31:28	arfy	best way to learn the layout of the library?
2015-05-21 21:31:35	bombless	replace `unsafe {}` with `trust {}` sounds good ;)
2015-05-21 21:32:04	@steveklabnik	bombless: i tried
2015-05-21 21:32:05	swgillespie	aatch: that's interesting, thanks
2015-05-21 21:32:05	@steveklabnik	;)
2015-05-21 21:32:26	aatch	swgillespie, the rough pipeline is: `parsing -> expansion -> name resolution -> correctness checking -> code generation`
2015-05-21 21:32:28	@steveklabnik	arfy: this is a hard thing, generally. we haven't figured out a great way to present it
2015-05-21 21:33:04	<--	dhole_ (dhole@moz-h5sigm.dynamic.jazztel.es) has quit (Ping timeout: 121 seconds)
2015-05-21 21:33:18	aatch	arfy, well most methods for strings are on `str`, actually.
2015-05-21 21:33:38	Azdle	aatch, Right, I understand that. What I'm doing is "safe to do", but the functions are `unsafe`. I'm passing one C function into another C function which is perfectly proper to do and works when I do the same thing in C, I just need to be able to tell rustc "trust me I'm using this `unsafe` function in a safe way".
2015-05-21 21:33:58	ChrisMorgan	bombless, steveklabnik: `unsafe` says “this is unsafe code”, which is perfectly in keeping with the rest of Rust; `fn` means “this is a function”, for example.
2015-05-21 21:34:15	@steveklabnik	ChrisMorgan: i'm not totally unhappy with how things turned out
2015-05-21 21:34:16	<--	godlikesme (godlikesme@moz-2a2.dsd.174.79.IP) has quit (Ping timeout: 121 seconds)
2015-05-21 21:34:18	@steveklabnik	:)
2015-05-21 21:34:23	swgillespie	aatch: interesting. so is the NodeId field on AST elements for keying dictionaries of data created by the various correctness analysis passes?
2015-05-21 21:34:32	<--	flavius (flavius@moz-pik2l3.tmpp.le52.8388.2a02.IP) has quit (Ping timeout: 121 seconds)
2015-05-21 21:34:33	<--	h`e`y`ladies (Mibbit@moz-rgi.85v.115.76.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-21 21:34:37	 *	swgillespie is trying to make a small compiler
2015-05-21 21:34:42	aatch	swgillespie, and a million other things.
2015-05-21 21:34:45	swgillespie	haha
2015-05-21 21:34:51	ChrisMorgan	steveklabnik: that was a large part of my reason for disagreeing with people that wanted to change `unsafe`. There’s also the fact that keeping just one keyword for it all is nice.
2015-05-21 21:34:58	-->	playjax (chatzilla@moz-9lcllo.optusnet.com.au) has joined #rust
2015-05-21 21:35:04	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-21 21:35:15	aatch	swgillespie, it's not a terrible set-up, but personally I'd prefer that most of the information was stored inline.
2015-05-21 21:35:19	<--	delma_ (Mibbit@moz-8ibfpd.bb.dnainternet.fi) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-21 21:35:26	<--	Borg (Borg@moz-97jvbc.redstation.co.uk) has quit (Connection closed)
2015-05-21 21:35:31	arfy	steveklabnik: thx, yeah I figured it's still a WIP, but hopefully as more developers come on board we can work together and figure things out.
2015-05-21 21:35:37	aatch	swgillespie, don't be afraid to have multiple representations of the program.
2015-05-21 21:35:42	-->	Lee1092 (uid13277@moz-p2e1ii.brockwell.irccloud.com) has joined #rust
2015-05-21 21:35:59	swgillespie	aatch: i made a compiler once that stored type information on the AST nodes, and that was a world of unending pain
2015-05-21 21:36:01	-->	meunierd (dmeunier@moz-glf54u.cpe.sourcecable.net) has joined #rust
2015-05-21 21:36:21	swgillespie	but i still like the idea and might try it
2015-05-21 21:36:33	Azdle	aatch, what I'm actually trying to acomplish is passing https://github.com/jcmoyer/rust-lua53/blob/master/src/ffi/lualib.rs#L34 to https://github.com/jcmoyer/rust-lua53/blob/master/src/wrapper/state.rs#L1268-L1272
2015-05-21 21:36:36	aatch	swgillespie, same AST or different AST? Because I'd have a second AST for post-typechecking.
2015-05-21 21:36:56	swgillespie	Asandari: same AST. I studied roslyn and they use a different AST
2015-05-21 21:37:07	swgillespie	a "bound" ast
2015-05-21 21:37:23	aatch	swgillespie, I'm guessing you meant to direct that at me?
2015-05-21 21:37:27	swgillespie	oh yes, sorry Asandari 
2015-05-21 21:37:43	swgillespie	the perils of tab completion
2015-05-21 21:39:07	--	irc: disconnected from server
2015-05-21 21:39:24	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-21 21:39:24	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-21 21:39:24	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-21 21:39:24	--	Channel #rust: 937 nicks (15 ops, 0 halfops, 2 voices, 920 normals)
2015-05-21 21:39:26	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-21 21:39:36	aatch	swgillespie, well a typed AST can be an IL, it's not like the definition is particularly strict.
2015-05-21 21:39:43	<--	tkellen (tkellen@moz-f5ji1n.vt.comcast.net) has quit (Client exited)
2015-05-21 21:39:44	swgillespie	i guess that's true
2015-05-21 21:40:26	aatch	swgillespie, personally, I want rustc to have AST -> Typed AST -> CFG -> High-Level IR -> LLVM IR
2015-05-21 21:41:24	--	irc: disconnected from server
2015-05-21 21:41:36	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-21 21:41:36	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-21 21:41:36	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-21 21:41:36	--	Channel #rust: 938 nicks (15 ops, 0 halfops, 2 voices, 921 normals)
2015-05-21 21:41:38	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-21 21:41:42	XMPPwocky	in general
2015-05-21 21:41:51	bytetrip	Yes ofc, but they also probably know Rust well
2015-05-21 21:42:01	aatch	bytetrip, they're pretty different languages. That said, there's not much you can do in C that you can't do in Rust.
2015-05-21 21:42:05	bytetrip	Im curiosu why you use it :)
2015-05-21 21:42:07	XMPPwocky	rust is more of a C++ competitor than C
2015-05-21 21:42:42	--	zz_NameNotFound is now known as NameNotFound
2015-05-21 21:42:52	bytetrip	Ok aatch, Ive seen some good info about that actually, and it looks like anythign that's not built out in Rust yet can hook C/C++ libraries anyways
2015-05-21 21:43:10	bytetrip	What made you chose to use it? Why do you like it?
2015-05-21 21:43:13	aatch	bytetrip, we can't really tell you why you, personally, should learn Rust though.
2015-05-21 21:43:32	aidanhs	having a mapping type you can pull out out the stdlib is helpful (assuming you're comparing against C)
2015-05-21 21:43:36	bytetrip	haha, this is honestly the opposite of what i expected :D
2015-05-21 21:43:39	-->	bombless_ (bombless@moz-ig3.c2f.21.116.IP) has joined #rust
2015-05-21 21:44:09	bytetrip	so it sounds like you guys ALSO know C very well anyways
2015-05-21 21:44:14	aatch	bytetrip, I'm a languages nerd and interested in compilers, I got involved with Rust quite a while ago because I was interested in it.
2015-05-21 21:44:15	XMPPwocky	yeah, even just having Vec is a huge advantage over C for small programs
2015-05-21 21:44:16	aidanhs	unfortunately I have observed that the rust compiler is very effective at making me feel stupid
2015-05-21 21:44:20	<--	harrisonclarke (harrisoncla@moz-uur7pt.eastlink.ca) has quit (Connection closed)
2015-05-21 21:44:23	Diggsey	bytetrip: I like rust because I come from a C++ background, and Rust basically fixes all of the issues I had with C++ (too many to count)
2015-05-21 21:44:23	XMPPwocky	you can do little scripts much more effectively
2015-05-21 21:44:34	XMPPwocky	of course, python/ruby is probably better for that
2015-05-21 21:44:45	XMPPwocky	because you can get a REPL
2015-05-21 21:44:50	Azdle	Maybe I can ask a more basic question. Is it possible to have a function that is `extern C fn(_)` and not `unsafe extern C fn(_)`? That doesn't make sense that you could have a safe C function. But if it is possible, how would I declare such a thing?
2015-05-21 21:45:19	aidanhs	Azdle: can you not just create a wrapper function?
2015-05-21 21:45:23	-->	ajhager (aajhager@moz-mcdsgi.iplsin.sbcglobal.net) has joined #rust
2015-05-21 21:45:42	<--	gsingh93 (gulshan@moz-ln1ktu.st3l.iv8o.0004.2601.IP) has quit (Ping timeout: 121 seconds)
2015-05-21 21:45:47	<--	choplin (choplin@moz-goeln1.t6mc.g9m6.001a.240d.IP) has quit (Connection closed)
2015-05-21 21:45:51	Azdle	aidanhs, I need to pass it to another `extern c` function, so no I don't think so.
2015-05-21 21:46:07	bytetrip	Im a fan of Python, I use it daily, but I want to get some time in the machine, and Rust looked new and interesting
2015-05-21 21:46:09	-->	choplin (choplin@moz-qkm9un.ap.nuro.jp) has joined #rust
2015-05-21 21:46:17	blaenk	if you have a HashSet<&PathBuf> you can't index it using &Path huh, it seems
2015-05-21 21:46:18	<--	brainproxy (michael@moz-qbqsu1.secondstreetmedia.com) has quit (Ping timeout: 121 seconds)
2015-05-21 21:46:22	<--	bombless (bombless@moz-pk7.rup.13.122.IP) has quit (Ping timeout: 121 seconds)
2015-05-21 21:46:28	<--	arfy (arfy@moz-qpq7ka.tpgi.com.au) has left #rust
2015-05-21 21:46:37	aatch	Azdle, you can have a safe `extern "C"` function, it just has to be implemented in Rust.
2015-05-21 21:46:49	aidanhs	I guess that begs the question of why you need the other function to be unsafe? but you definitely can pass safe functions to C anyway
2015-05-21 21:47:09	blaenk	I get that Borrow<Path> is not implemented for &PathBuf, oh welz
2015-05-21 21:47:34	aatch	bytetrip, I'd say, find a project you think would work well in Rust and have at it.
2015-05-21 21:47:39	blaenk	but I think this should make it work: impl<'a, T> Borrow<T> for &'a T where T: ?Sized
2015-05-21 21:47:45	Azdle	aidanhs, I don't actually want it t be unsafe, I just don't understand how to declare an extern C as safe?
2015-05-21 21:47:46	-->	rossm (ross@moz-rlsbqp.as13285.net) has joined #rust
2015-05-21 21:48:02	blaenk	nevermind
2015-05-21 21:48:06	SpaceManiac	Azdle: extern C fn name() { /*body*/ } ?
2015-05-21 21:48:07	Azdle	do I just need to wrap the extern C {} in an unsafe{}?
2015-05-21 21:48:17	Diggsey	bytetrip: learning C will probably a be a slightly more comfortable introduction to systems programming - there are lots of resources and the language is relatively simple. Trying to write C code will also be very informative of why Rust is better :P
2015-05-21 21:48:50	Azdle	aidanhs, SpaceManiac, this is how it's declared now:  https://github.com/jcmoyer/rust-lua53/blob/master/src/ffi/lualib.rs#L34
2015-05-21 21:49:02	aidanhs	Azdle: have you read https://doc.rust-lang.org/book/ffi.html#callbacks-from-c-code-to-rust-functions ?
2015-05-21 21:49:03	Azdle	not specfically unsafe.
2015-05-21 21:49:18	Azdle	I have, but it might be time to do it again.
2015-05-21 21:49:21	<--	diego (Mibbit@moz-69p.i83.83.201.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-21 21:49:25	&mbrubeck	Azdle: http://is.gd/gVnEDb
2015-05-21 21:49:41	<--	choplin (choplin@moz-qkm9un.ap.nuro.jp) has quit (Connection closed)
2015-05-21 21:50:24	Azdle	Awesome! Thanks yet again mbrubeck!
2015-05-21 21:50:32	-->	blank_name (blank_name@moz-o85.lq9.107.50.IP) has joined #rust
2015-05-21 21:51:15	-->	DerisiveLogic (smuxi@moz-g93io6.res.rr.com) has joined #rust
2015-05-21 21:51:18	bytetrip	Diggsey: haha, ty
2015-05-21 21:51:57	-->	dmac (dmac@moz-2ig65r.ca.comcast.net) has joined #rust
2015-05-21 21:52:02	bytetrip	aatch: I saw a brief tut about writing a WM in Rust, I think I'm going to give it a go. My hobby outside of work is constantly changing and hating my tiling WM.
2015-05-21 21:52:11	--	NameNotFound is now known as zz_NameNotFound
2015-05-21 21:53:07	bytetrip	anyways, thanks all, I think at this point I was mostly looking for an excuse
2015-05-21 21:53:08	&mbrubeck	Azdle: To answer your earlier question, calling a function through the FFI is always unsafe. But functions implemented in Rust are marked safe by default, even if they are also exported as `extern "C"`.  Which is why `safe_f` has type `extern "C" fn` instead of `unsafe extern "C" fn`
2015-05-21 21:53:14	<--	zhb (zhb@moz-hie.84m.60.59.IP) has quit (Connection closed)
2015-05-21 21:53:19	-->	adu (ajr@moz-0foa9t.md.comcast.net) has joined #rust
2015-05-21 21:53:58	<--	pcwalton (pcwalton@moz-l8ebtf.sfo1.mozilla.com) has quit (Client exited)
2015-05-21 21:54:06	logan_e	Diggsey: Can you not look at data structures’ structures at runtime?
2015-05-21 21:54:17	logan_e	sorry, i had to get home from work
2015-05-21 21:54:56	@steveklabnik	bytetrip: neat! there's one in progress called 'wtftw'
2015-05-21 21:55:03	@steveklabnik	i haven't tried it in a while
2015-05-21 21:55:10	<--	maraoz (maraoz@moz-7fc9s6.fibertel.com.ar) has quit (Ping timeout: 121 seconds)
2015-05-21 21:55:26	-->	excaliburhissheath (excaliburhi@moz-h98c6v.il.comcast.net) has joined #rust
2015-05-21 21:55:27	<--	john (john@moz-n1mnap.ri.cox.net) has quit (Connection closed)
2015-05-21 21:56:17	Azdle	mbrubeck, just to make sure I understand, a function that is defined in C will always be treated as unsafe and there is no way to convince rustc that it is safe, correct?
2015-05-21 21:56:56	Azdle	I was forgetting that extern "C" fn could be defined in rust, that's where my original confusion was coming from.
2015-05-21 21:57:10	&mbrubeck	Azdle: Correct.  The way to provide a safe interface to an FFI library is to wrap it. http://doc.rust-lang.org/book/ffi.html#creating-a-safe-interface
2015-05-21 21:57:37	-->	zhb (zhb@moz-mks.06p.58.59.IP) has joined #rust
2015-05-21 21:57:58	<--	swgillespie (swgillespie@moz-1i5.3un.220.167.IP) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-21 21:58:02	Diggsey	logan_e: only if you implement the serialization traits
2015-05-21 21:58:10	-->	brson (brson@moz-cfhap5.mtv2.mozilla.com) has joined #rust
2015-05-21 21:58:11	--	Mode #rust [+ao brson brson] by ChanServ
2015-05-21 21:58:19	Diggsey	logan_e: or rather, derive them
2015-05-21 21:58:39	Azdle	If I wanted to fix that library, is there a way to say that the requiref function takes an unsafe function and then just run that inside and unsafe{}?
2015-05-21 21:58:52	-->	jwilm (jwilm@moz-1rin99.hfc.comcastbusiness.net) has joined #rust
2015-05-21 21:58:56	<--	kgrandon (Adium@moz-od19rp.2rkg.9kg1.0101.2620.IP) has quit (Quit: Leaving.)
2015-05-21 21:59:12	Azdle	I've tried adding the `unsafe` keyword to a few places, but it doesn't seem to like that.
2015-05-21 21:59:32	<--	adu (ajr@moz-0foa9t.md.comcast.net) has quit (Client exited)
2015-05-21 21:59:36	-->	kgrandon (Adium@moz-u3dg2t.sfo1.mozilla.com) has joined #rust
2015-05-21 21:59:54	<--	rossm (ross@moz-rlsbqp.as13285.net) has quit (Ping timeout: 121 seconds)
2015-05-21 21:59:56	-->	chickensalad (brandon@moz-ngh.k9n.131.104.IP) has joined #rust
2015-05-21 22:00:42	Azdle	Nevermind, I figured it out: http://is.gd/fz9ws5
2015-05-21 22:00:50	&mbrubeck	Azdle: You'd probably need to change the definition of lua_CFunction to use `unsafe extern ...`: https://github.com/jcmoyer/rust-lua53/blob/master/src/ffi/lua.rs#L92
2015-05-21 22:01:03	&mbrubeck	yeah!
2015-05-21 22:01:07	@niconii	Azdle: all potentially unsafe code must be marked as unsafe; all code originating from C is potentially unsafe because rustc can't check it; this is why you can't "convince" rustc that a function from C is safe without wrapping it
2015-05-21 22:01:38	<--	mattico (matt@moz-d3u46j.mpls.qwest.net) has quit (Ping timeout: 121 seconds)
2015-05-21 22:02:45	-->	rossm (ross@moz-rlsbqp.as13285.net) has joined #rust
2015-05-21 22:03:05	&mbrubeck	Azdle: If there areare cases where you want to pass a safe function (implemented in Rust) to requiref, then you might want to have both versions...
2015-05-21 22:03:16	&mbrubeck	Azdle: Oh, I just realized a shorter way than wrapping the unsafe fn
2015-05-21 22:03:17	&mbrubeck	http://is.gd/FvFhgO
2015-05-21 22:03:28	&mbrubeck	You can use `transmute` to change its type.
2015-05-21 22:03:29	-->	Ralith (ralith@moz-tiaj7p.customer.broadstripe.net) has joined #rust
2015-05-21 22:04:06	-->	choplin (choplin@moz-qkm9un.ap.nuro.jp) has joined #rust
2015-05-21 22:04:13	Azdle	Hehehe, that feels even more "dirty" to me.
2015-05-21 22:05:38	&mbrubeck	Or more honest.  ;)
2015-05-21 22:05:39	<--	Shackra (Jorge@moz-7bh.ng6.177.186.IP) has quit (Connection closed)
2015-05-21 22:05:44	-->	chao-tic (chao@moz-258.4aj.101.218.IP) has joined #rust
2015-05-21 22:06:03	aidanhs	I'm trying to use phf with include_bin!() as the value, but am hitting issues because &[] expects all elements to be the same size
2015-05-21 22:06:14	-->	if_e1se (uid16886@moz-dcasj5.highgate.irccloud.com) has joined #rust
2015-05-21 22:06:23	Azdle	Yeah, we'll go with that. That totally works. Thanks mbrubeck!
2015-05-21 22:06:50	-->	mfranzwa (mike@moz-or1vuv.ca.comcast.net) has joined #rust
2015-05-21 22:07:04	<--	Rym_ (y@moz-c2u.sd4.38.217.IP) has quit (Ping timeout: 121 seconds)
2015-05-21 22:07:06	aidanhs	I think I can work around this by declaring lots of `const vN = include_bin()` s with unique variable names, then referring to them within the phf map
2015-05-21 22:07:08	<--	Tobba (Tobba@moz-o13d22.bredband.telia.com) has quit (Ping timeout: 121 seconds)
2015-05-21 22:07:11	&mbrubeck	logan_e: You might be interested in the json::Value type from serde, which doesn't rely on any structure being known at compile time.
2015-05-21 22:07:24	logan_e	mbrubeck: Thanks, that might be what I’m looking for
2015-05-21 22:07:44	&mbrubeck	I got the path wrong. http://serde-rs.github.io/serde/serde/json/value/enum.Value.html
2015-05-21 22:09:03	-->	Shackra (Jorge@moz-7bh.ng6.177.186.IP) has joined #rust
2015-05-21 22:09:16	-->	LookupError (stepan@moz-vbg.24j.51.176.IP) has joined #rust
2015-05-21 22:09:18	logan_e	mbrubeck: that can take any arbitrary data structure? 
2015-05-21 22:09:55	<--	choplin (choplin@moz-qkm9un.ap.nuro.jp) has quit (Connection closed)
2015-05-21 22:09:58	&mbrubeck	logan_e: You can decode any JSON string into a json::value::Value.
2015-05-21 22:09:58	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-21 22:10:22	&mbrubeck	logan_e: It doesn't handle any datatypes that aren't part of the JSON standard, though.
2015-05-21 22:10:56	Azdle	For the record, I'm going to go with changing the definition of "lua_CFunction" to expect an unsafe since it's always (like it says) a function defined in C.
2015-05-21 22:11:20	-->	blank_na1e (blank_name@moz-qk4b1t.mi.frontiernet.net) has joined #rust
2015-05-21 22:12:52	aidanhs	is there no better way to do this? ideally I'd make some wrapper for include_bin!() to put the value somewhere and return a reference
2015-05-21 22:13:02	aidanhs	(which is what I'd be doing manually with unique variable names)
2015-05-21 22:13:54	<--	KLP (KLP@moz-qdcjho.res.rr.com) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-05-21 22:14:17	-->	mohawk (Mibbit@moz-iah5ju.66.brainstorminternet.net) has joined #rust
2015-05-21 22:14:43	<--	blank_name (blank_name@moz-o85.lq9.107.50.IP) has quit (Ping timeout: 121 seconds)
2015-05-21 22:15:22	<--	rustyrazorblade (rustyrazorb@moz-ehrfqf.fios.verizon.net) has quit (Client exited)
2015-05-21 22:15:30	mohawk	Quick question: I have an .rlib that I want to use as a dependency. Can I do that with cargo?
2015-05-21 22:16:10	logan_e	right yeah
2015-05-21 22:16:14	logan_e	ok thanks mbrubeck!
2015-05-21 22:16:17	<--	blank_na1e (blank_name@moz-qk4b1t.mi.frontiernet.net) has quit (Ping timeout: 121 seconds)
2015-05-21 22:16:20	-->	blank_name (blank_name@moz-v1i.38r.183.192.IP) has joined #rust
2015-05-21 22:17:43	<--	zhb (zhb@moz-mks.06p.58.59.IP) has quit (Connection closed)
2015-05-21 22:18:31	<--	mfranzwa (mike@moz-or1vuv.ca.comcast.net) has quit (Client exited)
2015-05-21 22:18:44	aidanhs	and relatedly, is there any easy way to generate random unique rust variable names? uuid and trim leading numbers?
2015-05-21 22:19:05	Diggsey	aidanhs: from a macro, you mean?
2015-05-21 22:19:31	Diggsey	aidanhs: oh
2015-05-21 22:19:42	-->	zhb (zhb@moz-mks.06p.58.59.IP) has joined #rust
2015-05-21 22:20:05	aidanhs	ah, I'm an idiot, I can just prefix a uuid with something
2015-05-21 22:20:07	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Connection closed)
2015-05-21 22:20:21	-->	lyc (lyc@moz-jft.nr8.226.207.IP) has joined #rust
2015-05-21 22:20:29	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-21 22:20:59	-->	markstory (textual@moz-tb3ghu.cable.rogers.com) has joined #rust
2015-05-21 22:21:12	<--	blank_name (blank_name@moz-v1i.38r.183.192.IP) has quit (Ping timeout: 121 seconds)
2015-05-21 22:21:21	-->	blank_name (blank_name@moz-se4mfq.mi.frontiernet.net) has joined #rust
2015-05-21 22:21:33	-->	maraoz (maraoz@moz-1d0.g5p.29.181.IP) has joined #rust
2015-05-21 22:21:44	<--	maraoz (maraoz@moz-1d0.g5p.29.181.IP) has quit (Quit: Leaving)
2015-05-21 22:21:54	<--	ygrek (user@moz-8j9aeu.org.ua) has quit (Ping timeout: 121 seconds)
2015-05-21 22:22:15	mohawk	Is there *any* way to include a precompiled library using Cargo?
2015-05-21 22:22:17	Mutabah	aidanhs: Why?
2015-05-21 22:22:25	XMPPwocky	you could use a build script
2015-05-21 22:23:03	blaenk	"rustc-link-lib indicates that the specified value should be passed to the compiler as a -l flag."
2015-05-21 22:23:09	blaenk	http://doc.crates.io/build-script.html#outputs-of-the-build-script
2015-05-21 22:24:02	mohawk	It says it can't find the cargo.toml file in the specified directory
2015-05-21 22:24:23	<--	lyc (lyc@moz-jft.nr8.226.207.IP) has quit (Ping timeout: 121 seconds)
2015-05-21 22:24:32	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Ping timeout: 121 seconds)
2015-05-21 22:25:02	-->	peter (peter@moz-e11i63.cable.virginm.net) has joined #rust
2015-05-21 22:25:34	@niconii	aren't build scripts more for linking to native libraries? i.e. .so/.dll
2015-05-21 22:25:41	Mutabah	Yes
2015-05-21 22:25:43	@niconii	mohawk wants to link to a .rlib
2015-05-21 22:25:55	<--	tamird (textual@moz-cb8kq7.east.verizon.net) has quit (Connection closed)
2015-05-21 22:26:02	Mutabah	mohawk: Using a precompiled .rlib is going to be rather unstable
2015-05-21 22:26:11	mohawk	why?
2015-05-21 22:26:14	Mutabah	The metadata format changes slightly between compiler releases
2015-05-21 22:26:16	-->	tamird (textual@moz-cb8kq7.east.verizon.net) has joined #rust
2015-05-21 22:26:21	aidanhs	Mutabah: because you cannot include calls to include_bytes!() directly in a static slice of slices declaration, so you need to assign it to a variable first and then reference that variable
2015-05-21 22:26:22	Mutabah	If you have a stale .rlib, rustc will panic
2015-05-21 22:26:52	Mutabah	aidanhs: Can you use macro hygene to do that?
2015-05-21 22:27:42	-->	dpc_ (dpc@moz-t6gr4b.ca.comcast.net) has joined #rust
2015-05-21 22:28:08	-->	maraoz (maraoz@moz-1d0.g5p.29.181.IP) has joined #rust
2015-05-21 22:28:12	aidanhs	is that a question of "how are you doing that with macros?" or "could you not do that with macros?"
2015-05-21 22:28:28	-->	peferron (peferron@moz-k89vq8.ca.comcast.net) has joined #rust
2015-05-21 22:28:32	mohawk	Mutabah I don't really care if it is unstable. All I want is a way to do it.
2015-05-21 22:28:35	-->	mr_sticky (Mibbit@moz-gqs.pcu.123.189.IP) has joined #rust
2015-05-21 22:29:06	<--	peter (peter@moz-e11i63.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2015-05-21 22:29:21	-->	swgillespie (swgillespie@moz-rn1.vmq.232.104.IP) has joined #rust
2015-05-21 22:29:30	<--	przchlsk (Mibbit@moz-chsqii.tpgi.com.au) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-21 22:29:48	-->	rmgk (ragnar@moz-f0vd61.dyn.telefonica.de) has joined #rust
2015-05-21 22:30:00	Mutabah	aidanhs: Wondering if you could abuse macro hygine to do that
2015-05-21 22:30:11	Mutabah	mohawk: May I ask why you want to do it?
2015-05-21 22:30:33	-->	yarrkov (x@moz-cgbdoq.3m63.a0qj.41d0.2001.IP) has joined #rust
2015-05-21 22:30:33	<--	yarrkov (x@moz-cgbdoq.3m63.a0qj.41d0.2001.IP) has quit (Changing host)
2015-05-21 22:30:33	-->	yarrkov (x@2001:41d0:a:fc8a::1) has joined #rust
2015-05-21 22:30:44	-->	zzing (textual@moz-jucm1n.cpe.distributel.net) has joined #rust
2015-05-21 22:30:53	mohawk	I have a library that takes about a month to compile that I want to use on multiple projects
2015-05-21 22:31:40	<--	AWAW (DoubleAW@moz-6vkhi6.irvnca.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-21 22:31:43	-->	jfredett (Adium@moz-a9ilmn.fios.verizon.net) has joined #rust
2015-05-21 22:31:44	-->	AWAW (DoubleAW@moz-oiui4h.80s0.b06c.0306.2602.IP) has joined #rust
2015-05-21 22:31:59	@niconii	mohawk: you might have more luck in #cargo
2015-05-21 22:32:10	-->	Sawbones (Sawbones@moz-9qofb4.res.bhn.net) has joined #rust
2015-05-21 22:32:33	mohawk	okay, thank you. Cargo is a bit confusing.
2015-05-21 22:32:37	-->	new_one_ (new_one@moz-mnti41.kbni.1u98.0009.2601.IP) has joined #rust
2015-05-21 22:32:38	-->	nodweber (nodweber@moz-knt.fgq.178.5.IP) has joined #rust
2015-05-21 22:32:41	-->	Rym_ (y@moz-c2u.sd4.38.217.IP) has joined #rust
2015-05-21 22:32:45	Mutabah	:/ we should really focus on speeding up compilation times
2015-05-21 22:32:55	peferron	When implementing the Iterator trait we need to keep all the state in a struct. Rust does not have generators (yet). Is that right?
2015-05-21 22:32:57	aatch	mohawk, what on earth are you using that takes so long (I'm going to assume "a month" is an exaggeration) to compile that this is what you're trying to do?
2015-05-21 22:32:58	Mutabah	(but.. but.. fancy features)
2015-05-21 22:33:03	--	new_one_ is now known as new_one
2015-05-21 22:33:12	<--	rmgk_ (ragnar@moz-a5le8q.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2015-05-21 22:33:12	-->	Sawbones_ (Sawbones@moz-9qofb4.res.bhn.net) has joined #rust
2015-05-21 22:33:14	aidanhs	Mutabah: ah. it's an interesting question...I think the problem is that you actually *want* to declarations to leak...
2015-05-21 22:33:17	Mutabah	aatch: Compiling stuff on my atom netbook takes surprisingly long
2015-05-21 22:33:26	<--	Sawbones (Sawbones@moz-9qofb4.res.bhn.net) has quit (Connection closed)
2015-05-21 22:33:28	aatch	mohawk, I mean, it's not like it rebuilds every time inside a single project.
2015-05-21 22:33:33	Mutabah	aatch: I presume mohawk has a similarly powered machine
2015-05-21 22:33:37	mohawk	aatch simply something to hide the console window
2015-05-21 22:33:52	aidanhs	though I've only actually looked behind the scenes of macros today
2015-05-21 22:34:07	@niconii	mohawk: it takes that long? what crate is it?
2015-05-21 22:34:41	mohawk	winapi, user32, kernel32
2015-05-21 22:34:52	aatch	Like I said, it won't re-compile it more than it needs to within a single project.
2015-05-21 22:34:53	@niconii	ahh
2015-05-21 22:34:59	sam113101	wait, there's no longer a '...' operator/range in rust?
2015-05-21 22:35:03	<--	yarrkov (x@2001:41d0:a:fc8a::1) has quit (A TLS packet with unexpected length was received.)
2015-05-21 22:35:11	Mutabah	sam113101: Was there ever?
2015-05-21 22:35:21	-->	annodomini (lambda@moz-qgii5v.ma.comcast.net) has joined #rust
2015-05-21 22:35:21	Mutabah	(outside of the 1...3 syntax in matches
2015-05-21 22:35:29	@niconii	aatch: mohawk's issue is that they have multiple projects though, and would rather not have to compile winapi/user32/kernel32 for all of them
2015-05-21 22:35:47	sam113101	Mutabah: I don't know… is this syntax (that you're talking about) still there?
2015-05-21 22:35:49	mohawk	aatch, I know it will only compile once in a project, but I'm still on the "make as many small projects as possible" phase
2015-05-21 22:36:37	Mutabah	sam113101: .. is for ranges (which represents a half-open range [start,end)
2015-05-21 22:36:39	-->	lyc (lyc@moz-jft.nr8.226.207.IP) has joined #rust
2015-05-21 22:36:43	aatch	mohawk, copy-and-paste from another project into the appropriate folder in the new project?
2015-05-21 22:36:44	aidanhs	mohawk: one option is to use link_args - https://doc.rust-lang.org/book/link-args.html
2015-05-21 22:36:57	<--	nodweber (nodweber@moz-knt.fgq.178.5.IP) has quit (Ping timeout: 121 seconds)
2015-05-21 22:37:06	Mutabah	sam113101: ... is for ranges in patterns (e.g in matches), and is a full range
2015-05-21 22:37:07	-->	dmac_ (dmac@moz-2ig65r.ca.comcast.net) has joined #rust
2015-05-21 22:37:27	aidanhs	so you'd do `#[link_args = "/path/to/my/lib.rlib`]\nextern {}`
2015-05-21 22:37:39	sam113101	Mutabah: full range meaning inclusive range?
2015-05-21 22:37:39	<--	dmac_ (dmac@moz-2ig65r.ca.comcast.net) has quit (Quit: Leaving)
2015-05-21 22:37:55	@niconii	sam113101: yes
2015-05-21 22:37:57	<--	dmac (dmac@moz-2ig65r.ca.comcast.net) has quit (Quit: WeeChat 0.4.3)
2015-05-21 22:37:57	sam113101	[start,end]?
2015-05-21 22:38:02	sam113101	weird
2015-05-21 22:38:13	-->	dmac (dmac@moz-2ig65r.ca.comcast.net) has joined #rust
2015-05-21 22:38:23	<--	Rym_ (y@moz-c2u.sd4.38.217.IP) has quit (Ping timeout: 121 seconds)
2015-05-21 22:38:23	-->	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has joined #rust
2015-05-21 22:38:32	@niconii	sam113101: eventually .. and ... will both be available everywhere, so
2015-05-21 22:38:36	aidanhs	er, the ` in the middle there should be a "
2015-05-21 22:38:47	@niconii	sam113101: it should get less weird :)
2015-05-21 22:38:56	Mutabah	niconii: I dunno, that's going to be more confusing
2015-05-21 22:39:12	Mutabah	sam113101: It's mostly about the common usage pattern
2015-05-21 22:39:15	-->	Rym_ (y@moz-c2u.sd4.38.217.IP) has joined #rust
2015-05-21 22:39:23	aatch	sam113101, well we had range-match syntax for a lot longer than we have had range-expressions.
2015-05-21 22:39:26	Mutabah	sam113101: Half-open ranges are pretty common in code
2015-05-21 22:39:43	-->	mib_ckl46e (Mibbit@moz-nek.ngq.59.218.IP) has joined #rust
2015-05-21 22:39:53	sam113101	niconii: will '..' then not be ambiguous in matches?
2015-05-21 22:39:55	Mutabah	sam113101: But in pattern matching, a fully inclusive range makes more sens
2015-05-21 22:40:00	aatch	sam113101, we actually changed the pattern syntax to the three dots to make it *less* confusing.
2015-05-21 22:40:39	mohawk	aidanhs, thank you. I'll check it out
2015-05-21 22:40:44	aatch	sam113101, so atleast we don't have the issue that `..` means two subtly different things in different contexts.
2015-05-21 22:41:14	<--	mib_ckl46e (Mibbit@moz-nek.ngq.59.218.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-21 22:41:16	@niconii	hmmm, actually, come to think of it, i say "everywhere" but
2015-05-21 22:41:28	-->	eric_lagergren (barsonme@moz-lr1hrn.wa.comcast.net) has joined #rust
2015-05-21 22:41:34	@niconii	is the proposal just ... outside of matches? no .. inside matches?
2015-05-21 22:41:38	@niconii	or is it both
2015-05-21 22:42:23	<--	ajhager (aajhager@moz-mcdsgi.iplsin.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-21 22:42:27	<--	erickt (erickt@moz-4hh.6p3.217.74.IP) has quit (Ping timeout: 121 seconds)
2015-05-21 22:42:30	<--	meunierd (dmeunier@moz-glf54u.cpe.sourcecable.net) has quit (Ping timeout: 121 seconds)
2015-05-21 22:43:14	<--	creationix (creationix@moz-ebi8rk.cpe.cableone.net) has quit (Client exited)
2015-05-21 22:43:15	aatch	niconii, I've only seen it proposed as an expression.
2015-05-21 22:43:21	<--	Sawbones_ (Sawbones@moz-9qofb4.res.bhn.net) has quit (Connection closed)
2015-05-21 22:43:39	@niconii	okay, so ... has been proposed as an expression, but .. hasn't been proposed inside matches?
2015-05-21 22:44:09	aatch	niconii, not as far as I know. I don't read every last RFC though. (Or most of them, to be honest).
2015-05-21 22:44:37	-->	harrisonclarke (harrisoncla@moz-uur7pt.eastlink.ca) has joined #rust
2015-05-21 22:44:41	<--	AWAW (DoubleAW@moz-oiui4h.80s0.b06c.0306.2602.IP) has quit (Ping timeout: 121 seconds)
2015-05-21 22:44:46	-->	AWAW (DoubleAW@moz-6vkhi6.irvnca.sbcglobal.net) has joined #rust
2015-05-21 22:45:18	-->	Sawbones (Sawbones@moz-9qofb4.res.bhn.net) has joined #rust
2015-05-21 22:45:45	<--	plumshark (pat@moz-p569rf.35n5.ltgp.0306.2602.IP) has quit (Ping timeout: 121 seconds)
2015-05-21 22:45:52	-->	ajhager (aajhager@moz-mcdsgi.iplsin.sbcglobal.net) has joined #rust
2015-05-21 22:45:54	<--	dpc_ (dpc@moz-t6gr4b.ca.comcast.net) has quit (Connection closed)
2015-05-21 22:45:57	@niconii	hmmmm
2015-05-21 22:46:16	@niconii	well... something will be done with ranges at some point, then
2015-05-21 22:46:22	-->	psd (psd@moz-l85kf1.mtnl.net.in) has joined #rust
2015-05-21 22:47:06	@niconii	what will be done? ¯\_(ツ)_/¯
2015-05-21 22:47:59	Mutabah	aatch: I'm kinda iffy about having two range syntaxes that differ by one character, with subtly different semantics
2015-05-21 22:48:58	<--	harrisonclarke (harrisoncla@moz-uur7pt.eastlink.ca) has quit (Ping timeout: 121 seconds)
2015-05-21 22:49:40	<--	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-21 22:50:19	sam113101	I know I use '..' more than '...' in ruby (they have the opposite meaning than in rust, though)
2015-05-21 22:50:24	@niconii	it'd be nice if i could find the relevant rfc
2015-05-21 22:50:55	aatch	Mutabah, I'm ambivalent about it. Sometimes your upper-bound isn't actually expressible in the type you want, like if I want to iterate from 0 - 255, using `u8`, I'd have to use `u16` or bigger and cast back down with the current ranges
2015-05-21 22:51:08	Mutabah	aatch: Good point
2015-05-21 22:51:27	aatch	Mutabah, it's not exactly a common case though, and I can certainly see the potential for confusion.
2015-05-21 22:51:30	Mutabah	That said, an open upper limit might solve that
2015-05-21 22:52:25	Mutabah	i.e. (0u8..) yields 0 to 255
2015-05-21 22:52:35	-->	sfalcon (textual@moz-qtd94t.customer.broadstripe.net) has joined #rust
2015-05-21 22:52:38	<--	chc4 (chc4@moz-pdo0at.ma.comcast.net) has quit (Quit: AHHHHH BEES)
2015-05-21 22:52:42	-->	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has joined #rust
2015-05-21 22:53:04	<--	brson (brson@moz-cfhap5.mtv2.mozilla.com) has quit (Quit: leaving)
2015-05-21 22:53:25	<--	capcar (mathieu@moz-mi55kn.mc.videotron.ca) has quit (Ping timeout: 121 seconds)
2015-05-21 22:53:44	aatch	Importantly, it's not like it's the only way to iterate over numbers. Sure it's nice and composes with iterators, but you can still do `let mut i = 0; loop { <do stuff>; if i == 255 { break; } i += 1; }`
2015-05-21 22:55:09	<--	mib_sf6v3a (Mibbit@moz-i7cb3r.fios.verizon.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-21 22:55:09	<--	kgrandon (Adium@moz-u3dg2t.sfo1.mozilla.com) has quit (Quit: Leaving.)
2015-05-21 22:55:32	<--	mr_sticky (Mibbit@moz-gqs.pcu.123.189.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-21 22:55:58	@niconii	Mutabah: are you sure that's what (0u8..) does?
2015-05-21 22:56:07	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-21 22:56:09	-->	fengshaun (fengshaun@moz-oagll1.cpe.pppoe.ca) has joined #rust
2015-05-21 22:56:10	@niconii	playbot: (0u8..255).collect::<Vec<_>>().len()
2015-05-21 22:56:11	--	Notice(playbot): 255
2015-05-21 22:56:13	Mutabah	niconii: No, but it could
2015-05-21 22:56:16	@niconii	playbot: (0u8..).collect::<Vec<_>>().len()
2015-05-21 22:56:17	--	Notice(playbot): playpen: application terminated abnormally with signal 9 (Killed)
2015-05-21 22:56:25	XMPPwocky	wot
2015-05-21 22:56:35	XMPPwocky	memory limit?
2015-05-21 22:56:36	aatch	Presumably it overflows
2015-05-21 22:56:51	XMPPwocky	rusti: (0u8..).skip(256).next()
2015-05-21 22:56:52	--	Notice(playbot): Some(0)
2015-05-21 22:56:57	XMPPwocky	rusti: (0u8..).skip(257).next()
2015-05-21 22:56:59	--	Notice(playbot): Some(1)
2015-05-21 22:57:01	XMPPwocky	yep
2015-05-21 22:57:04	-->	kgrandon (Adium@moz-m21j0d.2rkg.9kg1.0101.2620.IP) has joined #rust
2015-05-21 22:57:08	@niconii	just loops then
2015-05-21 22:57:20	Mutabah	rusti: (1u8..).skip(256).next()
2015-05-21 22:57:22	--	Notice(playbot): Some(1)
2015-05-21 22:57:33	Mutabah	so it seems
2015-05-21 22:57:37	Mutabah	rusti: (1u8..).skip(255).next()
2015-05-21 22:57:38	--	Notice(playbot): Some(0)
2015-05-21 22:57:51	XMPPwocky	rusti: (0i8..).skip(255).next()
2015-05-21 22:57:52	--	Notice(playbot): Some(-1)
2015-05-21 22:57:59	XMPPwocky	that's... very surprising.
2015-05-21 22:58:09	aatch	Hm, I think that should be considered a bug.
2015-05-21 22:58:18	aatch	As you say, it's quite surprising.
2015-05-21 22:58:21	Mutabah	Yep
2015-05-21 22:58:38	Mutabah	Redefine that to iterate up to overflow then stop?
2015-05-21 22:58:47	Mutabah	(which solves our problem of doing all 256 u8s
2015-05-21 22:59:08	aatch	To the issue tracker!
2015-05-21 22:59:14	XMPPwocky	*newspaper spins*
2015-05-21 22:59:21	 *	aatch hums the Batman scene transition jingle
2015-05-21 23:00:01	XMPPwocky	Mutabah: just redefine it to set an implicit upper bound of T.min_value() ?
2015-05-21 23:00:11	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Ping timeout: 121 seconds)
2015-05-21 23:00:20	XMPPwocky	is that possible? i guess it doesn't have the concrete type
2015-05-21 23:00:27	Mutabah	XMPPwocky: :/
2015-05-21 23:00:36	XMPPwocky	rip std::num, you will be missed :(
2015-05-21 23:00:43	Mutabah	XMPPwocky: It's a different type to the (a..b) range
2015-05-21 23:00:55	XMPPwocky	Mutabah: right, but this would be identical
2015-05-21 23:01:06	XMPPwocky	to "iterate up to overflow then stop"
2015-05-21 23:01:32	<--	pgonda (peter@moz-s36.0tp.134.75.IP) has quit (Ping timeout: 121 seconds)
2015-05-21 23:01:33	Mutabah	XMPPwocky: So, you can just have the .next() code check for (if curval == T::max() { None } else { let rv = curval; curval += T::one(); Some(curval) }
2015-05-21 23:01:39	<--	zz_kimundi (kimundi@moz-uvfh0m.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2015-05-21 23:01:48	Mutabah	XMPPwocky: It would, just a minor difference in semantics
2015-05-21 23:01:55	XMPPwocky	i see
2015-05-21 23:01:57	Mutabah	XMPPwocky: Doesn't rely on overflow being defined that way
2015-05-21 23:02:14	XMPPwocky	it could just use checked_add
2015-05-21 23:02:25	desophos	does it make any difference if i use a dep from github and one of my other deps uses it from crates.io, if they're the same version?
2015-05-21 23:02:33	XMPPwocky	which is also an implicit method now?
2015-05-21 23:02:35	XMPPwocky	ack
2015-05-21 23:02:53	-->	zz_kimundi (kimundi@moz-l6kkds.dip0.t-ipconnect.de) has joined #rust
2015-05-21 23:03:19	--	zz_kimundi is now known as kimundi
2015-05-21 23:03:22	XMPPwocky	desophos: i think it'll end up getting built and linked in twice
2015-05-21 23:03:55	Mutabah	XMPPwocky: Iterator for Range uses the Step trait
2015-05-21 23:03:58	Mutabah	(which is unstable)
2015-05-21 23:04:04	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-21 23:04:04	Mutabah	so we can just add a new method to it for the max
2015-05-21 23:04:17	XMPPwocky	aha
2015-05-21 23:04:31	desophos	XMPPwocky: is that all? it wouldn't happen to give me a trait not implemented error? because that's what i'm inexplicably getting :/
2015-05-21 23:04:46	<--	Wild_Cat (Max@moz-fa8mvt.dsl.teksavvy.com) has quit (Ping timeout: 121 seconds)
2015-05-21 23:04:49	-->	johnpclaus (johnpclaus@moz-41qm8v.co.comcast.net) has joined #rust
2015-05-21 23:05:13	XMPPwocky	desophos: ah, what happens is that the trait in *one* crate isn't the same as the trait in another
2015-05-21 23:05:19	Mutabah	Yep
2015-05-21 23:05:26	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Connection closed)
2015-05-21 23:05:43	-->	new_one_ (new_one@moz-6q20ca.kbni.1u98.0009.2601.IP) has joined #rust
2015-05-21 23:05:49	aatch	XMPPwocky, Mutabah, https://github.com/rust-lang/rust/issues/25696
2015-05-21 23:05:55	XMPPwocky	it'll actually work perfectly if you don't mix-and-match
2015-05-21 23:05:59	-->	p1start (p1start@moz-nftjhe.org) has joined #rust
2015-05-21 23:06:29	<--	new_one (new_one@moz-mnti41.kbni.1u98.0009.2601.IP) has quit (Ping timeout: 121 seconds)
2015-05-21 23:06:34	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-21 23:06:42	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Connection closed)
2015-05-21 23:06:46	desophos	XMPPwocky: well, the problem is that i need a trait implemented in the newest version, which hasn't yet been pushed to crates.io :/
2015-05-21 23:06:59	desophos	yet they're still listed as the same version for some reason
2015-05-21 23:07:43	<--	dpc (dpc@moz-2ov.l9q.228.216.IP) has quit (Quit: Ex-Chat)
2015-05-21 23:08:17	<--	markstory (textual@moz-tb3ghu.cable.rogers.com) has quit (Quit: Textual IRC Client: www.textualapp.com)
2015-05-21 23:08:34	XMPPwocky	hm
2015-05-21 23:08:39	XMPPwocky	you could use a local override
2015-05-21 23:08:39	<--	jarrednicholls (uid19542@moz-cmdbn3.highgate.irccloud.com) has quit (Quit: Connection closed for inactivity)
2015-05-21 23:08:40	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-21 23:08:57	<--	cursivecode (textual@moz-4u56i9.res.bhn.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-21 23:09:14	Mutabah	desophos: Yes, as XMPPwocky said, the way to go is a dependency override
2015-05-21 23:09:25	Mutabah	Which should make all the crates in your project use the same dep
2015-05-21 23:09:40	peferron	http://is.gd/Wvlp72 => wondering which one of two approaches is more idiomatic. Would love some input :)
2015-05-21 23:09:52	XMPPwocky	http://doc.crates.io/guide.html#overriding-dependencies
2015-05-21 23:10:21	-->	choplin (choplin@moz-qkm9un.ap.nuro.jp) has joined #rust
2015-05-21 23:10:23	XMPPwocky	peferron: the iterator.
2015-05-21 23:10:41	<--	logan_e (logan_e@moz-ltn.qg3.218.73.IP) has quit (Ping timeout: 121 seconds)
2015-05-21 23:10:43	XMPPwocky	also, note that in this case, you could write the iterator with std::iter::unfold
2015-05-21 23:11:05	-->	logan_e (logan_e@moz-ltn.qg3.218.73.IP) has joined #rust
2015-05-21 23:11:24	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Connection closed)
2015-05-21 23:12:25	-->	hroi (hroi@moz-d273ub.static.netgroup.dk) has joined #rust
2015-05-21 23:12:26	<--	joh (uid13099@moz-2c7ap3.ealing.irccloud.com) has quit (Quit: Connection closed for inactivity)
2015-05-21 23:12:56	peferron	XMPPwocky: ok thanks. i'll have a look at unfold
2015-05-21 23:13:52	XMPPwocky	the only trick is, you need to use a fn for the unfold callback, not a closure
2015-05-21 23:13:59	XMPPwocky	otherwise you won't be able to write the type
2015-05-21 23:14:06	<--	Sawbones (Sawbones@moz-9qofb4.res.bhn.net) has quit (Connection closed)
2015-05-21 23:14:14	<--	idegen (greg@moz-9c4nle.or.frontiernet.net) has quit (Quit: Leaving.)
2015-05-21 23:14:18	<--	fyolnish (fyolnish@moz-soopfn.ocn.ne.jp) has quit (Connection closed)
2015-05-21 23:14:23	<--	choplin (choplin@moz-qkm9un.ap.nuro.jp) has quit (Ping timeout: 121 seconds)
2015-05-21 23:16:32	<--	hroi (hroi@moz-d273ub.static.netgroup.dk) has quit (Ping timeout: 121 seconds)
2015-05-21 23:16:33	-->	Sawbones (Sawbones@moz-9qofb4.res.bhn.net) has joined #rust
2015-05-21 23:17:48	peferron	jesus, the type of std::iter::iterate is humongous
2015-05-21 23:19:35	<--	lyc (lyc@moz-jft.nr8.226.207.IP) has quit (Connection closed)
2015-05-21 23:21:57	-->	datanoise (uid88553@moz-o6l0fh.charlton.irccloud.com) has joined #rust
2015-05-21 23:22:32	-->	gattscha1do (richard@moz-aur5sh.dyn.telefonica.de) has joined #rust
2015-05-21 23:23:18	-->	acgtyrant (acgtyrant@moz-3kd.b79.160.124.IP) has joined #rust
2015-05-21 23:24:09	<--	Jesin (Jesin@moz-48mne2.nsvltn.sbcglobal.net) has quit (Quit: Leaving)
2015-05-21 23:24:13	<--	johnpclaus (johnpclaus@moz-41qm8v.co.comcast.net) has left #rust ("Textual IRC Client: www.textualapp.com")
2015-05-21 23:25:28	<--	Sawbones (Sawbones@moz-9qofb4.res.bhn.net) has quit (Connection closed)
2015-05-21 23:25:31	<--	gattschardo (richard@moz-1j312h.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2015-05-21 23:25:31	-->	davebettin (davebettin@moz-ip635p.or.comcast.net) has joined #rust
2015-05-21 23:25:50	-->	peter (peter@moz-e11i63.cable.virginm.net) has joined #rust
2015-05-21 23:27:17	-->	Takronix (Takronix@moz-nm15k0.hr.cox.net) has joined #rust
2015-05-21 23:27:53	<--	lutter (lutter@moz-7v7ueu.PUBLIC.monkeybrains.net) has quit (Ping timeout: 121 seconds)
2015-05-21 23:28:50	<--	lutter1 (lutter@moz-7v7ueu.PUBLIC.monkeybrains.net) has quit (Ping timeout: 121 seconds)
2015-05-21 23:28:52	-->	Jesin (Jesin@moz-48mne2.nsvltn.sbcglobal.net) has joined #rust
2015-05-21 23:28:55	-->	csherratt2 (colin@moz-357qdq.cable.teksavvy.com) has joined #rust
2015-05-21 23:28:56	<--	jincreator (Thunderbird@moz-d7i.i1g.195.175.IP) has quit (Ping timeout: 121 seconds)
2015-05-21 23:29:15	-->	jincreator (Thunderbird@moz-d7i.i1g.195.175.IP) has joined #rust
2015-05-21 23:29:19	-->	Sawbones (Sawbones@moz-9qofb4.res.bhn.net) has joined #rust
2015-05-21 23:29:22	-->	ygrek (user@moz-8j9aeu.org.ua) has joined #rust
2015-05-21 23:29:28	-->	lutter (lutter@moz-7v7ueu.PUBLIC.monkeybrains.net) has joined #rust
2015-05-21 23:29:54	<--	peter (peter@moz-e11i63.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2015-05-21 23:30:00	desophos	what the heck does this mean? https://dpaste.de/FZaA/raw
2015-05-21 23:30:13	desophos	oh, and thanks XMPPwocky and Mutabah, the local override worked!
2015-05-21 23:30:42	desophos	i'm using collections::borrow::Borrow, and that's it; nothing else from collections
2015-05-21 23:30:44	Mutabah	desophos: Many of the libraries exported by std are not stable yet
2015-05-21 23:31:01	Mutabah	libstd exports the stable parts under stable names, but the exact locations are not stable
2015-05-21 23:31:06	-->	lutter_ (lutter@moz-7v7ueu.PUBLIC.monkeybrains.net) has joined #rust
2015-05-21 23:31:12	Mutabah	borrow is re-exported under std
2015-05-21 23:31:17	Mutabah	::std::borrow::Borrow
2015-05-21 23:31:29	<--	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-21 23:31:46	-->	fyolnish (fyolnish@moz-l1gill.au-net.ne.jp) has joined #rust
2015-05-21 23:31:49	desophos	ah great, got it, thanks Mutabah 
2015-05-21 23:32:12	<--	rmdashrf (rmdashrf@moz-n1r.cr0.54.128.IP) has quit (Quit: WeeChat 0.4.2)
2015-05-21 23:32:14	<--	Jesin (Jesin@moz-48mne2.nsvltn.sbcglobal.net) has quit (Quit: Leaving)
2015-05-21 23:33:28	-->	nodweber (nodweber@moz-knt.fgq.178.5.IP) has joined #rust
2015-05-21 23:34:52	-->	Jouan (Mibbit@moz-clk0e9.austtx.sbcglobal.net) has joined #rust
2015-05-21 23:35:09	Jouan	Hi!
2015-05-21 23:35:19	Mutabah	Hello
2015-05-21 23:35:21	<--	jincreator (Thunderbird@moz-d7i.i1g.195.175.IP) has quit (Ping timeout: 121 seconds)
2015-05-21 23:35:25	Jouan	I have an enum declared like this :http://is.gd/8ivqv5
2015-05-21 23:35:33	Jouan	Can I do bitwise operations on it?
2015-05-21 23:35:47	blaenk	yeah have you tried
2015-05-21 23:36:10	Jouan	Yeah
2015-05-21 23:36:16	Jouan	I get this error: error: binary assignment operation `|=` cannot be applied to types `Color` and `Color` [E0368]
2015-05-21 23:36:17	Mutabah	Jouan: You can use the num as values I think... BUT
2015-05-21 23:36:25	Mutabah	You cannot store more than one variant in an enum
2015-05-21 23:36:31	<--	fyolnish (fyolnish@moz-l1gill.au-net.ne.jp) has quit (Connection closed)
2015-05-21 23:36:40	blaenk	Jouan: I think you gotta cast it, Color::White as i64, or whatever
2015-05-21 23:36:52	Jouan	Ah ok
2015-05-21 23:36:52	-->	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has joined #rust
2015-05-21 23:36:58	Jouan	I'll give that a try
2015-05-21 23:37:00	Jouan	Thanks!
2015-05-21 23:37:03	-->	cursivecode (textual@moz-4u56i9.res.bhn.net) has joined #rust
2015-05-21 23:37:18	<--	Sawbones (Sawbones@moz-9qofb4.res.bhn.net) has quit (Connection closed)
2015-05-21 23:37:19	-->	kvsari (kvsari@moz-fgsnv9.bbtec.net) has joined #rust
2015-05-21 23:37:38	<--	ahihi (ahihi@moz-0djiqt.bb.dnainternet.fi) has quit (Connection closed)
2015-05-21 23:37:41	-->	ahihi (ahihi@moz-0djiqt.bb.dnainternet.fi) has joined #rust
2015-05-21 23:37:50	<--	nodweber (nodweber@moz-knt.fgq.178.5.IP) has quit (Ping timeout: 121 seconds)
2015-05-21 23:39:27	Jouan	Ok, it seems to be working
2015-05-21 23:39:37	Jouan	It's a little bit ugly though...
2015-05-21 23:39:50	Jouan	I have to basically cast everywhere I use the enum...
2015-05-21 23:39:53	Mutabah	Jouan: enums are not meant for bitfields
2015-05-21 23:40:08	Jouan	Is there something else I should be using?
2015-05-21 23:40:10	-->	new_one (new_one@moz-tc7nnm.kbni.1u98.0009.2601.IP) has joined #rust
2015-05-21 23:40:12	Mutabah	For bitfields, use 'const' for the variants, and a type alias for the actual type (or even a newtype)
2015-05-21 23:40:38	blaenk	Jouan: check out bitflags
2015-05-21 23:40:41	blaenk	!crate bitflags
2015-05-21 23:40:41	+rustbot	bitflags (0.1.1) - A macro to generate structures which behave like bitflags. -> https://crates.io/crates/bitflags
2015-05-21 23:40:42	-->	harrisonclarke (harrisoncla@moz-uur7pt.eastlink.ca) has joined #rust
2015-05-21 23:41:08	Jouan	Neat!
2015-05-21 23:41:33	blaenk	http://doc.rust-lang.org/bitflags/bitflags/macro.bitflags!.html#example
2015-05-21 23:42:00	-->	jincreator (Thunderbird@moz-d7i.i1g.195.175.IP) has joined #rust
2015-05-21 23:42:11	<--	logan_e (logan_e@moz-ltn.qg3.218.73.IP) has quit (Client exited)
2015-05-21 23:42:26	<--	jminer (Instantbird@moz-b1u.qch.163.66.IP) has quit (Ping timeout: 121 seconds)
2015-05-21 23:42:34	<--	new_one_ (new_one@moz-6q20ca.kbni.1u98.0009.2601.IP) has quit (Ping timeout: 121 seconds)
2015-05-21 23:42:35	Jouan	By the way, is everything on doc.rust-lang.org part of the standard?
2015-05-21 23:42:45	blaenk	the standard? the standard library?
2015-05-21 23:42:47	&Manishearth	Jouan: "standard"?
2015-05-21 23:42:53	&Manishearth	define "standard library"
2015-05-21 23:42:54	Jouan	Standard library
2015-05-21 23:42:54	blaenk	if it has /std/ at the end then yeah
2015-05-21 23:42:58	&Manishearth	^ that
2015-05-21 23:43:04	&Manishearth	there are other libraries that ship with rust too
2015-05-21 23:43:10	blaenk	e.g. http://doc.rust-lang.org/std/ is the standard library
2015-05-21 23:43:11	estabroo	how do I tell the compiler to let me use an "unstable" feature - error: use of unstable library feature 'buf_stream'
2015-05-21 23:43:13	&Manishearth	and yet more libraries on that site that don't, bt are "official"
2015-05-21 23:43:19	<--	kgrandon (Adium@moz-m21j0d.2rkg.9kg1.0101.2620.IP) has quit (Quit: Leaving.)
2015-05-21 23:43:20	&Manishearth	estabroo: use a nightly
2015-05-21 23:43:25	blaenk	estabroo: you have to be using a nightly release, then look at the #![feature(blah)] directive
2015-05-21 23:43:30	&Manishearth	unstable features are disabled in stable releases
2015-05-21 23:43:43	Jouan	So for example, is the bitflags! macro shipping with rust?
2015-05-21 23:43:48	--	zz_NameNotFound is now known as NameNotFound
2015-05-21 23:43:49	blaenk	it used to
2015-05-21 23:43:53	-->	fyolnish (fyolnish@moz-l1gill.au-net.ne.jp) has joined #rust
2015-05-21 23:43:53	blaenk	but the link I gave is its own crate
2015-05-21 23:43:58	blaenk	so it's on crates.io
2015-05-21 23:44:05	blaenk	but documentation for it is hosted on the rust-lang site
2015-05-21 23:44:06	Jouan	Ok
2015-05-21 23:44:15	Jouan	Thanks for your answers!
2015-05-21 23:44:21	aatch	Some libraries are managed by the core Rust team, but aren't part of the standard distribution.
2015-05-21 23:44:21	blaenk	you can think of it kind of like an official package, but its not part of the core or anything
2015-05-21 23:44:24	blaenk	but it's maintained by, yeah
2015-05-21 23:44:31	blaenk	basically anything in github.com/rust-lang
2015-05-21 23:44:44	<--	harrisonclarke (harrisoncla@moz-uur7pt.eastlink.ca) has quit (Ping timeout: 121 seconds)
2015-05-21 23:45:16	Azdle	I just want to make it known that I'm really out of my depth for the question that I'm about to ask. I'm getting an error `Undefined symbols for architecture x86_64: "_lua_rotate"`. The odd thing is it seems to be finding all the rest of the `_lua_*` symbols just fine and when I do an `nm /usr/local/bin/lua` (which I'm not 100% sure is the right place to be looking, but I couldn't find anything else the looked right) I do see that it has the symbol 
2015-05-21 23:45:16	Azdle	`_lua_rotate` with an address. Anyone have thoughts on what gives? This is on OSX.
2015-05-21 23:45:32	-->	frangio (frangio@moz-04sgf8.fibertel.com.ar) has joined #rust
2015-05-21 23:45:32	<--	frangio (frangio@moz-04sgf8.fibertel.com.ar) has quit (Client exited)
2015-05-21 23:45:55	-->	colinsurprenant (colin@moz-q9ee1n.74.electronicbox.net) has joined #rust
2015-05-21 23:47:13	-->	gsingh93 (gulshan@moz-ln1ktu.st3l.iv8o.0004.2601.IP) has joined #rust
2015-05-21 23:48:20	-->	blank_na1e (blank_name@moz-kbg.iv2.183.192.IP) has joined #rust
2015-05-21 23:48:40	<--	davebettin (davebettin@moz-ip635p.or.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-21 23:49:35	<--	blank_name (blank_name@moz-se4mfq.mi.frontiernet.net) has quit (Ping timeout: 121 seconds)
2015-05-21 23:50:01	&mbrubeck	Azdle: No idea. However, the correct file to check is probably something like /usr/local/lib/liblua.so if that helps...
2015-05-21 23:50:15	<--	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-21 23:51:21	Azdle	I kinda thought that would be the case, but there is no `*lua*` in /usr/lib or /usr/local/lib. 
2015-05-21 23:51:38	Azdle	I'm actually reading the man page for ld right now, lol.
2015-05-21 23:51:48	Azdle	I will get to the bottom of this!
2015-05-21 23:53:36	--	irc: disconnected from server
2015-05-21 23:53:48	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-21 23:53:48	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-21 23:53:48	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-21 23:53:48	--	Channel #rust: 938 nicks (13 ops, 0 halfops, 2 voices, 923 normals)
2015-05-21 23:53:50	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-21 23:54:02	&mbrubeck	Azdle: lua_rotate is new in Lua 5.3; do you have the correct version?
2015-05-21 23:55:26	<--	njn (chatzilla@moz-jkhneq.iinet.net.au) has quit (Connection closed)
2015-05-21 23:55:40	Azdle	I think so... but that is pretty damning against that thought.
2015-05-21 23:55:42	-->	logan_e (logan_e@moz-ltn.qg3.218.73.IP) has joined #rust
2015-05-21 23:56:27	<--	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-21 23:56:34	&mbrubeck	Azdle: Also, if you have multiple versions of Lua on your system it could be linking to the wrong one.
2015-05-21 23:57:17	-->	njn (chatzilla@moz-ok3l5e.iinet.net.au) has joined #rust
2015-05-21 23:57:19	<--	Jouan (Mibbit@moz-clk0e9.austtx.sbcglobal.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-21 23:57:27	Azdle	Yeah, I think that is what is happening.
2015-05-21 23:58:18	Azdle	Unfortunatly I went a little crazy trying to get some lua libraries to work a few months ago and it's all kinda a mess.
2015-05-21 23:59:16	<--	jdekstrand (Jennifer@moz-okjt9t.dyn.centurytel.net) has quit (Ping timeout: 121 seconds)
2015-05-22 00:00:48	--	irc: disconnected from server
2015-05-22 00:01:00	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-22 00:01:00	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-22 00:01:00	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-22 00:01:00	--	Channel #rust: 936 nicks (13 ops, 0 halfops, 2 voices, 921 normals)
2015-05-22 00:01:02	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-22 00:01:12	-->	v21 (vee@moz-tqa.5lr.4.171.IP) has joined #rust
2015-05-22 00:01:57	<--	Rym_ (y@moz-c2u.sd4.38.217.IP) has quit (Ping timeout: 121 seconds)
2015-05-22 00:02:52	-->	lyc (lyc@moz-jft.nr8.226.207.IP) has joined #rust
2015-05-22 00:03:09	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-22 00:04:32	<--	orangeshark (erik@moz-1vs3iq.44tj.56ot.0306.2602.IP) has quit (Quit: Leaving)
2015-05-22 00:05:14	-->	tikue_ (tim@moz-n71.k1b.0.198.IP) has joined #rust
2015-05-22 00:05:35	<--	tikue (tim@moz-n71.k1b.0.198.IP) has quit (Connection closed)
2015-05-22 00:06:10	<--	excaliburhissheath (excaliburhi@moz-h98c6v.il.comcast.net) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-05-22 00:06:39	-->	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has joined #rust
2015-05-22 00:06:57	-->	jistone_ (jistone@moz-2m2.odn.132.209.IP) has joined #rust
2015-05-22 00:07:02	<--	jistone (jistone@moz-u47qar.redhat.com) has quit (Connection closed)
2015-05-22 00:07:12	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Ping timeout: 121 seconds)
2015-05-22 00:07:12	-->	rmdashrf (rmdashrf@moz-ecr.kjm.54.128.IP) has joined #rust
2015-05-22 00:07:36	-->	jistone (jistone@moz-u47qar.redhat.com) has joined #rust
2015-05-22 00:08:22	-->	Rym_ (y@moz-c2u.sd4.38.217.IP) has joined #rust
2015-05-22 00:09:00	Azdle	Ah ha! There was something hiding in /usr/local/opt/lua/. Thanks for the tip mbrubeck.
2015-05-22 00:11:00	<--	jistone_ (jistone@moz-2m2.odn.132.209.IP) has quit (Ping timeout: 121 seconds)
2015-05-22 00:11:35	<--	kkus (kkus@moz-u8u.iof.234.165.IP) has quit (Ping timeout: 121 seconds)
2015-05-22 00:11:59	Skyler	https://doc.rust-lang.org/nightly/syntax/diagnostic/struct.FatalError.html "It is also used as the argument to panic at the moment, but that will eventually not be true."
2015-05-22 00:12:13	Skyler	any clue what the newer behavior will be?
2015-05-22 00:12:28	<--	Rym_ (y@moz-c2u.sd4.38.217.IP) has quit (Ping timeout: 121 seconds)
2015-05-22 00:13:13	-->	choplin (choplin@moz-80gau4.rev.vmobile.jp) has joined #rust
2015-05-22 00:14:11	<--	colinsurprenant (colin@moz-q9ee1n.74.electronicbox.net) has quit (Client exited)
2015-05-22 00:15:29	-->	DoubleWeasel (Mibbit@moz-je7qu7.mpls.qwest.net) has joined #rust
2015-05-22 00:15:57	<--	Shackra (Jorge@moz-7bh.ng6.177.186.IP) has quit (Ping timeout: 121 seconds)
2015-05-22 00:16:03	<--	rossm (ross@moz-rlsbqp.as13285.net) has quit (Ping timeout: 121 seconds)
2015-05-22 00:16:03	DoubleWeasel	hello, can you write a generic liftA in rust yet? it seems you could not in december according to google
2015-05-22 00:16:17	-->	rossm (ross@moz-rlsbqp.as13285.net) has joined #rust
2015-05-22 00:16:29	<--	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-22 00:16:43	<--	datanoise (uid88553@moz-o6l0fh.charlton.irccloud.com) has quit (Quit: )
2015-05-22 00:16:56	aatch	Doesn't liftA require higher-kinded types?
2015-05-22 00:17:14	DoubleWeasel	yeah. that answers my question
2015-05-22 00:18:57	-->	kgrandon (Adium@moz-moe946.hjek.d045.0009.2601.IP) has joined #rust
2015-05-22 00:19:02	<--	new_one (new_one@moz-tc7nnm.kbni.1u98.0009.2601.IP) has quit (Ping timeout: 121 seconds)
2015-05-22 00:19:29	aatch	HKTs fall pretty firmly in the "nice to have" category for features.
2015-05-22 00:19:31	<--	A205B064 (A205B064@moz-9s9nhk.nap.wideopenwest.com) has quit (Ping timeout: 121 seconds)
2015-05-22 00:19:48	DoubleWeasel	it seems the last discussion was on the RFC repo Jan 1
2015-05-22 00:20:06	 *	ChrisMorgan wonders why TcpStream.try_clone() and TcpStream.shutdown(…) take &self rather than &mut self
2015-05-22 00:20:49	DoubleWeasel	yeah, I find myself writing a lot of liftA over Maybes and I was hoping that would translate to Options easily
2015-05-22 00:20:50	ChrisMorgan	.try_clone() basically introduces undesirable aliasing (you want to write to a &TcpStream? stream.try_clone().unwrap().write(…)).
2015-05-22 00:22:42	-->	brainproxy (michael@moz-9vjtig.mo.charter.com) has joined #rust
2015-05-22 00:22:53	-->	Rym_ (y@moz-c2u.sd4.38.217.IP) has joined #rust
2015-05-22 00:23:06	dcrewi	I thought so many things aren't possible until rust has HKTs that it's not so much "nice to have" but "will definitely happen at some point"
2015-05-22 00:23:10	<--	fyolnish (fyolnish@moz-l1gill.au-net.ne.jp) has quit (Connection closed)
2015-05-22 00:23:17	dcrewi	question mark
2015-05-22 00:24:06	DoubleWeasel	currently zero progress has been made https://github.com/rust-lang/rfcs/issues/324
2015-05-22 00:24:09	-->	cornelius (Mibbit@moz-vmg.e5j.237.133.IP) has joined #rust
2015-05-22 00:24:10	<--	BossKonaSegway (Michael@moz-vp8rf7.res.rr.com) has left #rust
2015-05-22 00:24:28	<--	cornelius (Mibbit@moz-vmg.e5j.237.133.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-22 00:25:23	<--	__tosh (uid87112@moz-9ihlbi.charlton.irccloud.com) has quit (Quit: Connection closed for inactivity)
2015-05-22 00:26:36	-->	peter (peter@moz-e11i63.cable.virginm.net) has joined #rust
2015-05-22 00:27:27	<--	Rym_ (y@moz-c2u.sd4.38.217.IP) has quit (Ping timeout: 121 seconds)
2015-05-22 00:27:32	aatch	dcrewi, "many things aren't possible" isn't a strong argument. Many things aren't possible without dependent types, that doesn't mean we're going to get *them*
2015-05-22 00:29:23	<--	lyc (lyc@moz-jft.nr8.226.207.IP) has quit (Connection closed)
2015-05-22 00:30:21	DoubleWeasel	I'll argue that rust's syntax for type constructors (specifically ugh<ew>) means that rust was never intended to let you do the crazy things you can do in modern FP languages
2015-05-22 00:30:40	<--	peter (peter@moz-e11i63.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2015-05-22 00:31:58	geofft	syntax can always be added if it's unambiguous with existing syntax, but I'd certainly agree that that's true of the current design influences 
2015-05-22 00:32:05	-->	jpg (jpg@moz-ldeh9l.internode.on.net) has joined #rust
2015-05-22 00:32:06	<--	copycat (Thunderbird@moz-dpm.8hc.223.111.IP) has quit (Connection closed)
2015-05-22 00:32:33	<--	mcoffin_ (mcoffin@moz-prg.ctp.54.128.IP) has quit (Connection closed)
2015-05-22 00:33:29	-->	durka42 (Adium@moz-qsuual.pa.comcast.net) has joined #rust
2015-05-22 00:33:31	aatch	I'd also like to mention that the more features we add to the type system, to more complex things get. We don't really have that much more room. It may very well be a choice between HKT and some sort of inheritance system.
2015-05-22 00:34:09	aatch	And there's far more motivation for the latter in the form of Servo.
2015-05-22 00:34:17	&mbrubeck	man, people are going to come after the servo team with pitchforks if we demand inheritance and it means they don't get their HKT. :)
2015-05-22 00:34:46	aatch	mbrubeck, they can't use the pitchforks though, they'd have side-effects.
2015-05-22 00:35:13	-->	new_one (new_one@moz-09j1u6.kbni.1u98.0009.2601.IP) has joined #rust
2015-05-22 00:35:18	geofft	and it's not like "systems language that's unquestionably a modern FP language" is a niche that badly needs filling -- Haskell is workable as a systems language, at least for the stuff Rust 1.0 stable does 
2015-05-22 00:35:35	geofft	it's just that the relative priorities are different (which is why I'm writing Rust now, despite <3ing Haskell) 
2015-05-22 00:36:21	-->	mcoffin (mcoffin@moz-prg.ctp.54.128.IP) has joined #rust
2015-05-22 00:36:34	&mbrubeck	Yeah, I'm happy using Haskell when I want to turn the abstraction knob up to 11
2015-05-22 00:36:56	aatch	At any rate, Haskell hides *a lot* from the programmer. It wouldn't really be usable if it didn't.
2015-05-22 00:37:00	-->	fyolnish (fyolnish@moz-soopfn.ocn.ne.jp) has joined #rust
2015-05-22 00:37:02	<--	fyolnish (fyolnish@moz-soopfn.ocn.ne.jp) has quit (Connection closed)
2015-05-22 00:37:03	-->	fyolnish (fyolnish@moz-soopfn.ocn.ne.jp) has joined #rust
2015-05-22 00:37:22	jpg	Hey guys, is there a way to check if using a sync_channel would block before actually blocking the sending thread? i.e the buffer is full
2015-05-22 00:37:49	-->	jcpst (joe@moz-97brhe.res.rr.com) has joined #rust
2015-05-22 00:37:51	-->	Xena (Xena@moz-17t1gv.ca.comcast.net) has joined #rust
2015-05-22 00:38:00	jpg	Oh, found it. try_send()
2015-05-22 00:38:08	<--	kingmahl (kingmahl@moz-klj.ksa.80.69.IP) has quit (Quit: Konversation terminated!)
2015-05-22 00:38:18	-->	Rym_ (y@moz-c2u.sd4.38.217.IP) has joined #rust
2015-05-22 00:38:38	-->	verdagon (verdagon@moz-tk2c2b.tmodns.net) has joined #rust
2015-05-22 00:38:51	verdagon	guys, im having sooo much trouble with rust =(
2015-05-22 00:38:55	verdagon	just with lifetimes in general
2015-05-22 00:39:02	verdagon	i want to make a directed graph
2015-05-22 00:39:11	verdagon	and have everything have the same lifetime, that of its containing object
2015-05-22 00:39:16	verdagon	is that even possible?
2015-05-22 00:39:25	&mbrubeck	!faq
2015-05-22 00:39:25	+rustbot	https://etherpad.mozilla.org/rust-irc-faq and http://doc.rust-lang.org/complement-lang-faq.html and http://doc.rust-lang.org/complement-design-faq.html
2015-05-22 00:39:29	verdagon	i just want to say “DESTROY IT ALL AT THE SAME TIME, I DONT GIVE A FUCK” lol
2015-05-22 00:39:41	verdagon	the closest ive heard is to use RC
2015-05-22 00:39:45	verdagon	but its so overkill
2015-05-22 00:39:57	&mbrubeck	verdagon: Don't worry, this is a hard problem. Graphs and the Borrow Checker and ancient enemies.
2015-05-22 00:40:11	<--	peferron (peferron@moz-k89vq8.ca.comcast.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-22 00:40:26	&mbrubeck	verdagon: You might want to look at https://github.com/nrc/r4cppp/tree/master/graphs and http://smallcultfollowing.com/babysteps/blog/2015/04/06/modeling-graphs-in-rust-using-vector-indices/
2015-05-22 00:40:49	verdagon	will do, thanks!
2015-05-22 00:40:50	aatch	verdagon, arenas are also a good solution here, though a little difficult to work with for other reasons.
2015-05-22 00:41:00	verdagon	arena.. is that like an autorelease pool
2015-05-22 00:41:02	-->	ray (ray@moz-tv2.mfi.26.218.IP) has joined #rust
2015-05-22 00:41:13	verdagon	nm ill look it up lol
2015-05-22 00:41:17	-->	harrisonclarke (harrisoncla@moz-uur7pt.eastlink.ca) has joined #rust
2015-05-22 00:42:05	&mbrubeck	verdagon: The first link there includes a graph built with TypedArena
2015-05-22 00:42:52	<--	Rym_ (y@moz-c2u.sd4.38.217.IP) has quit (Ping timeout: 121 seconds)
2015-05-22 00:44:55	--	zz_NameNotFound is now known as NameNotFound
2015-05-22 00:45:13	<--	jbomo (dkd@moz-uol4mm.fios.verizon.net) has quit (Quit: )
2015-05-22 00:45:29	<--	harrisonclarke (harrisoncla@moz-uur7pt.eastlink.ca) has quit (Ping timeout: 121 seconds)
2015-05-22 00:46:57	-->	kent (kent@moz-nd2iqs.fl.atlanticbb.net) has joined #rust
2015-05-22 00:46:57	-->	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has joined #rust
2015-05-22 00:49:41	<--	zhb (zhb@moz-mks.06p.58.59.IP) has quit (Ping timeout: 121 seconds)
2015-05-22 00:50:31	<--	mkpankov` (mkpankov@moz-1rk.3mh.23.84.IP) has quit (Ping timeout: 121 seconds)
2015-05-22 00:50:39	<--	kent (kent@moz-nd2iqs.fl.atlanticbb.net) has quit (Quit: WeeChat 1.1.1)
2015-05-22 00:50:43	-->	zhb (zhb@moz-t5v.rsf.206.121.IP) has joined #rust
2015-05-22 00:51:11	<--	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-22 00:53:35	<--	new_one (new_one@moz-09j1u6.kbni.1u98.0009.2601.IP) has quit (Quit: WeeChat 1.1.1)
2015-05-22 00:54:00	--	irc: disconnected from server
2015-05-22 00:54:12	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-22 00:54:12	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-22 00:54:12	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-22 00:54:12	--	Channel #rust: 931 nicks (13 ops, 0 halfops, 2 voices, 916 normals)
2015-05-22 00:54:14	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-22 00:54:23	--	NameNotFound is now known as zz_NameNotFound
2015-05-22 00:55:29	-->	lyc (lyc@moz-jft.nr8.226.207.IP) has joined #rust
2015-05-22 00:55:46	<--	annodomini (lambda@moz-qgii5v.ma.comcast.net) has quit (Client exited)
2015-05-22 00:56:03	<--	zeebo_ (zeebo@moz-6rqv1a.ut.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-22 00:56:26	<--	DoubleWeasel (Mibbit@moz-je7qu7.mpls.qwest.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-22 00:56:33	-->	giucam (giucam@moz-iv0nnc.bb.dnainternet.fi) has joined #rust
2015-05-22 00:56:49	LookupError	hello. C library filled my  buf: &mut [u8] and returned len of buf. How to print buf?
2015-05-22 00:57:12	--	irc: disconnected from server
2015-05-22 00:57:24	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-22 00:57:24	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-22 00:57:24	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-22 00:57:24	--	Channel #rust: 931 nicks (13 ops, 0 halfops, 2 voices, 916 normals)
2015-05-22 00:57:26	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-22 00:57:39	Sprog	Time for a stupid question about modules
2015-05-22 00:57:59	Sprog	I have a file called thing.rs, I want to bring it into scope in lib.rs. Inside of thing.rs is a struct called Thing
2015-05-22 00:58:04	Sprog	in lib.rs I do
2015-05-22 00:58:10	Sprog	mod Thing
2015-05-22 00:58:12	@niconii	LookupError: simplest way would just be to write it to std::io::stdout()
2015-05-22 00:58:21	Sprog	and it brings thing.rs into scope
2015-05-22 00:58:29	Sprog	but I can't use Thing directly 
2015-05-22 00:58:44	SpaceManiac	LookupError: println!("{:?}", &buf[..len]);
2015-05-22 00:58:53	Sprog	If I tack on a use statement "use Thing::Thing;" I get "Import `thing` conflicts with existing submodule
2015-05-22 00:59:00	@niconii	LookupError: you can convert it to a string and all that if you care about making sure it's valid utf-8
2015-05-22 00:59:51	LookupError	println!("{:?}", &buf[..len]);  the type `[u8]` cannot be indexed by `core::ops::RangeTo<i32>`
2015-05-22 00:59:56	SpaceManiac	Sprog: change your mod name to be lowercase: "mod thing"
2015-05-22 00:59:56	aatch	Sprog, are you on windows?
2015-05-22 01:00:15	LookupError	After I got that error I went here with question.
2015-05-22 01:00:20	Sprog	@aatch im on arch linux
2015-05-22 01:00:28	@niconii	LookupError: might need (&buf)[..len]
2015-05-22 01:00:41	SpaceManiac	LookupError: use 'len as usize'
2015-05-22 01:00:47	Sprog	@SpaceManiac Thing is capitalized in the *.rs name. Does it not need to be capitalized for mod?
2015-05-22 01:00:51	LookupError	the type `[u8]` cannot be indexed by `core::ops::RangeTo<i32>`
2015-05-22 01:00:51	@niconii	ah, and that, yes
2015-05-22 01:00:56	SpaceManiac	Sprog: it should be lowercase on both.
2015-05-22 01:01:02	SpaceManiac	That way 'thing' is the mod, and 'Thing' is the type.
2015-05-22 01:01:12	Sprog	oh, so they can't be the same
2015-05-22 01:01:15	SpaceManiac	(plus, modules are lowercase by convention)
2015-05-22 01:01:16	Sprog	bad habits from java
2015-05-22 01:01:20	@niconii	&buf[..(len as usize)] i guess
2015-05-22 01:01:22	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Ping timeout: 121 seconds)
2015-05-22 01:01:26	<--	mohawk (Mibbit@moz-iah5ju.66.brainstorminternet.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-22 01:01:33	SpaceManiac	they are allowed to be the same, except that you can't have both a mod and a type with the same name in the same scope
2015-05-22 01:01:54	Sprog	oh and then in order to use stuff in the file with a use statement
2015-05-22 01:01:57	Sprog	the names have to be distinct
2015-05-22 01:02:15	<--	zzing (textual@moz-jucm1n.cpe.distributel.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-22 01:02:20	-->	jviereck (Adium@moz-bqii5r.dynamic.hispeed.ch) has joined #rust
2015-05-22 01:02:22	-->	ai (ai@moz-pqofrl.sunline.net.ua) has joined #rust
2015-05-22 01:02:28	Sprog	very interesting
2015-05-22 01:02:29	Sprog	til
2015-05-22 01:02:31	Sprog	I guess it makes sense
2015-05-22 01:02:37	aatch	Sprog, the conventions in Rust are: Types are PascalCase, constants UPPERCASE (UPPER_SNAKE_CASE to be precise) and everything else snake_case.
2015-05-22 01:02:39	Sprog	since mod just dumps the contents of the file in the scope of <modname>
2015-05-22 01:03:13	Sprog	@aatch is there a styleguide available?
2015-05-22 01:03:17	LookupError	niconii, thanks. I should be more intent on rust errors content.
2015-05-22 01:03:19	aatch	Sprog, well, `mod foo` creates a new module. You don't technically need a separate file,
2015-05-22 01:03:50	Dtgr	I still find Rust's module system a bit awkward, but I can live with it :P
2015-05-22 01:04:04	aatch	Sprog, this is the closest we have: https://aturon.github.io/
2015-05-22 01:05:06	Sprog	ah okay
2015-05-22 01:05:20	@niconii	Sprog, aatch: that's outdated, http://doc.rust-lang.org/style/ is what you want
2015-05-22 01:05:23	Sprog	another weird error. If I have a struct that has a field that is a type I define
2015-05-22 01:05:25	Sprog	say Thing
2015-05-22 01:05:31	aatch	niconii, oh, it actually moved then.
2015-05-22 01:05:51	Sprog	why is it erroring saying "the trait core::marker::Sized is not implemented for the type thing::thing"
2015-05-22 01:05:58	@niconii	aatch: yeah, though it's not really emphasized because of all the FIXMEs
2015-05-22 01:06:21	SpaceManiac	Sprog: what are the contents of Thing?
2015-05-22 01:06:26	<--	verdagon (verdagon@moz-tk2c2b.tmodns.net) has quit (Client exited)
2015-05-22 01:06:44	Sprog	a single function that spits out a string literal
2015-05-22 01:06:55	Sprog	&'static str to be exact
2015-05-22 01:06:57	SpaceManiac	the fields of the struct, I mean.
2015-05-22 01:07:07	Sprog	oh jusdt a bunch of integers
2015-05-22 01:07:09	 *	ChrisMorgan is seriously considering constructing an alternative standard library façade for the Rust training materials that he’s making, in order to gradate the concepts and reduce noise
2015-05-22 01:07:12	<--	gsingh93 (gulshan@moz-ln1ktu.st3l.iv8o.0004.2601.IP) has quit (Ping timeout: 121 seconds)
2015-05-22 01:07:29	Yurume	ChrisMorgan: re-building stdlib from the scratch? sounds interesting.
2015-05-22 01:07:29	@niconii	Sprog: just integers? what's the actual definition of the struct
2015-05-22 01:07:30	Sprog	im guessing its because structs are stored in contiguous memory and it cant decide how to lay it out
2015-05-22 01:07:30	<--	narann (narann@moz-t9a.qfm.21.50.IP) has quit (Quit: Leaving)
2015-05-22 01:07:38	@niconii	Sprog: you shouldn't be getting that from just integers
2015-05-22 01:07:46	aatch	Sprog, can you post the code?
2015-05-22 01:08:03	-->	rouma (zack@moz-p8e0re.res.rr.com) has joined #rust
2015-05-22 01:08:15	Sprog	sec, its on another laptop, I'll type it up
2015-05-22 01:08:15	ChrisMorgan	Yurume: no, not from scratch; just reducing the number of concepts required, often at the cost of efficiency. This will be built on top of libstd.
2015-05-22 01:08:26	@niconii	actually, the struct you're talking about
2015-05-22 01:08:49	aatch	We're gonna be here a while if we play 20 questions about your code.
2015-05-22 01:09:11	@niconii	er, yeah, never mind, i'll wait until i see it
2015-05-22 01:10:12	Dr-Emann	If you're getting errors about size-edness, I'd guess you have a [T],
2015-05-22 01:10:17	-->	srjek_ (srjek@moz-gg7i72.ece.uic.edu) has joined #rust
2015-05-22 01:10:17	<--	srjek (srjek@moz-gg7i72.ece.uic.edu) has quit (Connection closed)
2015-05-22 01:10:57	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-22 01:11:02	aatch	Maybe we should get "please post your code" in the topic?
2015-05-22 01:11:12	Sprog	@niconii @aatch http://hastebin.com/mohiqipixu.coffee
2015-05-22 01:11:15	Sprog	this is basically the code
2015-05-22 01:11:18	Sprog	I dont feel like typing everything
2015-05-22 01:11:48	Yurume	ChrisMorgan: just an alternative stdlib then? hmm.
2015-05-22 01:11:50	<--	rossm (ross@moz-rlsbqp.as13285.net) has quit (Ping timeout: 121 seconds)
2015-05-22 01:11:57	-->	dstrbad (dstrbad@moz-fa5uqe.dsl.iskon.hr) has joined #rust
2015-05-22 01:12:03	aatch	Sprog, are you sure that's the same as what's on your laptop?
2015-05-22 01:12:11	ChrisMorgan	Yurume: purely for training purposes; by the end of the material the training wheels would be removed.
2015-05-22 01:12:15	Sprog	yeah, there's like 15 other fields
2015-05-22 01:12:20	Sprog	but they're all f64, i32
2015-05-22 01:12:24	Sprog	inside ThingContainer
2015-05-22 01:12:27	Sprog	thats the only difference
2015-05-22 01:12:30	-->	dstrbad_ (dstrbad@moz-mgv.rg0.217.31.IP) has joined #rust
2015-05-22 01:12:30	Mutabah	Sprog: are any of thiose rtraits?
2015-05-22 01:12:33	-->	hjr3 (hradtke@moz-e235ok.fios.verizon.net) has joined #rust
2015-05-22 01:12:34	aatch	Sprog, what about `Thing` itself?
2015-05-22 01:12:40	-->	rossm (ross@moz-rlsbqp.as13285.net) has joined #rust
2015-05-22 01:12:45	Sprog	oh...shit
2015-05-22 01:12:47	-->	borromakot (Adium@moz-j6pi1a.il.comcast.net) has joined #rust
2015-05-22 01:12:53	Sprog	repl should be SayType
2015-05-22 01:12:56	Sprog	its a trait
2015-05-22 01:12:57	<--	det (chris@moz-9klsea.lv.cox.net) has quit (Connection closed)
2015-05-22 01:13:00	borromakot	it isn't possible to use a trait to enforce fields on a struct is it?
2015-05-22 01:13:03	aatch	Ah! There we go.
2015-05-22 01:13:05	Dr-Emann	There we go. 
2015-05-22 01:13:10	aatch	borromakot, nope.
2015-05-22 01:13:13	Sprog	So whats the problem docs
2015-05-22 01:13:30	aatch	Sprog, you can't use traits directly like that.
2015-05-22 01:13:41	Sprog	hm, so how can I let the struct take any SayType
2015-05-22 01:13:45	Mutabah	borromakot: there have been poposals for that, but none accepted
2015-05-22 01:13:49	@niconii	Sprog: you need a Box<Trait>
2015-05-22 01:13:53	Dr-Emann	Sprog: because anything could impl the trait, there's no way to store it directly in the struct. Unsized types like traits, and raw [T] must be accessed behind a pointer.
2015-05-22 01:13:59	aatch	Sprog, you have to add a layer of indirection, normally via `Box`, but any pointer will work.
2015-05-22 01:14:10	<--	dstrbad_ (dstrbad@moz-mgv.rg0.217.31.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-22 01:14:16	Sprog	so how is that actually working in the backend? Why is the pointer necessary?
2015-05-22 01:14:17	-->	Shackra (Jorge@moz-7bh.ng6.177.186.IP) has joined #rust
2015-05-22 01:14:35	borromakot	aatch: it seems like something that would be useful.  At the same time, one can easily enforce an accessor method that would typically lead to usage of the field, and not *require* state.  Probably nicer.
2015-05-22 01:14:45	@niconii	Sprog: the issue is that if you have a bunch of types that implement Trait
2015-05-22 01:14:53	@niconii	Sprog: they're not necessarily going to be the same size
2015-05-22 01:14:58	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Connection closed)
2015-05-22 01:15:06	Dtgr	Sprog: the size of a trait is not known (it can be anything), the size of a pointer is known
2015-05-22 01:15:19	-->	peferron (peferron@moz-k89vq8.ca.comcast.net) has joined #rust
2015-05-22 01:15:21	<--	Gamecubic (cubic@moz-bglmk5.mc.videotron.ca) has quit (Quit: Leaving)
2015-05-22 01:15:25	Sprog	interesting
2015-05-22 01:15:26	aatch	Sprog, you said you're used to Java, right? Well traits are most similar to interfaces.
2015-05-22 01:15:38	Sprog	Yeah, that's why I guessed I could do that
2015-05-22 01:15:53	Dr-Emann	Well, in Java, everything is a pointer, except integers.
2015-05-22 01:15:54	Sprog	Im also familiar with Scala
2015-05-22 01:16:06	<--	dstrbad (dstrbad@moz-fa5uqe.dsl.iskon.hr) has quit (Ping timeout: 121 seconds)
2015-05-22 01:16:18	<--	nafis (nafis@moz-i1dvni.bc.googleusercontent.com) has quit (Ping timeout: 121 seconds)
2015-05-22 01:16:20	aatch	Sprog, well Java automatically boxes (almost) everything, Rust makes you do it deliberately.
2015-05-22 01:16:32	Sprog	oh, I see now
2015-05-22 01:16:37	Sprog	that makes more sense
2015-05-22 01:16:58	-->	mkpankov` (mkpankov@moz-dds.evt.23.84.IP) has joined #rust
2015-05-22 01:17:03	 *	ChrisMorgan finds himself liking Iterator<Item = Result<T, E>> steadily less and less and wishing for Result‐based iteration steadily more and more
2015-05-22 01:17:34	aatch	Sprog, specifically, Box<Trait> is actually a "fat pointer", which is two-words instead of one. The second word contains a pointer to the vtable for the type implementing `Trait`.
2015-05-22 01:17:50	<--	chao-tic (chao@moz-258.4aj.101.218.IP) has quit (Ping timeout: 121 seconds)
2015-05-22 01:18:09	aatch	Sprog, since we don't actually know the real type at compile time, we have to put the information somewhere at runtime.
2015-05-22 01:18:19	Sprog	that makes sense, that way we can use it
2015-05-22 01:18:30	aatch	If I remember correctly, Java uses double-dispatch instead of virtual calls though.
2015-05-22 01:18:31	Sprog	because anything can implement the trait
2015-05-22 01:19:03	Sprog	So if I #[derive(Debug)] a struct
2015-05-22 01:19:09	Sprog	does each of its members have to implement it as well?
2015-05-22 01:19:13	Mutabah	Sprog: Yes
2015-05-22 01:19:13	Sprog	I would guess yes
2015-05-22 01:20:05	aatch	Sprog, fortunately 1) most type implement Debug and 2) writing your own implementation isn't too hard.
2015-05-22 01:20:19	<--	zynisch_o7 (zynisch_o7@moz-6eh1ju.dyn.optonline.net) has quit (Ping timeout: 121 seconds)
2015-05-22 01:20:35	Mutabah	The biggest problem is large arrays
2015-05-22 01:20:41	<--	Shackra (Jorge@moz-7bh.ng6.177.186.IP) has quit (Ping timeout: 121 seconds)
2015-05-22 01:20:50	Sprog	doesnt seem like it
2015-05-22 01:20:50	Mutabah	(I really want an option to do crate-local impls of foreign types)
2015-05-22 01:20:59	Sprog	what if I wanted to have allows and derives?
2015-05-22 01:21:07	Mutabah	Sprog: They chain
2015-05-22 01:21:08	Sprog	Can I combine them into one #[]?
2015-05-22 01:21:19	Mutabah	#[allow(name)] \\ #[derive(Trait)]
2015-05-22 01:21:24	aatch	Sprog, nah, just have multiple attributes.
2015-05-22 01:21:28	Mutabah	Sprog: What type errors?
2015-05-22 01:21:45	-->	verdagon (verdagon@moz-tk2c2b.tmodns.net) has joined #rust
2015-05-22 01:21:53	-->	zynisch_o7 (zynisch_o7@moz-6eh1ju.dyn.optonline.net) has joined #rust
2015-05-22 01:21:58	Sprog	What do you mean mutabah?
2015-05-22 01:22:05	-->	mr_trousers (Mibbit@moz-lv0kqm.sntcca.sbcglobal.net) has joined #rust
2015-05-22 01:22:09	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-22 01:22:24	Mutabah	Sprog: What error do you get which indicates taht deriving Debug doesn't work
2015-05-22 01:22:49	<--	mnemnion (mnemnion@moz-kf3boi.ca.comcast.net) has quit (Connection closed)
2015-05-22 01:22:53	Sprog	oh not it works fine I just have to implement it
2015-05-22 01:23:10	-->	mnemnion (mnemnion@moz-0dpqqk.0r24.tle7.0009.2601.IP) has joined #rust
2015-05-22 01:23:24	<--	clatour (clatour@moz-5ksfaf.hlrn.qwest.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2015-05-22 01:23:31	Azdle	I've got another fun symbol table question. When I try to load the lua library luasocket, the lua VM (which is complied into my rust application) complains that dlopen() can't fine the symbol `_lua_settable`. However, that symbol does exist in a lualib.a file that I'm linking against and it is `extern`ed in the lua wrapper library that I'm using. If I do a `nm` on the binary that rustc builds I find that that symbol indeed does not exist. I assume 
2015-05-22 01:23:31	Azdle	it's just getting optimized out since it looks like it's not used at compile time. Is there any way for me to force all symbols in liblua.a to get included in the final binary? Or do I need to figure out how to get liblua to compile to a .so? mbrubeck, you've been able to solve most of my problems so far, any thoughts?
2015-05-22 01:25:00	<--	mr_trousers (Mibbit@moz-lv0kqm.sntcca.sbcglobal.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-22 01:25:06	-->	indefini (indefini@moz-4p4v25.ucom.ne.jp) has joined #rust
2015-05-22 01:25:34	aatch	Azdle, you'll probably have to re-export the symbols from the archive from your dynamic library.
2015-05-22 01:25:48	<--	verdagon (verdagon@moz-tk2c2b.tmodns.net) has quit (Ping timeout: 121 seconds)
2015-05-22 01:26:19	-->	Rym_ (y@moz-c2u.sd4.38.217.IP) has joined #rust
2015-05-22 01:26:22	<--	bytewise (bytewise@moz-3k87d6.adsl.alicedsl.de) has quit (Quit: Leaving)
2015-05-22 01:26:30	-->	redshift (redshift@moz-c8c.73t.246.204.IP) has joined #rust
2015-05-22 01:26:32	aatch	Azdle, assuming that you're handing a `.so` to the lua vm (it's using `dlopen`, so...).
2015-05-22 01:26:44	-->	brianfernandes (Brian@moz-q2g.g5t.227.110.IP) has joined #rust
2015-05-22 01:26:51	<--	ajhager (aajhager@moz-mcdsgi.iplsin.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-22 01:26:53	<--	rossm (ross@moz-rlsbqp.as13285.net) has quit (Ping timeout: 121 seconds)
2015-05-22 01:27:03	-->	verdagon (verdagon@moz-ff302e.ca.comcast.net) has joined #rust
2015-05-22 01:27:11	-->	nstoddard (nstoddard@moz-ck2ddi.jcf6.2eo7.0009.2601.IP) has joined #rust
2015-05-22 01:27:12	<--	mnemnion (mnemnion@moz-0dpqqk.0r24.tle7.0009.2601.IP) has quit (Ping timeout: 121 seconds)
2015-05-22 01:27:20	-->	peter (peter@moz-e11i63.cable.virginm.net) has joined #rust
2015-05-22 01:27:22	<--	verdagon (verdagon@moz-ff302e.ca.comcast.net) has quit (Client exited)
2015-05-22 01:27:39	nstoddard	Is there an HTTP client library that doesn't use any external C libraries? I don't need HTTPS support.
2015-05-22 01:28:37	<--	rainemak (rainemak@moz-ekdrjb.elisa-laajakaista.fi) has quit (Ping timeout: 121 seconds)
2015-05-22 01:28:42	&Manishearth	nstoddard: I think you can turn off openssl support on hyper?
2015-05-22 01:28:51	-->	det (chris@moz-9klsea.lv.cox.net) has joined #rust
2015-05-22 01:28:52	&Manishearth	or was that rust-http? (rust-http is old and not maintained)
2015-05-22 01:28:57	Azdle	aatch, As far as I know I don't have a lua .so anywhere on my system and everything is coming from the lualib.a. dlopen is trying to open a socket/core.op file.
2015-05-22 01:29:12	ChrisMorgan	Manishearth: https://github.com/hyperium/hyper/blob/master/Cargo.toml doesn’t say so
2015-05-22 12:12:24	--	irc: disconnected from server
2015-05-22 12:14:55	-->	ubeatlenine (david@moz-eoouop.hfc.comcastbusiness.net) has joined #rust
2015-05-22 12:14:55	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-22 12:14:55	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-22 12:14:55	--	Channel #rust: 980 nicks (14 ops, 0 halfops, 2 voices, 964 normals)
2015-05-22 12:14:57	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-22 12:15:10	-->	Deep4 (Mibbit@moz-fo67hv.abo.wanadoo.fr) has joined #rust
2015-05-22 12:15:15	Deep4	Go to http://www.truthcontest.com , read the top entries and spread the truth. This will blow your mind.  As said in the books, the truth is like water, and it will slip through your fingers. The translations are available on http://www.truthcontest.com/translations.html
2015-05-22 12:15:15	kimundi	kidto: If it helps, imagine that a lifetime describes a scope in your source code. Nothing abstract, just really just a start position and a end position in a function. Example: { foo(); { let x = bar(); } } here the variable "x" has a lifetime that starts at the "let" statement and ends at the inner block+
2015-05-22 12:15:18	<--	Deep4 (Mibbit@moz-fo67hv.abo.wanadoo.fr) has left #rust
2015-05-22 12:15:31	auzi231	bluss: Oh interesting..., extend seems a good idea too
2015-05-22 12:15:55	--	irc: disconnected from server
2015-05-22 12:16:06	-->	ubeatlenine (david@moz-eoouop.hfc.comcastbusiness.net) has joined #rust
2015-05-22 12:16:06	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-22 12:16:06	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-22 12:16:06	--	Channel #rust: 980 nicks (14 ops, 0 halfops, 2 voices, 964 normals)
2015-05-22 12:16:08	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-22 12:16:18	kidto	kimundi: Oh, I get that, I just can't connect that to the 'a notation
2015-05-22 12:16:53	myname	so for x in y and for x in y.iter() is not the same
2015-05-22 12:17:11	&mbrubeck	myname: right - the first is equivalent to `for x in y.into_iter()` which consumes y
2015-05-22 12:17:37	myname	good to know
2015-05-22 12:18:06	--	irc: disconnected from server
2015-05-22 12:18:17	-->	ubeatlenine (david@moz-eoouop.hfc.comcastbusiness.net) has joined #rust
2015-05-22 12:18:17	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-22 12:18:17	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-22 12:18:17	--	Channel #rust: 979 nicks (14 ops, 0 halfops, 2 voices, 963 normals)
2015-05-22 12:18:19	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-22 12:18:23	<--	Amaranth (travis@moz-1raqsl.cpe.cableone.net) has quit (Connection closed)
2015-05-22 12:18:24	-->	grodan (Mibbit@moz-o5eg8b.bredband.comhem.se) has joined #rust
2015-05-22 12:18:38	&mbrubeck	kidto: The most basic case where the 'a notation is useful is `fn f<'a>(x: &'a Foo) -> &'a Bar`.  The <'a> means that you can pass any &Foo this this reference, no matter what its lifetime is.  (Just like <T> means you can pass any type to a function.)
2015-05-22 12:18:39	-->	Amaranth (travis@moz-1raqsl.cpe.cableone.net) has joined #rust
2015-05-22 12:18:42	<--	mfranzwa (mike@moz-or1vuv.ca.comcast.net) has quit (Client exited)
2015-05-22 12:18:58	<--	Stebalien (Stebalien@moz-v74t8l.csail.mit.edu) has quit (Quit: leaving)
2015-05-22 12:19:04	bluss	auzi231: right, .0 is the reported lower bound
2015-05-22 12:19:04	-->	Morten (Morten@moz-0o1u6b.uib.no) has joined #rust
2015-05-22 12:19:14	-->	mib_st9z76 (Mibbit@moz-q2n.s2h.16.152.IP) has joined #rust
2015-05-22 12:19:16	bluss	auzi231: for many iterator this is the exact siz
2015-05-22 12:19:37	&mbrubeck	kidto: And then using the same 'a for the input and output types ties the borrow lifetimes together.
2015-05-22 12:19:39	bluss	auzi231: so it tries to do it as well as possible
2015-05-22 12:19:43	<--	mib_st9z76 (Mibbit@moz-q2n.s2h.16.152.IP) has quit (Connection closed)
2015-05-22 12:20:13	kidto	ahhh, ok
2015-05-22 12:20:18	Morten	How can I convert from char to int? I can't find an easy way to do it
2015-05-22 12:20:30	kimundi	And finally, what happens if you call something like fn foo<'a>(&'a T) is that Rust just infers and uses the actual lifetime of the reference you call it with. So for let x = ...; foo(&x) // Use a instance of foo<'a> where 'a == lifetime of the x variable
2015-05-22 12:20:36	kidto	So it's a way of putting constraints on the _kinds_ of lifetimes a function accepts?
2015-05-22 12:20:36	kimundi	kidto: ^
2015-05-22 12:20:37	-->	JagaJaga (JagaJaga@moz-ua8.hhl.62.178.IP) has joined #rust
2015-05-22 12:21:17	--	irc: disconnected from server
2015-05-22 12:21:28	-->	ubeatlenine (david@moz-eoouop.hfc.comcastbusiness.net) has joined #rust
2015-05-22 12:21:28	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-22 12:21:28	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-22 12:21:28	--	Channel #rust: 982 nicks (14 ops, 0 halfops, 2 voices, 966 normals)
2015-05-22 12:21:30	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-22 12:21:40	auzi231	bluss: It could try the upper size in some cases and then shrink_to_fit, for example scan() has a lower size of 0 (ghhhh) and upper size of the iterator it's actually wrapping
2015-05-22 12:22:00	-->	KiChjang (KiChjang@moz-19h7ll.dynamic.uwaterloo.ca) has joined #rust
2015-05-22 12:22:10	-->	jimblandy (user@moz-c3a.i8g.126.207.IP) has joined #rust
2015-05-22 12:22:13	-->	Dryvnt (Dryvnt@moz-6v9.ele.218.85.IP) has joined #rust
2015-05-22 12:22:29	<--	Astrum|Lap (Astrum|Lap@moz-skcefh.co.comcast.net) has quit (Client exited)
2015-05-22 12:22:32	bluss	auzi231: yes maybe it should look at both and make a reasonable guess
2015-05-22 12:22:36	kimundi	kidto: Not exactly. You just declare "This function is defined for any arbitrary lifetime 'a, used in the signature as follows: ..."
2015-05-22 12:22:44	-->	Racquetball (namestolenw@moz-dvc.4ib.129.64.IP) has joined #rust
2015-05-22 12:22:48	<--	c63 (Mibbit@moz-pk84bq.nsc.FH-Kiel.de) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-22 12:22:48	&mbrubeck	Morten: You can use the `as` operator if you want the Unicode codepiont number.
2015-05-22 12:22:57	&mbrubeck	playbot: 'a' as i32
2015-05-22 12:22:58	--	Notice(playbot): 97
2015-05-22 12:23:00	bluss	auzi231: we're most concerned with just doing it perfectly when the exact info is there though, it's the most important case I think
2015-05-22 12:23:11	&mbrubeck	*codepoint
2015-05-22 12:23:44	<--	jimb (user@moz-09a.i8g.126.207.IP) has quit (Ping timeout: 121 seconds)
2015-05-22 12:23:56	Morten	&mbrubeck: I'm looking for an '1' to 1 function
2015-05-22 12:24:17	auzi231	bluss: So hum there are plans to use the upper size in some circunstances already? pls open a issue if not :P
2015-05-22 12:24:37	&mbrubeck	Morten: Just for ascii digits?  `c as i32 - '0' as i32` would work...
2015-05-22 12:24:47	kidto	kimundi: huh, it seems like for that simple case it could easily be inferred. What's a simple example where it couldn't just be inferred?
2015-05-22 12:24:50	-->	SerialVelocity (SerialVeloc@moz-attia0.cable.virginm.net) has joined #rust
2015-05-22 12:25:01	&mbrubeck	Morten: also http://doc.rust-lang.org/std/primitive.char.html#method.to_digit
2015-05-22 12:25:13	&mbrubeck	playbot: '1'.to_digit(10)
2015-05-22 12:25:14	--	Notice(playbot): Some(1)
2015-05-22 12:25:22	<--	Amaranth (travis@moz-1raqsl.cpe.cableone.net) has quit (Connection closed)
2015-05-22 12:25:26	kimundi	kidto: Well Rust generla does not want to use inference in public API so users of the function know what the signature actually is
2015-05-22 12:25:26	Dryvnt	Is it normal to have a shit-ton of chained .foo() commands? I.E. I've made this piece of code and I want to know how I could do it less dirty, if possible http://pastebin.com/7Ti68JHQ
2015-05-22 12:25:26	-->	Amaranth (travis@moz-1raqsl.cpe.cableone.net) has joined #rust
2015-05-22 12:25:28	&mbrubeck	playbot: '_'.to_digit(10)
2015-05-22 12:25:29	--	Notice(playbot): None
2015-05-22 12:25:33	grodan	Hi. Any idea how one can convert a hexadecimal string to an integer? My initial guess was: use std::num::FromStrRadix; let q = i32.from_str_radix("FA", 16); but it doesn't seem to work. I'm using the nightly version and am completely new to Rust.
2015-05-22 12:25:34	Morten	&mbrubeck: Ah thanks, that's much cleaner
2015-05-22 12:25:43	-->	arBmind (Andreas@moz-rbctum.adsl.alicedsl.de) has joined #rust
2015-05-22 12:26:28	--	irc: disconnected from server
2015-05-22 12:26:39	-->	ubeatlenine (david@moz-eoouop.hfc.comcastbusiness.net) has joined #rust
2015-05-22 12:26:39	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-22 12:26:39	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-22 12:26:39	--	Channel #rust: 985 nicks (14 ops, 0 halfops, 2 voices, 969 normals)
2015-05-22 12:26:41	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-22 12:26:47	grodan	mbrubeck: thanks, but I get "unresolved import `std::num::FromStrRadix`. There is no `FromStrRadix` in `std::num`"
2015-05-22 12:26:58	kimundi	kidto: But there are a few simple "inference" rules called "lifetime elision" that work as a shorthand without hiding information. Eg, something like fn foo(&T) -> &U is legal and means "fn foo<'a>(&'a T) -> &'a U"
2015-05-22 12:27:10	&mbrubeck	grodan: It's no longer in that trait; it's an inherent method of i32 (and the other primitive integer types)
2015-05-22 12:27:26	&mbrubeck	grodan: It was moved a little while before the 1.0 release.
2015-05-22 12:27:49	-->	aaronk (aaronk@moz-2csnis.static.qwest.net) has joined #rust
2015-05-22 12:27:51	<--	dineshs91 (Mibbit@moz-gb4.2r8.208.106.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-22 12:28:11	-->	GuruMonk (GuruMonk@moz-jb5.uuv.207.49.IP) has joined #rust
2015-05-22 12:28:11	kimundi	kidto: Baiscllay, if there is one input reference and one output reference, its assumed to share the same lifetime. Similarily, if there is no output reference but N input references, each geths their own one: fn bar(&X, &Y) == fn bar<'a, 'b>(&'a X, &'b Y)
2015-05-22 12:28:13	kidto	kimundi: woah, so  T and U are reserved symbols?
2015-05-22 12:28:31	kimundi	kidto: No, I just used them as placeholders
2015-05-22 12:28:47	-->	joshua-g (joshuag@moz-nve.5de.71.64.IP) has joined #rust
2015-05-22 12:28:50	aaronk	Question about this function signature -- is the "&[u8]" an array? I'm confused because there's no length.
2015-05-22 12:28:52	kimundi	imagine a struct T; and a struct U; being defined beforehand
2015-05-22 12:28:52	aaronk	fn parse_version(header: &[u8]) -> Result<Version, ParseError>
2015-05-22 12:29:05	aaronk	(from the example here: http://doc.rust-lang.org/stable/book/error-handling.html#handling-errors-with-option-and-result)
2015-05-22 12:29:05	kidto	kimundi: ah, so fn foo(x: &u32) -> &u32 does the same thing?
2015-05-22 12:29:22	kimundi	aaronk: Its a reference to a slice, which stores the actual length as part of the pointer
2015-05-22 12:29:22	kidto	kimundi: 'same thing' meaning lifetime elision
2015-05-22 12:29:28	kimundi	kidto: yep
2015-05-22 12:30:02	kimundi	aaronk: So the length is stored dynamically, you can call with slices of arbitrary length
2015-05-22 12:30:15	aaronk	@kimundi ok, so arrays are same syntax excep with "; [type]"?
2015-05-22 12:30:19	<--	lyc (lyc@moz-jft.nr8.226.207.IP) has quit (Ping timeout: 121 seconds)
2015-05-22 12:30:22	kimundi	You can turn a &[T; N] into a &[T]
2015-05-22 12:30:26	kimundi	yep
2015-05-22 12:30:52	aaronk	slices/arrays seem pretty similar to Go, any big differences?
2015-05-22 12:31:39	--	irc: disconnected from server
2015-05-22 12:31:50	-->	ubeatlenine (david@moz-eoouop.hfc.comcastbusiness.net) has joined #rust
2015-05-22 12:31:50	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-22 12:31:50	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-22 12:31:50	--	Channel #rust: 986 nicks (14 ops, 0 halfops, 2 voices, 970 normals)
2015-05-22 12:31:52	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-22 12:31:57	-->	kgrandon (Adium@moz-jh46ga.2rkg.9kg1.0101.2620.IP) has joined #rust
2015-05-22 12:32:02	bluss	aaronk: slices are views. They can't grow
2015-05-22 12:32:08	<--	simonoram (simonoram@moz-pllbvg.cable.virginm.net) has quit (Client exited)
2015-05-22 12:32:10	<--	Havvy (Havvy@moz-2v0ao2.5euu.k9bm.0007.2601.IP) has quit (Quit: Leaving)
2015-05-22 12:32:19	FreeFull	aaronk: Explicit mutability, and mutable slices can't overlap
2015-05-22 12:32:21	-->	Havvy (Havvy@moz-2v0ao2.5euu.k9bm.0007.2601.IP) has joined #rust
2015-05-22 12:32:22	<--	Amaranth (travis@moz-1raqsl.cpe.cableone.net) has quit (Connection closed)
2015-05-22 12:32:28	-->	Amaranth (travis@moz-1raqsl.cpe.cableone.net) has joined #rust
2015-05-22 12:32:44	-->	dstrbad (dstrbad@moz-6bfqv1.dsl.iskon.hr) has joined #rust
2015-05-22 12:32:47	aaronk	@kimundi well the ownership thing applies to everything in Rust...
2015-05-22 12:32:50	Hannibal_Smith	Probably Go also lacks of the concept of iterator
2015-05-22 12:32:51	-->	godlikesme (godlikesme@moz-2a2.dsd.174.79.IP) has joined #rust
2015-05-22 12:32:54	kimundi	aaronk: Most notably from a semantic/syntatic point of view is that in Rust the pointer is not part of the array/slice type
2015-05-22 12:33:00	kimundi	aaronk: True :)
2015-05-22 12:33:02	aaronk	@Hannibal_Smith yes it does
2015-05-22 12:33:08	FreeFull	I like the way Rust does slices best, out of all the ways they have been done
2015-05-22 12:33:22	grodan	mbrubeck: I see. I wonder if the documentation is outdated (or just not reflects the nightly version) or if I'm reading it wrong.
2015-05-22 12:33:25	kimundi	aaronk: But Rusts slices are not growable garbage collected vectors as in Go for example
2015-05-22 12:33:28	Hannibal_Smith	aaronk, to me the big difference is how in Rust you can control the memory layout of your array
2015-05-22 12:33:35	kidto	rust feels very Haskell-y. Why is that?
2015-05-22 12:33:41	LookupError	talchas, I got segfault. ffi function is called with cb=0x7fffffffdc18, but in rust I expected null by &mut None. Next argument in function is data: *mut ::libc::c_void. when I use ptr::null_mut() from rust C got data=0x0.
2015-05-22 12:33:56	-->	v21 (vee@moz-tqa.5lr.4.171.IP) has joined #rust
2015-05-22 12:33:58	Hannibal_Smith	Go don't let you to choice how to store an user defined type in an array
2015-05-22 12:34:00	kidto	I guess I should say very FPy
2015-05-22 12:34:03	Hannibal_Smith	It will be always a reference
2015-05-22 12:34:09	kimundi	kidto: Well, many of its design ideas come from functional languages, and traits are basically typeclasses
2015-05-22 12:34:12	&mbrubeck	grodan: Which docs are you looking at?  It should be removed from the documentation at http://doc.rust-lang.org
2015-05-22 12:34:22	&mbrubeck	except archived docs from previous releases
2015-05-22 12:34:22	FreeFull	kidto: Rust was heavily inspired by OCaml, among other languages
2015-05-22 12:34:30	<--	hjr3 (hradtke@moz-e235ok.fios.verizon.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2015-05-22 12:34:35	LookupError	(self.ptr, &mut None, ptr::null_mut()) => (gh=0x5555557af280, cb=0x7fffffffdc18, data=0x0)
2015-05-22 12:34:42	FreeFull	The first Rust compiler was written in OCaml
2015-05-22 12:34:44	kagami	kidto: Actually rust has features from a lot variety of languages. I noticed at least Python, JavaScript, Haskell/ML, C++. Of course Cyclone. Maybe some others.
2015-05-22 12:34:56	Hannibal_Smith	aaronk, take for example BTree from Rust standard library and the BTree implementation that a Googler written in Go
2015-05-22 12:35:02	&mbrubeck	kagami: `if let` from Swift!
2015-05-22 12:35:07	-->	Guest72 (textual@moz-v5a.55v.34.199.IP) has joined #rust
2015-05-22 12:35:12	kidto	I really like typeclasses/traits. For me they make so much more sense than classes
2015-05-22 12:35:18	aaronk	@Hannibal_Smith unclear on the control of memory layout part... how do you do that?
2015-05-22 12:35:24	Dr-Emann	The wikipedia page has a list of quite a lot of languages from which rust pulls inspiration.
2015-05-22 12:35:28	&mbrubeck	(Swift was also influenced by Rust, so that relationship goes both ways.)
2015-05-22 12:35:46	Hannibal_Smith	aaronk, http://godoc.org/github.com/google/btree
2015-05-22 12:35:53	&mbrubeck	Closure syntax was based on Ruby blocks.
2015-05-22 12:36:50	--	irc: disconnected from server
2015-05-22 12:37:02	-->	ubeatlenine (david@moz-eoouop.hfc.comcastbusiness.net) has joined #rust
2015-05-22 12:37:02	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-22 12:37:02	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-22 12:37:02	--	Channel #rust: 988 nicks (14 ops, 0 halfops, 2 voices, 972 normals)
2015-05-22 12:37:04	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-22 12:38:02	--	irc: disconnected from server
2015-05-22 12:38:13	-->	ubeatlenine (david@moz-eoouop.hfc.comcastbusiness.net) has joined #rust
2015-05-22 12:38:13	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-22 12:38:13	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-22 12:38:13	--	Channel #rust: 987 nicks (14 ops, 0 halfops, 2 voices, 971 normals)
2015-05-22 12:38:15	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-22 12:38:20	kagami	http://doc.rust-lang.org/reference.html#appendix:-influences
2015-05-22 12:38:23	<--	hjr3 (hradtke@moz-e235ok.fios.verizon.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2015-05-22 12:38:26	XMPPwocky	no, ml didn't have if let
2015-05-22 12:38:27	XMPPwocky	huh
2015-05-22 12:38:29	-->	Matthias247 (Miranda@moz-49li60.hsi14.kabel-badenwuerttemberg.de) has joined #rust
2015-05-22 12:38:42	&mbrubeck	XMPPwocky: https://github.com/rust-lang/rfcs/blob/master/text/0160-if-let.md#detailed-design
2015-05-22 12:39:04	-->	Astrum|Lap (Astrum|Lap@moz-7enfbr.co.comcast.net) has joined #rust
2015-05-22 12:39:06	-->	lenstr (lenstr@moz-0o5.vju.25.171.IP) has joined #rust
2015-05-22 12:39:11	-->	eerie (eerie@moz-s5i4j9.red.bezeqint.net) has joined #rust
2015-05-22 12:39:12	aaronk	I've found a few documentation issues while reading through; is it best to report each of those as individual github issues?
2015-05-22 12:39:21	<--	Amaranth (travis@moz-1raqsl.cpe.cableone.net) has quit (Connection closed)
2015-05-22 12:39:30	Havvy	aaronk:  Yes.
2015-05-22 12:39:32	&mbrubeck	aaronk: Yes.  Or PRs.  :)
2015-05-22 12:39:37	-->	Amaranth (travis@moz-1raqsl.cpe.cableone.net) has joined #rust
2015-05-22 12:39:40	Dr-Emann	LookupError: Option<&T> has None as null, &Option<T> does not. 
2015-05-22 12:40:35	<--	silven (quassel@moz-0roor3.priv.bahnhof.se) has quit (Ping timeout: 121 seconds)
2015-05-22 12:40:39	-->	silven (quassel@moz-0roor3.priv.bahnhof.se) has joined #rust
2015-05-22 12:40:55	<--	auzi231 (Mibbit@moz-pbo.6ju.214.186.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-22 12:40:55	-->	lutter (lutter@moz-7v7ueu.PUBLIC.monkeybrains.net) has joined #rust
2015-05-22 12:41:04	XMPPwocky	are you sure?
2015-05-22 12:41:06	kagami	Also, it's funny to see the born of new language. I can easily notice influences from languages that I have actually programmed for. Languages like Python or Js are too old for me to see their influences.
2015-05-22 12:41:11	-->	lutter1 (lutter@moz-7v7ueu.PUBLIC.monkeybrains.net) has joined #rust
2015-05-22 12:41:16	-->	simonoram (simonoram@moz-pllbvg.cable.virginm.net) has joined #rust
2015-05-22 12:41:22	XMPPwocky	hm, yeah
2015-05-22 12:41:28	-->	Palmik (palmik@moz-663.uu9.99.93.IP) has joined #rust
2015-05-22 12:41:34	XMPPwocky	because otherwise you'd have to fix up the pointer on dereference which would be a big mess
2015-05-22 12:41:51	bascule	 _____ ____  ___ ____    _ __   ___ _ _ 
2015-05-22 12:41:54	bascule	|  ___|  _ \|_ _|  _ \  / \\ \ / / | | |
2015-05-22 12:41:57	bascule	| |_  | |_) || || | | |/ _ \\ V /| | | |
2015-05-22 12:42:00	bascule	|  _| |  _ < | || |_| / ___ \| | |_|_|_|
2015-05-22 12:42:02	-->	erickt (erickt@moz-njt.vqi.14.76.IP) has joined #rust
2015-05-22 12:42:02	--	Mode #rust [+ao erickt erickt] by ChanServ
2015-05-22 12:42:03	bascule	|_|   |_| \_\___|____/_/   \_\_| (_|_|_)
2015-05-22 12:42:07	bascule	                                        
2015-05-22 12:42:10	dfockler	woo!
2015-05-22 12:42:13	&mbrubeck	bascule the rascule
2015-05-22 12:42:14	<--	simonoram (simonoram@moz-pllbvg.cable.virginm.net) has quit (Client exited)
2015-05-22 12:42:16	bluss	\o/
2015-05-22 12:42:19	Dr-Emann	Woo~
2015-05-22 12:42:26	--	zz_NameNotFound is now known as NameNotFound
2015-05-22 12:42:33	bascule	lol
2015-05-22 12:43:04	Havvy	bascule:  Please don't do that.
2015-05-22 12:43:07	<--	Boddlnagg (Patrick@moz-8p8f79.dyn.telefonica.de) has quit (Quit: Leaving.)
2015-05-22 12:43:16	<--	eerie (eerie@moz-s5i4j9.red.bezeqint.net) has quit (Ping timeout: 121 seconds)
2015-05-22 12:43:19	Dr-Emann	But it's tradition
2015-05-22 12:43:21	bascule	Havvy: I've been doing it for months yo
2015-05-22 12:43:21	XMPPwocky	erickt ruined it :(
2015-05-22 12:43:24	bascule	why do you hate Friday?
2015-05-22 12:43:31	XMPPwocky	every time, it gets split
2015-05-22 12:43:35	-->	SkyEye (gaveen@moz-90g.bjj.157.175.IP) has joined #rust
2015-05-22 12:43:53	Havvy	I hate ascii-art over IRC. Not Friday.
2015-05-22 12:44:07	&erickt	I am the worst!
2015-05-22 12:44:10	Dr-Emann	^
2015-05-22 12:44:23	SneakySnake	You better get used to it
2015-05-22 12:44:29	-->	simonoram (simonoram@moz-pllbvg.cable.virginm.net) has joined #rust
2015-05-22 12:44:31	-->	thelink2012 (Mibbit@moz-pbo.6ju.214.186.IP) has joined #rust
2015-05-22 12:44:38	LookupError	Dr-Emann, if T position in Option<_> is fn, does it mean &T?
2015-05-22 12:44:54	-->	zmack (zmack@moz-htpein.home.aster.pl) has joined #rust
2015-05-22 12:44:56	&erickt	bascule: sorry for ruining Friday :(
2015-05-22 12:45:05	<--	KiChjang (KiChjang@moz-19h7ll.dynamic.uwaterloo.ca) has quit (Quit: WeeChat 1.2)
2015-05-22 12:45:11	bluss	“It seems that bascule's shift-key is hanging: 4.8% of the time he/she wrote UPPERCASE.“  “For example, like this: <bascule> | |_ | |_) || || | | |/ _ \\ V /| | | |  ”
2015-05-22 12:45:12	bascule	haha whateves
2015-05-22 12:45:20	bascule	lol
2015-05-22 12:46:13	--	irc: disconnected from server
2015-05-22 12:46:24	-->	ubeatlenine (david@moz-eoouop.hfc.comcastbusiness.net) has joined #rust
2015-05-22 12:46:24	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-22 12:46:24	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-22 12:46:24	--	Channel #rust: 992 nicks (15 ops, 0 halfops, 2 voices, 975 normals)
2015-05-22 12:46:26	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-22 12:47:00	<--	icidasset (textual@moz-fv3.sg5.176.91.IP) has quit (Quit: Textual IRC Client: www.textualapp.com)
2015-05-22 12:47:21	<--	hoverbear (hoverbear@moz-md5.4h6.28.8.IP) has quit (Quit: WeeChat 1.1.1)
2015-05-22 12:47:57	-->	hoverbear (hoverbear@moz-md5.4h6.28.8.IP) has joined #rust
2015-05-22 12:48:08	<--	hoverbear (hoverbear@moz-md5.4h6.28.8.IP) has quit (Quit: WeeChat 1.1.1)
2015-05-22 12:48:57	<--	SneakySnake (nya@moz-i9is4u.pool.telekom.hu) has quit (Quit: Leaving)
2015-05-22 12:49:02	-->	nulldata_ (chatzilla@moz-ms1f2o.seas-nve.net) has joined #rust
2015-05-22 12:49:22	-->	kedibasi (kedibasi@moz-r9t.mbm.54.94.IP) has joined #rust
2015-05-22 12:49:39	-->	bombless (_@moz-qji.piv.41.59.IP) has joined #rust
2015-05-22 12:50:24	--	irc: disconnected from server
2015-05-22 12:50:35	-->	ubeatlenine (david@moz-eoouop.hfc.comcastbusiness.net) has joined #rust
2015-05-22 12:50:35	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-22 12:50:35	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-22 12:50:35	--	Channel #rust: 990 nicks (15 ops, 0 halfops, 2 voices, 973 normals)
2015-05-22 12:50:37	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-22 12:50:42	Dr-Emann	playbot: type F = fn() -> u8; (std::mem::size_of::<F>(), std::mem::size_of::<Option<F>>()) // LookupError looks like yes. And I'm stupid.
2015-05-22 12:50:43	--	Notice(playbot): (8, 8)
2015-05-22 12:50:55	<--	kidto (gabriel@moz-fj4h3j.as13285.net) has quit (Ping timeout: 121 seconds)
2015-05-22 12:51:04	-->	laumann_ (thomas@moz-gqpfnm.science.ku.dk) has joined #rust
2015-05-22 12:51:23	<--	dstrbad (dstrbad@moz-6bfqv1.dsl.iskon.hr) has quit (A TLS packet with unexpected length was received.)
2015-05-22 12:51:50	bluss	mbrubeck: what's that?
2015-05-22 12:51:54	--	NameNotFound is now known as zz_NameNotFound
2015-05-22 12:52:18	-->	simonoram (simonoram@moz-pllbvg.cable.virginm.net) has joined #rust
2015-05-22 12:52:19	<--	lov2cod (Adium@moz-8rkult.eodv.k60l.0119.2620.IP) has quit (Quit: Leaving.)
2015-05-22 12:52:29	-->	fabianvf (fabianvf@moz-fjqmui.va.comcast.net) has joined #rust
2015-05-22 12:52:37	-->	psd_ (psd@moz-5kbse3.mtnl.net.in) has joined #rust
2015-05-22 12:52:45	<--	heftig (heftig@moz-5r9s0n.archlinux.org) has quit (A TLS packet with unexpected length was received.)
2015-05-22 12:53:02	<--	simonoram (simonoram@moz-pllbvg.cable.virginm.net) has quit (Client exited)
2015-05-22 12:53:08	&mbrubeck	bluss: Live stream of godlikesme interviewing jdm about Servo and stuff
2015-05-22 12:53:09	-->	Simplebrain (Simplebrain@moz-6h4u6b.skybroadband.com) has joined #rust
2015-05-22 12:53:10	<--	laumann_ (thomas@moz-gqpfnm.science.ku.dk) has quit (Quit: leaving)
2015-05-22 12:53:10	-->	daschl (Adium@moz-i8l4q2.public.telering.at) has joined #rust
2015-05-22 12:53:19	-->	laumann_ (thomas@moz-gqpfnm.science.ku.dk) has joined #rust
2015-05-22 12:53:20	<--	Amaranth (travis@moz-1raqsl.cpe.cableone.net) has quit (Connection closed)
2015-05-22 12:53:24	<--	laumann (thomas@moz-1f0.hq0.225.130.IP) has quit (Ping timeout: 121 seconds)
2015-05-22 12:53:25	-->	Amaranth (travis@moz-1raqsl.cpe.cableone.net) has joined #rust
2015-05-22 12:53:43	<--	sirGusWrk (Gustav@moz-bo7slh.sme.bredbandsbolaget.se) has quit (Ping timeout: 121 seconds)
2015-05-22 12:53:49	-->	c63 (Mibbit@moz-pk84bq.nsc.FH-Kiel.de) has joined #rust
2015-05-22 12:54:18	bluss	ok. 5 mins till it starts
2015-05-22 12:54:21	c63	Any idea what https://paste.xinu.at/TwgJHk/ is about? object::Object is actually a trait Oo
2015-05-22 12:54:26	-->	excaliburhissheath (excaliburhi@moz-h98c6v.il.comcast.net) has joined #rust
2015-05-22 12:55:30	-->	Jackneill (Jackneill@moz-jnmeef.pool.digikabel.hu) has joined #rust
2015-05-22 12:55:48	&mbrubeck	c63: I'd need to see more of the code...
2015-05-22 12:56:03	-->	blank_name (blank_name@moz-0n5.mnm.36.50.IP) has joined #rust
2015-05-22 12:56:35	--	irc: disconnected from server
2015-05-22 12:56:46	-->	ubeatlenine (david@moz-eoouop.hfc.comcastbusiness.net) has joined #rust
2015-05-22 12:56:46	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-22 12:56:46	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-22 12:56:46	--	Channel #rust: 992 nicks (15 ops, 0 halfops, 2 voices, 975 normals)
2015-05-22 12:56:48	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-22 12:56:53	-->	dstrbad (dstrbad@moz-6bfqv1.dsl.iskon.hr) has joined #rust
2015-05-22 12:56:56	c63	mbrubeck: https://paste.xinu.at/HJ3CE/ there you go
2015-05-22 12:57:37	-->	slnpacifist (Mibbit@moz-m84.no6.243.77.IP) has joined #rust
2015-05-22 12:58:46	--	irc: disconnected from server
2015-05-22 12:58:57	-->	ubeatlenine (david@moz-eoouop.hfc.comcastbusiness.net) has joined #rust
2015-05-22 12:58:57	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-22 12:58:57	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-22 12:58:57	--	Channel #rust: 993 nicks (15 ops, 0 halfops, 2 voices, 976 normals)
2015-05-22 12:58:59	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-22 12:59:07	-->	SpaceManiac (Tad@moz-g50q8a.dyn.suddenlink.net) has joined #rust
2015-05-22 12:59:20	-->	nham (nham@moz-lglsfe.il.comcast.net) has joined #rust
2015-05-22 12:59:21	<--	w4ffles (textual@moz-g7g.toe.144.12.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-22 12:59:50	c63	mbrubeck: It was previously bound to MyTraitObject, which is just a replication of TraitObject
2015-05-22 12:59:52	-->	eerie (eerie@moz-s5i4j9.red.bezeqint.net) has joined #rust
2015-05-22 13:00:05	c63	The code compiles fine if I remove the static trait function
2015-05-22 13:00:07	thelink2012	hmm what'd be the best way to check if a iterator is 'empty'? The problem with .count() == 0 is that it'll evaluate the entire iterator and there's no need for it in my case
2015-05-22 13:00:15	-->	w4ffles (textual@moz-g7g.toe.144.12.IP) has joined #rust
2015-05-22 13:00:20	<--	Amaranth (travis@moz-1raqsl.cpe.cableone.net) has quit (Connection closed)
2015-05-22 13:00:24	-->	Amaranth (travis@moz-1raqsl.cpe.cableone.net) has joined #rust
2015-05-22 13:00:24	<--	w4ffles (textual@moz-g7g.toe.144.12.IP) has quit (Connection closed)
2015-05-22 13:00:49	-->	ziocroc (ziocroc@moz-bfu.33o.74.151.IP) has joined #rust
2015-05-22 13:01:01	thelink2012	I mean cusming the iterator isn't the actual issue, but taking the time consuming it all just to check if it's empty
2015-05-22 13:01:07	thelink2012	consuming*
2015-05-22 13:01:14	<--	grodan (Mibbit@moz-o5eg8b.bredband.comhem.se) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-22 13:01:15	Dr-Emann	playbot: use std::mem::transmute; type F = extern fn() -> u8; fn f() -> u8 { 3 } unsafe { (transmute::<_, *mut F>(None::<F>), transmute::<_, *mut F>(Some(f))) } // LookupError 
2015-05-22 13:01:16	<--	laumann_ (thomas@moz-gqpfnm.science.ku.dk) has quit (Quit: leaving)
2015-05-22 13:01:17	--	Notice(playbot): (0x0, 0x7fc3249c35b0)
2015-05-22 13:01:31	Dr-Emann	thelink2012: iter.next() == None?
2015-05-22 13:01:32	<--	c63 (Mibbit@moz-pk84bq.nsc.FH-Kiel.de) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-22 13:01:42	kagami	mbrubeck: Error loading player: No playable sources found <- does it require flash?
2015-05-22 13:01:48	&mbrubeck	sindork: Call .output() to get an Output value, then check output.status - http://doc.rust-lang.org/std/process/struct.Output.html
2015-05-22 13:01:50	benh	size_hin().0 == 0?
2015-05-22 13:01:53	benh	t
2015-05-22 13:02:00	-->	lov2cod (Adium@moz-8rkult.eodv.k60l.0119.2620.IP) has joined #rust
2015-05-22 13:02:09	&brson	is anybody here using rust with openwrt?
2015-05-22 13:02:15	XMPPwocky	mbrubeck: they wanted nonblocking
2015-05-22 13:02:16	benh	 guess that defaults to 0, silly :(
2015-05-22 13:02:17	&mbrubeck	jdm is live at http://www.watchpeoplecode.com/streamer/glm_talkshow
2015-05-22 13:02:45	<--	Douman (Douman@moz-bkb3o1.dynamic.mts-nn.ru) has quit (Quit: )
2015-05-22 13:03:01	myname	how comes there is no .search for vec?
2015-05-22 13:03:05	thelink2012	Dr-Emann: Could be, just wanted to know if there was a more expressive way D:
2015-05-22 13:03:07	kagami	Oh, youtube live with youtube-dl works without flash.
2015-05-22 13:03:16	-->	Ralith (ralith@moz-miv.lne.251.63.IP) has joined #rust
2015-05-22 13:03:17	&mbrubeck	XMPPwocky: Oh, that looked nonblocking as I was looking at the code, but I was looking at the wrong thing
2015-05-22 13:03:27	LookupError	brson, I crosscompiled for mips router successfully and executed simple program.
2015-05-22 13:03:55	-->	kidto (gabriel@moz-fj4h3j.as13285.net) has joined #rust
2015-05-22 13:04:16	LookupError	There are rust package for openwrt on github.
2015-05-22 13:04:41	<--	ogham (rally@moz-91e3hp.cable.virginm.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2015-05-22 13:04:54	<--	v21 (vee@moz-tqa.5lr.4.171.IP) has quit (Ping timeout: 121 seconds)
2015-05-22 13:05:28	<--	rudolph (rudolph@moz-2j5.b3k.89.195.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-22 13:05:43	<--	mkpankov (user@moz-h0n.sma.198.91.IP) has quit (Ping timeout: 121 seconds)
2015-05-22 13:05:44	&brson	LookupError: do you have a link offhand. a quick search doesn't find it
2015-05-22 13:06:44	<--	DerisiveLogic (smuxi@moz-g93io6.res.rr.com) has quit (Ping timeout: 121 seconds)
2015-05-22 13:07:19	<--	Amaranth (travis@moz-1raqsl.cpe.cableone.net) has quit (Connection closed)
2015-05-22 13:07:22	-->	Amaranth (travis@moz-1raqsl.cpe.cableone.net) has joined #rust
2015-05-22 13:08:02	-->	erz (erz@moz-fiq1tl.broadband.corbina.ru) has joined #rust
2015-05-22 13:08:17	<--	shellac (pldms@moz-c7026f.bris.ac.uk) has quit (Connection closed)
2015-05-22 13:08:57	duncan	so, are there recommendations on how to maintain multiple versions of a crate, so users can use the library on whichever traincar they are on? the answer, "just keep a record of it in the docs/README" is sufficient, just didn't know if there was a recommendation
2015-05-22 13:09:05	LookupError	I got that link hard too. I remember duckduckgo gives link to page with hieroglyphs in some maillist. It contains link to github. I try to repeat that trick once more.
2015-05-22 13:09:33	-->	isomarcte (isomarcte@moz-vqvrcl.hfc.comcastbusiness.net) has joined #rust
2015-05-22 13:09:36	<--	johnsoft (johnsoft@moz-69mrig.res.rr.com) has quit (Ping timeout: 121 seconds)
2015-05-22 13:09:51	-->	johnsoft (johnsoft@moz-69mrig.res.rr.com) has joined #rust
2015-05-22 13:10:23	<--	stjahns_ (stjahns@moz-mae.ab9.108.38.IP) has quit (Connection closed)
2015-05-22 13:10:58	-->	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has joined #rust
2015-05-22 13:11:23	slnpacifist	mbrubeck, so there is no way to know status of my spawned Command other then block until it finishes?
2015-05-22 13:11:54	XMPPwocky	well, the exit status isn't set until the program terminates
2015-05-22 13:12:05	&mbrubeck	slnpacifist: I can't find one. :/
2015-05-22 13:12:12	slnpacifist	Knowing that exit status was no set yet would be fine
2015-05-22 13:12:12	<--	gonzaloserrano (Adium@moz-1nv.3t7.97.62.IP) has quit (Quit: Leaving.)
2015-05-22 13:12:31	XMPPwocky	so you just want to know if it's terminated?
2015-05-22 13:12:41	slnpacifist	Yes
2015-05-22 13:12:45	<--	fredy (fredy@moz-s6pco4.okeanos.grnet.gr) has quit (Quit: ZNC - http://znc.in)
2015-05-22 13:12:48	&mbrubeck	oh right, call .status() on the Command
2015-05-22 13:12:50	myname	playbot: (0..2).iter().enumerate().collect::<Vec<(i32, i32)>>()
2015-05-22 13:12:52	--	Notice(playbot): <anon>:9:16: 9:22 error: type `core::ops::Range<_>` does not implement any method in scope named `iter`
2015-05-22 13:12:52	--	Notice(playbot): <anon>:9         (0..2).iter().enumerate().collect::<Vec<(i32, i32)>>()
2015-05-22 13:12:52	--	Notice(playbot): output truncated; full output at: http://bit.ly/1LtAfi1
2015-05-22 13:13:02	myname	playbot: (0..2).enumerate().collect::<Vec<(i32, i32)>>()
2015-05-22 13:13:03	slnpacifist	It blocks until program finishes
2015-05-22 13:13:03	--	Notice(playbot): <anon>:9:28: 9:56 error: the trait `core::iter::FromIterator<(usize, _)>` is not implemented for the type `collections::vec::Vec<(i32, i32)>` [E0277]
2015-05-22 13:13:04	--	Notice(playbot): <anon>:9         (0..2).enumerate().collect::<Vec<(i32, i32)>>()
2015-05-22 13:13:04	--	Notice(playbot): output truncated; full output at: http://bit.ly/1JHBOdj
2015-05-22 13:13:06	LookupError	brson, blog post http://blog.csdn.net/bywayboy/article/details/39673295 repo https://github.com/bywayboy/openwrt-packages/tree/master/rust
2015-05-22 13:13:08	kidto	k
2015-05-22 13:13:21	&mbrubeck	argh
2015-05-22 13:13:32	slnpacifist	If I call .output for "tail -f", I will never get the result
2015-05-22 13:13:45	XMPPwocky	you'd need to spawn a thread, unfortunately 
2015-05-22 13:13:52	slnpacifist	I'm ok with that
2015-05-22 13:13:55	slnpacifist	But still
2015-05-22 13:14:01	slnpacifist	If i call .spawn()
2015-05-22 13:14:06	-->	xcombelle (xcombelle@moz-lv5s7f.abo.wanadoo.fr) has joined #rust
2015-05-22 13:14:07	slnpacifist	Resulting Child struct
2015-05-22 13:14:13	slnpacifist	has no way to say
2015-05-22 13:14:19	<--	Amaranth (travis@moz-1raqsl.cpe.cableone.net) has quit (Connection closed)
2015-05-22 13:14:21	slnpacifist	Whether command has finished or not
2015-05-22 13:14:22	-->	Amaranth (travis@moz-1raqsl.cpe.cableone.net) has joined #rust
2015-05-22 13:14:24	&mbrubeck	slnpacifist: What you need is access to this private field, but it's not exposed... http://doc.rust-lang.org/src/std/process.rs.html#57-58
2015-05-22 13:14:34	<--	espadrine (tyl@moz-qfr4fg.abo.wanadoo.fr) has quit (Ping timeout: 121 seconds)
2015-05-22 13:14:34	slnpacifist	Yep, I found that in source
2015-05-22 13:14:41	slnpacifist	But there should be a better way
2015-05-22 13:14:47	-->	durka42 (Adium@moz-nbnmpt.wireless-pennnet.upenn.edu) has joined #rust
2015-05-22 13:14:51	<--	durka42 (Adium@moz-nbnmpt.wireless-pennnet.upenn.edu) has left #rust
2015-05-22 13:15:57	--	irc: disconnected from server
2015-05-22 13:16:58	-->	ubeatlenine (david@moz-eoouop.hfc.comcastbusiness.net) has joined #rust
2015-05-22 13:16:58	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-22 13:16:58	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-22 13:16:58	--	Channel #rust: 988 nicks (15 ops, 0 halfops, 2 voices, 971 normals)
2015-05-22 13:17:00	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-22 13:17:10	-->	gopar (gopar@moz-5039uj.ca.comcast.net) has joined #rust
2015-05-22 13:17:47	-->	ahihi2 (ahihi@moz-0djiqt.bb.dnainternet.fi) has joined #rust
2015-05-22 13:17:47	<--	ahihi (ahihi@moz-0djiqt.bb.dnainternet.fi) has quit (Connection closed)
2015-05-22 13:17:56	-->	pohl (textual@moz-rln.lhm.51.74.IP) has joined #rust
2015-05-22 13:18:04	XMPPwocky	if the pid was exposed you could just use libc functions
2015-05-22 13:18:26	-->	mutsune (mutsune@moz-634799.mesh.ad.jp) has joined #rust
2015-05-22 13:18:45	-->	Shackra (Jorge@moz-7bh.ng6.177.186.IP) has joined #rust
2015-05-22 13:18:46	-->	ygrek (user@moz-8j9aeu.org.ua) has joined #rust
2015-05-22 13:19:22	Morten	I'm trying to use a macro from an external crate, but I get "macro undefined" error. I've added it to Cargo.toml and imported it with extern crate, do I have to do anything else?
2015-05-22 13:19:24	-->	jincreator (Thunderbird@moz-588.igi.7.59.IP) has joined #rust
2015-05-22 13:19:40	<--	minot_afk (minot@moz-r0m4ta.minotstateu.edu) has quit (Ping timeout: 121 seconds)
2015-05-22 13:19:41	XMPPwocky	#[macro_use] in front of the extern crate
2015-05-22 13:19:42	slnpacifist	XMPPwocky, I guess that's a kind of overkill. What I'm doing now is studying Rust (actually solving problemsets from rust-class.org). So, if the interface for Commands isn't good enough I'd better create a ticket
2015-05-22 13:19:46	<--	Hannibal_Smith (nico@moz-hacth9.retail.telecomitalia.it) has quit (Quit: Leaving)
2015-05-22 13:19:54	<--	kkus (kkus@moz-tr4.odm.234.165.IP) has quit (Ping timeout: 121 seconds)
2015-05-22 13:20:04	&mbrubeck	slnpacifist: Yeah, that sounds good.
2015-05-22 13:20:25	geofft	slnpacifist: yeah, std::process does not do a lot of things that you'd hope :( 
2015-05-22 13:20:30	-->	jbomo (dkd@moz-uol4mm.fios.verizon.net) has joined #rust
2015-05-22 13:20:30	XMPPwocky	there were lots of interfaces to do this sort of thing, but during IO reform they were removed 
2015-05-22 13:20:32	&brson	LookupError: thanks!
2015-05-22 13:20:36	XMPPwocky	so the small API could be stabilized
2015-05-22 13:20:36	-->	simukis (nagisa@moz-8t068g.static.zebra.lt) has joined #rust
2015-05-22 13:20:46	-->	eric_lagergren (barsonme@moz-hshokg.q6t2.2174.0008.2601.IP) has joined #rust
2015-05-22 13:20:51	Morten	XMPPwocky: thanks, apparently it doesn't work if it's not next to it
2015-05-22 13:20:53	XMPPwocky	nonblocking *anything* in general isn't very well supported in the standard libray
2015-05-22 13:21:58	--	irc: disconnected from server
2015-05-22 13:22:09	-->	ubeatlenine (david@moz-eoouop.hfc.comcastbusiness.net) has joined #rust
2015-05-22 13:22:09	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-22 13:22:09	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-22 13:22:09	--	Channel #rust: 994 nicks (15 ops, 0 halfops, 2 voices, 977 normals)
2015-05-22 13:22:11	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-22 13:22:14	<--	SerialVelocity (SerialVeloc@moz-attia0.cable.virginm.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-22 13:22:29	<--	mutsune (mutsune@moz-634799.mesh.ad.jp) has quit (Ping timeout: 121 seconds)
2015-05-22 13:22:47	<--	gthank (gthank@moz-5sim0m.ga.charter.com) has quit (Quit: Textual IRC Client: www.textualapp.com)
2015-05-22 13:22:56	-->	w4ffles (textual@moz-g7g.toe.144.12.IP) has joined #rust
2015-05-22 13:23:02	-->	james4k__ (james@moz-1pbfu0.consolidated.net) has joined #rust
2015-05-22 13:23:29	<--	psd_ (psd@moz-5kbse3.mtnl.net.in) has quit (Connection closed)
2015-05-22 13:23:42	@bstrie	Denommus`: go ask in #rust-internals, maybe
2015-05-22 13:24:29	-->	minot (minot@moz-r0m4ta.minotstateu.edu) has joined #rust
2015-05-22 13:24:35	-->	kkus (kkus@moz-tr4.odm.234.165.IP) has joined #rust
2015-05-22 13:24:39	<--	nulldata_ (chatzilla@moz-ms1f2o.seas-nve.net) has quit (Ping timeout: 121 seconds)
2015-05-22 13:24:42	XMPPwocky	Morten: there are also inner abbributes, which apply to the item containing them
2015-05-22 13:24:48	XMPPwocky	that's the #![foo] syntax
2015-05-22 13:25:02	XMPPwocky	most commonly seen for crate-level attributes
2015-05-22 13:25:09	Denommus`	bstrie: but GADT is an exposed feature
2015-05-22 13:25:15	XMPPwocky	because there's no way to put something *before* the crate
2015-05-22 13:25:16	<--	w4ffles (textual@moz-g7g.toe.144.12.IP) has quit (Quit: Textual IRC Client: www.textualapp.com)
2015-05-22 13:25:23	Denommus`	bstrie: but okay, I'll try, nevertheless
2015-05-22 13:25:44	<--	rmgk (ragnar@moz-f0vd61.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2015-05-22 13:25:49	--	Denommus` is now known as Denommus
2015-05-22 13:26:10	-->	fengshaun (fengshaun@moz-oagll1.cpe.pppoe.ca) has joined #rust
2015-05-22 13:26:16	<--	lenstr (lenstr@moz-0o5.vju.25.171.IP) has quit (Connection closed)
2015-05-22 13:27:09	--	irc: disconnected from server
2015-05-22 13:27:20	-->	ubeatlenine (david@moz-eoouop.hfc.comcastbusiness.net) has joined #rust
2015-05-22 13:27:20	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-22 13:27:20	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-22 13:27:20	--	Channel #rust: 996 nicks (15 ops, 0 halfops, 2 voices, 979 normals)
2015-05-22 13:27:22	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-22 13:27:41	--	jimblandy is now known as jimb
2015-05-22 13:27:50	<--	mukilan (mukilan@moz-vbh.502.164.122.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-22 13:28:17	<--	Amaranth (travis@moz-1raqsl.cpe.cableone.net) has quit (Connection closed)
2015-05-22 13:28:19	-->	Amaranth (travis@moz-1raqsl.cpe.cableone.net) has joined #rust
2015-05-22 13:28:48	@bstrie	XMPPwocky: I have the override set up, now I just don't know how to get cargo to realize that it needs to rebuild
2015-05-22 13:29:07	XMPPwocky	bstrie: cargo clean -p whateverpackageyouoverrode
2015-05-22 13:29:10	<--	xcombelle (xcombelle@moz-lv5s7f.abo.wanadoo.fr) has quit (Ping timeout: 121 seconds)
2015-05-22 13:29:15	<--	ygrek (user@moz-8j9aeu.org.ua) has quit (Ping timeout: 121 seconds)
2015-05-22 13:29:16	XMPPwocky	that avoids rebuilding unrelated deps
2015-05-22 13:29:33	<--	ziocroc (ziocroc@moz-bfu.33o.74.151.IP) has quit (Ping timeout: 121 seconds)
2015-05-22 13:30:20	--	irc: disconnected from server
2015-05-22 13:30:31	-->	ubeatlenine (david@moz-eoouop.hfc.comcastbusiness.net) has joined #rust
2015-05-22 13:30:31	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-22 13:30:31	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-22 13:30:31	--	Channel #rust: 992 nicks (15 ops, 0 halfops, 2 voices, 975 normals)
2015-05-22 13:30:33	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-22 13:30:48	andschwa	if anyone here has experience with flycheck-rust, I'd appreciate some input on https://github.com/flycheck/flycheck-rust/issues/11
2015-05-22 13:31:07	<--	lyc (lyc@moz-jft.nr8.226.207.IP) has quit (Ping timeout: 121 seconds)
2015-05-22 13:31:10	andschwa	I feel like I'm missing something painfully obvious
2015-05-22 13:31:15	-->	jimblandy (user@moz-09a.i8g.126.207.IP) has joined #rust
2015-05-22 13:31:28	-->	andreasfrom (Mibbit@moz-j7h.tkq.23.176.IP) has joined #rust
2015-05-22 13:31:44	-->	lenstr (lenstr@moz-0o5.vju.25.171.IP) has joined #rust
2015-05-22 13:31:45	LookupError	Dr-Emann, your "black magick" with transmute helped me to put pointer for rust fn and null.
2015-05-22 13:31:59	<--	aaronk (aaronk@moz-2csnis.static.qwest.net) has quit (Connection closed)
2015-05-22 13:32:02	<--	Morten (Morten@moz-0o1u6b.uib.no) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-05-22 13:32:23	<--	madmalik (uid13697@moz-lfin5p.brockwell.irccloud.com) has quit (Quit: Connection closed for inactivity)
2015-05-22 13:32:39	<--	jimb (user@moz-c3a.i8g.126.207.IP) has quit (Ping timeout: 121 seconds)
2015-05-22 13:32:51	andschwa	do I need to clone the rand crate's source somewhere into my project to make it available for syntax checking?
2015-05-22 13:33:23	-->	towler (towler@moz-0pr.fmk.67.183.IP) has joined #rust
2015-05-22 13:33:30	andreasfrom	If I move a value with a function call, is it still copied into the callers stack frame? Is it no more efficient than deriving Copy and Clone?
2015-05-22 13:34:11	@bstrie	XMPPwocky: bah, it's not using my override and I have no idea how to figure out why
2015-05-22 13:34:32	-->	chaospsychex (daniel@moz-pt2lnm.sub-174-237-36.myvzw.com) has joined #rust
2015-05-22 13:34:32	@bstrie	andschwa: syntax checking?
2015-05-22 13:34:43	XMPPwocky	bstrie: cargo clean the whole thing again?
2015-05-22 13:34:46	<--	ygrek_ (user@moz-8j9aeu.org.ua) has quit (Ping timeout: 121 seconds)
2015-05-22 13:34:56	--	nsm|away is now known as nsm
2015-05-22 13:34:56	@bstrie	XMPPwocky: the whole project?
2015-05-22 13:35:00	myname	usize of the same value are considered equal, aren't they?
2015-05-22 13:35:08	XMPPwocky	bstrie: yeah, just run "cargo clean"
2015-05-22 13:35:13	&mbrubeck	myname: yes
2015-05-22 13:35:17	<--	Amaranth (travis@moz-1raqsl.cpe.cableone.net) has quit (Connection closed)
2015-05-22 13:35:18	myname	hmm
2015-05-22 13:35:18	andschwa	bstrie: yeah, flycheck tells me "unresolved name `rand::thread_rng`" even though it builds just fine
2015-05-22 13:35:19	-->	Amaranth (travis@moz-1raqsl.cpe.cableone.net) has joined #rust
2015-05-22 13:35:23	<--	Denommus (user@moz-obe.f0c.222.179.IP) has quit (Quit: meh)
2015-05-22 13:35:34	myname	i am confused
2015-05-22 13:35:56	@bstrie	andschwa: is that code in an inner module?
2015-05-22 13:36:31	-->	slurps-mad-rips (slurps-mad-@moz-o2c.uaj.44.17.IP) has joined #rust
2015-05-22 13:36:56	andschwa	no; I'm just using let mut rng = rand::thread_rng(); in main()
2015-05-22 13:37:07	myname	i do something like that: for (x, foo) in rooms.iter().enumerate() { for (y, foo) in rooms.iter().enumerate() { if x == y { continue; } hashmap.insert((x, y), bar); } }
2015-05-22 13:37:10	andschwa	I documented what's going on here:https://github.com/flycheck/flycheck-rust/issues/11
2015-05-22 13:37:21	myname	aaaaah
2015-05-22 13:37:25	myname	i am stupid
2015-05-22 13:39:05	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-22 13:39:10	-->	eerie_ (eerie@moz-s5i4j9.red.bezeqint.net) has joined #rust
2015-05-22 13:39:15	-->	gandalf (zbraniecki@moz-cp7c4m.ca.comcast.net) has joined #rust
2015-05-22 13:39:36	-->	davebettin_ (davebettin@moz-ip635p.or.comcast.net) has joined #rust
2015-05-22 13:39:50	<--	jincreator (Thunderbird@moz-588.igi.7.59.IP) has quit (Ping timeout: 121 seconds)
2015-05-22 13:40:22	-->	dmac (dmac@moz-4kcd1c.ca.comcast.net) has joined #rust
2015-05-22 13:40:24	-->	rudolph (rudolph@moz-ce0j93.qdet.dsq9.010d.2620.IP) has joined #rust
2015-05-22 13:40:26	andschwa	bstrie: Cargo builds it fine, but rustc throws an error
2015-05-22 13:40:41	--	jimblandy is now known as jimb
2015-05-22 13:41:17	<--	doener (doener@moz-929cn9.unity-media.net) has quit (Quit: leaving)
2015-05-22 13:41:20	-->	xcombelle (xcombelle@moz-fptj3p.abo.wanadoo.fr) has joined #rust
2015-05-22 13:42:03	<--	davebettin (davebettin@moz-ip635p.or.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-22 13:42:10	<--	ray (ray@moz-tv2.mfi.26.218.IP) has quit (Connection closed)
2015-05-22 13:42:16	<--	Amaranth (travis@moz-1raqsl.cpe.cableone.net) has quit (Connection closed)
2015-05-22 13:42:20	-->	Amaranth (travis@moz-1raqsl.cpe.cableone.net) has joined #rust
2015-05-22 13:42:31	<--	eerie (eerie@moz-s5i4j9.red.bezeqint.net) has quit (Ping timeout: 121 seconds)
2015-05-22 13:42:36	--	ahal|afk is now known as ahal
2015-05-22 13:42:47	-->	ygrek (user@moz-8j9aeu.org.ua) has joined #rust
2015-05-22 13:42:48	<--	andreasfrom (Mibbit@moz-j7h.tkq.23.176.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-22 13:42:59	<--	kgrandon (Adium@moz-jh46ga.2rkg.9kg1.0101.2620.IP) has quit (Quit: Leaving.)
2015-05-22 13:43:01	@bstrie	XMPPwocky: fresh rebuild, still not using the override
2015-05-22 13:43:14	<--	mbudde (mbudde@moz-v8g.lim.109.2.IP) has quit (Ping timeout: 121 seconds)
2015-05-22 13:43:24	Dryvnt	Anybody wanna help me with this error I'm getting?
2015-05-22 13:43:54	<--	towler (towler@moz-0pr.fmk.67.183.IP) has quit (Ping timeout: 121 seconds)
2015-05-22 13:43:55	<--	ygrek (user@moz-8j9aeu.org.ua) has quit (A TLS packet with unexpected length was received.)
2015-05-22 13:44:01	Dryvnt	It's probably something trivial in hindsight
2015-05-22 13:44:07	-->	ygrek (user@moz-8j9aeu.org.ua) has joined #rust
2015-05-22 13:44:14	@bstrie	Dryvnt: paste it!
2015-05-22 13:44:16	<--	eerie_ (eerie@moz-s5i4j9.red.bezeqint.net) has quit (Connection closed)
2015-05-22 13:44:26	estabroo	The docs on timer seem to be conflicting, std::io::timer::Timer, but in the example it's used as std::io::Timer
2015-05-22 13:44:40	@bstrie	estabroo: file a bug!
2015-05-22 13:44:45	-->	jshs (jshs@moz-d6rjit.dip0.t-ipconnect.de) has joined #rust
2015-05-22 13:45:20	ker	estabroo: most likely because there is a reexport of `Timer` in `std::io`
2015-05-22 13:45:25	&mbrubeck	estabroo: I don't see either in my docs. Is that from an old version?
2015-05-22 13:45:47	<--	lucian (lucian@moz-iuo.htl.74.194.IP) has quit (Ping timeout: 121 seconds)
2015-05-22 13:46:05	estabroo	mbrubeck, ah, probably 
2015-05-22 13:46:06	Dryvnt	http://pastebin.com/Gcsc3YMc
2015-05-22 13:47:31	--	irc: disconnected from server
2015-05-22 13:47:42	-->	ubeatlenine (david@moz-eoouop.hfc.comcastbusiness.net) has joined #rust
2015-05-22 13:47:42	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-22 13:47:42	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-22 13:47:42	--	Channel #rust: 989 nicks (15 ops, 0 halfops, 2 voices, 972 normals)
2015-05-22 13:47:42	<--	kidto (gabriel@moz-fj4h3j.as13285.net) has quit (Ping timeout: 121 seconds)
2015-05-22 13:47:44	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-22 13:47:46	<--	vosen (vosen@moz-mtm1g4.dynamic.chello.pl) has quit (Ping timeout: 121 seconds)
2015-05-22 13:47:56	&mbrubeck	Dryvnt: Or dereference it with the * operator: *waypoints.first.unwrap()
2015-05-22 13:48:42	--	irc: disconnected from server
2015-05-22 13:48:53	-->	ubeatlenine (david@moz-eoouop.hfc.comcastbusiness.net) has joined #rust
2015-05-22 13:48:53	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-22 13:48:53	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-22 13:48:53	--	Channel #rust: 986 nicks (15 ops, 0 halfops, 2 voices, 969 normals)
2015-05-22 13:48:55	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-22 13:49:02	<--	vmx (vmx@moz-4npagv.pools.vodafone-ip.de) has quit (Quit: Leaving)
2015-05-22 13:49:09	talchas	LookupError: yeah, &mut None should not give null in the ffi, it should give a pointer to a null
2015-05-22 13:49:16	<--	Amaranth (travis@moz-1raqsl.cpe.cableone.net) has quit (Connection closed)
2015-05-22 13:49:19	<--	_Vi (vi@moz-bbs.vhj.131.104.IP) has quit (Ping timeout: 121 seconds)
2015-05-22 13:49:20	-->	Amaranth (travis@moz-1raqsl.cpe.cableone.net) has joined #rust
2015-05-22 13:49:24	Dryvnt	Derefencing it worked, thanks both of you. Lower-level languages so tough to wrap my head around, but I'm learning with every stumble \o/
2015-05-22 13:50:36	talchas	LookupError: bindgen thinks the C function takes (if I'm not screwing up the function pointer syntax) "int (**foo)()" - ie pointer to pointer to function
2015-05-22 13:50:46	<--	cakecatz (cakecatz@moz-edrvuc.sannet.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-22 13:50:49	estabroo	so what if anything replaced timer?
2015-05-22 13:50:51	-->	cakecatz (cakecatz@moz-edrvuc.sannet.ne.jp) has joined #rust
2015-05-22 13:51:12	<--	xcombelle (xcombelle@moz-fptj3p.abo.wanadoo.fr) has quit (Ping timeout: 121 seconds)
2015-05-22 13:51:17	-->	eerie (eerie@moz-s5i4j9.red.bezeqint.net) has joined #rust
2015-05-22 13:51:17	 *	estabroo needs to replenish his stock of commas
2015-05-22 13:51:22	-->	tincan (tincan@moz-05q.1nm.133.145.IP) has joined #rust
2015-05-22 13:51:36	<--	rudolph (rudolph@moz-ce0j93.qdet.dsq9.010d.2620.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-22 13:51:37	<--	daschl (Adium@moz-i8l4q2.public.telering.at) has quit (Quit: Leaving.)
2015-05-22 13:51:45	talchas	LookupError: so it's a question of whether you want to pass null (ptr::null_mut(), pointer to null (&mut None), or pointer to function (&mut Some(whateverfn) except that error we had)
2015-05-22 13:51:58	-->	minot2 (kkus@moz-tr4.odm.234.165.IP) has joined #rust
2015-05-22 13:52:10	talchas	now, if the type is actually supposed to just be a function pointer, either your C wrapper has an unnecessary * or bindgen is screwing up
2015-05-22 13:52:47	<--	lenstr (lenstr@moz-0o5.vju.25.171.IP) has quit (Ping timeout: 121 seconds)
2015-05-22 13:53:08	<--	chaospsychex (daniel@moz-pt2lnm.sub-174-237-36.myvzw.com) has quit (Ping timeout: 121 seconds)
2015-05-22 13:53:15	-->	hyunsik (hyunsik@moz-3qgjl9.ca.comcast.net) has joined #rust
2015-05-22 13:53:22	-->	chaospsychex (daniel@moz-pt2lnm.sub-174-237-36.myvzw.com) has joined #rust
2015-05-22 13:53:25	@bstrie	Dryvnt: we all started off stumbling :)
2015-05-22 13:53:29	-->	lyc_ (lyc@moz-jft.nr8.226.207.IP) has joined #rust
2015-05-22 13:55:01	<--	lyc_ (lyc@moz-jft.nr8.226.207.IP) has quit (Connection closed)
2015-05-22 13:55:18	<--	Racquetball (namestolenw@moz-dvc.4ib.129.64.IP) has quit (Ping timeout: 121 seconds)
2015-05-22 13:56:12	<--	fabianvf (fabianvf@moz-fjqmui.va.comcast.net) has quit (Connection closed)
2015-05-22 13:56:13	-->	fabianvf_ (fabianvf@moz-fjqmui.va.comcast.net) has joined #rust
2015-05-22 13:56:15	<--	Amaranth (travis@moz-1raqsl.cpe.cableone.net) has quit (Connection closed)
2015-05-22 13:56:20	<--	jpg (jpg@moz-ldeh9l.internode.on.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-22 13:56:20	-->	Amaranth (travis@moz-1raqsl.cpe.cableone.net) has joined #rust
2015-05-22 13:57:06	--	irc: disconnected from server
2015-05-22 13:57:17	-->	ubeatlenine (david@moz-eoouop.hfc.comcastbusiness.net) has joined #rust
2015-05-22 13:57:17	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-22 13:57:17	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-22 13:57:17	--	Channel #rust: 982 nicks (15 ops, 0 halfops, 2 voices, 965 normals)
2015-05-22 13:57:19	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-22 13:57:35	<--	agile (mike@moz-m71dqt.rcsntx.sbcglobal.net) has quit (Connection closed)
2015-05-22 13:57:41	-->	SerialVelocity (SerialVeloc@moz-attia0.cable.virginm.net) has joined #rust
2015-05-22 13:57:51	<--	SerialVelocity (SerialVeloc@moz-attia0.cable.virginm.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-22 13:59:38	<--	chaospsychex (daniel@moz-pt2lnm.sub-174-237-36.myvzw.com) has quit (Ping timeout: 121 seconds)
2015-05-22 14:00:04	<--	james4k__ (james@moz-1pbfu0.consolidated.net) has quit (Ping timeout: 121 seconds)
2015-05-22 14:00:17	-->	kidto (gabriel@moz-fj4h3j.as13285.net) has joined #rust
2015-05-22 14:00:34	<--	nano (nano@moz-00j6et.dynamic.kabel-deutschland.de) has quit (Connection closed)
2015-05-22 14:00:36	-->	Racquetball (namestolenw@moz-dnlovt.cpe.twtelecom.net) has joined #rust
2015-05-22 14:01:32	-->	demilich (demilich@moz-q56djb.dyn.telefonica.de) has joined #rust
2015-05-22 14:03:05	-->	_Vi (vi@moz-bbs.vhj.131.104.IP) has joined #rust
2015-05-22 14:03:14	<--	Amaranth (travis@moz-1raqsl.cpe.cableone.net) has quit (Connection closed)
2015-05-22 14:03:18	-->	Amaranth (travis@moz-1raqsl.cpe.cableone.net) has joined #rust
2015-05-22 14:03:25	<--	vadimcn (uid46608@moz-0d43u8.highgate.irccloud.com) has quit (Quit: Connection closed for inactivity)
2015-05-22 14:03:30	<--	canhtak (jeremy@moz-kcs.u0t.149.5.IP) has quit (Client exited)
2015-05-22 14:04:17	--	irc: disconnected from server
2015-05-22 14:04:28	-->	ubeatlenine (david@moz-eoouop.hfc.comcastbusiness.net) has joined #rust
2015-05-22 14:04:28	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-22 14:04:28	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-22 14:04:28	--	Channel #rust: 979 nicks (15 ops, 0 halfops, 2 voices, 962 normals)
2015-05-22 14:04:30	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-22 14:05:16	<--	Quanttek (quassel@moz-25k96c.6fkd.dvrb.8108.2a02.IP) has quit (Connection closed)
2015-05-22 14:05:39	-->	daschl (Adium@moz-oirn1i.vie.surfer.at) has joined #rust
2015-05-22 14:06:02	<--	siddhartharao17 (uid57287@moz-8qssdp.irccloud.com) has quit (Quit: Connection closed for inactivity)
2015-05-22 14:06:29	-->	DerisiveLogic (smuxi@moz-1jqqlg.biz.rr.com) has joined #rust
2015-05-22 14:06:56	<--	eerie (eerie@moz-s5i4j9.red.bezeqint.net) has quit (Connection closed)
2015-05-22 14:07:14	-->	tikue (tim@moz-n71.k1b.0.198.IP) has joined #rust
2015-05-22 14:07:34	<--	DerisiveLogic (smuxi@moz-1jqqlg.biz.rr.com) has quit (A TLS packet with unexpected length was received.)
2015-05-22 14:07:39	-->	DerisiveLogic (smuxi@moz-1jqqlg.biz.rr.com) has joined #rust
2015-05-22 14:08:57	<--	dstrbad (dstrbad@moz-6bfqv1.dsl.iskon.hr) has quit (A TLS packet with unexpected length was received.)
2015-05-22 14:09:07	-->	lyra2 (kilm@moz-0pbl66.static.zebra.lt) has joined #rust
2015-05-22 14:09:24	harrisonclarke	i have a trait function "fn foo<'a>(&'a self) -> Self::Bar<'a>". is there some set of contortions to turn that pseudocode into something that actually compiles? i want some implementations to return a reference, and others to return an owned value (the owned value will never live longer than the reference would).
2015-05-22 14:09:32	-->	lucian (lucian@moz-2c3pda.cable.virginm.net) has joined #rust
2015-05-22 14:09:44	<--	xcombelle (xcombelle@moz-efe831.abo.wanadoo.fr) has quit (Ping timeout: 121 seconds)
2015-05-22 14:10:06	-->	eerie (eerie@moz-s5i4j9.red.bezeqint.net) has joined #rust
2015-05-22 14:10:14	<--	Amaranth (travis@moz-1raqsl.cpe.cableone.net) has quit (Connection closed)
2015-05-22 14:10:21	-->	Amaranth (travis@moz-1raqsl.cpe.cableone.net) has joined #rust
2015-05-22 14:10:45	<--	erickt (erickt@moz-njt.vqi.14.76.IP) has quit (Ping timeout: 121 seconds)
2015-05-22 14:11:09	<--	nicknikolov (nicknikolov@moz-k08.qm9.214.90.IP) has quit (Connection closed)
2015-05-22 14:11:24	<--	lutter1 (lutter@moz-7v7ueu.PUBLIC.monkeybrains.net) has quit (Quit: Leaving.)
2015-05-22 14:11:30	-->	lutter1 (lutter@moz-7v7ueu.PUBLIC.monkeybrains.net) has joined #rust
2015-05-22 14:11:43	-->	fmcauley (fmcauley@moz-n1jjb3.res.rr.com) has joined #rust
2015-05-22 14:11:54	-->	chaospsychex (daniel@moz-eoricv.sub-174-237-3.myvzw.com) has joined #rust
2015-05-22 14:11:59	-->	skade (skade@moz-m9ib3m.pools.vodafone-ip.de) has joined #rust
2015-05-22 14:12:41	-->	erickt (erickt@moz-njt.vqi.14.76.IP) has joined #rust
2015-05-22 14:12:41	--	Mode #rust [+ao erickt erickt] by ChanServ
2015-05-22 14:13:09	bluss	harrisonclarke: best way is probably to follow the way IntoIterator does it
2015-05-22 14:13:15	--	zz_NameNotFound is now known as NameNotFound
2015-05-22 14:13:30	bluss	or alternatively put the lifetime parameter in the trait (TraitName<'a>)
2015-05-22 14:13:35	<--	lucian (lucian@moz-2c3pda.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2015-05-22 14:13:50	bluss	harrisonclarke: your pseudocode version is wanted but it's not possible that way
2015-05-22 14:14:09	-->	w4ffles (textual@moz-g7g.toe.144.12.IP) has joined #rust
2015-05-22 14:14:16	<--	akshay (chatzilla@moz-nmq.cc6.206.49.IP) has quit (Ping timeout: 121 seconds)
2015-05-22 14:14:25	LookupError	talchas, pointer, null, function broke my mind. I understand what happen on C side. But rust is black hole for me at present. 
2015-05-22 14:15:12	<--	fabiand (fabiand@moz-du5ogq.dip0.t-ipconnect.de) has quit (Quit: Verlassend)
2015-05-22 14:15:31	-->	nulldata_ (chatzilla@moz-ms1f2o.seas-nve.net) has joined #rust
2015-05-22 14:16:42	<--	lov2cod (Adium@moz-8rkult.eodv.k60l.0119.2620.IP) has quit (Ping timeout: 121 seconds)
2015-05-22 14:16:42	<--	skade (skade@moz-m9ib3m.pools.vodafone-ip.de) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-22 14:17:28	--	irc: disconnected from server
2015-05-22 14:17:39	-->	ubeatlenine (david@moz-eoouop.hfc.comcastbusiness.net) has joined #rust
2015-05-22 14:17:39	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-22 14:17:39	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-22 14:17:39	--	Channel #rust: 979 nicks (15 ops, 0 halfops, 2 voices, 962 normals)
2015-05-22 14:17:41	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-22 14:18:39	--	irc: disconnected from server
2015-05-22 14:18:50	-->	ubeatlenine (david@moz-eoouop.hfc.comcastbusiness.net) has joined #rust
2015-05-22 14:18:50	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-22 14:18:50	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-22 14:18:50	--	Channel #rust: 980 nicks (15 ops, 0 halfops, 2 voices, 963 normals)
2015-05-22 14:18:52	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-22 14:19:07	-->	Stebalien (Stebalien@moz-v74t8l.csail.mit.edu) has joined #rust
2015-05-22 14:19:14	<--	kaeluka (kaeluka@moz-tn3lqd.cust.bredbandsbolaget.se) has quit (Client exited)
2015-05-22 14:19:14	geofft	thelink2012: as I understand it, into_iter consumes the thing, so it gives you an interator on T, not on &T 
2015-05-22 14:19:27	geofft	which is useful if you need to pass it to a function that wants transferred ownership of the things you're iterating oer 
2015-05-22 14:19:42	bluss	thelink2012: say you want to move all the Strings from one vec to another
2015-05-22 14:19:54	harrisonclarke	bluss: not possible as in incompatible with other compiler features, or not possible in the current version?
2015-05-22 14:20:05	-->	A205B064 (A205B064@moz-9s9nhk.nap.wideopenwest.com) has joined #rust
2015-05-22 14:20:08	-->	mib_whcro1 (Mibbit@moz-jcg26p.pa.comcast.net) has joined #rust
2015-05-22 14:20:12	-->	Altazimuth (Altazimuth@moz-rb7u6p.skybroadband.com) has joined #rust
2015-05-22 14:20:43	bluss	playbot: let mut a = vec![]; let b = vec!["a".to_string(), "b".to_string()];  a.extend(b.into_iter()); a   // thelink2012 
2015-05-22 14:20:44	<--	erickt (erickt@moz-njt.vqi.14.76.IP) has quit (Ping timeout: 121 seconds)
2015-05-22 14:20:45	--	Notice(playbot): ["a", "b"]
2015-05-22 14:21:09	bluss	thelink2012: although.. extend accepts any parameter that implements IntoIterator and calls it too
2015-05-22 14:21:14	geofft	playbot:  let mut a = vec![]; let b = vec!["a".to_string(), "b".to_string()];  a.extend(b.iter()); a  
2015-05-22 14:21:15	-->	spicydonuts (spicydonuts@moz-bn1.k0h.186.208.IP) has joined #rust
2015-05-22 14:21:15	--	Notice(playbot): <anon>:9:88: 9:89 error: `b` does not live long enough
2015-05-22 14:21:16	--	Notice(playbot): <anon>:9          let mut a = vec![]; let b = vec!["a".to_string(), "b".to_string()];  a.extend(b.iter()); a  
2015-05-22 14:21:16	--	Notice(playbot): output truncated; full output at: http://bit.ly/1GukGqt
2015-05-22 14:21:30	bluss	thelink2012: so just a.extend(b) is equivalent.  See why .iter() doesn't work^
2015-05-22 14:21:39	thelink2012	ahh alright I see now
2015-05-22 14:21:41	-->	abique (abique@moz-alq0r9.ko9f.54u1.0e35.2a01.IP) has joined #rust
2015-05-22 14:21:53	<--	spicydonuts (spicydonuts@moz-bn1.k0h.186.208.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-22 14:21:54	<--	skade (skade@moz-m9ib3m.pools.vodafone-ip.de) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-22 14:22:09	bluss	well .iter() would work but it would do something different, fill the a vector with &String elments
2015-05-22 14:22:20	-->	spicydonuts (spicydonuts@moz-bn1.k0h.186.208.IP) has joined #rust
2015-05-22 14:22:26	<--	davebettin_ (davebettin@moz-ip635p.or.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-22 14:22:30	<--	kkus (kkus@moz-tr4.odm.234.165.IP) has quit (Quit: Leaving)
2015-05-22 14:22:37	<--	spicydonuts (spicydonuts@moz-bn1.k0h.186.208.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-22 14:22:43	-->	spicydonuts (spicydonuts@moz-bn1.k0h.186.208.IP) has joined #rust
2015-05-22 14:22:56	-->	kkus (kkus@moz-u8u.iof.234.165.IP) has joined #rust
2015-05-22 14:22:57	-->	xcombelle (xcombelle@moz-dhdpe7.abo.wanadoo.fr) has joined #rust
2015-05-22 14:22:57	thelink2012	btw is it considered bad practice my own object .iter() method return e.g. a Scan<...> instead of MyObjectIter? it may be boring to write my own Iterator and IntoIterator everytime :P
2015-05-22 14:23:00	<--	minot2 (kkus@moz-tr4.odm.234.165.IP) has quit (Connection closed)
2015-05-22 14:23:12	<--	jophish_ (jophish@moz-438.5v0.254.62.IP) has quit (Connection closed)
2015-05-22 14:23:21	<--	spicydonuts (spicydonuts@moz-bn1.k0h.186.208.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-22 14:23:35	<--	Guest72 (textual@moz-v5a.55v.34.199.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-22 14:23:43	-->	aaronk (aaronk@moz-2csnis.static.qwest.net) has joined #rust
2015-05-22 14:23:48	-->	spicydonuts (spicydonuts@moz-bn1.k0h.186.208.IP) has joined #rust
2015-05-22 14:23:52	-->	lenstr (lenstr@moz-0o5.vju.25.171.IP) has joined #rust
2015-05-22 14:24:15	-->	laumann (thomas@moz-n9e72h.0.fullrate.dk) has joined #rust
2015-05-22 14:24:18	bluss	hm yes and no
2015-05-22 14:24:28	bluss	you can use a type alias to make it short to write
2015-05-22 14:24:38	<--	ytain (ytain@moz-07c3h9.dsl.teksavvy.com) has quit (Quit: Textual IRC Client: www.textualapp.com)
2015-05-22 14:24:46	aaronk	This alias is unclear to me: https://github.com/iron/iron/blob/master/src/lib.rs#L106
2015-05-22 14:24:47	<--	desophos (desophos@moz-otv5hv.98ku.27p0.6000.2606.IP) has quit (Quit: Leaving)
2015-05-22 14:24:51	bluss	the reason you want to encapsulate it in its own type is for API compatibility. encapsulation basically
2015-05-22 14:25:01	aaronk	is the IronError dropped, or combined into the single T in IronResult?
2015-05-22 14:25:06	<--	csherratt2 (colin@moz-357qdq.cable.teksavvy.com) has quit (A TLS packet with unexpected length was received.)
2015-05-22 14:25:12	duesenfranz_	thelink2012: it takes away flexibility.. you can't change implementation without breaking the public API
2015-05-22 14:25:20	-->	csherratt2 (colin@moz-357qdq.cable.teksavvy.com) has joined #rust
2015-05-22 14:25:25	&mbrubeck	archshift: IronResult<i32> == Result<i32, IronError>
2015-05-22 14:25:30	<--	spicydonuts (spicydonuts@moz-bn1.k0h.186.208.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-22 14:25:32	&mbrubeck	sorry, aaronk ^
2015-05-22 14:25:34	<--	eerie (eerie@moz-s5i4j9.red.bezeqint.net) has quit (Connection closed)
2015-05-22 14:25:43	-->	spicydonuts (spicydonuts@moz-bn1.k0h.186.208.IP) has joined #rust
2015-05-22 14:25:44	bluss	aaronk: ah that's a common pattern. It's not dropped or combined, just the specific type IronError is baked into the type alias
2015-05-22 14:25:59	bluss	aaronk: Result is generic in the error type but IronResult is not
2015-05-22 14:26:03	-->	blank_name (blank_name@moz-7ph.o91.79.172.IP) has joined #rust
2015-05-22 14:26:09	<--	fmcauley (fmcauley@moz-n1jjb3.res.rr.com) has quit (Client exited)
2015-05-22 14:26:15	<--	spicydonuts (spicydonuts@moz-bn1.k0h.186.208.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-22 14:26:19	-->	akshay (chatzilla@moz-nmq.cc6.206.49.IP) has joined #rust
2015-05-22 14:26:23	-->	mbudde (mbudde@moz-v8g.lim.109.2.IP) has joined #rust
2015-05-22 14:26:32	-->	spicydonuts (spicydonuts@moz-bn1.k0h.186.208.IP) has joined #rust
2015-05-22 14:26:44	-->	fleabay (Mibbit@moz-8ch5vv.ip.windstream.net) has joined #rust
2015-05-22 14:27:06	<--	spicydonuts (spicydonuts@moz-bn1.k0h.186.208.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-22 14:27:50	--	irc: disconnected from server
2015-05-22 14:28:01	-->	ubeatlenine (david@moz-eoouop.hfc.comcastbusiness.net) has joined #rust
2015-05-22 14:28:01	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-22 14:28:01	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-22 14:28:01	--	Channel #rust: 983 nicks (14 ops, 0 halfops, 2 voices, 967 normals)
2015-05-22 14:28:03	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-22 14:28:16	-->	peferron (peferron@moz-k89vq8.ca.comcast.net) has joined #rust
2015-05-22 14:28:38	aaronk	the type alias doc could def. use some elaboration
2015-05-22 14:28:40	<--	dassio (mac@moz-f5s.cn2.191.60.IP) has quit (Ping timeout: 121 seconds)
2015-05-22 14:28:41	-->	Douman (Douman@moz-bkb3o1.dynamic.mts-nn.ru) has joined #rust
2015-05-22 14:28:42	-->	skade (skade@moz-m9ib3m.pools.vodafone-ip.de) has joined #rust
2015-05-22 14:28:43	-->	ai (ai@moz-pqofrl.sunline.net.ua) has joined #rust
2015-05-22 14:28:46	<--	xcombelle (xcombelle@moz-dhdpe7.abo.wanadoo.fr) has quit (Ping timeout: 121 seconds)
2015-05-22 14:29:29	-->	dassio (mac@moz-f5s.cn2.191.60.IP) has joined #rust
2015-05-22 14:29:37	bluss	thelink2012: basically for the sanity of your library
2015-05-22 14:29:56	-->	mib_vej0xu (Mibbit@moz-i7cb3r.fios.verizon.net) has joined #rust
2015-05-22 14:29:59	bluss	thelink2012: but it depends. You could also leave it as a type alias and document not to depend on the exact formulation of the iterator
2015-05-22 14:30:18	posix4e	does servo use glx or egl?
2015-05-22 14:30:28	-->	grodan (Mibbit@moz-o5eg8b.bredband.comhem.se) has joined #rust
2015-05-22 14:31:01	--	irc: disconnected from server
2015-05-22 14:31:12	-->	ubeatlenine (david@moz-eoouop.hfc.comcastbusiness.net) has joined #rust
2015-05-22 14:31:12	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-22 14:31:12	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-22 14:31:12	--	Channel #rust: 985 nicks (14 ops, 0 halfops, 2 voices, 969 normals)
2015-05-22 14:31:12	&mbrubeck	posix4e: egl on Android
2015-05-22 14:31:14	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-22 14:31:20	<--	fabianvf_ (fabianvf@moz-fjqmui.va.comcast.net) has quit (Connection closed)
2015-05-22 14:31:20	<--	copycat (Thunderbird@moz-mm4e60.singnet.com.sg) has quit (Client exited)
2015-05-22 14:31:32	posix4e	ahh sweet
2015-05-22 14:31:33	-->	fabianvf (fabianvf@moz-fjqmui.va.comcast.net) has joined #rust
2015-05-22 14:31:40	posix4e	anyone else working on porting it to mir?
2015-05-22 14:31:43	&mbrubeck	posix4e: glx on desktop Linux, and cgl on Mac OS X.
2015-05-22 14:31:52	<--	lyc (lyc@moz-jft.nr8.226.207.IP) has quit (Ping timeout: 121 seconds)
2015-05-22 14:32:00	&mbrubeck	posix4e: Not as far as I know.
2015-05-22 14:32:12	posix4e	mwhaha *evil laugh and finger roll*
2015-05-22 14:32:48	<--	w4ffles (textual@moz-g7g.toe.144.12.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-22 14:33:03	<--	nulldata_ (chatzilla@moz-ms1f2o.seas-nve.net) has quit (Quit: ChatZilla 0.9.91.1 [Firefox 38.0/20150511103818])
2015-05-22 14:33:17	-->	minus (minus@moz-srmmm5.de) has joined #rust
2015-05-22 14:33:44	&mbrubeck	posix4e: Recent slightly-relevant discussion: http://logs.glob.uno/?c=mozilla%23servo&s=13+May+2015&e=13+May+2015&h=mir#c211813
2015-05-22 14:33:47	<--	cursivecode (textual@moz-4u56i9.res.bhn.net) has quit (Ping timeout: 121 seconds)
2015-05-22 14:33:56	-->	rudolph (rudolph@moz-960.k2l.152.37.IP) has joined #rust
2015-05-22 14:34:11	thelink2012	bluss: Hmm formulation of a iterator? What would that be?
2015-05-22 14:34:29	<--	rudolph (rudolph@moz-960.k2l.152.37.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-22 14:34:32	-->	canhtak (jeremy@moz-kcs.u0t.149.5.IP) has joined #rust
2015-05-22 14:34:37	<--	slnpacifist (Mibbit@moz-m84.no6.243.77.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-22 14:34:41	-->	Guest72 (textual@moz-v5a.55v.34.199.IP) has joined #rust
2015-05-22 14:34:48	<--	canhtak (jeremy@moz-kcs.u0t.149.5.IP) has quit (Client exited)
2015-05-22 14:35:47	&mbrubeck	thelink2012: The underlying type, which could change if your implementation changes.
2015-05-22 14:35:52	<--	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-22 14:35:55	&mbrubeck	The concrete type, that is.
2015-05-22 14:35:55	minus	hi, i'm new to rust and just tried loading an image and printing its dimensions using the `image` library. works fine, except execution of this very simple program takes almost 5 seconds. it /is/ a 2MB PNG image, but still, that seems extremely long
2015-05-22 14:36:12	&mbrubeck	minus: Are you building with optimizations on?  `cargo run --release`
2015-05-22 14:36:15	-->	lenstr (lenstr@moz-0o5.vju.25.171.IP) has joined #rust
2015-05-22 14:36:28	--	jdm|busy is now known as jdm
2015-05-22 14:38:12	--	irc: disconnected from server
2015-05-22 14:38:23	-->	ubeatlenine (david@moz-eoouop.hfc.comcastbusiness.net) has joined #rust
2015-05-22 14:38:23	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-22 14:38:23	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-22 14:38:23	--	Channel #rust: 981 nicks (14 ops, 0 halfops, 2 voices, 965 normals)
2015-05-22 14:38:25	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-22 14:38:30	&mbrubeck	grodan: If those are byte offsets, use &str[2..5]
2015-05-22 14:38:44	&mbrubeck	grodan: If they are character indices, it's slightly more complicated
2015-05-22 14:39:26	&mbrubeck	playbot: &"Hello, world"[2..5]
2015-05-22 14:39:27	minus	mbrubeck: that did the trick, takes 180ms now to execute. too bad compiling takes ages
2015-05-22 14:39:28	--	Notice(playbot): "llo"
2015-05-22 14:39:45	&mbrubeck	minus: Yeah, that's one reason optimization isn't on by default.
2015-05-22 14:39:45	LookupError	I implemented https://aatch.github.io/blog/2015/01/17/unboxed-closures-and-ffi-callbacks/ , but meet issue. When I pass callback to do_thing and call it directly inside it is ok. But when later _wrapper call closure program crash 
2015-05-22 14:39:46	LookupError	user data 0x7ffc9c876260
2015-05-22 14:39:46	LookupError	hello
2015-05-22 14:39:46	LookupError	(*closure) 0x7ffc9c876260
2015-05-22 14:39:46	<--	fripp.mozilla.org has kicked LookupError (Channel flood triggered (limit is 5 lines in 3 secs))
2015-05-22 14:40:13	-->	cursivecode (textual@moz-4u56i9.res.bhn.net) has joined #rust
2015-05-22 14:40:33	&mbrubeck	minus: Relevant discussion from a couple of days ago: https://www.reddit.com/r/rust/comments/36n5zo/curious_about_the_perf_difference_of_rustc_o/
2015-05-22 14:40:44	-->	LookupError (stepan@moz-vbg.24j.51.176.IP) has joined #rust
2015-05-22 14:40:51	LookupError	ping
2015-05-22 14:40:56	aaronk	What's the favorite option for JSON serialization?
2015-05-22 14:41:05	-->	essem2 (Thunderbird@moz-0g3v4k.biz.rr.com) has joined #rust
2015-05-22 14:41:31	<--	essem2 (Thunderbird@moz-0g3v4k.biz.rr.com) has quit (Client exited)
2015-05-22 14:41:55	@steveklabnik	aaronk: rustc-serialize is the classic, serde is the new cool thing
2015-05-22 14:42:03	talchas	LookupError: yes, this is expected - if you do let y = 1; some_function(|x| x + y); the closure generated isn't valid after some_function returns
2015-05-22 14:42:13	grodan	mbrubeck: thanks. I had tried that, but I think I was writing x[2..5] instead of &x[2..5]. I guess the latter is the right syntax.
2015-05-22 14:42:25	-->	mcarton (martin@moz-ag64s6.rev.sfr.net) has joined #rust
2015-05-22 14:42:27	<--	zmbush (zmbush@moz-reg.8f6.250.50.IP) has quit (Ping timeout: 121 seconds)
2015-05-22 14:43:01	aaronk	@steveklabnik just tried serde and couldn't get it to compile (due to failure in a dependency)
2015-05-22 14:43:06	bluss	thelink2012: macro to create a wrapper type around an iterator https://gist.github.com/anonymous/4676bb808a498b9f2011#file-playground-rs-L32
2015-05-22 14:43:13	-->	kaeluka (kaeluka@moz-tn3lqd.cust.bredbandsbolaget.se) has joined #rust
2015-05-22 14:43:15	bluss	thelink2012: but it's not complete yet
2015-05-22 14:43:19	-->	montezuma (Mibbit@moz-b8k.bj8.142.72.IP) has joined #rust
2015-05-22 14:43:45	@steveklabnik	aaronk: huh, odd. it launched a new version compatible with 1.0.0 a few days ago
2015-05-22 14:44:24	LookupError	talchas, I wrote fn callback() { println!("hello"); } on top level of file and used callback_register(callback); I expected long live of callback. What did I do wrong?
2015-05-22 14:44:25	&mbrubeck	grodan: Yeah &x[2..5] is an `&str` which points to a slice the original string.  Without the `&` it has type `str` which is an unsized type, which can't be passed around directly.
2015-05-22 14:44:26	<--	montezuma (Mibbit@moz-b8k.bj8.142.72.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-22 14:44:50	<--	gsingh93 (gulshan@moz-ln1ktu.st3l.iv8o.0004.2601.IP) has quit (Ping timeout: 121 seconds)
2015-05-22 14:45:23	--	irc: disconnected from server
2015-05-22 14:45:34	-->	ubeatlenine (david@moz-eoouop.hfc.comcastbusiness.net) has joined #rust
2015-05-22 14:45:34	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-22 14:45:34	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-22 14:45:34	--	Channel #rust: 982 nicks (14 ops, 0 halfops, 2 voices, 966 normals)
2015-05-22 14:45:36	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-22 14:45:39	aidanhs	what's the correct way to go about improving rust answers on stackoverflow?
2015-05-22 14:45:43	posix4e	is there a mozilla channel for spidermonkey or ionmonkey?
2015-05-22 14:45:45	-->	hjr3 (hradtke@moz-dmp.av4.169.69.IP) has joined #rust
2015-05-22 14:46:07	<--	ToBeFree (tobefree@moz-782r3e.de) has quit (Ping timeout: 121 seconds)
2015-05-22 14:46:10	thelink2012	bluss: Thanks anyway :D
2015-05-22 14:46:11	aidanhs	and/or are there any suggested 'edit summaries' that are known to be good at indicating that the existing code in the answer simply doesn't work?
2015-05-22 14:46:15	aaronk	@steveklabnik not sure if this will help, but here's the build failure: https://gist.github.com/aaronkavlie-wf/849cd8b4d2a4e8464dc6
2015-05-22 14:46:18	-->	mou (donwilliam@moz-lq9kg8.cpe.webspeed.dk) has joined #rust
2015-05-22 14:46:20	talchas	LookupError: so I'm not entirely sure how the fn -> Fn translation works, but it's quite possible that that's still invalid
2015-05-22 14:46:53	&mbrubeck	posix4e: #jsapi
2015-05-22 14:46:59	talchas	LookupError: also if your C function is still doing the double-pointer thing like your previous questions, the outer pointer is probably still pointing to a stack value
2015-05-22 14:47:15	@steveklabnik	aaronk: hmmm erickt doesn't seem to be around right now :/
2015-05-22 14:47:18	<--	duesenfranz_ (jona@moz-711djm.tirol.surfer.at) has quit (Connection closed)
2015-05-22 14:48:34	--	irc: disconnected from server
2015-05-22 14:48:45	-->	ubeatlenine (david@moz-eoouop.hfc.comcastbusiness.net) has joined #rust
2015-05-22 14:48:45	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-22 14:48:45	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-22 14:48:45	--	Channel #rust: 981 nicks (14 ops, 0 halfops, 2 voices, 965 normals)
2015-05-22 14:48:47	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-22 14:48:48	<--	tomprogrammer (thomas@moz-vhfn4h.tr5r.qept.4dd0.2001.IP) has quit (Ping timeout: 121 seconds)
2015-05-22 14:49:08	<--	lenstr (lenstr@moz-0o5.vju.25.171.IP) has quit (Connection closed)
2015-05-22 14:49:25	aidanhs	I've made an edit to fix outdated use of std::ffi but it's got 2/3 rejections, so clearly I'm doing something wrong
2015-05-22 14:49:31	-->	lenstr (lenstr@moz-0o5.vju.25.171.IP) has joined #rust
2015-05-22 14:49:42	-->	tak1n (bennyklotz@moz-r043mb.servers.jiffybox.net) has joined #rust
2015-05-22 14:49:49	LookupError	talchas, output with values 1) user data 0x7ffd98b3dea0, 2) hello {callback executed after let user_data} 3) closure 0x7ffd98b3dea0 {inside wrapper code crashes }
2015-05-22 14:49:53	<--	Dekker (Dekker@moz-qc61ff.tbcn.telia.com) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-22 14:49:58	-->	dstrbad (dstrbad@moz-6bfqv1.dsl.iskon.hr) has joined #rust
2015-05-22 14:50:16	LookupError	why fn callback is on stack? 
2015-05-22 14:50:17	-->	fizzbooze (bp@moz-no6phj.sm5k.54kg.0101.2620.IP) has joined #rust
2015-05-22 14:50:31	-->	brianloveswords (brianlovesw@moz-8cn.lfu.232.80.IP) has joined #rust
2015-05-22 14:51:45	--	irc: disconnected from server
2015-05-22 14:51:56	-->	ubeatlenine (david@moz-eoouop.hfc.comcastbusiness.net) has joined #rust
2015-05-22 14:51:56	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-22 14:51:56	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-22 14:51:56	--	Channel #rust: 984 nicks (14 ops, 0 halfops, 2 voices, 968 normals)
2015-05-22 14:51:56	talchas	LookupError: can you pastebin your code?
2015-05-22 14:51:58	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-22 14:52:09	<--	blank_name (blank_name@moz-7ph.o91.79.172.IP) has quit (Ping timeout: 121 seconds)
2015-05-22 14:52:10	<--	silven (quassel@moz-0roor3.priv.bahnhof.se) has quit (Ping timeout: 121 seconds)
2015-05-22 14:52:24	<--	qwerty_nor (Thunderbird@moz-6h6.tqr.209.89.IP) has quit (Ping timeout: 121 seconds)
2015-05-22 14:52:26	-->	silven (quassel@moz-0roor3.priv.bahnhof.se) has joined #rust
2015-05-22 14:52:42	<--	daschl (Adium@moz-oirn1i.vie.surfer.at) has quit (Quit: Leaving.)
2015-05-22 14:52:46	<--	alexherbo2 (alex@moz-m1s.bcu.100.89.IP) has quit (Connection closed)
2015-05-22 14:53:16	Boreeas	I have "if let Err(_) = img.save(&std::path::Path(&out_file)) {", but compiling that fails with "unresolved name `std::path::Path`"
2015-05-22 14:53:20	-->	eholk (eholk@moz-jtq0te.crest.iu.edu) has joined #rust
2015-05-22 14:53:21	<--	GuruMonk (GuruMonk@moz-jb5.uuv.207.49.IP) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2015-05-22 14:53:29	-->	OtterCoder (quassel@moz-3e345v.onrq.kn87.100e.2600.IP) has joined #rust
2015-05-22 14:53:47	Boreeas	But the api docs for stable say that's the fq name for Path
2015-05-22 14:54:05	SpaceManiac	fq names need to be prefixed with ::
2015-05-22 14:54:17	<--	lenstr (lenstr@moz-0o5.vju.25.171.IP) has quit (Connection closed)
2015-05-22 14:54:56	Boreeas	That doesn't help
2015-05-22 14:54:58	Boreeas	main.rs:40:28: 40:45 error: unresolved name `std::path::Path`
2015-05-22 14:55:00	Boreeas	main.rs:40 	if let Err(_) = img.save(&::std::path::Path(&out_file)) {
2015-05-22 14:55:24	LookupError	talchas, please take a look http://dpaste.com/10RXXR1
2015-05-22 14:55:35	&mbrubeck	Boreeas: Path is a type, not a constructor
2015-05-22 14:55:47	-->	lenstr (lenstr@moz-0o5.vju.25.171.IP) has joined #rust
2015-05-22 14:55:51	Boreeas	ack
2015-05-22 14:55:51	&mbrubeck	Boreeas: You might want Path::new(...)
2015-05-22 14:55:55	Boreeas	yeah, that would do it
2015-05-22 14:56:03	&mbrubeck	Not a great error message. :/
2015-05-22 14:56:07	-->	Pavel (Pavel@moz-a8qgi0.lidos.cz) has joined #rust
2015-05-22 14:56:11	-->	ToBeFree (tobefree@moz-782r3e.de) has joined #rust
2015-05-22 14:56:14	<--	chaospsychex (daniel@moz-eoricv.sub-174-237-3.myvzw.com) has quit (Ping timeout: 121 seconds)
2015-05-22 14:56:15	<--	brianloveswords (brianlovesw@moz-8cn.lfu.232.80.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-22 14:56:32	<--	Pavel (Pavel@moz-a8qgi0.lidos.cz) has quit (Quit: Leaving)
2015-05-22 14:56:49	aidanhs	l
2015-05-22 14:57:01	aidanhs	oops, not a terminal
2015-05-22 14:57:04	mermi	Hi, I'm attempting to compare a newtype `struct Version(u8)` to another. I figured I have to impl PartialEq and PartialOrd and it kind of works. However, it feels a bit clunky and I wonder if it is possible to derive the impls from u8? playpen: http://is.gd/1E3zlS 
2015-05-22 14:57:34	mermi	If not, would it be possible to do my matching i a more concise way?
2015-05-22 14:57:34	&mbrubeck	Boreeas: By the way, if `save` takes an AsRef<Path> then you can pass an &str or &String directly to it.
2015-05-22 14:57:59	--	irc: disconnected from server
2015-05-22 14:58:10	-->	ubeatlenine (david@moz-eoouop.hfc.comcastbusiness.net) has joined #rust
2015-05-22 14:58:10	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-22 14:58:10	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-22 14:58:10	--	Channel #rust: 979 nicks (14 ops, 0 halfops, 2 voices, 963 normals)
2015-05-22 14:58:12	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-22 14:58:28	Boreeas	mbrubeck: Oh, that's handy. Thanks!
2015-05-22 14:58:53	&mbrubeck	mermi: You can make it shorter with .0: http://is.gd/n0i32q
2015-05-22 14:58:54	--	NameNotFound is now known as zz_NameNotFound
2015-05-22 14:59:13	--	zz_NameNotFound is now known as NameNotFound
2015-05-22 14:59:14	&mbrubeck	mermi: I don't think there's a built-in way to derive these traits. Maybe someone's written a macro...
2015-05-22 14:59:47	SpaceManiac	uh, deriving them works fine?
2015-05-22 14:59:47	geofft	mermi: You can match (self, other) {(&Version(a), &Version(b)) => ...} 
2015-05-22 14:59:51	&mbrubeck	mermi: Sometimes I impl Deref for newtype structs, which allows some nice shorthands.  But it feels a little hacky. :P
2015-05-22 15:00:20	geofft	But also, what mbrubeck said with .0 is I think the best way 
2015-05-22 15:00:20	&mbrubeck	mermi: Alternately you can say `let Version(a) = *self;`
2015-05-22 15:00:30	SpaceManiac	mermi: http://is.gd/g5BAyH
2015-05-22 15:00:50	&mbrubeck	SpaceManiac: Oh, right.
2015-05-22 15:00:56	--	AutomatedTester|AFK is now known as AutomatedTester
2015-05-22 15:01:11	&mbrubeck	SpaceManiac: I was thinking of the arithmetic traits like Add, Sub.  Oops. :)
2015-05-22 15:02:10	--	irc: disconnected from server
2015-05-22 15:02:21	-->	ubeatlenine (david@moz-eoouop.hfc.comcastbusiness.net) has joined #rust
2015-05-22 15:02:21	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-22 15:02:21	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-22 15:02:21	--	Channel #rust: 981 nicks (15 ops, 0 halfops, 2 voices, 964 normals)
2015-05-22 15:02:23	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-22 15:02:24	talchas	LookupError: which basically means it makes a pointer on the stack to the actual function
2015-05-22 15:02:41	talchas	(this is necessary for closures, but is a waste for simple function pointers)
2015-05-22 15:03:28	LookupError	if I remove & before f I got error: cast to fat pointer: `F` as `*const _`
2015-05-22 15:03:51	mermi	SpaceManiac, mbrubeck: I thought I tried just that! Must have made some other mistake :P Thanks for the help! (did not know about the .0)
2015-05-22 15:04:02	talchas	if you don't need closures, don't bother with the whole thing and just take an fn() and pass that to C
2015-05-22 15:04:06	<--	OtterCoder (quassel@moz-3e345v.onrq.kn87.100e.2600.IP) has quit (Connection closed)
2015-05-22 15:04:22	talchas	if you do need closures, you're going to need to box them instead
2015-05-22 15:04:27	-->	w4ffles (textual@moz-g7g.toe.144.12.IP) has joined #rust
2015-05-22 15:04:31	-->	pcwalton (pcwalton@moz-l8ebtf.sfo1.mozilla.com) has joined #rust
2015-05-22 15:04:31	--	Mode #rust [+ao pcwalton pcwalton] by ChanServ
2015-05-22 15:04:46	-->	spicydonuts (spicydonuts@moz-bn1.k0h.186.208.IP) has joined #rust
2015-05-22 15:05:00	<--	demilich (demilich@moz-q56djb.dyn.telefonica.de) has quit (Quit: Leaving)
2015-05-22 15:05:30	-->	nated (nated@moz-h0up8b.hfc.comcastbusiness.net) has joined #rust
2015-05-22 15:05:35	-->	borromakot (Adium@moz-j6pi1a.il.comcast.net) has joined #rust
2015-05-22 15:05:38	<--	summerlight (summerlight@moz-99k.2mj.130.121.IP) has quit (Ping timeout: 121 seconds)
2015-05-22 15:05:41	-->	Morten (Morten@moz-0o1u6b.uib.no) has joined #rust
2015-05-22 15:05:42	<--	ptalbot (ptalbot@moz-l1a.5ct.160.37.IP) has quit (Ping timeout: 121 seconds)
2015-05-22 15:05:48	<--	borromakot (Adium@moz-j6pi1a.il.comcast.net) has quit (Quit: Leaving.)
2015-05-22 15:06:18	-->	jmbto (jmbto@moz-hi597m.hca5.8frp.0e35.2a01.IP) has joined #rust
2015-05-22 15:06:22	Morten	Huh? "error: type `std::collections::hash::map::HashMap<V, K>` does not implement any method in scope named `iter`"
2015-05-22 15:06:28	-->	rustyrazorblade (rustyrazorb@moz-ehrfqf.fios.verizon.net) has joined #rust
2015-05-22 15:06:29	<--	hjr3 (hradtke@moz-dmp.av4.169.69.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2015-05-22 15:06:50	eerie	question on "composition over inheritance". say I have structs A and B, both implementing some methods, and I want to compose them as field of struct C, and would like all those (orthogonal) methods to become methods of C. Is there an easy way to do that?
2015-05-22 15:06:58	-->	Azer (Mibbit@moz-ro5v86.cable.virginm.net) has joined #rust
2015-05-22 15:07:17	Morten	The docs are pretty clear about HashMap having a .iter method
2015-05-22 15:07:20	Morten	I'm confused
2015-05-22 15:07:20	LookupError	talchas, thanks. I will think about.
2015-05-22 15:07:23	<--	LookupError (stepan@moz-vbg.24j.51.176.IP) has left #rust
2015-05-22 15:07:30	duesenfranz_	Morten: maybe your key type doesn't have Hash or Eq ?
2015-05-22 15:07:55	Azer	Hello Rustaceans, I cannot figure out how to cast a char to an Option<f64>, any help?
2015-05-22 15:08:21	--	irc: disconnected from server
2015-05-22 15:08:32	-->	ubeatlenine (david@moz-eoouop.hfc.comcastbusiness.net) has joined #rust
2015-05-22 15:08:32	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-22 15:08:32	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-22 15:08:32	--	Channel #rust: 983 nicks (16 ops, 0 halfops, 2 voices, 965 normals)
2015-05-22 15:08:34	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-22 15:08:34	-->	swgillespie (swgillespie@moz-1i5.3un.220.167.IP) has joined #rust
2015-05-22 15:09:10	-->	_petr` (petr@moz-2pi.7q8.248.178.IP) has joined #rust
2015-05-22 15:09:12	-->	Rym (y@moz-c2u.sd4.38.217.IP) has joined #rust
2015-05-22 15:09:19	<--	Stebalien (Stebalien@moz-v74t8l.csail.mit.edu) has quit (Quit: leaving)
2015-05-22 15:09:23	<--	_petr (petr@moz-2pi.7q8.248.178.IP) has quit (Ping timeout: 121 seconds)
2015-05-22 15:09:25	<--	skade (skade@moz-m9ib3m.pools.vodafone-ip.de) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-22 15:09:26	duesenfranz_	Morten: no problem. in such a case rustc does unfortunately not only tell you on the call to `new`, but also anything later, which makes the initial error easy to miss....
2015-05-22 15:09:30	&mbrubeck	Azer: Treating the char as a digit? Or a unicode codepoint?  or..?
2015-05-22 15:09:36	<--	CMCDragonkai (nobody@moz-v01.321.218.216.IP) has left #rust
2015-05-22 15:09:41	&mbrubeck	playbot: 'a' as f64
2015-05-22 15:09:42	--	Notice(playbot): <anon>:9:9: 9:19 error: illegal cast; cast through an integer first: `char` as `f64`
2015-05-22 15:09:42	--	Notice(playbot): <anon>:9         'a' as f64
2015-05-22 15:09:42	--	Notice(playbot): output truncated; full output at: http://bit.ly/1dpqNBf
2015-05-22 15:09:48	-->	CMCDragonkai (nobody@moz-v01.321.218.216.IP) has joined #rust
2015-05-22 15:09:49	&mbrubeck	playbot: 'a' as i32 as f64
2015-05-22 15:09:50	--	Notice(playbot): 97
2015-05-22 15:09:51	-->	skade (skade@moz-m9ib3m.pools.vodafone-ip.de) has joined #rust
2015-05-22 15:10:01	<--	jaen (jaen@moz-ifmik2.copit.pl) has quit (Quit: WeeChat 1.1.1)
2015-05-22 15:10:04	&mbrubeck	playbot: '5'.to_digit() as f64
2015-05-22 15:10:05	--	Notice(playbot): <anon>:9:13: 9:23 error: this function takes 1 parameter but 0 parameters were supplied [E0061]
2015-05-22 15:10:05	--	Notice(playbot): <anon>:9         '5'.to_digit() as f64
2015-05-22 15:10:05	--	Notice(playbot): output truncated; full output at: http://bit.ly/1Q1KLxC
2015-05-22 15:10:09	&mbrubeck	playbot: '5'.to_digit(10) as f64
2015-05-22 15:10:10	--	Notice(playbot): <anon>:9:9: 9:32 error: non-scalar cast: `core::option::Option<u32>` as `f64`
2015-05-22 15:10:11	--	Notice(playbot): <anon>:9         '5'.to_digit(10) as f64
2015-05-22 15:10:11	--	Notice(playbot): output truncated; full output at: http://bit.ly/1dpqMgF
2015-05-22 15:10:13	&mbrubeck	sorry
2015-05-22 15:10:20	Azer	mbrubeck As a digit, yes
2015-05-22 15:10:21	Morten	duesenfranz_: It didn't tell me on the call to new though. It was the only error
2015-05-22 15:10:43	<--	Rym_ (y@moz-c2u.sd4.38.217.IP) has quit (Connection closed)
2015-05-22 15:10:46	XMPPwocky	rusti: 5.to_digit(10).map(|x| x as f64)
2015-05-22 15:10:47	--	Notice(playbot): <anon>:9:11: 9:23 error: type `_` does not implement any method in scope named `to_digit`
2015-05-22 15:10:47	--	Notice(playbot): <anon>:9         5.to_digit(10).map(|x| x as f64)
2015-05-22 15:10:47	--	Notice(playbot): output truncated; full output at: http://bit.ly/1Q1KQBv
2015-05-22 15:10:53	XMPPwocky	dsfargeg
2015-05-22 15:10:54	duesenfranz_	Morten: hmm, strange... idk why...
2015-05-22 15:11:08	&mbrubeck	Azer: http://is.gd/QZVmQp
2015-05-22 15:11:43	<--	CMCDragonkai (nobody@moz-v01.321.218.216.IP) has left #rust
2015-05-22 15:11:55	Azer	mbrubeck Exactly what I need, thanks a lot!
2015-05-22 15:12:06	-->	REMqb (REMqb@moz-atvqum.abo.wanadoo.fr) has joined #rust
2015-05-22 15:12:30	<--	peferron (peferron@moz-k89vq8.ca.comcast.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-22 15:12:40	-->	CMCDragonkai (nobody@moz-v01.321.218.216.IP) has joined #rust
2015-05-22 15:12:45	-->	mkoskar (mkoskar@moz-vjb.r8r.42.192.IP) has joined #rust
2015-05-22 15:13:27	tincan	How would I declare a lifetime parameter on this generic function?: fn lex_token<T>(input : &str, parseToken : (Fn(&str) -> Option<T>)) -> Option<(T, &str)> 
2015-05-22 15:13:48	<--	mceier (mceier@moz-fm89sb.dynamic.chello.pl) has quit (Quit: leaving)
2015-05-22 15:14:31	-->	blank_name (blank_name@moz-65r.bos.183.192.IP) has joined #rust
2015-05-22 15:14:32	&mbrubeck	tincan: You could declare up to three parameters.  As written, the function is equivalent to:
2015-05-22 15:14:33	&mbrubeck	fn lex_token<'a, 'b, T>(input : &'a str, parseToken : (Fn(&'b str) -> Option<T>)) -> Option<(T, &'a str)>
2015-05-22 15:14:57	&mbrubeck	I think...
2015-05-22 15:15:14	tincan	mbrubeck: going to try it, thanks
2015-05-22 15:15:27	swgillespie	I think you have to do "for<'a> Fn(&'a str) -> Option<T>"
2015-05-22 15:15:30	swgillespie	not sure though
2015-05-22 15:15:38	&mbrubeck	Yeah, I think swgillespie is right.
2015-05-22 15:15:46	swgillespie	https://github.com/rust-lang/rfcs/blob/master/text/0387-higher-ranked-trait-bounds.md
2015-05-22 15:15:49	&mbrubeck	That should go into a `where` clause.
2015-05-22 15:16:01	<--	Jesin (Jesin@moz-p3d.72b.203.108.IP) has quit (Connection closed)
2015-05-22 15:16:01	-->	tomprogrammer (thomas@moz-vhfn4h.tr5r.qept.4dd0.2001.IP) has joined #rust
2015-05-22 15:16:03	<--	rbranson (rbranson@moz-i7m.9o0.201.199.IP) has quit (Quit: Computer has gone to sleep.)
2015-05-22 15:16:04	-->	andresv (textual@moz-kvanfr.dyn.estpak.ee) has joined #rust
2015-05-22 15:16:05	-->	Halamix2 (Halamix2@moz-09a.brj.196.109.IP) has joined #rust
2015-05-22 15:16:08	<--	new_one (new_one@moz-o1369n.ujol.1ibb.0101.2620.IP) has quit (Ping timeout: 121 seconds)
2015-05-22 15:16:11	<--	spicydonuts (spicydonuts@moz-bn1.k0h.186.208.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-22 15:16:18	-->	Jesin (Jesin@moz-48mne2.nsvltn.sbcglobal.net) has joined #rust
2015-05-22 15:16:51	<--	Jesin (Jesin@moz-48mne2.nsvltn.sbcglobal.net) has quit (Connection closed)
2015-05-22 15:17:00	swgillespie	so then it would be fn lex_token<'a, T, F>(input: &'a str, parseToken: F) -> Option<(T, &'a str)> where T: for<'b> Fn(&'b str) -> Option<T>
2015-05-22 15:17:01	swgillespie	i think
2015-05-22 15:17:06	swgillespie	not T, F
2015-05-22 15:17:06	swgillespie	sorry
2015-05-22 15:17:09	swgillespie	in the where
2015-05-22 15:17:12	<--	lenstr (lenstr@moz-0o5.vju.25.171.IP) has quit (Connection closed)
2015-05-22 15:17:18	-->	zmack (zmack@moz-htpein.home.aster.pl) has joined #rust
2015-05-22 15:17:23	-->	Jesin (Jesin@moz-48mne2.nsvltn.sbcglobal.net) has joined #rust
2015-05-22 15:17:24	-->	spicydonuts (spicydonuts@moz-bn1.k0h.186.208.IP) has joined #rust
2015-05-22 15:17:31	tincan	swgillespie: wait, now I'm confused
2015-05-22 15:17:38	-->	vosen (vosen@moz-mtm1g4.dynamic.chello.pl) has joined #rust
2015-05-22 15:17:51	<--	Jesin (Jesin@moz-48mne2.nsvltn.sbcglobal.net) has quit (Connection closed)
2015-05-22 15:18:32	--	irc: disconnected from server
2015-05-22 15:18:43	-->	ubeatlenine (david@moz-eoouop.hfc.comcastbusiness.net) has joined #rust
2015-05-22 15:18:43	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-22 15:18:43	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-22 15:18:43	--	Channel #rust: 986 nicks (16 ops, 0 halfops, 2 voices, 968 normals)
2015-05-22 15:18:45	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-22 15:18:55	<--	Jesin (Jesin@moz-48mne2.nsvltn.sbcglobal.net) has quit (Connection closed)
2015-05-22 15:19:01	&mbrubeck	and you can elide all the 'a if you want
2015-05-22 15:19:13	jshs	mbrubeck: I don't think so
2015-05-22 15:19:17	-->	Jesin (Jesin@moz-48mne2.nsvltn.sbcglobal.net) has joined #rust
2015-05-22 15:19:22	jshs	oh wait
2015-05-22 15:19:30	grodan	it would be great with more examples of common operations (eg. extracting a substring) in the documentation.
2015-05-22 15:19:44	&mbrubeck	grodan: Those methods have been replaced by slicing syntax, s[start..end], or s[start..] or s[..end]
2015-05-22 15:19:57	@steveklabnik	grodan: well, everyone's defintion of 'common' is differnt, is one problem
2015-05-22 15:20:06	@steveklabnik	dealing with substrings by bytes isn't as common with utf8
2015-05-22 15:20:10	jshs	mbrubeck: sorry, it should work
2015-05-22 15:20:18	@steveklabnik	i do agree we need more examples, broadly
2015-05-22 15:20:19	@steveklabnik	for sure
2015-05-22 15:20:29	<--	Jesin (Jesin@moz-48mne2.nsvltn.sbcglobal.net) has quit (Connection closed)
2015-05-22 15:20:40	@steveklabnik	and, as mbrubeck said, we shouldn't be talking about those methods anymore, so it's _certainly_ a bug
2015-05-22 15:20:44	<--	rustyrazorblade (rustyrazorb@moz-ehrfqf.fios.verizon.net) has quit (Client exited)
2015-05-22 15:20:48	-->	mceier (mceier@moz-fm89sb.dynamic.chello.pl) has joined #rust
2015-05-22 15:20:49	<--	spicydonuts (spicydonuts@moz-bn1.k0h.186.208.IP) has quit (Quit: Leaving...)
2015-05-22 15:20:52	&mbrubeck	steveklabnik: Docs at http://doc.rust-lang.org/std/primitive.str.html#method.slice_chars need to be updated.
2015-05-22 15:21:43	--	irc: disconnected from server
2015-05-22 15:21:55	-->	ubeatlenine (david@moz-eoouop.hfc.comcastbusiness.net) has joined #rust
2015-05-22 15:21:55	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-22 15:21:55	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-22 15:21:55	--	Channel #rust: 985 nicks (16 ops, 0 halfops, 2 voices, 967 normals)
2015-05-22 15:21:57	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-22 15:22:29	-->	tristanseifert (tristanseif@moz-r0t7ns.res.rr.com) has joined #rust
2015-05-22 15:23:03	-->	xilec (Mibbit@moz-g6k.oht.161.46.IP) has joined #rust
2015-05-22 15:23:53	-->	_adjivas (adjivas@moz-8et.lpf.210.62.IP) has joined #rust
2015-05-22 15:23:53	<--	_petr` (petr@moz-2pi.7q8.248.178.IP) has quit (Connection closed)
2015-05-22 15:23:58	grodan	steveklabnik: it's true that dealing with char offsets is probably more common, but I have a string that starts and ends with a quote character that I want to trim and since I know the first and last character is within ascii7 I thought it might be faster to use byte offsets.
2015-05-22 15:24:07	-->	zmack (zmack@moz-htpein.home.aster.pl) has joined #rust
2015-05-22 15:24:09	<--	andrezs (andre@moz-b2c462.ip.windstream.net) has quit (Quit: leaving)
2015-05-22 15:24:11	<--	_adjivas (adjivas@moz-8et.lpf.210.62.IP) has quit (Quit: WeeChat 1.1.1)
2015-05-22 15:24:21	-->	_adjivas (adjivas@moz-8et.lpf.210.62.IP) has joined #rust
2015-05-22 15:24:27	<--	lenstr (lenstr@moz-0o5.vju.25.171.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-22 15:24:32	-->	_petr` (petr@moz-2pi.7q8.248.178.IP) has joined #rust
2015-05-22 15:24:37	<--	_adjivas (adjivas@moz-8et.lpf.210.62.IP) has quit (Quit: WeeChat 1.1.1)
2015-05-22 15:24:43	-->	_adjivas (adjivas@moz-8et.lpf.210.62.IP) has joined #rust
2015-05-22 15:24:44	<--	_adjivas (adjivas@moz-8et.lpf.210.62.IP) has quit (Quit: WeeChat 1.1.1)
2015-05-22 15:24:48	<--	marc_ (uid5324@moz-t3einu.ealing.irccloud.com) has quit (Quit: Connection closed for inactivity)
2015-05-22 15:24:59	@steveklabnik	seems fine :)
2015-05-22 15:25:00	@steveklabnik	and https://github.com/rust-lang/rust/pull/25716
2015-05-22 15:25:29	grodan	wow, that was fast!
2015-05-22 15:25:29	Morten	Are there any mirrors for nightly Rust? http://www.rust-lang.org/install.html and the curl script are both unbearably slow
2015-05-22 15:25:32	geri	Rust highfive robot?
2015-05-22 15:25:40	Morten	Like, 10 KB/s slow
2015-05-22 15:26:29	&mbrubeck	geri: It's an automated greeter!  It posts a longer message for new contributors, e.g. https://github.com/rust-lang/rust-www/pull/139
2015-05-22 15:26:51	<--	swgillespie (swgillespie@moz-1i5.3un.220.167.IP) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-22 15:27:18	@steveklabnik	grodan: i try :)
2015-05-22 15:27:23	myname	i got a confusing error message (i was able to find the obvious error, but maybe the message is interesting nontheless): expected one of `+`, `,`, `->`, `::`, or `>`, found `>` in fn foo(&mut self, rooms: &Vec<Vec(i32, i32)>>) {
2015-05-22 15:27:31	-->	kushal (kdas@moz-40si3b.202.sitibroadband.in) has joined #rust
2015-05-22 15:27:35	Morten	Anyone? I can't wait an hour for nightly rust to download
2015-05-22 15:27:43	Morten	Or 54 minutes
2015-05-22 15:27:48	@steveklabnik	Morten: not that i'm aware of. it's just S3, it shouldn't be that slow
2015-05-22 15:27:49	@steveklabnik	:/
2015-05-22 15:27:57	myname	especially the "expected x, found x" part
2015-05-22 15:27:58	@steveklabnik	myname: taking an &Vec is a little odd
2015-05-22 15:28:06	myname	steveklabnik: it is?
2015-05-22 15:28:07	@steveklabnik	but you do have two cosing >s and one opening <
2015-05-22 15:28:14	myname	steveklabnik: i know
2015-05-22 15:28:16	@steveklabnik	myname: yeah, you'd take &[T] rather than &Vec
2015-05-22 15:28:19	Morten	steveklabnik: it was the same horrible speed yesterday, is no one else having this problem?
2015-05-22 15:28:55	--	irc: disconnected from server
2015-05-22 15:29:06	-->	ubeatlenine (david@moz-eoouop.hfc.comcastbusiness.net) has joined #rust
2015-05-22 15:29:06	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-22 15:29:06	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-22 15:29:06	--	Channel #rust: 986 nicks (16 ops, 0 halfops, 2 voices, 968 normals)
2015-05-22 15:29:08	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-22 15:29:17	kimundi	myname: Yes, in fact Vec doesn't support it, it just delegates to &[T]
2015-05-22 15:29:19	-->	new_one (new_one@moz-cfhap5.mtv2.mozilla.com) has joined #rust
2015-05-22 15:29:23	myname	oh
2015-05-22 15:29:26	myname	huh
2015-05-22 15:29:40	myname	so what are the cases where i want to use vec?
2015-05-22 15:29:55	Dryvnt	How the heck do I access http://doc.rust-lang.org/stable/std/f64/constant.INFINITY.html ? std::f64::INFINITY gives me an error 'Use of undeclared type or module `std::f64`'.
2015-05-22 15:30:09	-->	kgrandon (Adium@moz-7seap8.2rkg.9kg1.0101.2620.IP) has joined #rust
2015-05-22 15:30:16	kimundi	myname: THe docs should document that in the sense that those methods are under a header that says "reachable via the Deref<Target=[T]> impl"
2015-05-22 15:30:29	<--	Jesin (Jesin@moz-48mne2.nsvltn.sbcglobal.net) has quit (Connection closed)
2015-05-22 15:30:33	<--	dassio (mac@moz-f5s.cn2.191.60.IP) has quit (Quit: This computer has gone to sleep)
2015-05-22 15:30:47	talchas	myname: you basically never want to use &Vec
2015-05-22 15:30:49	@steveklabnik	myname: http://is.gd/sQWcfe
2015-05-22 15:30:56	-->	Jesin (Jesin@moz-48mne2.nsvltn.sbcglobal.net) has joined #rust
2015-05-22 15:30:56	myname	talchas: why that?
2015-05-22 15:30:57	talchas	&mut Vec is useful though
2015-05-22 15:31:22	kimundi	myname: &Vec<T> has almost no cases, the only one is if you want to read the capacity and nothing more. &mut Vec<T> has use cases if you want to modify an existing vector, and Vec<T> has case if you want to take ownership of a vector
2015-05-22 15:31:25	talchas	&Vec doesn't let you do anything useful that &[] doesn't let you do
2015-05-22 15:31:27	@steveklabnik	playbot: std::f64::INFINITY
2015-05-22 15:31:29	--	Notice(playbot): inf
2015-05-22 15:31:33	@steveklabnik	Dryvnt: ^ ?
2015-05-22 15:31:48	myname	okay
2015-05-22 15:31:53	grodan	If s is a String and I want to extract a substring that's also of String type is (&s[2..5]).to_string() the recommended way to do that?
2015-05-22 15:31:57	@steveklabnik	it also adds an indirection
2015-05-22 15:32:06	@steveklabnik	grodan: yes, or .to_owned(), which is technically slightly faster
2015-05-22 15:32:09	-->	rudolph (rudolph@moz-960.k2l.152.37.IP) has joined #rust
2015-05-22 15:32:15	kimundi	grodan: Yes, no better way than that exists
2015-05-22 15:32:24	Dryvnt	I don't see why it's not working, steveklabnik
2015-05-22 15:32:33	@steveklabnik	Dryvnt: yeah :/ are you in a submodule?
2015-05-22 15:32:37	<--	lyc (lyc@moz-jft.nr8.226.207.IP) has quit (Ping timeout: 121 seconds)
2015-05-22 15:32:46	<--	kedibasi (kedibasi@moz-r9t.mbm.54.94.IP) has left #rust
2015-05-22 15:32:53	@steveklabnik	try ::std...
2015-05-22 15:32:59	<--	_petr` (petr@moz-2pi.7q8.248.178.IP) has quit (Ping timeout: 121 seconds)
2015-05-22 15:33:11	-->	sykora (sykora@moz-uh8p05.cs.jhu.edu) has joined #rust
2015-05-22 15:33:18	heftig	hm, every rust function begins with a call to extend stack?
2015-05-22 15:33:26	kimundi	Dryvnt: std::f64::INFINITY only works in the crate root and in modules in which you explicitly imported `std`. ::std::f64::INFINITY works everywhere as that uses the absolute path
2015-05-22 15:33:28	Dryvnt	I am in a submodule, and that did work
2015-05-22 15:33:30	-->	Pavel (Pavel@moz-a8qgi0.lidos.cz) has joined #rust
2015-05-22 15:33:36	Dryvnt	Oh, okay. I see
2015-05-22 15:33:39	Morten	Somebody needs to make a mirror for Rust somewhere. Waiting for an hour to downloaded 130MB is a pretty bad first impression for people  starting out
2015-05-22 15:33:45	@steveklabnik	heftig: iirc, yes, we haven't fixed up that codgen yet.
2015-05-22 15:33:47	-->	wilfredh (uid159@moz-md9so9.brockwell.irccloud.com) has joined #rust
2015-05-22 15:33:54	@steveklabnik	Morten: where are you located in the world? vaguely speaking
2015-05-22 15:34:07	-->	lov2cod (Adium@moz-8rkult.eodv.k60l.0119.2620.IP) has joined #rust
2015-05-22 15:34:11	Morten	Bergen, Norway. Is it just me?
2015-05-22 15:34:17	@steveklabnik	hrm
2015-05-22 15:34:47	-->	killercup (killercup@moz-qj5qhi.dip0.t-ipconnect.de) has joined #rust
2015-05-22 15:35:09	Pavel	steveklabnik, Morten Czech republic, same experience here ;)
2015-05-22 15:35:21	Pavel	But it didn't leave a bad impression on me somehow.
2015-05-22 15:35:35	<--	giucam (giucam@moz-iv0nnc.bb.dnainternet.fi) has quit (Ping timeout: 121 seconds)
2015-05-22 15:35:36	kimundi	steveklabnik: I also had similar experiences in Germany
2015-05-22 15:36:06	--	irc: disconnected from server
2015-05-22 15:36:17	-->	ubeatlenine (david@moz-eoouop.hfc.comcastbusiness.net) has joined #rust
2015-05-22 15:36:17	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-22 15:36:17	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-22 15:36:17	--	Channel #rust: 990 nicks (16 ops, 0 halfops, 2 voices, 972 normals)
2015-05-22 15:36:19	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-22 15:36:25	tincan	How can I accomplish this? type TokenMap<T> = Fn(&str) -> Option<T>; it says TokenMap is not a trait. 
2015-05-22 15:36:27	dinfuehr	i am in austria, and download was pretty fast just now.
2015-05-22 15:36:33	@steveklabnik	i would be surprised if S3 was just slow to that part of the world
2015-05-22 15:36:36	-->	areski (areski@moz-2lg0ha.user.ono.com) has joined #rust
2015-05-22 15:36:40	-->	gsingh93 (gulshan@moz-ln1ktu.st3l.iv8o.0004.2601.IP) has joined #rust
2015-05-22 15:36:46	mib_ijr7y0	So theoretical question. If I wanted to make an immutable data structure, every function that mutates it will need tocreate a new version of it. Can rust handle this? How will the old structures get eliminated? Since there's no GC im concerned im gonna be forced into mutating state.
2015-05-22 15:36:49	dinfuehr	(i downloaded rust nightly just yet, not sure what you are talking about)
2015-05-22 15:36:56	-->	Savago (Savago@moz-8hd.3b6.246.162.IP) has joined #rust
2015-05-22 15:37:03	@steveklabnik	tincan: Fn is a trait, so. it's not really clear what you want to do, to be honest, at least to me.
2015-05-22 15:37:03	Morten	Some crazy routing issue? I never have these problems with any other downloads
2015-05-22 15:37:11	@steveklabnik	tincan: wouldn't a TokenMap be a HashMap?
2015-05-22 15:37:29	--	mib_ijr7y0 is now known as kelo
2015-05-22 15:37:30	@steveklabnik	mib_ijr7y0: they'd be deallocated when they go out of scope
2015-05-22 15:37:36	kimundi	mib_ijr7y0: You can can just consume ownership of the old structure on each new version of it
2015-05-22 15:37:45	@steveklabnik	and yeah, kimundi 's advice is a good one
2015-05-22 15:37:48	tincan	steveklabnik: I have this long function declaration here: fn lex_token<'a, T, F>(input : &'a str, parseToken : F) -> Option<TokenResult<T>> where F: for<'b> Fn(&'b str) -> Option<T> {
2015-05-22 15:37:58	kelo	soWhat do you mean consume ownership of the old data structure?
2015-05-22 15:38:00	tincan	steveklabnik: What I'm trying to do is make it shorter by using type synonyms
2015-05-22 15:38:01	gsingh93	has anyone here used the rustc::llvm module? I'm trying to get it to output assembly
2015-05-22 15:38:30	<--	Jesin (Jesin@moz-48mne2.nsvltn.sbcglobal.net) has quit (Connection closed)
2015-05-22 15:38:32	tincan	steveklabnik: Reason I'm not using a HashMap I guess is that it is just static data
2015-05-22 15:38:34	@steveklabnik	tincan: yeah, so type synonyms can only be synonmys for concrete types, not triat objects
2015-05-22 15:39:17	--	irc: disconnected from server
2015-05-22 15:39:28	-->	ubeatlenine (david@moz-eoouop.hfc.comcastbusiness.net) has joined #rust
2015-05-22 15:39:28	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-22 15:39:28	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-22 15:39:28	--	Channel #rust: 992 nicks (16 ops, 0 halfops, 2 voices, 974 normals)
2015-05-22 15:39:30	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-22 15:39:40	kimundi	kelo ^ pretend the vector is a immutable data structure there
2015-05-22 15:39:43	@steveklabnik	Dryvnt: iirc, you can just implement PartialEq the other way, but it's been a loooong time
2015-05-22 15:39:48	<--	skade (skade@moz-m9ib3m.pools.vodafone-ip.de) has quit (Connection closed)
2015-05-22 15:39:55	-->	basicdays (basicdays@moz-vreeoj.cable.rcn.com) has joined #rust
2015-05-22 15:40:02	@steveklabnik	since i've looked at that
2015-05-22 15:40:05	Dryvnt	Wow
2015-05-22 15:40:09	Dryvnt	If I just looked at the docs
2015-05-22 15:40:21	Dryvnt	My bad, there's literally an example there of it being used as a min-heap
2015-05-22 15:40:26	kelo	so it kills the structure onces the function completes it
2015-05-22 15:40:30	kelo	because it falls outside of scope
2015-05-22 15:40:40	tincan	steveklabnik: hehe, this is exactly what I'm looking for. Thanks.
2015-05-22 15:40:41	kimundi	kelo: Or it reuses it
2015-05-22 15:40:41	@steveklabnik	Dryvnt: :)
2015-05-22 15:40:45	@steveklabnik	tincan: awesome :)
2015-05-22 15:40:54	<--	slomo (slomo@moz-p8m0g2.net) has quit (Ping timeout: 121 seconds)
2015-05-22 15:41:00	kimundi	kelo: Doesn't really matter, from the outside the API consumes the old structure and returns a new one
2015-05-22 15:41:02	<--	wipeD (wipeD@moz-k22833.dip0.t-ipconnect.de) has quit (Quit: G'bye)
2015-05-22 15:41:07	Pavel	steveklabnik, I'll use chunks probably, because the only thing I want is to increment values in very large vector.
2015-05-22 15:41:25	Pavel	I hope this will work well. Because the mutex will be slow and the locking is unnecessary here.
2015-05-22 15:41:37	@steveklabnik	you might be able to use RefCell instead of Mutex, depending
2015-05-22 15:41:45	<--	blank_name (blank_name@moz-65r.bos.183.192.IP) has quit (Ping timeout: 121 seconds)
2015-05-22 15:41:51	-->	skade (skade@moz-m9ib3m.pools.vodafone-ip.de) has joined #rust
2015-05-22 15:41:57	tincan	steveklabnik: Just out of curiousity. What is the reason this functionality is not in a official lib? Or in the language itself? Is there any specific reason for this?
2015-05-22 15:41:59	<--	misheska_ (misheska@moz-8ib.lm4.212.17.IP) has quit (Quit: Lingo: www.lingoirc.com)
2015-05-22 15:42:35	kimundi	tincan: what functionality?
2015-05-22 15:42:36	@steveklabnik	tincan: well, in general
2015-05-22 15:42:41	kelo	@kimundi my only concern is having 40000000 references to this structure in memory. it could potentially be used alot
2015-05-22 15:42:45	@steveklabnik	rust attempts to have a very small standard library
2015-05-22 15:42:53	-->	dstrbad (dstrbad@moz-6bfqv1.dsl.iskon.hr) has joined #rust
2015-05-22 15:42:55	<--	dstrbad (dstrbad@moz-6bfqv1.dsl.iskon.hr) has quit (A TLS packet with unexpected length was received.)
2015-05-22 15:42:56	-->	dstrbad (dstrbad@moz-6bfqv1.dsl.iskon.hr) has joined #rust
2015-05-22 15:42:57	@steveklabnik	since we have cargo, it's really easy to bring in external code
2015-05-22 15:43:02	<--	rudolph (rudolph@moz-960.k2l.152.37.IP) has quit (Connection closed)
2015-05-22 15:43:04	@steveklabnik	and, standard libraries are where code goes to die
2015-05-22 15:43:07	@steveklabnik	generally speaking
2015-05-22 15:43:12	kimundi	kelo: Believe me, in Rust your bigger problem will be to even get 2 references at the same time without jumping through hoops :)
2015-05-22 15:43:26	-->	rudolph (rudolph@moz-7fg.0cr.201.199.IP) has joined #rust
2015-05-22 15:43:39	<--	dstrbad (dstrbad@moz-6bfqv1.dsl.iskon.hr) has quit (A TLS packet with unexpected length was received.)
2015-05-22 15:43:54	@steveklabnik	so, we've opted for 'put it in cargo' for basically everything, and seeing how the ecosystem shakes out
2015-05-22 15:43:57	-->	lyc (lyc@moz-sgi.pqd.150.123.IP) has joined #rust
2015-05-22 15:44:15	@steveklabnik	there's not a whole ton of advantage to living in the standard library
2015-05-22 15:44:21	kimundi	kelo: In the example, there is no point where the vector could be kept around, its literally just a single object without you cloning it or putting it behind a shared ownership pointer
2015-05-22 15:45:11	<--	Stents_ (Stents@moz-r8d.u6c.187.68.IP) has quit (Connection closed)
2015-05-22 15:45:11	<--	rudolph (rudolph@moz-7fg.0cr.201.199.IP) has quit (Connection closed)
2015-05-22 15:45:19	kimundi	kelo: If you call update() with the vector, the vector is gone from the function calling update()
2015-05-22 15:45:25	kimundi	it moved into it
2015-05-22 15:45:31	-->	niconii (nicole@moz-hnv1fo.frgo.qwest.net) has joined #rust
2015-05-22 15:45:32	--	Mode #rust [+o niconii] by ChanServ
2015-05-22 15:45:56	<--	gandalf (zbraniecki@moz-cp7c4m.ca.comcast.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-22 15:45:58	tincan	steveklabnik: fair point. Reminds me a bit of the npm ecosystem. What I see there though is that there are 100 implementation for the same thing, and there is no guarantee what you will get.
2015-05-22 15:46:06	kelo	@kimundi, so let me try to understand. Update consumes ownership of the vector, creates a new mutable copy of v, and then mutates it and returns it
2015-05-22 15:46:22	kelo	@kimundi since its consumed ownership, the old v dies after the function returns
2015-05-22 15:46:35	kelo	there's just alot of v's in there that makes it confusing
2015-05-22 15:46:54	kimundi	kelo: almost correct, its not really a copy of v, its just v put in a place that allows mutation of it. no new heap allocation happened, its still logically the same object
2015-05-22 15:47:02	<--	kgrandon (Adium@moz-7seap8.2rkg.9kg1.0101.2620.IP) has quit (Quit: Leaving.)
2015-05-22 15:47:11	@steveklabnik	tincan: yeah. we'll see :) if such things become problems, we can always move more in later
2015-05-22 15:47:11	-->	misheska (misheska@moz-7vrf1v.6pqu.c3mb.0149.2620.IP) has joined #rust
2015-05-22 15:47:18	@steveklabnik	brb
2015-05-22 15:47:49	kelo	@kimundi, so its not returning a clone, its just mutating the vector and returning it
2015-05-22 15:47:55	kimundi	kelo: yep
2015-05-22 15:47:57	-->	kgrandon (Adium@moz-rahfp9.2rkg.9kg1.0101.2620.IP) has joined #rust
2015-05-22 15:48:06	<--	Amaranth (travis@moz-1raqsl.cpe.cableone.net) has quit (Connection closed)
2015-05-22 15:49:28	--	irc: disconnected from server
2015-05-22 15:49:41	-->	ubeatlenine (david@moz-eoouop.hfc.comcastbusiness.net) has joined #rust
2015-05-22 15:49:41	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-22 15:49:41	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-22 15:49:41	--	Channel #rust: 988 nicks (17 ops, 0 halfops, 2 voices, 969 normals)
2015-05-22 15:49:43	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-22 15:49:52	kimundi	kelo: well, its basically just the compiler seeing that you did not move away the old value at the end of its scope, and inserting the cleanup logic
2015-05-22 15:50:07	--	irc: disconnected from server
2015-05-22 21:45:18	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-22 21:45:18	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-22 21:45:18	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-22 21:45:18	--	Channel #rust: 924 nicks (14 ops, 0 halfops, 2 voices, 908 normals)
2015-05-22 21:45:19	-->	brianloveswords (brianlovesw@moz-8cn.lfu.232.80.IP) has joined #rust
2015-05-22 21:45:21	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-22 21:46:19	--	irc: disconnected from server
2015-05-22 21:46:31	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-22 21:46:31	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-22 21:46:31	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-22 21:46:31	--	Channel #rust: 925 nicks (14 ops, 0 halfops, 2 voices, 909 normals)
2015-05-22 21:46:34	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-22 21:46:36	<--	joneshf-laptop (joneshf@moz-l4h.b5s.208.98.IP) has quit (Quit: Leaving)
2015-05-22 21:46:40	tikue	huon: I guess I can just assume that the user of the api already has a Box<str>
2015-05-22 21:46:44	-->	joneshf-laptop (joneshf@moz-l4h.b5s.208.98.IP) has joined #rust
2015-05-22 21:47:01	<--	casey (casey@moz-v0ns05.tpgi.com.au) has quit (Connection closed)
2015-05-22 21:47:32	--	irc: disconnected from server
2015-05-22 21:47:44	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-22 21:47:44	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-22 21:47:44	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-22 21:47:44	--	Channel #rust: 923 nicks (14 ops, 0 halfops, 2 voices, 907 normals)
2015-05-22 21:47:47	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-22 21:49:25	-->	joneshf-laptop_ (joneshf@moz-l4h.b5s.208.98.IP) has joined #rust
2015-05-22 21:49:25	<--	joneshf-laptop (joneshf@moz-l4h.b5s.208.98.IP) has quit (Connection closed)
2015-05-22 21:50:10	Azdle	Is it possible to preempt a running thread from another thread?
2015-05-22 21:51:25	Azdle	Or even just kill it altogether?
2015-05-22 21:51:49	<--	lucian_ (lucian@moz-2c3pda.cable.virginm.net) has quit (A TLS packet with unexpected length was received.)
2015-05-22 21:52:12	<--	aengusmcmillin (aengusmcmil@moz-bo8cgd.dhcp4.washington.edu) has quit (Ping timeout: 121 seconds)
2015-05-22 21:52:48	-->	Tobba (Tobba@moz-o13d22.bredband.telia.com) has joined #rust
2015-05-22 21:52:56	<--	}ls{ (uhelp@moz-ip63pv.dip0.t-ipconnect.de) has quit (Quit: User terminated by real life interrupt)
2015-05-22 21:53:45	<--	adu (adu@moz-unlrtv.ms5a.74ae.000a.2601.IP) has quit (Ping timeout: 121 seconds)
2015-05-22 21:54:57	-->	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has joined #rust
2015-05-22 21:56:21	<--	nstoddard (nstoddard@moz-ck2ddi.jcf6.2eo7.0009.2601.IP) has quit (Connection closed)
2015-05-22 21:56:43	-->	nstoddard (nstoddard@moz-ck2ddi.jcf6.2eo7.0009.2601.IP) has joined #rust
2015-05-22 21:58:49	-->	mib_fidhkt (Mibbit@moz-rvo.k98.111.114.IP) has joined #rust
2015-05-22 21:59:01	<--	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-22 22:00:34	<--	mib_fidhkt (Mibbit@moz-rvo.k98.111.114.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-22 22:00:51	-->	gandalf (zbraniecki@moz-cp7c4m.ca.comcast.net) has joined #rust
2015-05-22 22:01:44	-->	dinfuehr (dinfuehr@moz-j2jakl.highway.telekom.at) has joined #rust
2015-05-22 22:02:53	-->	blank_na1e (blank_name@moz-e01vhh.mi.frontiernet.net) has joined #rust
2015-05-22 22:03:14	<--	gandalf (zbraniecki@moz-cp7c4m.ca.comcast.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-22 22:03:43	-->	new_one (new_one@moz-hqd.ugh.243.162.IP) has joined #rust
2015-05-22 22:04:52	Dr-Emann	Any reason why f64 doesn't impl From<i32>/i64/u32/etc?
2015-05-22 22:05:25	<--	blank_name (blank_name@moz-n1vb3k.mi.frontiernet.net) has quit (Ping timeout: 121 seconds)
2015-05-22 22:05:26	Amaranth	Azdle: Nothing in the API for that I'm aware of but that's generally considered a bad idea in any language/threading model. You should have your threads checking some flag for if they should stop, set it from the main thread, and let the thread kill itself
2015-05-22 22:05:55	<--	dinfuehr (dinfuehr@moz-j2jakl.highway.telekom.at) has quit (Ping timeout: 121 seconds)
2015-05-22 22:05:56	@niconii	Dr-Emann: probably because e.g. "20u32 as f64" exists
2015-05-22 22:06:11	Dr-Emann	niconii: But you can't do that generically.
2015-05-22 22:06:15	Mutabah	Dr-Emann: probably because nobody has written that yet
2015-05-22 22:06:19	@niconii	Dr-Emann: right
2015-05-22 22:06:43	Mutabah	Also - Proably only want i32/f32 etch (becuase i64 might truncate)
2015-05-22 22:07:14	<--	Shackra (Jorge@moz-7bh.ng6.177.186.IP) has quit (Ping timeout: 121 seconds)
2015-05-22 22:07:23	-->	meteredsection (meteredsect@moz-k1pkr3.wa.comcast.net) has joined #rust
2015-05-22 22:07:28	<--	rmdashrf (rmdashrf@moz-ecr.kjm.54.128.IP) has quit (Quit: WeeChat 0.4.2)
2015-05-22 22:07:54	-->	Shackra (Jorge@moz-7bh.ng6.177.186.IP) has joined #rust
2015-05-22 22:08:28	-->	LookupError (stepan@moz-vbg.24j.51.176.IP) has joined #rust
2015-05-22 22:08:42	<--	bluss (bluss@moz-ec5o68.cust.bredbandsbolaget.se) has quit (Ping timeout: 121 seconds)
2015-05-22 22:09:55	-->	ajhager (aajhager@moz-mcdsgi.iplsin.sbcglobal.net) has joined #rust
2015-05-22 22:10:03	-->	Astrum|Lap (Astrum|Lap@moz-skcefh.co.comcast.net) has joined #rust
2015-05-22 22:10:15	<--	thelink2012 (Mibbit@moz-pbo.6ju.214.186.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-22 22:10:26	<--	mark_edward (mark@moz-dg4mrp.in.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-22 22:10:33	<--	Wild_Cat (Max@moz-fa8mvt.dsl.teksavvy.com) has quit (Ping timeout: 121 seconds)
2015-05-22 22:12:10	--	irc: disconnected from server
2015-05-22 22:12:27	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-22 22:12:27	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-22 22:12:27	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-22 22:12:27	--	Channel #rust: 921 nicks (14 ops, 0 halfops, 2 voices, 905 normals)
2015-05-22 22:12:30	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-22 22:12:31	<--	zeph (zeph@moz-jn4cjt.3nlo.p53a.ffda.2602.IP) has quit (Ping timeout: 121 seconds)
2015-05-22 22:13:20	<--	Dylan16807 (dylan@moz-62uibl.cntmoh.sbcglobal.net) has quit (Connection closed)
2015-05-22 22:14:29	--	irc: disconnected from server
2015-05-22 22:14:41	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-22 22:14:41	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-22 22:14:41	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-22 22:14:41	--	Channel #rust: 918 nicks (14 ops, 0 halfops, 2 voices, 902 normals)
2015-05-22 22:14:44	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-22 22:14:51	-->	schnozzle (Mibbit@moz-pjk7gq.PUBLIC.monkeybrains.net) has joined #rust
2015-05-22 22:16:04	-->	stubbz (Mibbit@moz-6e5cs6.res.rr.com) has joined #rust
2015-05-22 22:17:11	<--	p1start (p1start@moz-nftjhe.org) has quit (Ping timeout: 121 seconds)
2015-05-22 22:17:15	-->	bluss (bluss@moz-ec5o68.cust.bredbandsbolaget.se) has joined #rust
2015-05-22 22:17:25	stubbz	Hey, I'm looking for an iterator tutorial.. does anyone know of such a thing?
2015-05-22 22:17:25	-->	zeph (zeph@moz-jn4cjt.3nlo.p53a.ffda.2602.IP) has joined #rust
2015-05-22 22:17:55	-->	ajhager (aajhager@moz-mcdsgi.iplsin.sbcglobal.net) has joined #rust
2015-05-22 22:17:57	Havvy	https://doc.rust-lang.org/book/iterators.html
2015-05-22 22:18:09	bluss	stubbz: maybe this http://hoverbear.org/2015/05/02/a-journey-into-iterators/
2015-05-22 22:18:24	-->	Dylan16807 (dylan@moz-62uibl.cntmoh.sbcglobal.net) has joined #rust
2015-05-22 22:19:18	-->	zidane (zidane@moz-382v9o.ca.comcast.net) has joined #rust
2015-05-22 22:20:20	zidane	anyone available to help through a "borrowed value does not live long enough" problem.  I'm pretty sure I'm failing to grasp the basics of ownership :)
2015-05-22 22:21:31	bluss	hehe a few have run into that. just ask everyone I think
2015-05-22 22:23:13	tbelaire	I can help
2015-05-22 22:23:23	zidane	so let's say I have a function ngrams(line: &str, order: u8) -> Vec<Vec<&[String]>>.  The first element of the vector is a vector of unigrams, teh second a vector or bigrams, etc., up to 'order'
2015-05-22 22:23:55	zidane	I thought I could easily get the tokens using: let tokens : Vec<String> = line.split(' ').map(|t| t.to_string()).collect()
2015-05-22 22:24:29	zidane	and then the resulting ngrams using: (0..order).map(move |i| tokens.windows(i+1).collect()).collect();
2015-05-22 22:24:34	-->	Sawbones (Sawbones@moz-9qofb4.res.bhn.net) has joined #rust
2015-05-22 22:24:35	zidane	but alas, tokens doesn't live long enough...
2015-05-22 22:24:37	schnozzle	Is there anyone who can help me figure out how to get the lifetimes right for this code? http://pastebin.com/r4P746Cc
2015-05-22 22:24:42	<--	mkoskar (mkoskar@moz-vjb.r8r.42.192.IP) has quit (Ping timeout: 121 seconds)
2015-05-22 22:24:43	tbelaire	so, in you vectors result
2015-05-22 22:24:58	-->	p1start (p1start@moz-nftjhe.org) has joined #rust
2015-05-22 22:25:02	tbelaire	you have &[String]
2015-05-22 22:25:13	stubbz	That's an excellent looking tutorial, but doesn't seem to answer my question.. I'm just having trouble on passing the Iter trait into a function.
2015-05-22 22:25:52	--	irc: disconnected from server
2015-05-22 22:26:04	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-22 22:26:04	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-22 22:26:04	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-22 22:26:04	--	Channel #rust: 926 nicks (14 ops, 0 halfops, 2 voices, 910 normals)
2015-05-22 22:26:07	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-22 22:26:28	tbelaire	so, you are slicing into someone else's vector of Strings?
2015-05-22 22:26:54	tbelaire	or perhaps array of strings?
2015-05-22 22:27:00	-->	winding-lines (textual@moz-9utvl5.frokca.sbcglobal.net) has joined #rust
2015-05-22 22:27:05	zidane	well, that's really the result of calling windows
2015-05-22 22:27:11	bombless	What's the problem of this? http://is.gd/YPnHPP
2015-05-22 22:27:32	-->	pcwalton (pcwalton@moz-6kjabm.ca.comcast.net) has joined #rust
2015-05-22 22:27:33	--	Mode #rust [+ao pcwalton pcwalton] by ChanServ
2015-05-22 22:27:35	@niconii	stubbz: there is no trait called Iter, unless you're talking about the Iterator trait
2015-05-22 22:27:39	<--	pcwalton (pcwalton@moz-6kjabm.ca.comcast.net) has quit (A TLS packet with unexpected length was received.)
2015-05-22 22:27:40	zidane	given, say, "this is a test", windows(2) will give you [["this, "is"], ["is", "a"], ["a", "test"]], i.e. bigrams
2015-05-22 22:27:54	@bstrie	schnozzle: let me see
2015-05-22 22:27:57	@niconii	stubbz: there are a number of structs called Iter, but you shouldn't deal with those directly
2015-05-22 22:28:37	@niconii	stubbz: if you want to pass an iterator into a function, you probably want &mut Iterator
2015-05-22 22:28:40	tbelaire	zidane: but someone has to own that array for you to keep it around and point into it
2015-05-22 22:29:04	@niconii	stubbz: though it depends on what exactly you're trying to do
2015-05-22 22:29:11	zidane	so is there any way to pass ownership to the vector?
2015-05-22 22:29:11	andschwa	C++ has a back_inserter that let's you fill a vector with n number of arbitrarily created elements; can I do something similar in Rust, or is a for loop pushing the best I can do?
2015-05-22 22:29:20	<--	swgillespie (swgillespie@moz-rn1.vmq.232.104.IP) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-22 22:29:21	-->	swgillespie (swgillespie@moz-rn1.vmq.232.104.IP) has joined #rust
2015-05-22 22:29:23	<--	swgillespie (swgillespie@moz-rn1.vmq.232.104.IP) has quit (Connection closed)
2015-05-22 22:29:24	stubbz	niconni: in many langues I'm used to passing around an interface that many collections implement... in .net this is IEnumerable.. I'm looking for the right way to do this in rust.
2015-05-22 22:29:49	andschwa	(noting that each element has to be made individually, since they're drawn from a random range)
2015-05-22 22:30:05	@niconii	actually, come to think of it, i take back &mut Iterator
2015-05-22 22:31:09	--	irc: disconnected from server
2015-05-22 22:31:21	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-22 22:31:21	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-22 22:31:21	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-22 22:31:21	--	Channel #rust: 925 nicks (14 ops, 0 halfops, 2 voices, 909 normals)
2015-05-22 22:31:24	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-22 22:31:43	stubbz	how does the function know the type of the IntoIterator?
2015-05-22 22:32:28	andschwa	bstrie: yes, that's definitely a concern. how would I approach that with a vector of vectors?
2015-05-22 22:32:30	@niconii	stubbz: if you're just iterating over it you don't need to know
2015-05-22 22:32:43	-->	doomrobo (doomrobo@moz-tj2e6v.261j.6edk.2000.2604.IP) has joined #rust
2015-05-22 22:32:53	@niconii	stubbz: really it just depends on what you're trying to *do* with this
2015-05-22 22:32:54	tbelaire	zidane: return it too?
2015-05-22 22:33:28	tbelaire	or have a Vec instead of []
2015-05-22 22:33:36	@niconii	stubbz: can you give me an example of what it is you're trying to do with this function
2015-05-22 22:33:42	doomrobo	if I have one.rs and two.rs in the same directory, how do I use foo() in two.rs when it's defined in one.rs?
2015-05-22 22:33:43	sam113101	what's the complexity of calling len on a vector, does it have to calculate the length everytime?
2015-05-22 22:33:51	-->	lyc (lyc@moz-jft.nr8.226.207.IP) has joined #rust
2015-05-22 22:34:00	@niconii	sam113101: O(1), it just stores the length in the struct
2015-05-22 22:34:09	bombless	Hmm turns out that it is just a very bad error message.
2015-05-22 22:34:13	sam113101	niconii: thanks
2015-05-22 22:34:16	Dabo	doomrobo, are they both `mod`s of a shared lib.rs?
2015-05-22 22:34:30	Dabo	if so, you can `use one` and `one::foo()` in two.rs
2015-05-22 22:34:41	doomrobo	Dabo, no they are not, should I do that?
2015-05-22 22:34:46	zidane	Is there a easy way to transform the temporary &[String] returned by tokens.window(2) into a vector?
2015-05-22 22:35:03	Dabo	doomrobo, yeah, in general you want to have the main file be lib.rs or main.rs, then the other things be modules of that
2015-05-22 22:35:07	@niconii	ah, whoops
2015-05-22 22:35:31	@niconii	stubbz: actually it'd be like `fn function<T: IntoIterator<Item=String>>(collection: T)`
2015-05-22 22:35:41	@bstrie	andschwa: not sure what you mean, the topmost vector doesn't need to worry about the size of the inner vectors
2015-05-22 22:35:55	@niconii	stubbz: where String are the items you'd be iterating over
2015-05-22 22:36:14	talchas	zidane: it returns an iterator, and you can just collect() it into a Vec
2015-05-22 22:36:15	andschwa	bstrie: it's a vector of P vectors of N f64s; but I think I just need to pre-allocated the inner ones since the outer vector takes ownership of it
2015-05-22 22:36:16	doomrobo	Dabo, that seems to work, thanks. But how would I make it so that when I run tests, it only tests a specified module?
2015-05-22 22:37:08	Dabo	doomrobo, there isn't really a way to do that, is there a specific reason to only run tests on one module instead of many?
2015-05-22 22:37:27	Dabo	The easiest way to do that would be to make them separate crates (each with a separate Cargo.toml)
2015-05-22 22:37:40	@niconii	stubbz: you could just do Iterator<Item=String> as well if it's not a collection you want, but any iterator in general
2015-05-22 22:37:54	<--	lyc (lyc@moz-jft.nr8.226.207.IP) has quit (Ping timeout: 121 seconds)
2015-05-22 22:38:03	stubbz	niconii: basically what I want to do is pass a generic collection into a funciton and then call a function on each of the items there in, perhaps I'm trying to solve a problem that doesn't exist in rust (as a result of it's functional idioms)
2015-05-22 22:38:16	doomrobo	Dabo, I'm doing a set of exercises from a website and I only want to make sure that the exercise I'm working on is correct
2015-05-22 22:38:18	<--	genbattle (genbattle@moz-r09mao.xtra.co.nz) has quit (Ping timeout: 121 seconds)
2015-05-22 22:38:36	doomrobo	Dabo, but it's not really necessary, I can just see if anything fails. Thanks!
2015-05-22 22:38:51	tbelaire	zidane:  I think windows returns an iterator pointing into the original vec of String s
2015-05-22 22:38:57	Dabo	doomrobo, ok, yeah - either do them as completely separate projects, or it is probably just easier to run all tests
2015-05-22 22:38:59	Dabo	no problem!
2015-05-22 22:39:10	zidane	it seems to return &[String]
2015-05-22 22:39:10	@niconii	stubbz: well if you want to call a function on each item, all you have to do is use map
2015-05-22 22:39:17	andschwa	bstrie: do you see any better way to do this? http://pastebin.com/dMg5RaMY
2015-05-22 22:40:09	Dabo	doomrobo, cargo test --test <test name> might be useful if you need that feature, but I think it'd probably be harder to use than worth it
2015-05-22 22:40:14	tbelaire	zidane: so, I think its safe to keep those borrowed pointers alive as long as the Vec[String] you called window on is around
2015-05-22 22:40:19	@niconii	playbot: let vec = vec![1, 2, 3, 4, 5]; vec.into_iter().map(|x| x * x).collect::<Vec<_>>()
2015-05-22 22:40:21	--	Notice(playbot): [1, 4, 9, 16, 25]
2015-05-22 22:40:26	@niconii	stubbz: ^
2015-05-22 22:40:41	doomrobo	oh, that works too. cool
2015-05-22 22:40:46	stubbz	niconii: is there a separate function when you are trying to map a function that returns void/unit?
2015-05-22 22:41:19	tbelaire	zidane: this guy right: https://doc.rust-lang.org/collections/primitive.slice.html#method.windows
2015-05-22 22:41:29	@niconii	stubbz: well, that seems like something you could just do with a for loop, right?
2015-05-22 22:41:38	-->	spacecat (chatzilla@moz-4nf844.cable.inebraska.com) has joined #rust
2015-05-22 22:41:44	zidane	tbelaire, I guess that's the problem I'm having.  the vector itself is a temporary.  Let me see if I can write up a gist to show you
2015-05-22 22:41:59	stubbz	niconni: that's what I intend on doing inside the function (the one that takes the iter :))
2015-05-22 22:42:03	zidane	ultimately the vector is just a temporary optained by calling split() on a string passed into the function.  Not sure how to work around this
2015-05-22 22:42:40	bluss	zidane: then you should be able to return &str's borrowed from the input. But not &String
2015-05-22 22:43:13	<--	colinsurprenant (colin@moz-q9ee1n.74.electronicbox.net) has quit (Client exited)
2015-05-22 22:43:19	peferron	XMPPwocky: is that what you warned me about the other day, when trying to return an Unfold that uses a closure? http://is.gd/2MDM1r
2015-05-22 22:43:39	-->	mib_aihb37 (Mibbit@moz-4nf844.cable.inebraska.com) has joined #rust
2015-05-22 22:44:18	tbelaire	zidane: can you get split to return [&str]
2015-05-22 22:44:19	-->	SkyEye (gaveen@moz-q1m.97e.157.175.IP) has joined #rust
2015-05-22 22:44:31	zidane	yeah, I'll look into this
2015-05-22 22:44:42	<--	schnozzle (Mibbit@moz-pjk7gq.PUBLIC.monkeybrains.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-22 22:44:43	tbelaire	and keep pointing into that first buffer?
2015-05-22 22:44:50	@niconii	stubbz: alright, i'll write something up, then, though i'm not sure what it gains you
2015-05-22 22:44:52	bluss	zidane: remember you can only return borrows from the input to the function
2015-05-22 22:45:03	zidane	I guess what I was trying to do was put the string through a couple temporary stages of transformation before returning the final vector.  But it sounds like rust is making you keep the temporaries around as well
2015-05-22 22:45:07	bluss	zidane: that's why returning &str are fine (if they are parts of the input
2015-05-22 22:45:23	tbelaire	well, only if you want to borrow them
2015-05-22 22:45:49	<--	HeroesGrave (HeroesGrave@moz-9j07e1.vf.net.nz) has left #rust ("Bye")
2015-05-22 22:45:53	bluss	if you can't borrow it, pass it by value
2015-05-22 22:46:35	@niconii	stubbz: http://is.gd/SUrPPF
2015-05-22 22:46:43	<--	joshua-g (joshuag@moz-j8e4ob.res.rr.com) has quit (Ping timeout: 121 seconds)
2015-05-22 22:46:58	<--	mib_aihb37 (Mibbit@moz-4nf844.cable.inebraska.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-22 22:47:13	andschwa	bstrie: or do I need to let mut population = Vec::<Vec<f64>>::with_capacity(P)?
2015-05-22 22:47:24	<--	gaveen (gaveen@moz-90g.bjj.157.175.IP) has quit (Ping timeout: 121 seconds)
2015-05-22 22:47:27	@bstrie	andschwa: one sec
2015-05-22 22:47:41	andschwa	no worries! haha
2015-05-22 22:48:09	@niconii	stubbz: of course, anywhere you could call this function, you could just do the for loop, so unless you're doing something exceptional with it, i dunno if this is really worth it
2015-05-22 22:48:52	@niconii	stubbz: maybe if you wanted to store a pointer to foreach somewhere, i guess
2015-05-22 22:48:59	zidane	tbelaire, hopefully the following will help show my ignorance.  https://gist.github.com/anonymous/0ea639c18b29c3c43832.  Thanks for your patience :)
2015-05-22 22:49:34	-->	colinsurprenant (colin@moz-q9ee1n.74.electronicbox.net) has joined #rust
2015-05-22 22:50:32	bluss	zidane: the windows (the &[ ]'s) are borrowed from a temporary variable (tokens)
2015-05-22 22:50:49	<--	spacecat (chatzilla@moz-4nf844.cable.inebraska.com) has quit (Quit: ChatZilla 0.9.91.1 [Firefox 37.0.2/20150415140819])
2015-05-22 22:51:25	bluss	zidane: You'd have to either return an iterator beased on the input parameters, or map everything to owned data (so every window becomses a Vec<&str>
2015-05-22 22:51:46	@bstrie	andschwa: try this: http://is.gd/wbDCP4
2015-05-22 22:52:12	<--	bytewise (bytewise@moz-ut424i.adsl.alicedsl.de) has quit (Quit: Leaving)
2015-05-22 22:52:21	<--	dmac (dmac@moz-4kcd1c.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-22 22:52:27	-->	lucian (lucian@moz-2c3pda.cable.virginm.net) has joined #rust
2015-05-22 22:52:29	zidane	well the tokens kind of have to be temporary, right?  So how do I map everything to owned data?
2015-05-22 22:53:14	bluss	zidane: you copy each &[&str] to Vec<&str>
2015-05-22 22:53:26	bluss	for example .map(|window| window.to_vec())
2015-05-22 22:53:27	@bstrie	andschwa: the vec! macros there should be smart enough to preallocate just the right amount
2015-05-22 22:53:46	andschwa	bstrie: I wish I could do that! but they aren't all of the same element; they're (individually) random drawn from a range
2015-05-22 22:53:49	tbelaire	I think that it should be possible to do this zero copy
2015-05-22 22:53:53	bluss	zidane: http://is.gd/R2UGFg
2015-05-22 22:54:00	<--	colinsurprenant (colin@moz-q9ee1n.74.electronicbox.net) has quit (Client exited)
2015-05-22 22:54:03	andschwa	the "{:?}" is fantastic though :D
2015-05-22 22:54:14	stubbz	niconii: I'm looking to for the function that's called to be a specific implementation... ie: save this list of items to a table.. I just want it to use an iterator instead of a vec so I could change to whatever storage type in the code later on.
2015-05-22 22:54:16	tbelaire	sorry, I'm on a phone, so I can't code it right now
2015-05-22 22:54:21	@bstrie	andschwa: yeah, that's how you really debug print :)
2015-05-22 22:54:49	andschwa	bstrie: is there any version of the macro which will "re-call" the function for each element?
2015-05-22 22:55:01	doomrobo	I have let mut x: &[u8; 4] = [0; 4]; How do I mutate one of the elements of x? I'm getting the error "type [u8] does not implement core::ops::Index<u8>"
2015-05-22 22:55:19	zidane	bluss: thanks! I didn't even see to_vec() in the documentation for Windows
2015-05-22 22:55:31	-->	mutsune (mutsune@moz-634799.mesh.ad.jp) has joined #rust
2015-05-22 22:55:42	bluss	zidane: right, Windows is just an iterator whose element type is a slice
2015-05-22 22:55:45	Mutabah	doomrobo: 1. the type of that is &[u8]
2015-05-22 22:55:48	bluss	zidane: .to_vec is a method on slices
2015-05-22 22:55:53	Mutabah	doomrobo: 2. you're indexing by u8, not usize
2015-05-22 22:56:13	@bstrie	andschwa: oh, hm, I didn't realize it operated that way. which makes sense
2015-05-22 22:56:29	<--	lucian (lucian@moz-2c3pda.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2015-05-22 22:56:42	<--	jgallagher (john@moz-6ge.dhn.131.24.IP) has quit (Client exited)
2015-05-22 22:57:33	-->	pgonda (peter@moz-s36.0tp.134.75.IP) has joined #rust
2015-05-22 22:57:34	doomrobo	Mutabah, 1. I know but that's just what the compiler was telling me :\ . 2. Thank you that worked :) 3. Now I get "cannot assign to immutable indexed content `x[...]`"
2015-05-22 22:57:58	Mutabah	doomrobo: &mut
2015-05-22 22:58:06	<--	adjivas (adjivas@moz-t655t6.abo.wanadoo.fr) has quit (Ping timeout: 121 seconds)
2015-05-22 22:58:07	<--	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-22 22:58:14	zidane	bluss, tbelaire, thanks a lot for your help.  Clearly I just need to spend more time with this :)
2015-05-22 22:58:34	doomrobo	Mutabah, where?
2015-05-22 22:58:38	-->	aengusmcmillin (aengusmcmil@moz-ngj33q.dhcp4.washington.edu) has joined #rust
2015-05-22 22:58:44	Mutabah	doomrobo: &mut [u8; 4]
2015-05-22 22:58:57	andschwa	bstrie: it's definitely what's tripping me up. I can't seem to find any way to fill it using something akin to C++'s back-inserter, where it constructs each element individually. the trouble is that my expression isn't idempotent
2015-05-22 22:59:03	Mutabah	doomrobo: actually, why not remove the type annotation all to gether?
2015-05-22 22:59:41	<--	zz_kimundi (kimundi@moz-l6kkds.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2015-05-22 22:59:50	doomrobo	Mutabah, ah, that worked. I think this is the easiest way. It's not actually 4 elements, it's 26
2015-05-22 23:00:03	@bstrie	andschwa: can you link to this back-insertion thing that C++ does?
2015-05-22 23:00:44	<--	mutsune (mutsune@moz-634799.mesh.ad.jp) has quit (Ping timeout: 121 seconds)
2015-05-22 23:00:51	-->	kngl (Adium@moz-rmgnkh.dynamic.voo.be) has joined #rust
2015-05-22 23:01:07	<--	john (john@moz-n1mnap.ri.cox.net) has quit (Connection closed)
2015-05-22 23:01:40	-->	zz_kimundi (kimundi@moz-q41ugj.dip0.t-ipconnect.de) has joined #rust
2015-05-22 23:01:44	<--	stubbz (Mibbit@moz-6e5cs6.res.rr.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-22 23:01:49	<--	pgonda (peter@moz-s36.0tp.134.75.IP) has quit (Ping timeout: 121 seconds)
2015-05-22 23:01:54	andschwa	bstrie: ah! okay; it's just a helper to generate_n; I used it here https://github.com/andschwa/uidaho-cs472-project3/blob/7efcc7eb4f0c44cf233d8758534d70896cafec68/src/algorithm/algorithm.cpp#L60
2015-05-22 23:01:57	--	zz_kimundi is now known as kimundi
2015-05-22 23:02:29	-->	dinfuehr (dinfuehr@moz-0ipkqm.highway.telekom.at) has joined #rust
2015-05-22 23:02:45	<--	aengusmcmillin (aengusmcmil@moz-ngj33q.dhcp4.washington.edu) has quit (Ping timeout: 121 seconds)
2015-05-22 23:03:49	@bstrie	andschwa: according to http://www.cplusplus.com/reference/iterator/back_inserter/ it just looks like a way of concatenating two vectors?
2015-05-22 23:05:42	andschwa	bstrie: sorry, I mislead you; back_inserter just helps you use generate_n: http://www.cplusplus.com/reference/algorithm/generate_n/
2015-05-22 23:05:49	andschwa	misled*
2015-05-22 23:06:36	<--	dinfuehr (dinfuehr@moz-0ipkqm.highway.telekom.at) has quit (Ping timeout: 121 seconds)
2015-05-22 23:06:52	&mbrubeck	andschwa: We used to have `Vec::from_fn` if I remember right... we still have it for BitVec
2015-05-22 23:07:13	&mbrubeck	from the old docs: http://doc.rust-lang.org/0.11.0/collections/vec/struct.Vec.html#method.from_fn
2015-05-22 23:08:19	-->	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has joined #rust
2015-05-22 23:08:26	<--	Sawbones (Sawbones@moz-9qofb4.res.bhn.net) has quit (Connection closed)
2015-05-22 23:08:34	@bstrie	mbrubeck: I think from_fn was replaced with map and collect, but those don't let you preallocate
2015-05-22 23:08:40	&mbrubeck	andschwa: This would work, in nightly rust: http://static.rust-lang.org/doc/master/std/iter/fn.iterate.html
2015-05-22 23:08:40	<--	saml_ (saml@moz-rkfmct.res.rr.com) has quit (Ping timeout: 121 seconds)
2015-05-22 23:08:45	&mbrubeck	bstrie: Ah, that makes sense
2015-05-22 23:09:17	andschwa	yeah! mbrubeck I'd love to use exactly that
2015-05-22 23:09:22	@bstrie	andschwa: I'm still not certain what specific behavior of back_inserter you need
2015-05-22 23:09:29	&mbrubeck	So for andschwa's use case, it would be vec.extend((0..n).map(|_| whatever())
2015-05-22 23:09:29	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-22 23:09:30	Mutabah	bstrie: Well, the size hint allows preallocation
2015-05-22 23:09:35	&mbrubeck	.extend() is the equivalent to back_inserter
2015-05-22 23:09:46	&mbrubeck	and that should pre-allocate too
2015-05-22 23:09:53	@bstrie	Mutabah: do we have size hints on collect now?
2015-05-22 23:09:59	andschwa	bstrie: totally lead you astray with it; it's generate_n's behavior I need; preallocate n number of elements using n applications of some function
2015-05-22 23:10:16	<--	kngl (Adium@moz-rmgnkh.dynamic.voo.be) has quit (Quit: Leaving.)
2015-05-22 23:10:20	andschwa	let me look at .extend()
2015-05-22 23:10:41	@bstrie	andschwa: then yeah, you wanted the old from_fn function, which today we do with map and collect, but those don't give you the chance to ensure that vectors are preallocated with the right sizes
2015-05-22 23:10:50	@bstrie	Mutabah's cryptic remarks notwithstanding :P
2015-05-22 23:10:59	Mutabah	bstrie: The size_hint method on iterator
2015-05-22 23:11:16	&mbrubeck	andschwa: Or if you want to create a new vec rather than extend an existing one
2015-05-22 23:11:22	@bstrie	I've never even heard of size_hint before
2015-05-22 23:11:25	Mutabah	Afaik, Vec etc uses that to preallocate before filling
2015-05-22 23:11:35	&mbrubeck	andschwa: Vec::from_iter((0..n).map(|_| whatever()))
2015-05-22 23:12:05	@bstrie	mbrubeck: we want a size_hint somewhere in there, it seems
2015-05-22 23:12:08	&mbrubeck	bstrie: Vec::from_iter and Vec::extend will both pre-allocate using Iterator::size_hint
2015-05-22 23:12:09	&mbrubeck	http://static.rust-lang.org/doc/master/std/iter/trait.Iterator.html#method.size_hint
2015-05-22 23:12:40	&mbrubeck	playbot: (0..25).size_hint()
2015-05-22 23:12:41	--	Notice(playbot): (25, Some(25))
2015-05-22 23:12:56	&mbrubeck	playbot: (0..25).map(|_| 12).size_hint()
2015-05-22 23:12:57	--	Notice(playbot): (25, Some(25))
2015-05-22 23:13:07	&mbrubeck	bstrie: It's all handled automatically.
2015-05-22 23:13:13	--	SkyEye is now known as gaveen
2015-05-22 23:13:30	&mbrubeck	http://doc.rust-lang.org/src/collections/vec.rs.html#1435-1436
2015-05-22 23:13:31	andschwa	mbrubeck: I'm surprised it doesn't deduce the size hint from (0..n)
2015-05-22 23:13:35	<--	Dylan16807 (dylan@moz-62uibl.cntmoh.sbcglobal.net) has quit (Connection closed)
2015-05-22 23:13:36	andschwa	wait
2015-05-22 23:13:37	&mbrubeck	andschwa: It does.
2015-05-22 23:13:44	andschwa	just realized that
2015-05-22 23:13:46	andschwa	sweet
2015-05-22 23:15:15	-->	BossKonaSegway1 (Michael@moz-vp8rf7.res.rr.com) has joined #rust
2015-05-22 23:15:26	@bstrie	mbrubeck: I still don't know how to use those to create nested vecs
2015-05-22 23:15:45	@bstrie	where all vecs are properly preallocated
2015-05-22 23:15:59	-->	annodomini (lambda@moz-0bk.v8v.197.166.IP) has joined #rust
2015-05-22 23:16:16	&mbrubeck	well, if you have a function that creates one vec with proper preallocation
2015-05-22 23:16:19	andschwa	bstrie: mbrubeck: likewise, but I feel like we're getting somewhere
2015-05-22 23:16:22	&mbrubeck	then you just apply this again to get a vec of vecs
2015-05-22 23:16:32	 *	mbrubeck missed the start of this conversation, reading scrollback now
2015-05-22 23:17:28	<--	idegen (greg@moz-9c4nle.or.frontiernet.net) has quit (Quit: Leaving.)
2015-05-22 23:17:33	<--	demilux (demilux@moz-dud5fc.mycingular.net) has quit (A TLS packet with unexpected length was received.)
2015-05-22 23:17:44	@bstrie	mbrubeck: trying to replace the nested for loops in http://is.gd/oNEyHP
2015-05-22 23:18:43	<--	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-22 23:19:06	&mbrubeck	bstrie, andschwa: http://is.gd/1vQsam (untested)
2015-05-22 23:19:45	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-22 23:19:59	&mbrubeck	running: http://is.gd/YXZUsK
2015-05-22 23:20:23	-->	gattschardo (richard@moz-qk9ds0.dyn.telefonica.de) has joined #rust
2015-05-22 23:20:28	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-22 23:21:26	-->	warmwaffles (warmwaffles@moz-6gpnl1.res.rr.com) has joined #rust
2015-05-22 23:21:47	@bstrie	andschwa: ^ see above, both the loop and the map approaches
2015-05-22 23:22:40	@bstrie	andschwa: does that solve it to your liking?
2015-05-22 23:22:48	andschwa	grokking now
2015-05-22 23:23:08	<--	c_wraith (c_wraith@moz-2e872h.click-network.com) has quit (Ping timeout: 121 seconds)
2015-05-22 23:23:22	<--	gattscha1do (richard@moz-aur5sh.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2015-05-22 23:24:05	-->	freewizard (freewizard@moz-0hh8j9.res.rr.com) has joined #rust
2015-05-22 23:24:54	andschwa	yes! mbrubeck: bstrie: this is perfect
2015-05-22 23:25:40	<--	nham (nham@moz-755.bu3.214.98.IP) has quit (Ping timeout: 121 seconds)
2015-05-22 23:26:12	-->	eric_lagergren (barsonme@moz-lr1hrn.wa.comcast.net) has joined #rust
2015-05-22 23:27:12	-->	hroi (hroi@moz-d273ub.static.netgroup.dk) has joined #rust
2015-05-22 23:27:58	andschwa	thank you a million
2015-05-22 23:28:31	@bstrie	andschwa: ok, phew :)
2015-05-22 23:29:51	-->	fyolnish (fyolnish@moz-ehtogo.so-net.ne.jp) has joined #rust
2015-05-22 23:30:43	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-22 23:30:53	-->	Dylan16807 (dylan@moz-62uibl.cntmoh.sbcglobal.net) has joined #rust
2015-05-22 23:31:22	<--	hroi (hroi@moz-d273ub.static.netgroup.dk) has quit (Ping timeout: 121 seconds)
2015-05-22 23:31:34	-->	c_wraith (c_wraith@moz-2e872h.click-network.com) has joined #rust
2015-05-22 23:31:36	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-22 23:32:11	<--	ygrek (user@moz-8j9aeu.org.ua) has quit (Ping timeout: 121 seconds)
2015-05-22 23:33:22	<--	mark_edward (mark@moz-dg4mrp.in.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-22 23:33:29	RCIX	alright, i don't understand this syntax
2015-05-22 23:33:59	RCIX	it keeps popping up in piston code -  if let Some(Button::Keyboard(key)) = e.press_args() {...}
2015-05-22 23:34:03	RCIX	if let...?
2015-05-22 23:34:29	-->	nham (nham@moz-lglsfe.il.comcast.net) has joined #rust
2015-05-22 23:34:38	-->	hroi (hroi@moz-d273ub.static.netgroup.dk) has joined #rust
2015-05-22 23:34:39	reem	if let x = y { .. } is very similar to match y { x => { .. }, _ => () }
2015-05-22 23:34:48	-->	lyc (lyc@moz-jft.nr8.226.207.IP) has joined #rust
2015-05-22 23:34:54	-->	Sawbones (Sawbones@moz-9qofb4.res.bhn.net) has joined #rust
2015-05-22 23:34:58	<--	Astrum|Lap (Astrum|Lap@moz-skcefh.co.comcast.net) has quit (Client exited)
2015-05-22 23:35:03	<--	tikue (tim@moz-n71.k1b.0.198.IP) has quit (Connection closed)
2015-05-22 23:35:06	reem	it’s just sugar so you don’t have to write out the whole match if you expect only one pattern
2015-05-22 23:35:17	reem	or to check just one pattern
2015-05-22 23:35:25	-->	mark_edward (mark@moz-dg4mrp.in.comcast.net) has joined #rust
2015-05-22 23:36:55	@niconii	RCIX: more info is here: http://doc.rust-lang.org/book/if-let.html
2015-05-22 23:37:23	RCIX	ty niconii, reem
2015-05-22 23:37:51	Havvy	!learn if let = if let allows you to combine if and let together to reduce the overhead of certain kinds of pattern matches. See http://doc.rust-lang.org/book/if-let.html.
2015-05-22 23:37:51	+rustbot	Learned factoid 'if let'.
2015-05-22 23:38:41	<--	hroi (hroi@moz-d273ub.static.netgroup.dk) has quit (Ping timeout: 121 seconds)
2015-05-22 23:38:45	&mbrubeck	It might help to also know that regular `let` statements work by pattern matching:
2015-05-22 23:38:50	<--	lyc (lyc@moz-jft.nr8.226.207.IP) has quit (Ping timeout: 121 seconds)
2015-05-22 23:38:53	<--	cakecatz (cakecatz@moz-edrvuc.sannet.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-22 23:38:53	&mbrubeck	playbot: struct Foo(u8); let x = Foo(10); let Foo(y) = x; y
2015-05-22 23:38:54	--	Notice(playbot): 10
2015-05-22 23:39:11	Havvy	!factoid let
2015-05-22 23:39:11	+rustbot	No such factoid 'let' found.
2015-05-22 23:39:17	o11c	hm, does match-if work in if-let?
2015-05-22 23:39:23	@niconii	also, for fun i messed around with that preallocated vec of vecs thing and made this: http://is.gd/BhL5Ii
2015-05-22 23:39:27	@niconii	multiplication table :D
2015-05-22 23:40:07	Havvy	!learn let = http://doc.rust-lang.org/book/variable-bindings.html
2015-05-22 23:40:07	+rustbot	Learned factoid 'let'.
2015-05-22 23:40:18	Havvy	o11c:  What are you asking?
2015-05-22 23:40:23	&mbrubeck	o11c: "if" gaurds?  No.
2015-05-22 23:40:24	o11c	playbot: let x = 10u64;  if let y = x if y == 10 { }
2015-05-22 23:40:24	--	Notice(playbot): <anon>:9:38: 9:40 error: expected `{`, found `if`
2015-05-22 23:40:24	--	Notice(playbot): <anon>:9         let x = 10u64;  if let y = x if y == 10 { }
2015-05-22 23:40:24	--	Notice(playbot): output truncated; full output at: http://bit.ly/1IQDQbQ
2015-05-22 23:41:03	o11c	playbot: let x = 10u64; match x { y if y == 10 => () }
2015-05-22 23:41:04	--	Notice(playbot): <anon>:9:24: 9:54 error: non-exhaustive patterns: `_` not covered [E0004]
2015-05-22 23:41:04	--	Notice(playbot): <anon>:9         let x = 10u64; match x { y if y == 10 => () }
2015-05-22 23:41:04	--	Notice(playbot): output truncated; full output at: http://bit.ly/1HnYOca
2015-05-22 23:41:21	<--	Jesin (Jesin@moz-48mne2.nsvltn.sbcglobal.net) has quit (A TLS packet with unexpected length was received.)
2015-05-22 23:41:22	&mbrubeck	o11c: `if let y = x && y == 10` doesn't work either, though I kind of wish it did.
2015-05-22 23:41:31	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-22 23:41:36	&mbrubeck	I think && look better than `if ... if` :)
2015-05-22 23:41:43	-->	Jesin (Jesin@moz-48mne2.nsvltn.sbcglobal.net) has joined #rust
2015-05-22 23:41:50	o11c	yeah
2015-05-22 23:41:52	&mbrubeck	For now we can use nested `if` expressions
2015-05-22 23:42:13	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-22 23:42:16	Havvy	mbrubeck:  If that was possible, then I'd expect `if y == 10 && let baz = bar {}` to work too.
2015-05-22 23:42:16	o11c	that makes else impossible though
2015-05-22 23:42:53	o11c	if a { if b { } }   has no place to put a single else block
2015-05-22 23:43:01	-->	winding-lines (textual@moz-9utvl5.frokca.sbcglobal.net) has joined #rust
2015-05-22 23:43:02	&mbrubeck	true
2015-05-22 23:43:02	Havvy	mbrubeck:  You could open an RFC for it.
2015-05-22 23:43:11	RCIX	okay i think i get it now
2015-05-22 23:43:19	&mbrubeck	I think it's reasonably to keep `if let` as a shorthand for a simple case.
2015-05-22 23:43:27	-->	demilux (demilux@moz-73qa6c.wa.comcast.net) has joined #rust
2015-05-22 23:43:30	&mbrubeck	You can always expand to a full-blown `match` for fancy stuff.
2015-05-22 23:43:52	Mutabah	Yeah
2015-05-22 23:43:54	RCIX	though on first brush i would have expected it to be something like... "if let x = Some(option)" though that has its own problems
2015-05-22 23:43:56	andschwa	hm
2015-05-22 23:44:01	andschwa	apparently I can't compare f64's
2015-05-22 23:44:05	andschwa	the trait `core::cmp::Ord` is not implemented for the type `f64`
2015-05-22 23:44:14	Mutabah	andschwa: There is no strict ordering for f64
2015-05-22 23:44:21	Mutabah	ashish: But there is partial ordering
2015-05-22 23:44:24	Mutabah	andschwa: &
2015-05-22 23:44:33	Mutabah	andschwa: (This is because NaN != NaN)
2015-05-22 23:44:52	andschwa	fair enough; but what can I do about using min_by with f64's?
2015-05-22 23:45:16	Havvy	Unfun things: Building Rust on a single core.
2015-05-22 23:45:18	doomrobo	I've got a lib.rs that declares modules one, two, and three. When I cargo test --test tst1 or tst2, it works fine. But when I test tst3 (the test function in three.rs), I get a ton of dead code warnings even though everything is used in my test function. Why is this?
2015-05-22 23:45:25	-->	mcoffee (mcoffee@moz-erlnm0.bchsia.telus.net) has joined #rust
2015-05-22 23:45:47	<--	cursivecode (textual@moz-4u56i9.res.bhn.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-22 23:46:05	@nrc	what is the least worst way to have a global variable which must be initialised and then is constant? static mut FOO: Option<Foo>? a RefCell?
2015-05-22 23:46:06	andschwa	Mutabah: can I make a strict ordering from a partial ordering? choose left of NaN vs Nan and choose f64 of f64 vs NaN
2015-05-22 23:46:20	&mbrubeck	andschwa: If you know you have no NaN, ou could write a comparator that calls partial_cmp().unwrap()
2015-05-22 23:46:25	&mbrubeck	s/ou/you/
2015-05-22 23:46:35	<--	meh (meh@moz-5b2553.42-151.net24.it) has quit (Ping timeout: 121 seconds)
2015-05-22 23:46:36	&mbrubeck	nrc: https://github.com/Kimundi/lazy-static.rs
2015-05-22 23:46:39	Mutabah	We kinda need a defacto wrapper for that...
2015-05-22 23:47:36	&mbrubeck	oh dangit, min_by needs to produce an Ord, not a Ordering
2015-05-22 23:47:46	&mbrubeck	https://github.com/rust-lang/rust/issues/15311
2015-05-22 23:47:54	andschwa	mbrubeck: could I use such a comparator with min_by?
2015-05-22 23:47:56	andschwa	mbrubeck: yeah
2015-05-22 23:48:02	andschwa	was *just* looking at that
2015-05-22 23:48:03	@niconii	playbot: vec![16.0f64, 72.5, -10.0, 6.0].into_iter().fold(std::f64::INFINITY, |min, n| if n < min { n } else { min })
2015-05-22 23:48:04	--	Notice(playbot): -10
2015-05-22 23:48:23	<--	winding-lines (textual@moz-9utvl5.frokca.sbcglobal.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-22 23:48:26	@huon	the floating point types have .min and .max methods that behave correctly with `NaN`
2015-05-22 23:48:41	@huon	(well, correctly == consistently)
2015-05-22 23:48:49	andschwa	huon: which is all I need
2015-05-22 23:48:55	@nrc	mbrubeck: I don't really want the lazy aspect of that
2015-05-22 23:49:12	<--	capcar (mathieu@moz-mi55kn.mc.videotron.ca) has quit (Ping timeout: 121 seconds)
2015-05-22 23:49:22	&mbrubeck	ah
2015-05-22 23:49:24	@nrc	I guess that just boils down to a mut Option
2015-05-22 23:49:44	Mutabah	nrc: Possibly write your own wrapper?
2015-05-22 23:49:50	@nrc	actually a RefCell spares me putting unsafe all over the place
2015-05-22 23:50:05	Mutabah	nrc: Needs to be Sync
2015-05-22 23:50:26	@nrc	bah
2015-05-22 23:50:32	&mbrubeck	nrc: We use a mut Option in Servo, but it's for a raw pointer that needs unsafe regardless.
2015-05-22 23:50:38	Mutabah	nrc: Make soemthing like this? https://github.com/thepowersgang/rust_os/blob/master/Kernel/Core/lib/lazy_static.rs
2015-05-22 23:50:54	@nrc	I guess its a good think we make global state annoying
2015-05-22 23:51:39	@nrc	mmm, macro my way to victory!
2015-05-22 23:52:11	Mutabah	(aah, 50 lines of glorious hack)
2015-05-22 23:52:16	<--	zidane (zidane@moz-382v9o.ca.comcast.net) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-05-22 23:52:46	@nrc	lol, I have every way to capitalise a singe identifier in this variable: `static mut CONFIG: Option<config::Config>`
2015-05-22 23:52:49	@nrc	:-p
2015-05-22 23:53:18	@niconii	lazy static actually has its own crate: https://github.com/Kimundi/lazy-static.rs
2015-05-22 23:53:35	@niconii	oh, it hasn't been updated in a while, though
2015-05-22 23:53:38	Havvy	!crate lazy-static
2015-05-22 23:53:38	+rustbot	lazy_static (0.1.10) - A macro for declaring lazily evaluated statics in Rust. -> https://crates.io/crates/lazy_static
2015-05-22 23:53:49	Mutabah	nrc: Seriously, take a look at the impl I posted. That looks to be very close to what you want
2015-05-22 23:54:15	-->	summerlight (summerlight@moz-99k.2mj.130.121.IP) has joined #rust
2015-05-22 23:54:24	TheMystic	nrc: nonsense, you're missing 2**6 - 3  capitalizations :P
2015-05-22 23:54:51	@nrc	Mutabah: the Kernel one, right?
2015-05-22 23:54:53	-->	winding-lines (textual@moz-9utvl5.frokca.sbcglobal.net) has joined #rust
2015-05-22 23:55:04	Mutabah	nrc: Yeah
2015-05-22 23:55:32	@nrc	8 space tabs in Rust?!
2015-05-22 23:55:50	<--	Sawbones (Sawbones@moz-9qofb4.res.bhn.net) has quit (Connection closed)
2015-05-22 23:55:55	Mutabah	nrc: I use tabs, get over it
2015-05-22 23:55:57	andschwa	mbrubeck: so given #675 and #15311, is there any clean way to get the min of a Vec of f64's? besides sorting it
2015-05-22 23:56:33	-->	cursivecode (textual@moz-4u56i9.res.bhn.net) has joined #rust
2015-05-22 23:56:35	@nrc	Mutabah: literally /t tabs, now there is something you don't often see
2015-05-22 23:56:38	Mutabah	Random - Would implementing {:p} for &[T] be a good idea?
2015-05-22 23:56:39	andschwa	(mostly because I actually need min_by that vector of vectors, using a fitness function on the inner vecs to get a float)
2015-05-22 23:56:45	@nrc	(except in make files)
2015-05-22 23:57:12	-->	tikue (tim@moz-48m52q.ca.comcast.net) has joined #rust
2015-05-22 23:57:19	 *	nrc wonders if he should support that in rustfmt
2015-05-22 23:57:36	TheMystic	nrc: NO
2015-05-22 23:57:48	geofft	pi-space tabs, it's the only way 
2015-05-22 23:57:54	geofft	(to make sure that you don't mix tabs and spaces) 
2015-05-22 23:58:09	TheMystic	geofft: hah, and which editors support that?
2015-05-22 23:58:24	&mbrubeck	Mutabah: generic wrapper for turning PartialOrd types into Ord (panics on None): http://is.gd/TicmO6
2015-05-22 23:58:31	Mutabah	TheMystic: 'set listchars=tab:<pi>'
2015-05-22 23:59:12	Mutabah	mbrubeck: Yeah (Knew it could be written, just though it should be somewhere easy to get)
2015-05-22 23:59:31	<--	Tobba (Tobba@moz-o13d22.bredband.telia.com) has quit (Ping timeout: 121 seconds)
2015-05-22 23:59:32	-->	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has joined #rust
2015-05-23 00:00:06	-->	Porkepix (Porkepix@moz-e1bv2v.rev.sfr.net) has joined #rust
2015-05-23 00:00:55	-->	cakecatz (cakecatz@moz-edrvuc.sannet.ne.jp) has joined #rust
2015-05-23 00:01:42	<--	jimblandy (user@moz-6gkikn.or.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-23 00:01:48	<--	maraoz (maraoz@moz-1d0.g5p.29.181.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 00:02:46	andschwa	sweet, I could use this
2015-05-23 00:03:00	andschwa	however, later on I may encounter NaNs as things get mutated
2015-05-23 00:03:13	-->	dinfuehr (dinfuehr@moz-0ipkqm.highway.telekom.at) has joined #rust
2015-05-23 00:03:14	&mbrubeck	andschwa: Yeah, you'll either want to filter out NaN before calling min_by
2015-05-23 00:03:25	&mbrubeck	or change the wrapper to do something intelligent with them
2015-05-23 00:03:44	-->	gandalf (zbraniecki@moz-cp7c4m.ca.comcast.net) has joined #rust
2015-05-23 00:04:44	andschwa	I'm thinking I should probably avoid using unstable features :) I suppose I could use min on a collect of a map of my fitness function; shoot but then it'd be tricky to get back to the original input to the fitness fn
2015-05-23 00:04:55	<--	markstory (textual@moz-u10.i4o.233.99.IP) has quit (Quit: Textual IRC Client: www.textualapp.com)
2015-05-23 00:05:02	andschwa	all right gotta turn off this warning
2015-05-23 00:05:41	<--	nedp (nedp@moz-vg6vvt.bigpond.net.au) has quit (Connection closed)
2015-05-23 00:06:38	&mbrubeck	andschwa: You could always just find the minimum using a `for` loop, or Iterator::fold if you are allergic to loops like I am. :)
2015-05-23 00:06:38	<--	new_one (new_one@moz-hqd.ugh.243.162.IP) has quit (Connection closed)
2015-05-23 00:06:53	andschwa	that I am!
2015-05-23 00:07:21	<--	dinfuehr (dinfuehr@moz-0ipkqm.highway.telekom.at) has quit (Ping timeout: 121 seconds)
2015-05-23 00:08:40	<--	cakecatz (cakecatz@moz-edrvuc.sannet.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-23 00:09:10	<--	cursivecode (textual@moz-4u56i9.res.bhn.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-23 00:09:45	andschwa	okay, I'm not sure how to turn off "error: use of unstable library feature 'core'"
2015-05-23 00:10:02	&mbrubeck	andschwa: You need to run the Rust nightly channel to use unstable features.
2015-05-23 00:10:12	andschwa	ahh can do!
2015-05-23 00:10:23	<--	basicdays (basicdays@moz-vreeoj.cable.rcn.com) has quit (Quit: I'm out)
2015-05-23 00:10:26	-->	basicdays (basicdays@moz-vreeoj.cable.rcn.com) has joined #rust
2015-05-23 00:10:31	-->	KLP (KLP@moz-ub3elr.res.rr.com) has joined #rust
2015-05-23 00:10:40	 *	mbrubeck finds loops less scary in Rust than in other C-family languages, thanks to less rampant mutability and aliasing
2015-05-23 00:10:51	-->	jpg (jpg@moz-ldeh9l.internode.on.net) has joined #rust
2015-05-23 00:11:19	<--	mcoffin (mcoffin@moz-hrs.16d.54.128.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 00:11:36	-->	genbattle (genbattle@moz-r09mao.xtra.co.nz) has joined #rust
2015-05-23 00:12:37	andschwa	this means that I probably shouldn't use min_by; but it's what I'm looking for. maybe I should use a fold though
2015-05-23 00:12:50	-->	zidane (zidane@moz-382v9o.ca.comcast.net) has joined #rust
2015-05-23 00:13:16	-->	new_one (new_one@moz-ps5j1c.fs1g.619c.a880.2604.IP) has joined #rust
2015-05-23 00:15:14	-->	unwound (bkoropoff@moz-kthi5c.wa.comcast.net) has joined #rust
2015-05-23 00:15:24	-->	mcoffin (mcoffin@moz-hrs.16d.54.128.IP) has joined #rust
2015-05-23 00:15:27	-->	Astrum|Lap (Astrum|Lap@moz-skcefh.co.comcast.net) has joined #rust
2015-05-23 00:15:28	--	unwound is now known as bkoropoff
2015-05-23 00:16:42	<--	annodomini (lambda@moz-0bk.v8v.197.166.IP) has quit (Client exited)
2015-05-23 00:16:46	-->	giucam (giucam@moz-iv0nnc.bb.dnainternet.fi) has joined #rust
2015-05-23 00:16:58	-->	dmac (dmac@moz-2ig65r.ca.comcast.net) has joined #rust
2015-05-23 00:17:12	-->	mutsune (mutsune@moz-634799.mesh.ad.jp) has joined #rust
2015-05-23 00:17:34	<--	posborne (posborne@moz-9hioom.mn.comcast.net) has quit (Quit: Leaving)
2015-05-23 00:17:35	-->	gsingh93 (gulshan@moz-ln1ktu.st3l.iv8o.0004.2601.IP) has joined #rust
2015-05-23 00:19:42	doomrobo	how do I make a &[&str] out of a Vec<String>?
2015-05-23 00:19:46	-->	ptstomp (paul@moz-rn5jn1.exetel.com.au) has joined #rust
2015-05-23 00:20:07	<--	ptstomp (paul@moz-rn5jn1.exetel.com.au) has quit (Quit: Leaving)
2015-05-23 00:20:13	-->	ptstomp (paul@moz-rn5jn1.exetel.com.au) has joined #rust
2015-05-23 00:21:37	@niconii	doomrobo: you can't convert it directly; you'll have to get a &str from each String and make another vec from them, then take a slice of it
2015-05-23 00:21:45	doomrobo	ok
2015-05-23 00:22:16	<--	mutsune (mutsune@moz-634799.mesh.ad.jp) has quit (Ping timeout: 121 seconds)
2015-05-23 00:22:27	<--	zidane (zidane@moz-382v9o.ca.comcast.net) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-05-23 00:23:04	<--	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-23 00:23:48	<--	giucam (giucam@moz-iv0nnc.bb.dnainternet.fi) has quit (Ping timeout: 121 seconds)
2015-05-23 00:24:01	<--	peferron (peferron@moz-k89vq8.ca.comcast.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-23 00:24:17	<--	bkoropoff (bkoropoff@moz-kthi5c.wa.comcast.net) has quit (Quit: Ex-Chat)
2015-05-23 00:24:34	<--	orangeshark (erik@moz-9i3pen.44tj.56ot.0306.2602.IP) has quit (Quit: Leaving)
2015-05-23 00:25:12	<--	ptstomp (paul@moz-rn5jn1.exetel.com.au) has quit (Ping timeout: 121 seconds)
2015-05-23 00:25:23	-->	bkoropoff (bkoropoff@moz-kthi5c.wa.comcast.net) has joined #rust
2015-05-23 00:25:25	-->	ptstomp (paul@moz-rn5jn1.exetel.com.au) has joined #rust
2015-05-23 00:26:26	-->	paulthom12345 (paul@moz-rn5jn1.exetel.com.au) has joined #rust
2015-05-23 00:26:29	<--	paulthom12345 (paul@moz-rn5jn1.exetel.com.au) has quit (Connection closed)
2015-05-23 00:26:51	<--	ptstomp (paul@moz-rn5jn1.exetel.com.au) has quit (Connection closed)
2015-05-23 00:27:07	-->	ptstomp (paul@moz-rn5jn1.exetel.com.au) has joined #rust
2015-05-23 00:28:24	<--	ptstomp (paul@moz-rn5jn1.exetel.com.au) has quit (Quit: Leaving)
2015-05-23 00:29:00	<--	acgtyrant (acgtyrant@moz-3kd.b79.160.124.IP) has quit (Quit: 堕入 /dev/null)
2015-05-23 00:29:34	<--	warmwaffles (warmwaffles@moz-6gpnl1.res.rr.com) has quit (Quit: Leaving.)
2015-05-23 00:29:58	-->	ptstomp (paul@moz-rn5jn1.exetel.com.au) has joined #rust
2015-05-23 00:30:18	<--	aldeka (quassel@moz-qqf.of6.243.162.IP) has quit (Connection closed)
2015-05-23 00:30:19	-->	aldeka (quassel@moz-qqf.of6.243.162.IP) has joined #rust
2015-05-23 00:30:23	@niconii	doomrobo: so this works, for instance: http://is.gd/tjEorx
2015-05-23 00:31:11	-->	lurk_ (chatzilla@moz-qm19cj.in.comcast.net) has joined #rust
2015-05-23 00:31:14	@niconii	whoops, i forgot the vec! on vec, haha
2015-05-23 00:31:14	<--	ptstomp (paul@moz-rn5jn1.exetel.com.au) has quit (Quit: Leaving)
2015-05-23 00:31:19	-->	ptstomp (paul@moz-rn5jn1.exetel.com.au) has joined #rust
2015-05-23 00:31:20	@niconii	still works though
2015-05-23 00:32:44	polyfractal	<3 Rust.  Working on a toy project which is slurping down gzipped JSON from a zeromq pubsub, enriching it with data stored in a CSV, reserializing as a transformed JSON and sending to a datastore with Hyper.
2015-05-23 00:33:08	<--	Azdle (Azdle@moz-fv6arh.mn.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-23 00:33:59	@niconii	(also, because of deref coercion you could just use &vec_str in most cases)
2015-05-23 00:34:08	-->	davebettin (davebettin@moz-ip635p.or.comcast.net) has joined #rust
2015-05-23 00:34:13	doomrobo	niconii, awesome, thanks. I was gonna say you can use vec.as_slice() instead of &vec[..] but I forgot that that's unstable
2015-05-23 00:35:04	@niconii	doomrobo: yeah, as_slice() is actually what i initially tried
2015-05-23 00:35:13	@nrc	How do I use RustcDecodable now?
2015-05-23 00:35:24	Mutabah	Is there a short way to copy from one slice to another/
2015-05-23 11:21:55	--	irc: disconnected from server
2015-05-23 11:24:26	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-23 11:24:26	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-23 11:24:26	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-23 11:24:27	--	Channel #rust: 945 nicks (12 ops, 0 halfops, 2 voices, 931 normals)
2015-05-23 11:24:28	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-23 11:25:26	--	irc: disconnected from server
2015-05-23 11:25:42	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-23 11:25:42	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-23 11:25:42	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-23 11:25:42	--	Channel #rust: 945 nicks (12 ops, 0 halfops, 2 voices, 931 normals)
2015-05-23 11:25:44	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-23 11:26:16	-->	iu (iu@moz-6263qv.cc.cmu.edu) has joined #rust
2015-05-23 11:26:32	cworth	I'm stil having newbie confusion about string literals. For example I'm getting "borrowed value does not live long enough" with:
2015-05-23 11:26:42	cworth	let x; { x = &"foo"; }
2015-05-23 11:26:43	iu	Hi there! How do you combine AsMut and AsRef to get, for instance, &mut [f64]?
2015-05-23 11:26:47	<--	winding-lines (textual@moz-9utvl5.frokca.sbcglobal.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-23 11:27:18	Mutabah	cworth: string literals are borrows already
2015-05-23 11:27:28	cworth	But isn't "foo" of type "&'static str" so shouldn't it hava static lifetime, and shouldn't I be able to borrow its value for longer?
2015-05-23 11:28:13	-->	rouma (zack@moz-p8e0re.res.rr.com) has joined #rust
2015-05-23 11:28:16	FreeFull	cworth: Any reason for the extra & there?
2015-05-23 11:28:23	Mutabah	cworth: "string" is already &'static str
2015-05-23 11:28:25	iu	Or, AsMut == AsMutRef?
2015-05-23 11:28:29	<--	Stebalien (Stebalien@moz-i00.hrk.38.73.IP) has quit (Quit: leaving)
2015-05-23 11:28:31	cworth	Yes. This was distilled down from:
2015-05-23 11:28:43	bluss	iu: it is
2015-05-23 11:28:56	iu	bluss: Thanks. The name is a bit confusing.
2015-05-23 11:28:59	cworth	let alias = match.map.get("foo") { Some(val) => val, None => &"foo" };
2015-05-23 11:29:42	--	irc: disconnected from server
2015-05-23 11:29:53	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-23 11:29:53	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-23 11:29:53	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-23 11:29:53	--	Channel #rust: 945 nicks (12 ops, 0 halfops, 2 voices, 931 normals)
2015-05-23 11:29:55	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-23 11:30:20	iu	bluss: I’ll keep it in mind. Thanks!
2015-05-23 11:30:22	bluss	cworth: val is &&str there. I'd deref it
2015-05-23 11:30:24	fede	does Rust (as language or throught the standard library) support lazy evaluation? If not, are there any plans for a future release?
2015-05-23 11:30:39	bluss	cworth: .get() -> Option<&V> with V = &str
2015-05-23 11:31:00	<--	nano (nano@moz-00j6et.dynamic.kabel-deutschland.de) has quit (Connection closed)
2015-05-23 11:31:09	bluss	fede: iterators are lazy. There is no lazy evaluation / thunks feature in rust the language though
2015-05-23 11:31:22	nodakai	cworth: what do you think the type of the map variable should be?
2015-05-23 11:31:45	-->	shellac (textual@moz-9b49cr.cable.virginm.net) has joined #rust
2015-05-23 11:32:53	--	irc: disconnected from server
2015-05-23 11:33:04	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-23 11:33:04	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-23 11:33:04	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-23 11:33:04	--	Channel #rust: 947 nicks (12 ops, 0 halfops, 2 voices, 933 normals)
2015-05-23 11:33:06	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-23 11:33:23	cworth	bluss: Hmmm... *val does work now. (I know I tried a * earlier and got an error---I wonder what I had different).
2015-05-23 11:33:50	iu	What is the reason that AsMut<[T]> is not implemented for Vec<T>?
2015-05-23 11:33:55	<--	lucian (lucian@moz-2c3pda.cable.virginm.net) has quit (A TLS packet with unexpected length was received.)
2015-05-23 11:34:02	kimundi	cworth: try let alias = match.map.get("foo") { Some(val) => *val, None => "foo" };
2015-05-23 11:34:13	cworth	The other thing I had done that did work was: let foo = "foo"; let alias = match.map.get(foo) { Some(val) => val, None => &foo) };"
2015-05-23 11:34:27	cworth	kimundi: Yes, that is working for me, thanks.
2015-05-23 11:34:31	-->	trigen (MSX@moz-sgda69.static.versatel.nl) has joined #rust
2015-05-23 11:34:34	-->	lucian (lucian@moz-2c3pda.cable.virginm.net) has joined #rust
2015-05-23 11:34:49	<--	lucian (lucian@moz-2c3pda.cable.virginm.net) has quit (A TLS packet with unexpected length was received.)
2015-05-23 11:35:02	kimundi	cworth: Both the let foo and the &"foo" variant are creating a reference to a variabel on the stack that contains a &str
2015-05-23 11:35:15	-->	lucian (lucian@moz-2c3pda.cable.virginm.net) has joined #rust
2015-05-23 11:35:17	iu	… while AsRef<[T]> is implemented for Vec<T>.
2015-05-23 11:35:18	sp3d	Pavel: you can push onto the former
2015-05-23 11:35:24	cworth	nodakai: Part of my type confusion is that either of &str or &&str works fine in println!("{}", foo);, (which is all I've been doing with things so far), so the distinction was hiding from me.
2015-05-23 11:35:31	Pavel	sp3d, thx
2015-05-23 11:35:42	bluss	iu: don't know, looks like AsMut is not really much implemented
2015-05-23 11:35:46	kimundi	cworth: The &"foo" odesn't work because that variable goes out of scope directly, the let foo, &foo variant works because the foo is alive for the time of the potential borrow from the hashmap
2015-05-23 11:36:00	<--	Boscop (me@moz-7fq.k98.111.114.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 11:36:14	sp3d	Pavel: plus it has an additional indirection to the actual data in the vector
2015-05-23 11:36:19	kimundi	cworth: Yeah, the printing traits are generically implemented for all &T to just delegate to the T
2015-05-23 11:36:33	-->	jminer (Instantbird@moz-b1u.qch.163.66.IP) has joined #rust
2015-05-23 11:36:42	<--	ptalbot (ptalbot@moz-j4gnuh.fbx.proxad.net) has quit (Ping timeout: 121 seconds)
2015-05-23 11:36:45	cworth	kimundi: Ah, OK.
2015-05-23 11:36:58	nodakai	kimundi: cworth: wasn't it automatic deref thing
2015-05-23 11:37:31	cworth	kimundi: In my first-posted example, "let x; { x = &"foo"; }", I was having trouble mentally "seeing" the variable on the stack.
2015-05-23 11:37:48	kimundi	nodakai: The automatik deref does not actually happen for generics like in the prinltn case
2015-05-23 11:38:29	kimundi	cworth: If you reference a rvalue (== expression that constructs a new value), then thats equivalen to initalizing a temporary with that value and takling a reference to that
2015-05-23 11:38:49	kimundi	cworth: So "let x; { x = &"foo"; }" is "let x; { let tmp = "foo"; x = &tmp; }"
2015-05-23 11:38:59	cworth	(And I think I still amm... that is, I'm not sure that the next time I run into something similar I won't be surprised again.)
2015-05-23 11:39:02	<--	trigen (MSX@moz-sgda69.static.versatel.nl) has quit (Ping timeout: 121 seconds)
2015-05-23 11:39:16	<--	lucian (lucian@moz-2c3pda.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2015-05-23 11:39:21	cworth	kimundi: Yes, the error in the expanded case with tmp is totally clear to me.
2015-05-23 11:39:57	kimundi	okay
2015-05-23 11:40:05	cworth	kimundi: Thanks for the explanation.
2015-05-23 11:40:08	kimundi	np :)
2015-05-23 11:40:30	<--	flavius (flavius@moz-pik2l3.tmpp.le52.8388.2a02.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 11:40:45	nodakai	Again... does anybody try building rustc for i686 Linux on x86_64 Linux?
2015-05-23 11:41:39	nodakai	I'd like to file a bug on Github unless I missed something elementary
2015-05-23 11:41:56	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-23 11:42:01	cworth	kimundi: I'm wondering if there's a place in the documentation where the behavior is (or should be) described.
2015-05-23 11:42:57	kimundi	cworth: Theoretical it should be defined in the reference, but not sure if its actuall documented properly
2015-05-23 11:43:30	estabroo	after doing a thread spawn do you have to join it to release it's resources once the thread exits?
2015-05-23 11:43:45	-->	lyc (lyc@moz-jft.nr8.226.207.IP) has joined #rust
2015-05-23 11:44:00	<--	ahunt (ahunt@moz-tlk.g7o.93.93.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 11:44:41	-->	vance (Mibbit@moz-ugdd1j.cust.bredbandsbolaget.se) has joined #rust
2015-05-23 11:44:57	-->	Rym (y@moz-c2u.sd4.38.217.IP) has joined #rust
2015-05-23 11:45:11	cworth	kimundi: OK. Well, as I continue reading and re-reading things I'll keep my eyes open for a spot where an example would have helpe clarify thigns to me.
2015-05-23 11:45:36	 *	cworth is not sure why he suddently can't proprely spell anymore
2015-05-23 11:46:12	cworth	Thanks again, all. I'm sure I'll be back soon enough with my next confusion! :-)
2015-05-23 11:46:22	-->	jpg (jpg@moz-8qqr98.internode.on.net) has joined #rust
2015-05-23 11:46:40	<--	brainproxy (michael@moz-9vjtig.mo.charter.com) has quit (Ping timeout: 121 seconds)
2015-05-23 11:46:46	-->	ignat (chatzilla@moz-veqt2u.ifmo.ru) has joined #rust
2015-05-23 11:46:47	-->	gsingh93 (gulshan@moz-ln1ktu.st3l.iv8o.0004.2601.IP) has joined #rust
2015-05-23 11:47:31	-->	ahunt (ahunt@moz-vq4hs5.collabora.co.uk) has joined #rust
2015-05-23 11:47:47	<--	lyc (lyc@moz-jft.nr8.226.207.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 11:48:37	nodakai	estabroo: JoinHandle, when dropped, makes the underlying thread to be detached
2015-05-23 11:49:30	<--	Rym (y@moz-c2u.sd4.38.217.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 11:49:58	-->	johnsoft (johnsoft@moz-69mrig.res.rr.com) has joined #rust
2015-05-23 11:50:01	nodakai	And at least on a POSIX system, the resources of a detached thread should automatically be freed when it terminates
2015-05-23 11:50:02	estabroo	is that drop implied if you don't assign it to anything, as in,   a bare   thread::spawn(...);  or a let _ = thread::spawn(...);
2015-05-23 11:50:13	-->	Boscop (me@moz-kb6.b2o.126.98.IP) has joined #rust
2015-05-23 11:50:17	-->	dmac_ (dmac@moz-2ig65r.ca.comcast.net) has joined #rust
2015-05-23 11:50:47	-->	aepsil0n (eduard@moz-6491ha.mv2h.pepi.8071.2a02.IP) has joined #rust
2015-05-23 11:51:05	nodakai	It should be implied
2015-05-23 11:51:06	-->	pgonda (peter@moz-s36.0tp.134.75.IP) has joined #rust
2015-05-23 11:51:52	estabroo	nodakai, the reason I'm asking is I seem to have a memory leak,  toy tcp server, memory goes up with every connect, but never goes down when a client disconnects
2015-05-23 11:52:13	estabroo	doing a split tx/rx thread spawn to handle the client
2015-05-23 11:52:25	kimundi	estabroo: well the allocator might not return the memory to the os
2015-05-23 11:52:54	kimundi	estabroo: but if N threads exit, and then N threads are created again, memroy usage should remain constant
2015-05-23 11:53:17	estabroo	kimundi, but it doesn't seem to reuse the memory either, I can just do connects/disconnects with just 1 client and the memory usage goes up
2015-05-23 11:53:32	kimundi	hm, weird
2015-05-23 11:53:53	nodakai	estabroo: you can run your program under strace(1)
2015-05-23 11:53:54	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Connection closed)
2015-05-23 11:54:04	kimundi	Based on pure language semantic this should not happoen, but who knows what happens beihind the library implementations
2015-05-23 11:54:21	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-23 11:54:24	<--	dmac_ (dmac@moz-2ig65r.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-23 11:54:30	Blei	try valgrind, if your program is small enough
2015-05-23 11:54:35	<--	aepsil0n (eduard@moz-6491ha.mv2h.pepi.8071.2a02.IP) has quit (Connection closed)
2015-05-23 11:54:58	<--	hohoho (hohoho@moz-u2s9gq.pools.vodafone-ip.de) has quit (Quit: Leaving)
2015-05-23 11:55:06	estabroo	nodakai, sure, anything in particular I should look for?
2015-05-23 11:55:54	estabroo	Blei, very small, I'll try it
2015-05-23 11:56:42	-->	flavius (flavius@moz-pik2l3.tmpp.le52.8388.2a02.IP) has joined #rust
2015-05-23 11:56:45	Morten	Will the compiler omit bounds checks on arrays if it can statically prove that it won't be out of bounds?
2015-05-23 11:57:01	bluss	yes
2015-05-23 11:57:02	Yurumechan	Yes.
2015-05-23 11:57:03	nodakai	estabroo: also, "ps -T x" should be able to list all the threads
2015-05-23 11:57:20	kimundi	Morten: Yes, llvm can optimize well in that regard
2015-05-23 11:57:21	Morten	bluss: Is it good at doing so, too?
2015-05-23 11:57:30	estabroo	nodakai, yeah I'm watching in in htop, so I see the threads getting created and going away
2015-05-23 11:57:32	Yurumechan	It depends.
2015-05-23 11:57:56	Yurumechan	It is not a sov
2015-05-23 11:57:57	Yurumechan	Er bul
2015-05-23 11:58:01	<--	Nextra (Nextra@moz-5i3.5v0.233.89.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 11:58:05	Yurumechan	..oops
2015-05-23 11:58:24	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Ping timeout: 121 seconds)
2015-05-23 11:58:45	Yurumechan	It is not a silver bullet though and it is less effective for complex conditions
2015-05-23 11:59:05	Yurumechan	That's why the iterator is prefered over the indexied for too.
2015-05-23 11:59:38	-->	jophish_ (jophish@moz-fjh8o1.gotadsl.co.uk) has joined #rust
2015-05-23 11:59:56	-->	danyel (danyel@moz-ojbgup.dip0.t-ipconnect.de) has joined #rust
2015-05-23 12:00:02	Yurumechan	(The iterator knows that it would never go out of bounds, the compiler may not.)
2015-05-23 12:01:37	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-23 12:01:59	<--	jophish (jophish@moz-fjh8o1.gotadsl.co.uk) has quit (Ping timeout: 121 seconds)
2015-05-23 12:02:32	bluss	Morten: Don't know. You can always check in specific cases. What I've seen switching to (unsafe function) unchecked indexing seldomly has an impact at all
2015-05-23 12:02:33	-->	woowe (Mibbit@moz-499ogh.wi.charter.com) has joined #rust
2015-05-23 12:02:59	<--	flavius (flavius@moz-pik2l3.tmpp.le52.8388.2a02.IP) has quit (Quit: WeeChat 1.2)
2015-05-23 12:03:03	woowe	Hey guys, how would one send an email in rust? I've tried the smtp crate but to no avail
2015-05-23 12:03:09	-->	flavius (flavius@moz-pik2l3.tmpp.le52.8388.2a02.IP) has joined #rust
2015-05-23 12:03:29	woowe	Just trying to send an email to my yahoo account from my gmail
2015-05-23 12:03:33	Morten	Yurumechan, bluss, kimundi: allright, thanks.
2015-05-23 12:03:39	-->	ecogiko (ecogiko@moz-p59qrv.chello.nl) has joined #rust
2015-05-23 12:03:42	Mutabah	woowe: Define no avail
2015-05-23 12:03:53	<--	James (quassel@moz-739rgr.range86-148.btcentralplus.com) has quit (Ping timeout: 121 seconds)
2015-05-23 12:04:01	Mutabah	woowe: Many providers will block port 25 (i.e. unauthenticated outgoing mail) to prevent spam
2015-05-23 12:04:01	woowe	It wouldn't send the email
2015-05-23 12:04:09	woowe	yeah it was over 465
2015-05-23 12:04:18	woowe	the SSL socket
2015-05-23 12:04:21	Mutabah	woowe: Using ssl?
2015-05-23 12:04:47	woowe	That was the thing, I am not sure if the smtp crate has SSL
2015-05-23 12:04:56	woowe	I was assuming that going in but now...
2015-05-23 12:05:05	Mutabah	woowe: it relies on crypto, so I assume so
2015-05-23 12:05:20	Mutabah	woowe: I suggest debugging why it failed (locate the source of said failure)
2015-05-23 12:05:23	Mutabah	COuld be auth errors
2015-05-23 12:05:39	woowe	Okay, thanks Mutabah :)
2015-05-23 12:06:35	-->	eerie_ (eerie@moz-s5i4j9.red.bezeqint.net) has joined #rust
2015-05-23 12:07:13	estabroo	is a variable that is pulled from a result using match scoped to the match, or does it live beyond the match
2015-05-23 12:07:27	<--	Xena (Xena@moz-17t1gv.ca.comcast.net) has quit (Quit: WeeChat 1.1.1)
2015-05-23 12:07:35	Mutabah	estabroo: It's scopedto the match arm
2015-05-23 12:07:57	<--	eerie_ (eerie@moz-s5i4j9.red.bezeqint.net) has quit (Connection closed)
2015-05-23 12:08:12	<--	Romster (Romster@moz-4g83e8.rev.eftel.com) has quit (Ping timeout: 121 seconds)
2015-05-23 12:08:30	-->	Romster (Romster@moz-4g83e8.rev.eftel.com) has joined #rust
2015-05-23 12:08:56	<--	nodakai (Mibbit@moz-hqv.sjm.156.202.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-23 12:09:47	<--	eerie (eerie@moz-s5i4j9.red.bezeqint.net) has quit (Ping timeout: 121 seconds)
2015-05-23 12:09:48	<--	psd (psd@moz-7jcg17.mtnl.net.in) has quit (Ping timeout: 121 seconds)
2015-05-23 12:10:47	-->	psd (psd@moz-7jcg17.mtnl.net.in) has joined #rust
2015-05-23 12:10:48	<--	nedp (nedp@moz-vg6vvt.bigpond.net.au) has quit (Connection closed)
2015-05-23 12:11:35	TheMystic	Why does this code cause a mutable/immutable borrow error?:
2015-05-23 12:11:36	TheMystic	    string.remove(string.len() - 1);
2015-05-23 12:11:46	TheMystic	(i.e. "cannot borrow `string` as immutable because it is also borrowed as mutable")
2015-05-23 12:11:55	-->	boberetezeke-clo (sid44669@moz-bbpmf1.brockwell.irccloud.com) has joined #rust
2015-05-23 12:12:42	-->	basicdays (basicdays@moz-vreeoj.cable.rcn.com) has joined #rust
2015-05-23 12:12:44	TheMystic	I see that len() takes an immutable reference, but it seems like that should always be evaluated _before_ the call to remove() actually happens
2015-05-23 12:12:46	Morten	Is there a shorthand for directly importing all variants of an enum in a file?
2015-05-23 12:12:50	<--	ajhager (aajhager@moz-s8mda4.sub-174-241-192.myvzw.com) has quit (Ping timeout: 121 seconds)
2015-05-23 12:13:33	VShell	TheMystic: because the borrow checker isn't actually very smart and doesn't release borrows as soon as it could. let len = string.len(); string.remove(len - 1); should work, I think.
2015-05-23 12:13:38	<--	pgonda (peter@moz-s36.0tp.134.75.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 12:14:06	TheMystic	VShell: ah. indeed, splitting it up into 2 statements works
2015-05-23 12:14:10	-->	cholcombe (chris@moz-mtfab9.or.comcast.net) has joined #rust
2015-05-23 12:14:34	<--	cholcombe (chris@moz-mtfab9.or.comcast.net) has quit (Quit: Leaving)
2015-05-23 12:14:39	<--	shellac (textual@moz-9b49cr.cable.virginm.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-23 12:15:01	-->	eerie (eerie@moz-s5i4j9.red.bezeqint.net) has joined #rust
2015-05-23 12:16:02	-->	nham (nham@moz-lglsfe.il.comcast.net) has joined #rust
2015-05-23 12:16:16	<--	SneakySnake (nya@moz-i9is4u.pool.telekom.hu) has quit (Connection closed)
2015-05-23 12:16:36	-->	KLP (KLP@moz-qdcjho.res.rr.com) has joined #rust
2015-05-23 12:17:20	-->	noj (jon@moz-tgtukn.u0m9.30u3.0470.2a02.IP) has joined #rust
2015-05-23 12:17:35	grodan	When searching for "str" in the docs the two top results have identical descriptions even though one seem to be for a module and the other for the primitive type (https://doc.rust-lang.org/std/str/?search=str). Is this a mistake you think?
2015-05-23 12:17:47	-->	Hannibal_Smith (nico@moz-7gi1c3.retail.telecomitalia.it) has joined #rust
2015-05-23 12:17:54	@steveklabnik	grodan: we actually have a patch in the works to add (primitive type) to that result
2015-05-23 12:18:14	grodan	great. n.p. then.
2015-05-23 12:18:39	<--	gaveen (gaveen@moz-q1m.97e.157.175.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 12:18:48	-->	trigen (MSX@moz-sgda69.static.versatel.nl) has joined #rust
2015-05-23 12:19:48	<--	KLP (KLP@moz-qdcjho.res.rr.com) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-05-23 12:20:19	<--	Jesin (Jesin@moz-48mne2.nsvltn.sbcglobal.net) has quit (Connection closed)
2015-05-23 12:20:35	-->	Jesin (Jesin@moz-48mne2.nsvltn.sbcglobal.net) has joined #rust
2015-05-23 12:22:21	-->	webmobster (Mibbit@moz-dr2.ra2.78.152.IP) has joined #rust
2015-05-23 12:22:56	<--	Simplebrain (Simplebrain@moz-6h4u6b.skybroadband.com) has quit (Quit: Leaving)
2015-05-23 12:23:21	<--	trigen (MSX@moz-sgda69.static.versatel.nl) has quit (Ping timeout: 121 seconds)
2015-05-23 12:23:27	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Connection closed)
2015-05-23 12:23:52	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-23 12:23:55	-->	Rym (y@moz-c2u.sd4.38.217.IP) has joined #rust
2015-05-23 12:24:36	-->	Simplebrain (Simplebrain@moz-6h4u6b.skybroadband.com) has joined #rust
2015-05-23 12:25:30	webmobster	Hi, can somone tell me the correct way of doing this? http://is.gd/fJ0C5q
2015-05-23 12:25:54	-->	ytain (ytain@moz-07c3h9.dsl.teksavvy.com) has joined #rust
2015-05-23 12:26:16	-->	nano (nano@moz-00j6et.dynamic.kabel-deutschland.de) has joined #rust
2015-05-23 12:26:17	woowe	Okay well the smtp package actually seems like it is doing something right now but it is never returning the rust of my assert
2015-05-23 12:26:18	-->	Matthias247 (Miranda@moz-49li60.hsi14.kabel-badenwuerttemberg.de) has joined #rust
2015-05-23 12:26:28	woowe	meaning i don't think it is sending the email
2015-05-23 12:27:23	<--	psd (psd@moz-7jcg17.mtnl.net.in) has quit (Ping timeout: 121 seconds)
2015-05-23 12:27:35	<--	copycat (Thunderbird@moz-mm4e60.singnet.com.sg) has quit (Client exited)
2015-05-23 12:27:41	-->	copycat (Thunderbird@moz-mm4e60.singnet.com.sg) has joined #rust
2015-05-23 12:27:56	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Ping timeout: 121 seconds)
2015-05-23 12:28:03	-->	tilde (namidasshu@moz-kfnfp2.retail.telecomitalia.it) has joined #rust
2015-05-23 12:28:30	<--	Rym (y@moz-c2u.sd4.38.217.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 12:29:00	-->	psd (psd@moz-7jcg17.mtnl.net.in) has joined #rust
2015-05-23 12:30:00	grodan	When I look at iterators in the stdlib that return tuples all functions seem to refer to Self::Item except for the next(...) function that instead is more explicit. I'm curious, is there any particular reason for this? See for example https://doc.rust-lang.org/std/collections/hash_map/struct.Iter.html#implementations
2015-05-23 12:30:08	<--	aldeka (quassel@moz-qqf.of6.243.162.IP) has quit (Connection closed)
2015-05-23 12:30:15	-->	aldeka (quassel@moz-qqf.of6.243.162.IP) has joined #rust
2015-05-23 12:30:29	-->	rustyrazorblade (rustyrazorb@moz-ehrfqf.fios.verizon.net) has joined #rust
2015-05-23 12:30:53	-->	sbditto85 (Mibbit@moz-e3joct.ut.comcast.net) has joined #rust
2015-05-23 12:31:16	sbditto85	Question: how would I build a bin and a lib with the same rustc cfg options with cargo?
2015-05-23 12:31:57	Pavel	Oh god. After a day I finally learned everything I wanted about concurrency in Rust lol ;)
2015-05-23 12:32:22	-->	nstoddard_ (nstoddard@moz-ck2ddi.jcf6.2eo7.0009.2601.IP) has joined #rust
2015-05-23 12:32:59	-->	nodweber (nodweber@moz-knt.fgq.178.5.IP) has joined #rust
2015-05-23 12:33:07	-->	jophish (jophish@moz-fjh8o1.gotadsl.co.uk) has joined #rust
2015-05-23 12:33:20	<--	fede (fede@moz-qjntqd.8bad.idsi.8109.2a02.IP) has quit (Quit: Sto andando via)
2015-05-23 12:33:32	<--	nano (nano@moz-00j6et.dynamic.kabel-deutschland.de) has quit (Connection closed)
2015-05-23 12:33:44	-->	Diggsey (diggsey@moz-97o4tk.dsl.pipex.com) has joined #rust
2015-05-23 12:34:26	<--	barosl (barosl@moz-tmp.qma.67.220.IP) has quit (Quit: Leaving)
2015-05-23 12:34:30	<--	bombless (_@moz-qji.piv.41.59.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 12:34:38	<--	jophish_ (jophish@moz-fjh8o1.gotadsl.co.uk) has quit (Ping timeout: 121 seconds)
2015-05-23 12:35:06	<--	nstoddard (nstoddard@moz-ck2ddi.jcf6.2eo7.0009.2601.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 12:35:18	--	nstoddard_ is now known as nstoddard
2015-05-23 12:36:31	-->	zhoeon (fc@moz-cuhqb2.cable.teksavvy.com) has joined #rust
2015-05-23 12:36:38	-->	eerie_ (eerie@moz-s5i4j9.red.bezeqint.net) has joined #rust
2015-05-23 12:37:21	<--	nodweber (nodweber@moz-knt.fgq.178.5.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 12:37:38	-->	barosl (barosl@moz-tmp.qma.67.220.IP) has joined #rust
2015-05-23 12:38:15	<--	sbditto85 (Mibbit@moz-e3joct.ut.comcast.net) has left #rust
2015-05-23 12:38:37	talchas	grodan: I'm guessing it's because next is actually implemented specifically for that type, while all the others are the default impls from Iterator
2015-05-23 12:40:05	<--	eerie (eerie@moz-s5i4j9.red.bezeqint.net) has quit (Ping timeout: 121 seconds)
2015-05-23 12:40:07	--	kimundi is now known as zz_kimundi
2015-05-23 12:41:03	-->	grover (grover@moz-2o4.tci.145.198.IP) has joined #rust
2015-05-23 12:41:32	-->	cursivecode (textual@moz-4u56i9.res.bhn.net) has joined #rust
2015-05-23 12:42:03	-->	Lilly (Lilly@moz-pfkvo9.bredband.comhem.se) has joined #rust
2015-05-23 12:43:19	<--	c_wraith (c_wraith@moz-7i8.v6v.191.131.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 12:44:02	grodan	talchas: so there's no practical difference and it's just a matter of picking a slightly more explicit signature?
2015-05-23 12:44:17	<--	danyel (danyel@moz-ojbgup.dip0.t-ipconnect.de) has quit (Client exited)
2015-05-23 12:44:32	-->	lyc (lyc@moz-jft.nr8.226.207.IP) has joined #rust
2015-05-23 12:47:37	talchas	grodan: yeah, I think it's an artifact of how rustdoc does things
2015-05-23 12:47:45	talchas	they have the same meaning
2015-05-23 12:47:57	<--	blank_na1e (blank_name@moz-e01vhh.mi.frontiernet.net) has quit (Ping timeout: 121 seconds)
2015-05-23 12:48:33	<--	lyc (lyc@moz-jft.nr8.226.207.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 12:49:20	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-23 12:49:30	<--	hyunsik (hyunsik@moz-3qgjl9.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-23 12:49:40	-->	gaveen (gaveen@moz-q1m.97e.157.175.IP) has joined #rust
2015-05-23 12:50:25	<--	jmbto (jmbto@moz-knhjnp.hca5.8frp.0e35.2a01.IP) has quit (Quit: WeeChat 1.1.1)
2015-05-23 12:50:49	<--	acrichto (acrichto@moz-u3dg2t.sfo1.mozilla.com) has quit (Ping timeout: 121 seconds)
2015-05-23 12:51:01	-->	dmac_ (dmac@moz-2ig65r.ca.comcast.net) has joined #rust
2015-05-23 12:51:19	Gankro	Last night I had a perverse realization that I think you could create a pretty robust intro->advanced tutorial for Rust by just implementing a Linked List 7 times
2015-05-23 12:51:37	-->	kidto_ (gabriel@moz-72d.fff.84.91.IP) has joined #rust
2015-05-23 12:51:57	Havvy	Gankro:  I would read that.
2015-05-23 12:52:20	@steveklabnik	yeah that sounds neat
2015-05-23 12:52:21	Havvy	I would even add a "!linked list" factoid.
2015-05-23 12:52:25	Gankro	Havvy: I may or may not have 2000 words in my text editor already
2015-05-23 12:52:39	Gankro	... a lot of those are compiler errors, granted
2015-05-23 12:52:44	-->	danyel (danyel@moz-ojbgup.dip0.t-ipconnect.de) has joined #rust
2015-05-23 12:52:50	-->	AlwaysFalling (FallingTime@moz-ruksei.cable.rogers.com) has joined #rust
2015-05-23 12:53:05	unfo-	Gankro, 7 times?
2015-05-23 12:53:18	<--	AlwaysFalling (FallingTime@moz-ruksei.cable.rogers.com) has quit (Connection closed)
2015-05-23 12:53:29	sp3d	first 6 times are practice, presumably
2015-05-23 12:54:04	-->	AlwaysFalling (FallingTime@moz-ruksei.cable.rogers.com) has joined #rust
2015-05-23 12:54:25	unfo-	yeah i would imagine so, but 7 seems like a high number.
2015-05-23 12:54:37	<--	willem (willem@moz-facs2s.dynamic.upc.nl) has quit (Quit: leaving)
2015-05-23 12:54:45	<--	FallingAlways (FallingTime@moz-ruksei.cable.rogers.com) has quit (Ping timeout: 121 seconds)
2015-05-23 12:55:01	Gankro	unfo-: SingleLinkedList with Boxes but a custom enum, doing raw replaces and stuff, then clean it up by using Option and all its sweet take/map sugar, then use a raw ptr to the tail to make a queue, PersistentLinkedList with Rcs, then safe DLL with Rc/RefCell, then unsafe DLL with Boxes and raw ptrs
2015-05-23 12:55:10	<--	dmac_ (dmac@moz-2ig65r.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-23 12:55:24	gsingh93	if i'm writing a safe wrapper around some unsafe bindings, and the unsafe bindings return raw pointer types, is it sufficient to simply type alias the raw pointer types or should I newtype them? and should I do null pointer checks on all pointers, even if the API says they shouldn't be null?
2015-05-23 12:55:33	Gankro	7 if I include the silly "doubly linked list that is just two singly linked lists"
2015-05-23 12:55:36	-->	larhat1 (Adium@moz-vlo5br.cable.virginm.net) has joined #rust
2015-05-23 12:56:24	<--	jophish (jophish@moz-fjh8o1.gotadsl.co.uk) has quit (Connection closed)
2015-05-23 12:56:27	unfo-	Gankro, ok. i would be interested in reading that tutorial :)
2015-05-23 12:56:52	-->	panicbit (panicbit@moz-rcvp1e.dip0.t-ipconnect.de) has joined #rust
2015-05-23 12:57:42	srjek	Is there already a stdlib class/func that takes a slice of objects and turns it into a slice-like of traits?
2015-05-23 12:58:07	Diggsey	gsingh93: it depends how those raw pointers are intended to be used - ie. who controls the lifetime of what they point to?
2015-05-23 12:58:46	-->	winding-lines (textual@moz-uto957.ca.comcast.net) has joined #rust
2015-05-23 12:58:51	Diggsey	gisngh93: to expose a safe API you need to make sure that it's impossible to access any pointers which are no longer valid
2015-05-23 12:58:57	estabroo	how do you borrow a borrow?  I've passed a HashMap to a function, but the compiler won't let me get() things from it
2015-05-23 12:59:00	estabroo	            match clients.get(&id) {
2015-05-23 12:59:00	estabroo	                Some(&chan_info) => {
2015-05-23 12:59:08	estabroo	error: cannot move out of borrowed content
2015-05-23 12:59:28	<--	winding-lines (textual@moz-uto957.ca.comcast.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-23 12:59:41	<--	eerie_ (eerie@moz-s5i4j9.red.bezeqint.net) has quit (Connection closed)
2015-05-23 12:59:52	Diggsey	gsingh93: If it's not performance sensitive, then you may as well always do null-checks. If not, you could only do null-checks in debug mode
2015-05-23 12:59:53	Blei	srjek: .map(|o| o as &MyTrait)  :)
2015-05-23 12:59:56	Gankro	srjek: You can't really do that since trait objects have double the size
2015-05-23 13:00:08	-->	aldanor (ivansmirnov@moz-kc07mc.ptr.magnet.ie) has joined #rust
2015-05-23 13:00:15	Gankro	srjek: Oh wait, I see what you're suggesting
2015-05-23 13:00:35	Gankro	No... we don't allow that. Interesting idea, though
2015-05-23 13:00:47	srjek	I was thinking something like a pointer, size of each object, len of slice originally
2015-05-23 13:00:49	Gankro	Would only need one vtable ptr
2015-05-23 13:01:24	Blei	you could probably implement that in a library, no?
2015-05-23 13:02:07	<--	kngl (Adium@moz-rmgnkh.dynamic.voo.be) has quit (Quit: Leaving.)
2015-05-23 13:02:09	Gankro	eddyb: Is this the sort of crazy thing you dream of? &[T] where T: Trait -> &[Trait], with the vtable stored on the &[] instead of the individual objects
2015-05-23 13:02:21	-->	Rym (y@moz-c2u.sd4.38.217.IP) has joined #rust
2015-05-23 13:02:55	eddyb	Gankro: yeah, that's how I define [Trait]
2015-05-23 13:02:57	Diggsey	Gankro: that would need to be extra fat :P
2015-05-23 13:03:03	eddyb	Gankro: it's a natural extension of DST
2015-05-23 13:03:11	eddyb	Diggsey: fat pointers are unspecifiedly fat
2015-05-23 13:03:26	<--	SerialVelocity (SerialVeloc@moz-attia0.cable.virginm.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-23 13:03:37	Diggsey	eddyb: maybe, but atm they all happen to be the same fattness :P
2015-05-23 13:03:41	--	zz_kimundi is now known as kimundi
2015-05-23 13:04:10	<--	vance (Mibbit@moz-ugdd1j.cust.bredbandsbolaget.se) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-23 13:04:17	Gankro	eddyb: [Trait] is just a fever dream of yours, right? We're nowhere close t landing something like that?
2015-05-23 13:04:20	flavius	please, no discrimination, skinny pointers might feel offensed
2015-05-23 13:04:21	Gankro	]
2015-05-23 13:04:23	eddyb	Gankro: no
2015-05-23 13:04:24	<--	sommoyogurt (sommoyogurt@moz-pahjq2.retail.telecomitalia.it) has quit (Connection closed)
2015-05-23 13:04:28	Diggsey	eddyb: to make them more fat would mean giving up on ever having atom fat pointers
2015-05-23 13:04:38	eddyb	Gankro: now that DST isn't a bloody mess, we can start implementing TraitA+TraitB
2015-05-23 13:04:41	<--	Pavel (Pavel@moz-a8qgi0.lidos.cz) has quit (Quit: Leaving)
2015-05-23 13:04:43	Diggsey	*atomic
2015-05-23 13:04:43	kimundi	estabroo: Some( refchan_info) => {
2015-05-23 13:04:45	kimundi	estabroo: Some(ref chan_info) => {
2015-05-23 13:04:56	eddyb	Gankro: which should remove all the silly special-cases that assume pointer+pointer-sized data
2015-05-23 13:04:57	<--	danyel (danyel@moz-ojbgup.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2015-05-23 13:05:03	-->	winding-lines (textual@moz-uto957.ca.comcast.net) has joined #rust
2015-05-23 13:05:05	aldanor	wonder if it’s somehow possible to implement a trait (e.g. PartialEq) for all types implementing a local trait Foo (where the implementation only uses Foo-specific methods)? what are the options other than copying and pasting the same impl all over?
2015-05-23 13:05:05	Gankro	eddyb: Neat!
2015-05-23 13:05:14	<--	dinfuehr (dinfuehr@moz-brk61l.highway.telekom.at) has quit (Ping timeout: 121 seconds)
2015-05-23 13:05:22	eddyb	someone has to do it though. and I'm here only in spirit
2015-05-23 13:05:31	Gankro	eddyb: Oh?
2015-05-23 13:05:35	eddyb	(until July/August)
2015-05-23 13:05:40	-->	Porkepix (Porkepix@moz-g50t2v.abo.wanadoo.fr) has joined #rust
2015-05-23 13:05:41	Gankro	What're you up to for the summer?
2015-05-23 13:05:50	kimundi	estabroo: The "&chan_info" is a pattern that destructures a references and binds the value behind it by value, which is the same as trying to move out of a reference. In contrast to that "ref chan_info" creates a reference to the value in that location
2015-05-23 13:05:52	eddyb	graduating highschool (finally)
2015-05-23 13:05:55	-->	dinfuehr (dinfuehr@moz-ldm58r.highway.telekom.at) has joined #rust
2015-05-23 13:05:59	Gankro	eddyb: \o/
2015-05-23 13:06:06	-->	kngl (Adium@moz-rmgnkh.dynamic.voo.be) has joined #rust
2015-05-23 13:06:08	eddyb	Diggsey: how can you have atomic anything larger than a pointer?
2015-05-23 13:06:20	<--	silven (quassel@moz-0roor3.priv.bahnhof.se) has quit (Ping timeout: 121 seconds)
2015-05-23 13:06:25	Diggsey	eddyb: Both ARM and x86/64 support double-wide atomics
2015-05-23 13:06:26	eddyb	Diggsey: is this some feature of certain architectures that's rarely used and currently unsupported in Rust?
2015-05-23 13:06:26	gsingh93	Diggsey: ok, you wouldn't happen to know what the correct thing to do for LLVM*Ref pointer types are? i.e. LLVMValueRef? I can't find documentation anywhere...
2015-05-23 13:06:34	-->	silven (quassel@moz-0roor3.priv.bahnhof.se) has joined #rust
2015-05-23 13:06:46	<--	Rym (y@moz-c2u.sd4.38.217.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 13:07:05	Gankro	steveklabnik: What's the best way to hack together something rustbook like? Your personal fork?
2015-05-23 13:07:06	eddyb	gsingh93: you want to create wrappers with phantom lifetimes
2015-05-23 13:07:07	-->	loveless (loveless@moz-kpp.7s9.241.192.IP) has joined #rust
2015-05-23 13:07:07	estabroo	kimundi, I'd tried ref (the compiler suggested it), but it just moved the borrowed error down to the next line where I tried to use chan_info
2015-05-23 13:07:10	-->	Rym (y@moz-c2u.sd4.38.217.IP) has joined #rust
2015-05-23 13:07:19	@steveklabnik	Gankro: my personal fork is just an out-of-tree mirror
2015-05-23 13:07:37	gsingh93	eddyb: what's a phantom lifetime?
2015-05-23 13:07:38	eddyb	gsingh93: that tie the value with the function/global context within which it was created
2015-05-23 13:07:44	estabroo	chan_info.txt.join();  (chan_info is a struct, the txt field is a Thread Join handle thing)
2015-05-23 13:07:48	eddyb	PhantomData<&'a ()> or something
2015-05-23 13:08:01	Gankro	steveklabnik: I don't know enough about rustbook to know if that answers my question
2015-05-23 13:08:07	<--	orangeshark (erik@moz-66o0ql.44tj.56ot.0306.2602.IP) has quit (Quit: Leaving)
2015-05-23 13:08:11	Hannibal_Smith	<Diggsey> eddyb: Both ARM and x86/64 support double-wide atomics <-People who rely on that on Linux kernel dev land get bashed by Linus
2015-05-23 13:08:22	gsingh93	eddyb: do you know any existing code i can look at that does this?
2015-05-23 13:08:31	<--	new_one (new_one@moz-ps5j1c.fs1g.619c.a880.2604.IP) has quit (Quit: WeeChat 1.1.1)
2015-05-23 13:08:37	-->	new_one (new_one@moz-ps5j1c.fs1g.619c.a880.2604.IP) has joined #rust
2015-05-23 13:08:45	eddyb	gsingh93: nope!
2015-05-23 13:08:52	Diggsey	Hannibal_Smith: perhaps, but for some things there's no alternative
2015-05-23 13:09:11	eddyb	gsingh93: librustc_trans doesn't do this right :P
2015-05-23 13:09:19	eddyb	gsingh93: but I can find an example outside of LLVM
2015-05-23 13:09:40	-->	dwrensha (chatzilla@moz-52ciq2.east.verizon.net) has joined #rust
2015-05-23 13:09:46	eddyb	gsingh93: http://doc.rust-lang.org/src/core/slice.rs.html#730-734
2015-05-23 13:09:51	-->	shellac (textual@moz-9b49cr.cable.virginm.net) has joined #rust
2015-05-23 13:09:56	Hannibal_Smith	Diggsey, for Linus a tagged pointer is often what you need, even more on 64bit architecture
2015-05-23 13:10:23	eddyb	Diggsey: x86 and ARM... since when?
2015-05-23 13:10:39	<--	thepreacher (thepreacher@moz-qchso7.dyn.plus.net) has quit (Connection closed)
2015-05-23 13:10:46	dwrensha	So, `cargo test` automatically builds everything in "/examples" in debug mode. Is there an easy way to build such examples in release mode?
2015-05-23 13:10:47	eddyb	does i686 have it? does x64 have it?
2015-05-23 13:10:56	-->	doomrobo (doomrobo@moz-e5v4r3.261j.6edk.2000.2604.IP) has joined #rust
2015-05-23 13:11:06	Diggsey	I worked on a GC for a Lisp system for my degree project - I never want to see another tagged pointer...
2015-05-23 13:11:10	Hannibal_Smith	eddyb, AMD64 yes, so Power and probably also Sparc
2015-05-23 13:11:22	@steveklabnik	Gankro: i guess i don't know what you mean by a 'rustbook like thing'. i sthere something specific about rustbook that doesn't work?
2015-05-23 13:11:33	eddyb	Hannibal_Smith: I mean, like x64 has SSE2, you can't have 64-bit x86 without SSE2
2015-05-23 13:11:36	<--	psd (psd@moz-7jcg17.mtnl.net.in) has quit (Ping timeout: 121 seconds)
2015-05-23 13:11:45	Diggsey	x64 has them, yes
2015-05-23 13:11:57	doomrobo	cargo test is complaining about dead code and unused imports, and nothing changes when I add #![allow(dead_code, unused_imports)] to the top of my lib.rs. What am I doing wrong?
2015-05-23 13:11:59	eddyb	Hannibal_Smith: not that "some of the newer x64 CPUs have it"
2015-05-23 13:12:04	Gankro	steveklabnik: I want to make linked-list-book
2015-05-23 13:12:11	Diggsey	cmpxchg8b/cmpxchg16b
2015-05-23 13:12:24	eddyb	Diggsey: those sound like CPUID feature flags to me
2015-05-23 13:12:32	Gankro	so basically have rustbook handle some other project
2015-05-23 13:12:33	-->	danyel (danyel@moz-ojbgup.dip0.t-ipconnect.de) has joined #rust
2015-05-23 13:12:40	gsingh93	eddyb: the iterator example makes sense, as it enforces that the iterator can't live longer than it's data. i'm not sure what the analagous signature for LLVM types would look like...
2015-05-23 13:12:42	Gankro	Presumably that requires no modification
2015-05-23 13:12:58	Diggsey	I know windows 8.1 has a hard dependency on them
2015-05-23 13:12:59	eddyb	> Early AMD64 processors lacked the CMPXCHG16B instruction, which is an extension of the CMPXCHG8B instruction present on most post-80486 processors.
2015-05-23 13:13:18	@steveklabnik	Gankro: yeah, that's totally fine. the only thing that sucks is that there's no 'cargo install' yet
2015-05-23 13:13:50	Gankro	steveklabnik: So what do you recommend? I copy-paste rustbook into my project and cargo run it?
2015-05-23 13:14:07	eddyb	yupp, it's in CPUID
2015-05-23 13:14:08	-->	nicknikolov (nicknikolov@moz-0q4.2rm.211.90.IP) has joined #rust
2015-05-23 13:14:27	@steveklabnik	Gankro: in the past, i've just built rustbook, and then added its target directory to my PATH
2015-05-23 13:15:02	Gankro	steveklabnik: If I want other people to be able to build it, that seems problematic
2015-05-23 13:15:25	eddyb	Diggsey, Hannibal_Smith: there's another issue: if C compilers have this feature in their target architecture feature set (alongside all SSE versions, for example), is it assumed for all x64 targets? is it assumed for any 32-bit targets?
2015-05-23 13:15:28	@steveklabnik	yeah, you basically have to say 'install and build a rustbook'
2015-05-23 13:15:53	@steveklabnik	just like if you needed someone to use pandoc or something
2015-05-23 13:15:54	<--	ytain (ytain@moz-07c3h9.dsl.teksavvy.com) has quit (Quit: Textual IRC Client: www.textualapp.com)
2015-05-23 13:16:18	Hannibal_Smith	eddyb, if you want to expose a cpu generic interface, you have to do as C++ standard did with atomic
2015-05-23 13:16:20	<--	Lilly (Lilly@moz-pfkvo9.bredband.comhem.se) has quit (Quit: bajs)
2015-05-23 13:16:22	eddyb	Diggsey, Hannibal_Smith: anyways, the fact that older CPUs don't have it means Rust's libstd can't expose it without a fallback mechanism
2015-05-23 13:16:33	-->	SerialVelocity (SerialVeloc@moz-attia0.cable.virginm.net) has joined #rust
2015-05-23 13:16:36	eddyb	Hannibal_Smith: which is what?
2015-05-23 13:16:49	Diggsey	eddyb: you can always fake atomics with a mutex or something
2015-05-23 13:16:54	Hannibal_Smith	http://en.cppreference.com/w/cpp/atomic
2015-05-23 13:17:04	eddyb	Diggsey: uhm...
2015-05-23 13:17:22	eddyb	the simplest mutex on linux is atomic + futex
2015-05-23 13:17:44	eddyb	so I'm guessing you mean just using futex and paying all the overhead
2015-05-23 13:17:45	<--	jix (jix@moz-dojrhi.de) has quit (Ping timeout: 121 seconds)
2015-05-23 13:17:49	Hannibal_Smith	Note http://en.cppreference.com/w/cpp/atomic/atomic/is_lock_free
2015-05-23 13:17:54	-->	eerie (eerie@moz-s5i4j9.red.bezeqint.net) has joined #rust
2015-05-23 13:17:54	eddyb	heh
2015-05-23 13:18:24	eddyb	http://en.cppreference.com/w/cpp/atomic/atomic_is_lock_free
2015-05-23 13:18:38	Diggsey	bit late there :P
2015-05-23 13:18:49	eddyb	it's a different link
2015-05-23 13:18:54	-->	ziocroc (ziocroc@moz-bfu.33o.74.151.IP) has joined #rust
2015-05-23 13:18:55	Diggsey	oh my bad
2015-05-23 13:18:57	eddyb	(a more useful one)
2015-05-23 13:19:02	-->	herr_jth (jth@moz-793lug.dcaiti.tu-berlin.de) has joined #rust
2015-05-23 13:19:09	dwrensha	oh, huh. `cargo test --release` does exactly what I would want it to do. Nice!
2015-05-23 13:19:26	<--	asante (quassel@moz-q4vb8g.eu) has left #rust ("http://quassel-irc.org - Chat comfortably. Anywhere.")
2015-05-23 13:19:33	-->	trigen (MSX@moz-sgda69.static.versatel.nl) has joined #rust
2015-05-23 13:20:25	eddyb	so, how would you do this with a futex? use the address of the object as the handle?
2015-05-23 13:21:06	kidto_	How common is the struct builder technique mentioned in the rust book actually used?
2015-05-23 13:21:19	<--	eric_lagergren (barsonme@moz-lr1hrn.wa.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-23 13:21:21	kidto_	wow I got lost halfway through that
2015-05-23 13:21:34	@steveklabnik	kidto_: fairly often
2015-05-23 13:21:49	-->	eric_lagergren (barsonme@moz-lr1hrn.wa.comcast.net) has joined #rust
2015-05-23 13:21:58	Diggsey	eddyb: Does std::atomic guarantee a particular size?
2015-05-23 13:21:59	kidto_	is the convention to just do StructNameBuilder?
2015-05-23 13:22:00	@steveklabnik	http://doc.rust-lang.org/stable/std/process/struct.Command.html is a prominent example
2015-05-23 13:22:03	eddyb	Diggsey: hmm, looking at the futex API, it seems there's no way to use it with zero memory overhead
2015-05-23 13:22:14	Gankro	steveklabnik: Surely we could just toss rustbook on crates.io?
2015-05-23 13:22:15	-->	ajhager (aajhager@moz-rpp5eh.in.comcast.net) has joined #rust
2015-05-23 13:22:21	@steveklabnik	Gankro: sure, i already did
2015-05-23 13:22:21	-->	DerisiveLogic (smuxi@moz-g93io6.res.rr.com) has joined #rust
2015-05-23 13:22:27	<--	d356 (d@moz-go99rq.res.bhn.net) has quit (Client exited)
2015-05-23 13:22:40	@steveklabnik	!crate rustbook
2015-05-23 13:22:41	+rustbot	rustbook (0.3.0) - Create multi-chapter documentation with Rustdoc. -> https://crates.io/crates/rustbook
2015-05-23 13:22:50	<--	woowe (Mibbit@moz-499ogh.wi.charter.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-23 13:22:59	Gankro	steveklabnik: Alright then I can just write a little rust script that uses it and tell people to cargo run it
2015-05-23 13:23:04	kidto_	Oh hey steveklabnik, I noticed that a couple of the md links in the book aren't working e.g. [if-let][if-let.html] on the match page
2015-05-23 13:23:14	eddyb	Diggsey: wait, I'm an idiot, for some reason I thought "how would you implement atomics with no atomic support in hardware?"
2015-05-23 13:23:19	<--	clatour (clatour@moz-2dc34f.hlrn.qwest.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-23 13:23:27	@steveklabnik	kidto_: thanks! did you check on nightly as well? some of those got fixed, i think
2015-05-23 13:23:54	eddyb	Diggsey: mutex fallback definitely makes sense if you can still use byte-sized atomics :P
2015-05-23 13:24:02	webmobster	Hi getting an issue where a trait is not implemented for itself, any help appreciated   "the trait `Selector` is not implemented for the type `Selector` "  https://gist.github.com/5407c0cb899bc1f81f04
2015-05-23 13:24:05	<--	trigen (MSX@moz-sgda69.static.versatel.nl) has quit (Ping timeout: 121 seconds)
2015-05-23 13:24:33	eddyb	Diggsey: http://locklessinc.com/articles/mutex_cv_futex/ this is the mutex I know, btw
2015-05-23 13:24:43	kidto_	steveklabnik: yeah I think most of them got taken care of. How often does the book get pushed to live servers?
2015-05-23 13:24:49	eddyb	the pthreads one might be more complicated
2015-05-23 13:25:09	-->	SiegeLord (sl@moz-9jtaei.ca.comcast.net) has joined #rust
2015-05-23 13:25:17	Diggsey	eddyb: RwLock-type thing might be preferable, not sure
2015-05-23 13:25:24	<--	mac_ (mac@moz-8a0.msu.231.115.IP) has quit (Quit: This computer has gone to sleep)
2015-05-23 13:26:12	eddyb	Diggsey: why? RwLock has more overhead
2015-05-23 13:26:32	@steveklabnik	kidto_: every release. so nightly updates every night, beta updates if and when there's a new beta, and stable every six weeks
2015-05-23 13:26:38	eddyb	oh, lots of concurrent reads
2015-05-23 13:26:39	Diggsey	reduced contention - you can have multiple people reading the value at the same time
2015-05-23 13:26:41	--	csherratt2 is now known as csherratt
2015-05-23 13:27:01	Diggsey	also a user-space RwLock can probably be very efficient
2015-05-23 13:27:10	<--	silven (quassel@moz-0roor3.priv.bahnhof.se) has quit (Ping timeout: 121 seconds)
2015-05-23 13:27:15	kidto_	steveklabnik: well that makes sense I guess. :+1:
2015-05-23 13:27:28	-->	silven (quassel@moz-0roor3.priv.bahnhof.se) has joined #rust
2015-05-23 13:27:31	kidto_	:P
2015-05-23 13:27:36	@steveklabnik	:)
2015-05-23 13:28:19	eddyb	Diggsey: yeah, maybe the implementation I linked can be extended into a very cheap RwLock
2015-05-23 13:28:21	Diggsey	eddyb: you'd have to be careful not to starve writers tho...
2015-05-23 13:28:32	<--	kidto (uid88634@moz-tt0007.charlton.irccloud.com) has left #rust ("")
2015-05-23 13:28:54	@steveklabnik	writers are always starving
2015-05-23 13:28:58	@steveklabnik	</bad joke>
2015-05-23 13:29:34	 *	kidto_ dies
2015-05-23 13:29:48	Azer	Hmm...How would one go about formatting a binary number as decimal? I don't see anything for decimal here http://doc.rust-lang.org/nightly/std/fmt/index.html
2015-05-23 13:29:57	-->	KLP (KLP@moz-qdcjho.res.rr.com) has joined #rust
2015-05-23 13:30:12	XMPPwocky	a binary number?
2015-05-23 13:30:23	-->	brainproxy (michael@moz-9vjtig.mo.charter.com) has joined #rust
2015-05-23 13:30:23	-->	nickniko_ (nicknikolov@moz-0q4.2rm.211.90.IP) has joined #rust
2015-05-23 13:30:29	-->	jbomo (dkd@moz-uol4mm.fios.verizon.net) has joined #rust
2015-05-23 13:30:36	&mbrubeck	Azer: Decimal is the default
2015-05-23 13:30:41	Diggsey	eddyb: Interestingly I'm finding it hard to find any info about user-space RwLocks, I thought that would be a thing...
2015-05-23 13:30:41	<--	nicknikolov (nicknikolov@moz-0q4.2rm.211.90.IP) has quit (Connection closed)
2015-05-23 13:30:48	FreeFull	Azer: What do you mean by binary number?
2015-05-23 13:30:52	-->	maraoz (maraoz@moz-1d0.g5p.29.181.IP) has joined #rust
2015-05-23 13:31:04	-->	SpaceManiac (Tad@moz-g50q8a.dyn.suddenlink.net) has joined #rust
2015-05-23 13:31:06	-->	runarberg (Mibbit@moz-4m7.c7b.17.89.IP) has joined #rust
2015-05-23 13:31:12	eddyb	Diggsey: you could look into pthreads
2015-05-23 13:31:13	doomrobo	what's the syntax for a function that takes as an argument a function that's &[u8]->f64 ?
2015-05-23 13:31:29	Azer	XMPPwocky So if I have 00101001 and I want to format it as 41 for example (I mean base 2)
2015-05-23 13:31:42	dwrensha	Hm. I see that I have `cargo doc --no-deps`. Is there a way to precises specify which dependencies for which to generate documentation?
2015-05-23 13:31:46	-->	chc4 (chc4@moz-mjph4c.ma.comcast.net) has joined #rust
2015-05-23 13:31:49	<--	KLP (KLP@moz-qdcjho.res.rr.com) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-05-23 13:31:50	dwrensha	*precisely
2015-05-23 13:31:51	@steveklabnik	doomrobo: fn foo(f: fn(&[u8]) -> f64)
2015-05-23 13:31:52	XMPPwocky	dwrensha: the -p option
2015-05-23 13:31:55	-->	psd (psd@moz-7jcg17.mtnl.net.in) has joined #rust
2015-05-23 13:31:58	@steveklabnik	doomrobo: (i would think anyway)
2015-05-23 13:31:59	erz	hey guys, can someone explain why coherence rules work this way http://is.gd/a0Z6kc It feels kinda weird that i can't implement From for Option<MyStruct>
2015-05-23 13:32:03	eddyb	Diggsey: I mean, actual implementations. pretty sure pthread_mutex_* uses futex. pthread_rwlock_* might too (not sure what else it could use)
2015-05-23 13:32:11	-->	essem2 (Thunderbird@moz-top3er.sd.cox.net) has joined #rust
2015-05-23 13:32:49	<--	eric_lagergren (barsonme@moz-lr1hrn.wa.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-23 13:32:52	doomrobo	steveklabnik, seems to work, thanks. What happened to Fn<> syntax?
2015-05-23 13:32:54	-->	Astrum|Lap (Astrum|Lap@moz-skcefh.co.comcast.net) has joined #rust
2015-05-23 13:33:00	-->	summerlight_ (summerlight@moz-99k.2mj.130.121.IP) has joined #rust
2015-05-23 13:33:16	eddyb	doomrobo: nothing
2015-05-23 13:33:24	eddyb	doomrobo: fn(A...) -> R is a function pointer
2015-05-23 13:33:44	-->	nodweber (nodweber@moz-knt.fgq.178.5.IP) has joined #rust
2015-05-23 13:33:55	eddyb	Fn(A...) -> R is a trait for "callable objects where the call borrows the object immutably"
2015-05-23 13:34:16	eddyb	FnMut(A...) -> R borrows mutably and FnOnce(A...) -> R takes it by value
2015-05-23 13:34:20	<--	marky (jose@moz-n98a4h.org) has quit (Ping timeout: 121 seconds)
2015-05-23 13:34:33	<--	cursivecode (textual@moz-4u56i9.res.bhn.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-23 13:35:03	doomrobo	ah, ok. I remember those traits, but I forgot their syntax
2015-05-23 13:35:08	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Connection closed)
2015-05-23 13:35:31	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-23 13:35:41	-->	areski (areski@moz-2lg0ha.user.ono.com) has joined #rust
2015-05-23 13:35:44	Morten	Is it possible to disable int overflow checks for just a few operations?
2015-05-23 13:35:56	kidto_	the python type annotations look familliar :)
2015-05-23 13:35:57	<--	summerlight (summerlight@moz-99k.2mj.130.121.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 13:35:58	kidto_	new*
2015-05-23 13:36:00	XMPPwocky	rusti: 255u8.wrapping_add(1u8)
2015-05-23 13:36:01	--	Notice(playbot): 0
2015-05-23 13:36:08	XMPPwocky	rusti is release builds
2015-05-23 13:36:11	XMPPwocky	but that won't pani
2015-05-23 13:36:22	<--	brainproxy (michael@moz-9vjtig.mo.charter.com) has quit (Ping timeout: 121 seconds)
2015-05-23 13:36:28	XMPPwocky	rusti: u8::wrapping_add(255, 1)
2015-05-23 13:36:30	--	Notice(playbot): 0
2015-05-23 13:36:32	XMPPwocky	<3 ufcs
2015-05-23 13:36:53	Morten	XMPPwocky
2015-05-23 13:36:53	dwrensha	XMPPwocky: looks like '-p' still only lets me choose a single package. What if I want to generate docs for four packages out of ten dependencies?
2015-05-23 13:36:53	Morten	: thanks!
2015-05-23 13:37:13	<--	Azdle (Azdle@moz-fv6arh.mn.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-23 13:37:16	XMPPwocky	dwrensha: don't think you can do that, besides running -p several times
2015-05-23 13:38:06	<--	nodweber (nodweber@moz-knt.fgq.178.5.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 13:38:55	<--	webmobster (Mibbit@moz-dr2.ra2.78.152.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-23 13:39:04	<--	Astrum|Lap (Astrum|Lap@moz-skcefh.co.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-23 13:39:30	doomrobo	eddyb, if I want to pass a function pointer to something that takes Fn(A...) -> R, how would I do that?
2015-05-23 13:39:33	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Ping timeout: 121 seconds)
2015-05-23 13:39:37	&mbrubeck	erz: It's to prevent code from breaking if libstd changes to do things like "impl<T,U> From<T> for Option<U> where blah blah blah...."
2015-05-23 13:39:45	-->	lenstr (lenstr@moz-el8.vju.25.171.IP) has joined #rust
2015-05-23 13:39:58	<--	lenstr (lenstr@moz-el8.vju.25.171.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-23 13:40:24	&mbrubeck	erz: I think it's possible some of the coherence restrictions could be relaxed if we get better specialization in the future.
2015-05-23 13:40:32	<--	kidto_ (gabriel@moz-72d.fff.84.91.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 13:40:34	&mbrubeck	I haven't followed that discussion too closely, though.
2015-05-23 13:41:20	&mbrubeck	erz: The current rules are fairly recent; see https://github.com/rust-lang/rfcs/blob/master/text/1023-rebalancing-coherence.md
2015-05-23 13:42:04	Diggsey	eddyb: pthreads rwlock uses an exclusive lock as part of its impl, so if that's the best one can do then there's no point, may as well use a futex
2015-05-23 13:42:07	&mbrubeck	Azer: Do you mean you have "00101001" as a string?
2015-05-23 13:42:16	<--	Hannibal_Smith (nico@moz-7gi1c3.retail.telecomitalia.it) has quit (Quit: Leaving)
2015-05-23 13:42:58	&mbrubeck	playbot: format!("{}", i32::from_str_radix("00101001", 2).unwrap()) // Azer
2015-05-23 13:42:59	--	Notice(playbot): "41"
2015-05-23 13:43:20	-->	cursivecode (textual@moz-4u56i9.res.bhn.net) has joined #rust
2015-05-23 13:43:23	dwrensha	XMPPwocky: aha, I get what I want if I run  `cargo doc --no-deps -p <pkg>` for each package successively. Thanks!
2015-05-23 13:43:44	-->	kidto_ (gabriel@moz-72d.fff.84.91.IP) has joined #rust
2015-05-23 13:43:53	eddyb	dwrensha: an exclusive lock?
2015-05-23 13:43:59	eddyb	err, Diggsey^
2015-05-23 13:44:07	eddyb	doomrobo: you just do it
2015-05-23 13:44:19	eddyb	doomrobo: function pointers implement all Fn traits
2015-05-23 13:44:20	-->	lucian (lucian@moz-2c3pda.cable.virginm.net) has joined #rust
2015-05-23 13:44:32	-->	LookupError (stepan@moz-vbg.24j.51.176.IP) has joined #rust
2015-05-23 13:45:16	-->	lyc (lyc@moz-jft.nr8.226.207.IP) has joined #rust
2015-05-23 13:45:21	Diggsey	eddyb: It locks a mutex lock - does rw-specific logic, and then unlocks before returning
2015-05-23 13:45:33	<--	fyolnish (fyolnish@moz-ehtogo.so-net.ne.jp) has quit (Connection closed)
2015-05-23 13:46:09	-->	fyolnish (fyolnish@moz-ehtogo.so-net.ne.jp) has joined #rust
2015-05-23 13:46:09	-->	eric_lagergren (barsonme@moz-lr1hrn.wa.comcast.net) has joined #rust
2015-05-23 13:46:10	Diggsey	(mutex meaning general mutual exclusion, not a particular impl)
2015-05-23 13:46:11	doomrobo	eddyb, I forgot to use <> in the function def
2015-05-23 13:46:40	eddyb	Diggsey: ah. and mutex would use futex
2015-05-23 13:46:56	Diggsey	eddyb: presumably
2015-05-23 13:47:08	eddyb	so you mean it locks a bunch of counters
2015-05-23 13:47:13	eddyb	what does it do when it has to wait?
2015-05-23 13:47:16	<--	kngl (Adium@moz-rmgnkh.dynamic.voo.be) has quit (Quit: Leaving.)
2015-05-23 13:47:19	-->	xcombelle (xcombelle@moz-1frl96.abo.wanadoo.fr) has joined #rust
2015-05-23 13:47:33	erz	&mbrubeck: thx I hope restrictions will be relaxed somehow,  coz I really don't like creating a new pack of traits just for conversion with Option 
2015-05-23 13:47:44	-->	kngl (Adium@moz-rmgnkh.dynamic.voo.be) has joined #rust
2015-05-23 13:47:48	-->	tristanseifert (tristanseif@moz-r0t7ns.res.rr.com) has joined #rust
2015-05-23 13:48:01	<--	kngl (Adium@moz-rmgnkh.dynamic.voo.be) has quit (Quit: Leaving.)
2015-05-23 13:48:23	<--	ziocroc (ziocroc@moz-bfu.33o.74.151.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 13:48:42	Morten	Are assertions meant to be disabled when not debugging, like in Java?
2015-05-23 13:48:58	WindowsBunny	Morten: no
2015-05-23 13:49:04	WindowsBunny	Morten: only debug_assert!
2015-05-23 13:49:17	<--	lyc (lyc@moz-jft.nr8.226.207.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 13:49:44	Morten	Ah, thanks
2015-05-23 13:49:54	-->	dgrunwald (Daniel@moz-ho507c.hsi4.kabel-badenwuerttemberg.de) has joined #rust
2015-05-23 13:50:14	-->	grant (grant@moz-jfh.0nq.187.64.IP) has joined #rust
2015-05-23 13:50:24	-->	dmac (dmac@moz-2ig65r.ca.comcast.net) has joined #rust
2015-05-23 13:50:36	-->	Kornel (Kornel@moz-l20jk6.81.in-addr.arpa) has joined #rust
2015-05-23 13:50:47	<--	Kornel (Kornel@moz-l20jk6.81.in-addr.arpa) has quit (Quit: Cmd+Q)
2015-05-23 13:51:00	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-23 13:51:19	Diggsey	eddyb: it repeatedly locks and unlocks the mutex, calling suspend (self) between each :/
2015-05-23 13:51:27	eddyb	Diggsey: no way
2015-05-23 13:51:43	eddyb	bye bye perf
2015-05-23 13:51:45	-->	dmac_ (dmac@moz-2ig65r.ca.comcast.net) has joined #rust
2015-05-23 13:51:52	<--	tristanseifert (tristanseif@moz-r0t7ns.res.rr.com) has quit (Ping timeout: 121 seconds)
2015-05-23 13:52:16	-->	Azdle (Azdle@moz-fv6arh.mn.comcast.net) has joined #rust
2015-05-23 13:52:24	eddyb	Diggsey: now I want to design a rwlock :P
2015-05-23 13:52:59	-->	Astrum|Lap (Astrum|Lap@moz-skcefh.co.comcast.net) has joined #rust
2015-05-23 13:53:12	Diggsey	eddyb: I thought of just using a counter storing the number of readers, and turning it negative when a writer is waiting - using cmpxchg to update it
2015-05-23 13:53:30	<--	herr_jth (jth@moz-793lug.dcaiti.tu-berlin.de) has quit (Quit: Konversation terminated!)
2015-05-23 13:54:12	<--	fyolnish (fyolnish@moz-ehtogo.so-net.ne.jp) has quit (Ping timeout: 121 seconds)
2015-05-23 13:54:13	eddyb	Diggsey: right. and you'd be using futex only when you're a reader waiting for a writer to finish or a writer waiting for all readers to finish
2015-05-23 13:54:52	-->	simonoram (simonoram@moz-pllbvg.cable.virginm.net) has joined #rust
2015-05-23 13:54:57	-->	d356 (d@moz-go99rq.res.bhn.net) has joined #rust
2015-05-23 13:55:06	eddyb	Diggsey: the main challenge is fitting that reader count in this http://locklessinc.com/articles/mutex_cv_futex/
2015-05-23 13:55:21	Diggsey	for just access to an atomic it may be better just to spin-wait
2015-05-23 13:55:25	XMPPwocky	do you have memory fences available?
2015-05-23 13:55:29	eddyb	I guess it's easier if you don't try to work with the optimized one-byte overhead
2015-05-23 13:55:32	<--	simonoram (simonoram@moz-pllbvg.cable.virginm.net) has quit (Client exited)
2015-05-23 13:55:39	Diggsey	since you're going to spend almost zero time inside the lock
2015-05-23 13:55:42	eddyb	Diggsey: ah, I actually want to improve rwlock perf now :)
2015-05-23 13:55:52	eddyb	as in, the RwLock we use
2015-05-23 13:55:53	<--	dmac_ (dmac@moz-2ig65r.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-23 13:56:01	<--	Jesin (Jesin@moz-48mne2.nsvltn.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-23 13:56:20	eddyb	for mutexes, I remember people being concerned about fairness, while a rw-lock... well, it would be nice if it were as fast as possible
2015-05-23 13:56:26	Diggsey	eddyb: hmm, it could have been that I was just looking at a bad implementation, I'll see if I can find a better one...
2015-05-23 13:56:31	<--	jincreator (Thunderbird@moz-588.igi.7.59.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 13:56:46	Morten	Is it not possible to destruct a tuple struct with a let statement?
2015-05-23 13:56:54	eddyb	Morten: sure it is
2015-05-23 13:57:07	eddyb	you have to include the name, though, not just the tuple part
2015-05-23 13:58:16	Morten	eddyb: Thanks! That did it
2015-05-23 13:58:21	<--	loveless (loveless@moz-kpp.7s9.241.192.IP) has quit (Quit: Leaving...)
2015-05-23 13:58:40	<--	danyel (danyel@moz-ojbgup.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2015-05-23 13:59:01	Diggsey	eddyb: hmm, no this implementation does a similar thing too
2015-05-23 13:59:09	<--	eerie (eerie@moz-s5i4j9.red.bezeqint.net) has quit (Connection closed)
2015-05-23 13:59:22	-->	detsak (darren@moz-804egb.dyn.optonline.net) has joined #rust
2015-05-23 13:59:27	-->	danyel (danyel@moz-ojbgup.dip0.t-ipconnect.de) has joined #rust
2015-05-23 13:59:51	geofft	if I wanted to ask questions like "what are all the extern blocks in this crate" or "what items are defined on Linux but not Darwin", is there an easy tool to do that? 
2015-05-23 14:00:15	geofft	it seems like libsyntax or something ought to be able to do this, but is there a good higher-level tool? 
2015-05-23 14:00:19	XMPPwocky	geofft: not really, but you could link to libsyntax... except you'd need to pull the mods in
2015-05-23 14:01:02	-->	Pavel (Pavel@moz-a8qgi0.lidos.cz) has joined #rust
2015-05-23 14:01:12	-->	Jesin (Jesin@moz-48mne2.nsvltn.sbcglobal.net) has joined #rust
2015-05-23 14:01:56	Pavel	This is what I'Ve figured out so far about concurrently working with chunks of a vec without locking : http://is.gd/ua5hOq
2015-05-23 14:02:33	Pavel	The only solution seems to be not to work with one Vec, but use a Vec of smallers vectors instead.
2015-05-23 14:02:54	XMPPwocky	modify could just take &mut Vec<i32>, fwiw
2015-05-23 14:03:14	Blei	is it in some way possible to include files that have a dot as part of their name
2015-05-23 14:03:31	XMPPwocky	Blei: #[path] ?
2015-05-23 14:03:42	Blei	XMPPwocky: cool, thanks
2015-05-23 14:04:19	<--	amukiza (user@moz-nrmara.et45.t3cp.014d.2804.IP) has quit (Connection closed)
2015-05-23 14:05:05	XMPPwocky	rusti: mod "meow" as foo;
2015-05-23 14:05:06	--	Notice(playbot): <anon>:9:13: 9:19 error: expected ident, found `"meow"`
2015-05-23 14:05:06	--	Notice(playbot): <anon>:9         mod "meow" as foo;
2015-05-23 14:05:06	--	Notice(playbot): output truncated; full output at: http://bit.ly/1GvQlru
2015-05-23 14:05:11	XMPPwocky	didn't think that'd work
2015-05-23 14:05:55	Diggsey	eddyb: ok, the latest glibc has an additional fast-path, but the slow path is the same
2015-05-23 14:06:17	<--	dcrewi (david@moz-3u3d5k.gyrae.net) has quit (Ping timeout: 121 seconds)
2015-05-23 14:06:24	-->	pyon (pyon@moz-b0l.mdl.7.179.IP) has joined #rust
2015-05-23 14:07:05	<--	pyon (pyon@moz-b0l.mdl.7.179.IP) has quit (Quit: oops fix config)
2015-05-23 14:07:43	srjek	2 questions
2015-05-23 14:07:49	<--	SiegeLord (sl@moz-9jtaei.ca.comcast.net) has quit (Quit: It's a joke, it's all a joke.)
2015-05-23 14:07:50	srjek	TraitObjects use mut pointers, I assume it's ok to transmute const to mut if I'm creating an immutable trait object?
2015-05-23 14:08:01	-->	pyon (pyon@moz-b0l.mdl.7.179.IP) has joined #rust
2015-05-23 14:08:03	srjek	Is there a stdlib function to grab a vtable for a Type/Trait pair?
2015-05-23 14:08:04	-->	peferron (peferron@moz-k89vq8.ca.comcast.net) has joined #rust
2015-05-23 14:08:28	XMPPwocky	no, no
2015-05-23 14:08:32	XMPPwocky	TraitObject isn't a thing
2015-05-23 14:08:48	XMPPwocky	all TraitObject is is a struct that happens to have the same in-memory representation as a pointer to a trait object
2015-05-23 14:08:56	XMPPwocky	so you can transmute to/from it
2015-05-23 14:09:15	XMPPwocky	it doesn't at all relate to what trait objects actually are
2015-05-23 14:09:20	XMPPwocky	if that makes any sense 
2015-05-23 14:09:53	eddyb	srjek: pointers are cast, not transmuted
2015-05-23 14:10:00	geofft	if you're doing your own dynamic type system-like thing, you can generally implement that on top of traits, more than trying to bend the existing trait object implementation 
2015-05-23 14:10:04	eddyb	(you can do ptr as *const T in safe code)
2015-05-23 14:10:16	<--	kidto_ (gabriel@moz-72d.fff.84.91.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 14:10:42	-->	eerie (eerie@moz-s5i4j9.red.bezeqint.net) has joined #rust
2015-05-23 14:11:15	eddyb	srjek: if you're ok with unstable, you can be generic over Trait, T: Unsize<Trait>
2015-05-23 14:11:27	eddyb	srjek: sorry, Trait: ?Sized, T: Unsize<Trait>
2015-05-23 14:11:41	-->	gopar (gopar@moz-5039uj.ca.comcast.net) has joined #rust
2015-05-23 14:12:30	srjek	I mean, I'm trying to implement a slice-like of traits, so, my slice-like would have a vtable ptr, and the information to grab the data pointer, and I would combine them and return a trait object.
2015-05-23 14:12:40	-->	jophish (jophish@moz-fjh8o1.gotadsl.co.uk) has joined #rust
2015-05-23 14:12:54	eddyb	Gankro: ^^ heh
2015-05-23 14:13:02	eddyb	srjek: you can do that now!
2015-05-23 14:13:18	eddyb	srjek: with the very recent Unsize abstraction
2015-05-23 14:13:19	<--	nickniko_ (nicknikolov@moz-0q4.2rm.211.90.IP) has quit (Connection closed)
2015-05-23 14:13:19	srjek	but TraitObject is mut pointers, and I got const pointers, which sent off a warning flag in my head
2015-05-23 14:13:41	-->	Halamix2 (Halamix2@moz-prmq1h.syrion.pl) has joined #rust
2015-05-23 14:13:42	 *	srjek looks up unsize
2015-05-23 14:13:44	eddyb	it doesn't matter, you could even use a tuple (but you shouldn't :P)
2015-05-23 14:14:11	eddyb	srjek: this http://doc.rust-lang.org/nightly/std/marker/trait.Unsize.html
2015-05-23 14:14:26	-->	SiegeLord (sl@moz-9jtaei.ca.comcast.net) has joined #rust
2015-05-23 14:14:33	eddyb	T: Unsize<Trait> iff T: Trait
2015-05-23 14:14:35	<--	eric_lagergren (barsonme@moz-lr1hrn.wa.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-23 14:14:50	<--	danyel (danyel@moz-ojbgup.dip0.t-ipconnect.de) has quit (Client exited)
2015-05-23 14:15:50	geofft	srjek: the entire struct should be treated as unsafe -- you're responsible for maintaining safety guarantees, including ownership/const safety, if you're transmuting to it 
2015-05-23 14:16:11	<--	dinfuehr (dinfuehr@moz-ldm58r.highway.telekom.at) has quit (Connection closed)
2015-05-23 14:16:11	geofft	but also you have no idea what order the items in the vtable ptr are, no? 
2015-05-23 14:16:13	eddyb	srjek: you couldn't do this a few weeks ago (people have tried. at best they ended up with a macro) and it's still an unstable interface. 1.2 or 1.3 might stabilize it, but nothing is certain
2015-05-23 14:16:27	eddyb	geofft: it doesn't matter
2015-05-23 14:16:32	-->	dinfuehr (dinfuehr@moz-ldm58r.highway.telekom.at) has joined #rust
2015-05-23 14:16:43	geofft	oh, I guess you're starting with an existing vptr 
2015-05-23 14:16:44	srjek	I'm not sure I fully understand the implications of the Unsize trait
2015-05-23 14:16:55	eddyb	srjek: you can be abstract over traits
2015-05-23 14:17:03	-->	danyel (danyel@moz-ojbgup.dip0.t-ipconnect.de) has joined #rust
2015-05-23 14:17:08	<--	shellac (textual@moz-9b49cr.cable.virginm.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-23 14:17:10	eddyb	T implements Unsize<Trait> if it implements Trait
2015-05-23 14:17:17	eddyb	Trait can be a generic type parameter
2015-05-23 14:17:17	srjek	oh, generic over a trait.
2015-05-23 14:17:20	Diggsey	wait, a type can implement Unsize<T> for several T?
2015-05-23 14:17:29	eddyb	Diggsey: yes, that is how generic traits work
2015-05-23 14:17:34	srjek	awesome, I literally ran into that issue a few mins ago
2015-05-23 14:17:35	Diggsey	cool
2015-05-23 14:17:43	eddyb	geofft: AFAICT srjek is implementing [Trait] which I define as exists T: Trait.[T]
2015-05-23 14:17:48	-->	simonoram (simonoram@moz-pllbvg.cable.virginm.net) has joined #rust
2015-05-23 14:17:54	eddyb	srjek: you are so lucky :D
2015-05-23 14:18:00	-->	eerie_ (eerie@moz-s5i4j9.red.bezeqint.net) has joined #rust
2015-05-23 14:18:01	-->	datalus (datalus@moz-oq4ug8.mycingular.net) has joined #rust
2015-05-23 14:18:47	srjek	I wouldn't say I'm exactly implementing [Trait], but a struct that acts like it.
2015-05-23 14:19:05	<--	dinfuehr (dinfuehr@moz-ldm58r.highway.telekom.at) has quit (Connection closed)
2015-05-23 14:19:06	-->	dinfuehr (dinfuehr@moz-ldm58r.highway.telekom.at) has joined #rust
2015-05-23 14:19:10	eddyb	of course, otherwise you'd be asking about rustc_trans :P
2015-05-23 14:19:11	Diggsey	technically [Trait] would be different
2015-05-23 14:19:11	-->	shellac (textual@moz-9b49cr.cable.virginm.net) has joined #rust
2015-05-23 14:19:22	eddyb	Diggsey: than what?
2015-05-23 14:19:25	-->	c_wraith (c_wraith@moz-2e872h.click-network.com) has joined #rust
2015-05-23 14:19:36	Diggsey	since you would be able to store different types in it
2015-05-23 14:19:41	eddyb	no you wouldn't
2015-05-23 14:20:07	eddyb	extending DST naturally leads to exists T: Trait.[T]
2015-05-23 14:20:17	-->	trigen (MSX@moz-sgda69.static.versatel.nl) has joined #rust
2015-05-23 14:20:18	-->	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has joined #rust
2015-05-23 14:20:21	eddyb	which further desugars to exists T: Trait, N: usize.[T; N]
2015-05-23 14:20:44	<--	eerie (eerie@moz-s5i4j9.red.bezeqint.net) has quit (Ping timeout: 121 seconds)
2015-05-23 14:20:50	flavius	Has anyone looked at the build dir recently? There are strangely named directories inside, @@echo and prepare: At least @@echo looks like windows crap to me
2015-05-23 14:20:55	eddyb	there is a different "extension", but that's a library type, really
2015-05-23 14:21:04	srjek	nah, I was thinking of turning a [Type] into a [Trait]. No mixed types involved.
2015-05-23 14:21:32	eddyb	a RingBuffer<Trait> could mean exists T: Trait.RingBuffer<T> *or* you could store the vtable before each object
2015-05-23 14:22:05	eddyb	actually, a deque is less nice because you need to store something after each object
2015-05-23 14:22:29	eddyb	a FIFO queue backed by a ring buffer is what I was thinking of
2015-05-23 14:22:38	Diggsey	if passing DSTs by value is implemented, then it sets a precedent for "Trait" itself to be polymorphic (rather than only &Trait being polymorphic), which in turn means that a [Trait] should have elements which are independendly polymorphic
2015-05-23 14:22:56	-->	A205B064 (A205B064@moz-9s9nhk.nap.wideopenwest.com) has joined #rust
2015-05-23 14:23:09	eddyb	Diggsey: that's not how DST works
2015-05-23 14:23:36	eddyb	existential erasure (dynamicization) bubbles up until it hits an indirection
2015-05-23 14:23:50	-->	kidto_ (gabriel@moz-72d.fff.84.91.IP) has joined #rust
2015-05-23 14:23:50	eddyb	passing DSTs by value is sugar for what used to be called &move T
2015-05-23 14:23:58	-->	Hannibal_Smith (nico@moz-7gi1c3.retail.telecomitalia.it) has joined #rust
2015-05-23 14:24:03	eddyb	(and now is Own<T> and variations thereof)
2015-05-23 14:24:07	<--	giucam (giucam@moz-iv0nnc.bb.dnainternet.fi) has quit (Ping timeout: 121 seconds)
2015-05-23 14:24:20	eddyb	(all hypothetical stuff, of course)
2015-05-23 14:24:38	<--	errordeveloper (ilya@moz-385.mbh.200.90.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 14:24:48	eddyb	Diggsey: there's a hidden indirection for the whole argument, which is where the N and the T of [T; N] bubble up to, for [Trait]
2015-05-23 14:24:59	<--	trigen (MSX@moz-sgda69.static.versatel.nl) has quit (Ping timeout: 121 seconds)
2015-05-23 14:25:36	Diggsey	eddyb: I think that's only one interpretation of the semantics (which happens to match the current implementation)
2015-05-23 14:25:39	<--	essem2 (Thunderbird@moz-top3er.sd.cox.net) has quit (Client exited)
2015-05-23 14:26:22	<--	Soni (SoniEx2@moz-br4.ur1.74.201.IP) has quit (Connection closed)
2015-05-23 14:26:34	-->	errordeveloper (ilya@moz-385.mbh.200.90.IP) has joined #rust
2015-05-23 14:26:52	<--	eerie_ (eerie@moz-s5i4j9.red.bezeqint.net) has quit (Connection closed)
2015-05-23 14:26:56	-->	eerie (eerie@moz-s5i4j9.red.bezeqint.net) has joined #rust
2015-05-23 14:27:19	eddyb	Diggsey: it's the only sane interpretation that I've ever seen
2015-05-23 14:27:35	<--	shellac (textual@moz-9b49cr.cable.virginm.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-23 14:28:04	-->	eric_lagergren (barsonme@moz-lr1hrn.wa.comcast.net) has joined #rust
2015-05-23 14:28:04	Diggsey	eddyb: I think calling DSTs-by-value sugar for Own<T> is a bit of a stretch - the constructor of such an Own<T> would be "magic"
2015-05-23 14:28:07	eddyb	how do you define [Trait] without [T; N]?
2015-05-23 14:28:19	eddyb	Diggsey: huh?
2015-05-23 14:28:39	eddyb	Diggsey: we *had* DST-by-value for Box<Trait> with self methods
2015-05-23 14:28:39	-->	cobratbq (cobratbq@moz-qbkfd9.FTTH.ispfabriek.nl) has joined #rust
2015-05-23 14:28:59	eddyb	&move T aka Own<T> is trivial to work with at the lowest level
2015-05-23 14:29:19	eddyb	after all, any type larger than a pointer is passed like that, through an indirection
2015-05-23 14:29:56	<--	jpg (jpg@moz-8qqr98.internode.on.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-23 14:30:43	-->	KLP (KLP@moz-qdcjho.res.rr.com) has joined #rust
2015-05-23 14:30:56	<--	Astrum|Lap (Astrum|Lap@moz-skcefh.co.comcast.net) has quit (Client exited)
2015-05-23 14:30:59	<--	lucian (lucian@moz-2c3pda.cable.virginm.net) has quit (A TLS packet with unexpected length was received.)
2015-05-23 14:31:14	<--	danyel (danyel@moz-ojbgup.dip0.t-ipconnect.de) has quit (Client exited)
2015-05-23 14:31:40	<--	tincan (tincan@moz-05q.1nm.133.145.IP) has quit (Connection closed)
2015-05-23 14:31:49	<--	gsingh93 (gulshan@moz-ln1ktu.st3l.iv8o.0004.2601.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 14:32:41	<--	KLP (KLP@moz-qdcjho.res.rr.com) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-05-23 14:33:04	<--	silven (quassel@moz-0roor3.priv.bahnhof.se) has quit (Ping timeout: 121 seconds)
2015-05-23 14:33:09	-->	silven (quassel@moz-0roor3.priv.bahnhof.se) has joined #rust
2015-05-23 14:34:50	-->	lenstr (lenstr@moz-el8.vju.25.171.IP) has joined #rust
2015-05-23 14:36:11	<--	kidto_ (gabriel@moz-72d.fff.84.91.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 14:36:49	-->	harrisonclarke (harrisoncla@moz-uur7pt.eastlink.ca) has joined #rust
2015-05-23 14:36:58	<--	harrisonclarke (harrisoncla@moz-uur7pt.eastlink.ca) has quit (Connection closed)
2015-05-23 14:37:16	Diggsey	eddyb: you could theoretically implement &[Trait] at having a representation: (&([&Trait; N],[u8; M]), N, M)
2015-05-23 14:37:44	silven	So I'm being stupid but I can't figure out how to solve naming collision between a triat and the struct which should implement the trait
2015-05-23 14:38:12	silven	Isn't there any way to specifiy so self.foo() refers to self as the concrete type, not the trait?
2015-05-23 14:38:29	<--	wei2912 (wei2912@moz-tm4.0ee.156.175.IP) has quit (Quit: Lost terminal)
2015-05-23 14:38:32	Gankro	silven: The concrete type always wins in an ambiguous case
2015-05-23 14:38:37	-->	willem (willem@moz-facs2s.dynamic.upc.nl) has joined #rust
2015-05-23 14:38:42	eddyb	Diggsey: so we're back to &X being a type while X isn't?
2015-05-23 14:38:49	Gankro	If you want the trait to win, do Trait::foo(self)
2015-05-23 14:39:12	<--	peferron (peferron@moz-k89vq8.ca.comcast.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-23 14:39:14	eddyb	silven: does Struct::foo(self) work?
2015-05-23 14:39:23	silven	Gankro: it doesn't seem to in this case. I get infinite recursion
2015-05-23 14:39:28	-->	gleb (gleb@moz-3u1drv.rusanovka-net.kiev.ua) has joined #rust
2015-05-23 14:39:45	-->	mib_gtqljb (Mibbit@moz-38gbb7.bon.riksnet.se) has joined #rust
2015-05-23 14:39:52	<--	lenstr (lenstr@moz-el8.vju.25.171.IP) has quit (Connection closed)
2015-05-23 14:40:10	&mbrubeck	silven: Is one `foo` supposed to call the other? Can you show us the code, or a simplified version?
2015-05-23 14:40:53	&mbrubeck	(If possible I'd recommend giving the methods different names just for readability's sake.)
2015-05-23 14:41:01	-->	KLP (KLP@moz-qdcjho.res.rr.com) has joined #rust
2015-05-23 14:41:23	silven	yes, I've got a trait for Storage, which I impl for a Vec, which means get(idx) calls get(idx)
2015-05-23 14:42:04	-->	kushal (kdas@moz-t649ku.202.sitibroadband.in) has joined #rust
2015-05-23 14:42:19	<--	d356 (d@moz-go99rq.res.bhn.net) has quit (Client exited)
2015-05-23 14:42:46	Gankro	silven: Ah, `get` on Vec is accessible through Deref, not directly
2015-05-23 14:43:02	Gankro	silven: try self.deref().get(..)
2015-05-23 14:43:49	<--	eerie (eerie@moz-s5i4j9.red.bezeqint.net) has quit (Connection closed)
2015-05-23 14:43:53	<--	simonoram (simonoram@moz-pllbvg.cable.virginm.net) has quit (Client exited)
2015-05-23 14:44:14	<--	ajhager (aajhager@moz-rpp5eh.in.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-23 14:44:36	silven	that works, thanks :)
2015-05-23 14:45:31	<--	hjr3 (hradtke@moz-rga0be.ca.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2015-05-23 14:45:47	Gankro	silven: basically Concrete > Trait > Deref
2015-05-23 14:45:52	eddyb	eh
2015-05-23 14:46:01	-->	lyc (lyc@moz-jft.nr8.226.207.IP) has joined #rust
2015-05-23 14:46:02	eddyb	(Concrete, Trait)Deref*
2015-05-23 14:46:34	eddyb	(*self).get(i) and self[..].get(i) should also work
2015-05-23 14:46:40	eddyb	(calling deref directly is not pretty)
2015-05-23 14:46:57	Gankro	eddyb: Eh, don't see why
2015-05-23 14:47:28	-->	nicoch (nicoch@moz-g02d7k.be) has joined #rust
2015-05-23 14:47:49	-->	d356 (d@moz-go99rq.res.bhn.net) has joined #rust
2015-05-23 14:48:00	-->	aengusm (root@moz-4uf.c35.243.162.IP) has joined #rust
2015-05-23 14:48:04	srjek	Can I also use Unsize<Trait> as a substitute for Trait?
2015-05-23 14:48:07	srjek	or rather, I'm running into issues trying to convert to &Trait in a generics.
2015-05-23 14:48:44	<--	larhat1 (Adium@moz-vlo5br.cable.virginm.net) has quit (Quit: Leaving.)
2015-05-23 14:50:03	<--	lyc (lyc@moz-jft.nr8.226.207.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 14:50:45	<--	jminer (Instantbird@moz-b1u.qch.163.66.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 14:51:06	<--	grodan (Mibbit@moz-o5eg8b.bredband.comhem.se) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-23 14:51:29	-->	fyolnish (fyolnish@moz-ehtogo.so-net.ne.jp) has joined #rust
2015-05-23 14:51:51	-->	kidto_ (gabriel@moz-72d.fff.84.91.IP) has joined #rust
2015-05-23 14:52:13	-->	dstrbad (dstrbad@moz-ggi.7af.217.31.IP) has joined #rust
2015-05-23 14:52:31	-->	dmac_ (dmac@moz-2ig65r.ca.comcast.net) has joined #rust
2015-05-23 14:52:59	-->	Kisogo (Kisogo@moz-a4d874.cicril.sbcglobal.net) has joined #rust
2015-05-23 14:53:33	cworth	OK, when I was here last, I had made it as far as:
2015-05-23 14:53:36	cworth	http://is.gd/vUT5Qb
2015-05-23 14:54:28	-->	playjax (chatzilla@moz-q2mbhk.optusnet.com.au) has joined #rust
2015-05-23 14:54:28	Azer	I need to have a string input such as "00101001" treated as base 2 and then cast it to base 10 as 41, but I cannot figure out how to do it
2015-05-23 14:54:29	cworth	But now I want to do something more dynamic, such as:
2015-05-23 14:54:49	cworth	map.insert("foo", ["two, "words"].connect(" "));
2015-05-23 14:54:58	Azer	I know about parse put that treats everything as base 10
2015-05-23 14:55:05	<--	winding-lines (textual@moz-uto957.ca.comcast.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-23 14:55:22	andschwa	when creating a struct, can a field refer to a prior field by any means?
2015-05-23 14:55:46	<--	kushal (kdas@moz-t649ku.202.sitibroadband.in) has quit (Ping timeout: 121 seconds)
2015-05-23 14:56:09	-->	jviereck (Adium@moz-alc7n2.dip0.t-ipconnect.de) has joined #rust
2015-05-23 14:56:38	<--	dmac_ (dmac@moz-2ig65r.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-23 14:56:45	andschwa	from what I can tell, no; so I just need to make the value for the field outside the struct creation, and refer to it inside
2015-05-23 14:57:02	<--	jviereck (Adium@moz-alc7n2.dip0.t-ipconnect.de) has quit (Quit: Leaving.)
2015-05-23 14:57:11	<--	dinfuehr (dinfuehr@moz-ldm58r.highway.telekom.at) has quit (Connection closed)
2015-05-23 14:57:32	-->	dinfuehr (dinfuehr@moz-ldm58r.highway.telekom.at) has joined #rust
2015-05-23 14:57:32	cworth	So I change from HashMap<&str, &str> to HashMap<&str, String>, but I keep running into difficulties doint what I want inside of the match.
2015-05-23 14:57:41	<--	runarberg (Mibbit@moz-4m7.c7b.17.89.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-23 14:57:48	<--	Kisogo (Kisogo@moz-a4d874.cicril.sbcglobal.net) has left #rust ("")
2015-05-23 14:58:12	cworth	At least now I understand why I can't do something like: None => &"foo".to_owned()
2015-05-23 14:58:40	Azer	for example in python I would do something like int('101101',2) and would get 45 back, how would I do this in Rust?
2015-05-23 14:59:10	-->	SkyEye (gaveen@moz-lnd.5md.157.175.IP) has joined #rust
2015-05-23 15:00:01	<--	dstrbad (dstrbad@moz-ggi.7af.217.31.IP) has quit (Connection closed)
2015-05-23 15:00:09	<--	ahunt (ahunt@moz-vq4hs5.collabora.co.uk) has quit (Ping timeout: 121 seconds)
2015-05-23 15:00:13	-->	ygrek (user@moz-8j9aeu.org.ua) has joined #rust
2015-05-23 15:00:24	-->	dstrbad (dstrbad@moz-ggi.7af.217.31.IP) has joined #rust
2015-05-23 15:00:30	<--	fyolnish (fyolnish@moz-ehtogo.so-net.ne.jp) has quit (Ping timeout: 121 seconds)
2015-05-23 15:00:41	geofft	Azer: there's from_str_radix on all the numeric types 
2015-05-23 15:00:56	cworth	I did just get this to at least work, but the sprinkling of .to_owned() feels in inelegant. Any suggestions:
2015-05-23 15:01:02	cworth	http://is.gd/nYc1Gw
2015-05-23 15:01:31	<--	tilde (namidasshu@moz-kfnfp2.retail.telecomitalia.it) has quit (Ping timeout: 121 seconds)
2015-05-23 15:01:38	<--	arielb1 (Ariel@moz-dqnh1v.red.bezeqint.net) has left #rust ("Ex-Chat")
2015-05-23 15:01:39	geofft	rusti: u32::from_str_radix("101101", 2) 
2015-05-23 15:01:40	--	Notice(playbot): Ok(45)
2015-05-23 15:01:55	<--	gaveen (gaveen@moz-q1m.97e.157.175.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 15:02:08	geofft	rusti: u16::from_str_radix("10000", 16) 
2015-05-23 15:02:09	--	Notice(playbot): Err(ParseIntError { kind: Overflow })
2015-05-23 15:02:37	<--	kidto_ (gabriel@moz-72d.fff.84.91.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 15:02:38	Azer	geofft Huh, not sure how I missed that, :-) Thanks
2015-05-23 15:02:55	geofft	it took me a bunch of doc-searching to find, to be fair :) 
2015-05-23 15:02:57	-->	clatour (clatour@moz-2dc34f.hlrn.qwest.net) has joined #rust
2015-05-23 15:03:26	geofft	one of the weird things is if you search for like 'i32', there are two 'std::i32' results, one the mod, one the type 
2015-05-23 15:03:34	geofft	so you should check both 
2015-05-23 15:03:35	<--	nicoch (nicoch@moz-g02d7k.be) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-23 15:03:39	-->	gandalf (zbraniecki@moz-cp7c4m.ca.comcast.net) has joined #rust
2015-05-23 15:04:07	<--	dinfuehr (dinfuehr@moz-ldm58r.highway.telekom.at) has quit (Connection closed)
2015-05-23 15:04:29	-->	dinfuehr (dinfuehr@moz-ldm58r.highway.telekom.at) has joined #rust
2015-05-23 15:04:36	<--	Pavel (Pavel@moz-a8qgi0.lidos.cz) has quit (Quit: Leaving)
2015-05-23 15:04:41	-->	meunierd (dmeunier@moz-glf54u.cpe.sourcecable.net) has joined #rust
2015-05-23 15:06:14	<--	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-23 15:06:48	-->	mkpankov (user@moz-bg3.jvq.149.83.IP) has joined #rust
2015-05-23 15:06:55	<--	Wild_Cat (Max@moz-fa8mvt.dsl.teksavvy.com) has quit (Ping timeout: 121 seconds)
2015-05-23 15:07:23	mkpankov	how come TRPL calls top-level declarations "items"?
2015-05-23 15:07:27	mkpankov	what's the difference?
2015-05-23 15:07:40	-->	swgillespie (swgillespie@moz-rn1.vmq.232.104.IP) has joined #rust
2015-05-23 15:07:55	<--	xcombelle (xcombelle@moz-1frl96.abo.wanadoo.fr) has quit (Quit: Leaving)
2015-05-23 15:08:01	<--	cursivecode (textual@moz-4u56i9.res.bhn.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-23 15:08:03	-->	plumshark (pat@moz-2i04hr.35n5.ltgp.0306.2602.IP) has joined #rust
2015-05-23 15:08:15	<--	Douman (Douman@moz-epkdg2.dynamic.mts-nn.ru) has quit (Quit: )
2015-05-23 15:08:15	mkpankov	(or not even top-level, but then I don't get the purpose of using this new term here at all)
2015-05-23 15:08:26	geofft	it's a term used in the language reference, macro chapter, etc. 
2015-05-23 15:08:30	<--	dinfuehr (dinfuehr@moz-ldm58r.highway.telekom.at) has quit (Ping timeout: 121 seconds)
2015-05-23 15:08:55	mkpankov	it looks like an another name for familiar thing, to me
2015-05-23 15:09:15	cworth	But even what I have working above doesn't help me in the real program I'm trying to write, (because I have a lot of static structs with string literals within them, so I don't have anything owned to use to lookup into my HashMap with). I'm clearly missing some Rust intuition around String, &str, etc.
2015-05-23 15:09:18	mkpankov	so the question is - why is it called that?
2015-05-23 15:09:48	geofft	https://doc.rust-lang.org/reference.html#items-and-attributes 
2015-05-23 15:10:05	geofft	it looks like "item" is a little more generic than "declaration" (or "definition") 
2015-05-23 15:10:40	mkpankov	geofft: ah, thanks, got it
2015-05-23 15:10:54	<--	copycat (Thunderbird@moz-mm4e60.singnet.com.sg) has quit (Client exited)
2015-05-23 15:11:00	andschwa	is there a trait for +, *, abs, sqrt, and sin? like a "number" trait?
2015-05-23 15:11:23	geofft	I believe no :( 
2015-05-23 15:11:23	<--	Guest67 (textual@moz-gfs9v0.fios.verizon.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-23 15:11:55	-->	jshs (jshs@moz-5ge6fc.dip0.t-ipconnect.de) has joined #rust
2015-05-23 15:11:55	<--	dstrbad (dstrbad@moz-ggi.7af.217.31.IP) has quit (Connection closed)
2015-05-23 15:12:09	andschwa	I was trying to make my fitness function generic over an ExactSizeIterator with Item's that can implement those functions
2015-05-23 15:12:12	-->	cursivecode (textual@moz-4u56i9.res.bhn.net) has joined #rust
2015-05-23 15:12:21	-->	dstrbad (dstrbad@moz-ggi.7af.217.31.IP) has joined #rust
2015-05-23 15:12:21	-->	blank_name (blank_name@moz-d5sbf3.mi.frontiernet.net) has joined #rust
2015-05-23 15:12:50	<--	d356 (d@moz-go99rq.res.bhn.net) has quit (Client exited)
2015-05-23 15:12:54	-->	Guest67 (textual@moz-gfs9v0.fios.verizon.net) has joined #rust
2015-05-23 15:13:25	<--	zhoeon (fc@moz-cuhqb2.cable.teksavvy.com) has quit (Quit: leaving)
2015-05-23 15:13:26	<--	freefall (ff@moz-p76.o9j.219.91.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 15:14:00	<--	Guest67 (textual@moz-gfs9v0.fios.verizon.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-23 15:14:00	<--	dstrbad (dstrbad@moz-ggi.7af.217.31.IP) has quit (Connection closed)
2015-05-23 15:14:09	-->	mbudde (mbudde@moz-v8g.lim.109.2.IP) has joined #rust
2015-05-23 15:14:23	-->	dstrbad (dstrbad@moz-ggi.7af.217.31.IP) has joined #rust
2015-05-23 15:14:34	bluss	!num
2015-05-23 15:14:44	bluss	maybe rustbot doesn't know that.
2015-05-23 15:14:48	bluss	!crate num @ andschwa 
2015-05-23 15:14:49	+rustbot	num (0.1.24) - Simple numerics. This crate contains basic arbitrary-sized integer,rational, and complex types. -> https://crates.io/crates/num
2015-05-23 15:15:04	bluss	and traits for numbers ^
2015-05-23 15:15:09	andschwa	YESSS
2015-05-23 15:15:12	andschwa	that's what I needed
2015-05-23 15:15:16	-->	freefall (ff@moz-5uk5u4.tor-exit.network) has joined #rust
2015-05-23 15:15:22	-->	nicknikolov (nicknikolov@moz-71f.uot.55.31.IP) has joined #rust
2015-05-23 15:15:34	<--	jbomo (dkd@moz-uol4mm.fios.verizon.net) has quit (Quit: )
2015-05-23 15:15:38	-->	lenstr (lenstr@moz-el8.vju.25.171.IP) has joined #rust
2015-05-23 15:16:04	eddyb	hehe there's a missing space after integer,
2015-05-23 15:17:00	eddyb	mkpankov: because top-level "entities" are not restricted to top-level
2015-05-23 15:17:00	<--	dstrbad (dstrbad@moz-ggi.7af.217.31.IP) has quit (Connection closed)
2015-05-23 15:17:06	-->	lyra2 (kilm@moz-0pbl66.static.zebra.lt) has joined #rust
2015-05-23 15:17:14	srjek	It there an example of being generic over a trait somewhere? Because I'm doing it wrong.
2015-05-23 15:17:19	-->	winding-lines (textual@moz-uto957.ca.comcast.net) has joined #rust
2015-05-23 15:17:19	-->	mkoskar (mkoskar@moz-67r1nt.torservers.net) has joined #rust
2015-05-23 15:17:23	-->	Lilly (Lilly@moz-pfkvo9.bredband.comhem.se) has joined #rust
2015-05-23 15:17:23	eddyb	so using "top-level" is problematic
2015-05-23 15:17:24	-->	dstrbad (dstrbad@moz-ggi.7af.217.31.IP) has joined #rust
2015-05-23 15:17:32	@steveklabnik	srjek: fn foo<T: SomeTrait>(x: T) ?
2015-05-23 15:17:37	andschwa	srjek: http://doc.rust-lang.org/stable/book/traits.html
2015-05-23 15:17:40	eddyb	and impl's are not definitions
2015-05-23 15:17:42	andschwa	I'm doing the same right now
2015-05-23 15:17:49	eddyb	steveklabnik: no
2015-05-23 15:17:52	eddyb	andschwa: no
2015-05-23 15:17:55	srjek	maybe I'm wording that wrong
2015-05-23 15:18:05	@steveklabnik	eddyb: interestingly, the reason that space is missing is becuase there's a linebreak there in the cargo.toml
2015-05-23 15:18:10	-->	Guest67 (textual@moz-gfs9v0.fios.verizon.net) has joined #rust
2015-05-23 15:18:18	-->	jadbaires (jadrian@moz-dhpu9p.dfcu.o1j7.08a0.2001.IP) has joined #rust
2015-05-23 15:18:19	srjek	Generic over a generic type that impls some generic trait
2015-05-23 15:18:20	eddyb	srjek: fn foo<Trait: ?Sized, T: Unsize<Trait>>(x: T) -> Box<Trait> { Box::new(x) }
2015-05-23 15:18:26	eddyb	that should work
2015-05-23 15:18:40	@steveklabnik	what is Unsize?
2015-05-23 15:18:48	srjek	magic.
2015-05-23 15:18:50	eddyb	steveklabnik: DST magic
2015-05-23 15:18:54	@steveklabnik	huh
2015-05-23 15:18:56	@steveklabnik	never seen it before
2015-05-23 15:19:05	eddyb	because we didn't have DST until one week ago or so
2015-05-23 15:19:09	@steveklabnik	lol
2015-05-23 15:19:15	-->	ferdinand (Mibbit@moz-i7cb3r.fios.verizon.net) has joined #rust
2015-05-23 15:19:23	-->	fengshaun (fengshaun@moz-oagll1.cpe.pppoe.ca) has joined #rust
2015-05-23 15:19:28	-->	copycat (Thunderbird@moz-mm4e60.singnet.com.sg) has joined #rust
2015-05-23 15:19:30	<--	nicknikolov (nicknikolov@moz-71f.uot.55.31.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 15:19:56	eddyb	Unsize is for being generic over T -> Trait and [T; N] -> [T] relationships
2015-05-23 15:20:10	@steveklabnik	neat
2015-05-23 15:20:31	eddyb	the other trait is CoerceUnsized, implemented on pointers (including smart pointers) to opt into coercions. Unsize is necessary to bound CoerceUnsized impls
2015-05-23 15:20:55	-->	Guest____ (textual@moz-rtn.fg7.77.192.IP) has joined #rust
2015-05-23 15:21:04	-->	trigen (MSX@moz-sgda69.static.versatel.nl) has joined #rust
2015-05-23 15:21:15	eddyb	steveklabnik: this is a good overview, I guess (looks nicer than the RFC and, well, it's correct. the RFC even had syntax errors :P) http://doc.rust-lang.org/nightly/std/ops/trait.CoerceUnsized.html
2015-05-23 15:21:22	-->	brainproxy (michael@moz-9vjtig.mo.charter.com) has joined #rust
2015-05-23 15:21:55	-->	Nextra (Nextra@moz-5i3.5v0.233.89.IP) has joined #rust
2015-05-23 15:22:04	eddyb	hang on, what's with the double impls for smart pointers?
2015-05-23 15:22:23	<--	madmalik (uid13697@moz-lfin5p.brockwell.irccloud.com) has quit (Quit: Connection closed for inactivity)
2015-05-23 15:22:26	-->	Astrum|Lap (Astrum|Lap@moz-skcefh.co.comcast.net) has joined #rust
2015-05-23 15:22:30	eddyb	is this a rustdoc bug?
2015-05-23 15:22:34	eddyb	(triple, even)
2015-05-23 15:22:35	<--	dstrbad (dstrbad@moz-ggi.7af.217.31.IP) has quit (Connection closed)
2015-05-23 15:22:49	eddyb	impl<T, U> CoerceUnsized<Box<U>> for Box<T> where T: Unsize<U> + ?Sized, U: ?Sized
2015-05-23 15:22:54	eddyb	impl<T: ?Sized + Unsize<U>, U: ?Sized> CoerceUnsized<Box<U>> for Box<T>
2015-05-23 15:23:04	eddyb	that's the exact same impl
2015-05-23 15:23:14	eddyb	and then impl<T, U> CoerceUnsized<Box<U>> for Box<T> shouldn't even compile
2015-05-23 15:23:23	-->	eerie (eerie@moz-s5i4j9.red.bezeqint.net) has joined #rust
2015-05-23 15:23:38	-->	corby (Mibbit@moz-aah3la.dhcp.embarqhsd.net) has joined #rust
2015-05-23 15:24:22	<--	cursivecode (textual@moz-4u56i9.res.bhn.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-23 15:24:58	<--	winding-lines (textual@moz-uto957.ca.comcast.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-23 15:25:25	<--	brainproxy (michael@moz-9vjtig.mo.charter.com) has quit (Ping timeout: 121 seconds)
2015-05-23 15:25:46	<--	trigen (MSX@moz-sgda69.static.versatel.nl) has quit (Ping timeout: 121 seconds)
2015-05-23 15:25:52	-->	mark_edward (mark@moz-dg4mrp.in.comcast.net) has joined #rust
2015-05-23 15:26:14	-->	jpg (jpg@moz-8qqr98.internode.on.net) has joined #rust
2015-05-23 15:26:32	andschwa	say I the constrait that T::item: Float; how can I then use 0 as T::Item? I get an error about non-scalar cast
2015-05-23 15:26:35	<--	forgottenone (forgottenon@moz-h3n.fd4.131.217.IP) has quit (Quit: Konversation terminated!)
2015-05-23 15:26:59	-->	killercup (killercup@moz-qj5qhi.dip0.t-ipconnect.de) has joined #rust
2015-05-23 15:27:04	<--	ignat (chatzilla@moz-veqt2u.ifmo.ru) has quit (Ping timeout: 121 seconds)
2015-05-23 15:27:11	-->	simonoram (simonoram@moz-pllbvg.cable.virginm.net) has joined #rust
2015-05-23 15:27:35	<--	aengusm (root@moz-4uf.c35.243.162.IP) has quit (Quit: leaving)
2015-05-23 15:27:57	<--	FrozenCow (FrozenCow@moz-i2tvv4.chello.nl) has quit (Connection closed)
2015-05-23 15:28:15	-->	danyel (danyel@moz-0irepv.dip0.t-ipconnect.de) has joined #rust
2015-05-23 15:28:26	andschwa	ah don't worry, reading more about casting now
2015-05-23 15:29:15	cworth	Here's my question made concrete. This works: http://is.gd/NeFJ1U While this is obviously broken: http://is.gd/4AqBtT
2015-05-23 15:29:46	cworth	I understand the incompatible match arms error, but I'm not sure what the cleanest way to rewrite the program would be.
2015-05-23 15:30:13	<--	Guest67 (textual@moz-gfs9v0.fios.verizon.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-23 15:30:54	-->	ignat (chatzilla@moz-veqt2u.ifmo.ru) has joined #rust
2015-05-23 15:31:23	<--	jadbaires (jadrian@moz-dhpu9p.dfcu.o1j7.08a0.2001.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 15:31:43	SpaceManiac	cworth: I was able to get them to align by using 'val as &str' and '*m'
2015-05-23 15:32:03	-->	niconii (nicole@moz-hnv1fo.frgo.qwest.net) has joined #rust
2015-05-23 15:32:04	--	Mode #rust [+o niconii] by ChanServ
2015-05-23 15:32:21	<--	ignat (chatzilla@moz-veqt2u.ifmo.ru) has quit (Quit: ChatZilla 0.9.91.1 [SeaMonkey 2.33.1/20150418150713])
2015-05-23 15:32:32	-->	jadbaires (jadrian@moz-kqu6hi.dfcu.o1j7.08a0.2001.IP) has joined #rust
2015-05-23 15:32:52	cworth	SpaceManiac: Thanks! ("as" is new to me---I'll try to read up)
2015-05-23 15:34:46	cworth	SpaceManiac: And that's definitely better than my flailing around, (such as decorating every string literal with .to_owned() and still not successfully compiling)...
2015-05-23 15:34:51	<--	mkpankov (user@moz-bg3.jvq.149.83.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 15:35:26	<--	lenstr (lenstr@moz-el8.vju.25.171.IP) has quit (Connection closed)
2015-05-23 15:35:45	-->	Guest67 (textual@moz-gfs9v0.fios.verizon.net) has joined #rust
2015-05-23 15:36:17	-->	lenstr (lenstr@moz-el8.vju.25.171.IP) has joined #rust
2015-05-23 15:36:19	-->	kushal (kdas@moz-t649ku.202.sitibroadband.in) has joined #rust
2015-05-23 15:36:28	<--	idegen (greg@moz-9c4nle.or.frontiernet.net) has quit (Quit: Leaving.)
2015-05-23 15:36:40	<--	swgillespie (swgillespie@moz-rn1.vmq.232.104.IP) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-23 15:37:03	exalt	what does the ' mean in &'static str ?
2015-05-23 15:37:32	Havvy	steveklabnik:  https://www.reddit.com/r/rust/comments/370mok/new_to_rust_reading_book_enums_page_incomplete/
2015-05-23 15:37:33	-->	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has joined #rust
2015-05-23 15:37:55	&mbrubeck	exalt: 'static is a lifetime: http://doc.rust-lang.org/nightly/book/lifetimes.html
2015-05-23 15:37:57	<--	summerlight_ (summerlight@moz-99k.2mj.130.121.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 15:37:58	cworth	exalt: "'static" is a "lifetime specifier"
2015-05-23 15:39:04	-->	tikue (tim@moz-s0e.i7q.141.50.IP) has joined #rust
2015-05-23 15:39:05	exalt	thanx
2015-05-23 15:39:19	&mbrubeck	andschwa: You may have found the answer already, but if not: `T::Item::zero()` should work
2015-05-23 15:39:34	&mbrubeck	or you can use NumCast
2015-05-23 15:40:25	andschwa	mbrubeck: both of those sound much better than transmute
2015-05-23 15:41:41	-->	JuggleTux (tux@moz-ho0t1f.adslplus.ch) has joined #rust
2015-05-23 15:41:55	-->	lutter1 (lutter@moz-7v7ueu.PUBLIC.monkeybrains.net) has joined #rust
2015-05-23 15:42:10	<--	tikue (tim@moz-s0e.i7q.141.50.IP) has quit (Connection closed)
2015-05-23 15:42:32	-->	psd_ (psd@moz-ihb3m3.mtnl.net.in) has joined #rust
2015-05-23 15:42:55	<--	Rym (y@moz-c2u.sd4.38.217.IP) has quit (Connection closed)
2015-05-23 15:43:15	<--	kushal (kdas@moz-t649ku.202.sitibroadband.in) has quit (Ping timeout: 121 seconds)
2015-05-23 15:43:17	-->	vfetwnuncszu (david@moz-3u3d5k.gyrae.net) has joined #rust
2015-05-23 15:43:22	<--	yota (sdouche@moz-8ui5li.3iqc.r856.0e35.2a01.IP) has quit (Quit: WeeChat 1.1.1)
2015-05-23 15:43:27	--	vfetwnuncszu is now known as dcrewi
2015-05-23 15:43:57	-->	Rym (y@moz-c2u.sd4.38.217.IP) has joined #rust
2015-05-23 15:44:05	-->	gsingh93 (gulshan@moz-ln1ktu.st3l.iv8o.0004.2601.IP) has joined #rust
2015-05-23 15:44:08	-->	acrichto (acrichto@moz-u3dg2t.sfo1.mozilla.com) has joined #rust
2015-05-23 15:44:08	--	Mode #rust [+o acrichto] by ChanServ
2015-05-23 15:44:48	<--	corby (Mibbit@moz-aah3la.dhcp.embarqhsd.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-23 15:45:31	<--	jadbaires (jadrian@moz-kqu6hi.dfcu.o1j7.08a0.2001.IP) has quit (Quit: Konversation terminated!)
2015-05-23 15:45:38	-->	jadbaires (jadrian@moz-kqu6hi.dfcu.o1j7.08a0.2001.IP) has joined #rust
2015-05-23 15:45:54	<--	psd (psd@moz-7jcg17.mtnl.net.in) has quit (Ping timeout: 121 seconds)
2015-05-23 15:46:46	-->	lucian (lucian@moz-2c3pda.cable.virginm.net) has joined #rust
2015-05-23 15:46:48	Morten	Is it possible to do a typecast when destructuring a tuple?
2015-05-23 15:46:59	-->	lyc (lyc@moz-jft.nr8.226.207.IP) has joined #rust
2015-05-23 15:47:18	<--	lenstr (lenstr@moz-el8.vju.25.171.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 15:48:07	-->	ziocroc (ziocroc@moz-bfu.33o.74.151.IP) has joined #rust
2015-05-23 15:48:09	Morten	I have a "struct Square(pub u8)", and I would like to write "let Square(pos as i8) = square;"
2015-05-23 15:48:20	Morten	Or something like that, to make pos i8
2015-05-23 15:48:42	eddyb	you can just use `square.0 as i8`
2015-05-23 15:49:33	-->	nodweber (nodweber@moz-knt.fgq.178.5.IP) has joined #rust
2015-05-23 15:49:52	-->	asQuirre_ (asQuirreL@moz-ro1qqu.ox.ac.uk) has joined #rust
2015-05-23 15:50:01	srjek	I'ml having issues getting my generics to recognize/require a type parameter as a trait. http://is.gd/7xDEiK
2015-05-23 15:50:33	-->	lenstr (lenstr@moz-el8.vju.25.171.IP) has joined #rust
2015-05-23 15:50:47	<--	lucian (lucian@moz-2c3pda.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2015-05-23 15:51:01	<--	lyc (lyc@moz-jft.nr8.226.207.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 15:51:51	srjek	also might just being doing terrible things in that code. Through I suspect I still need to do a transmute in my trait slice-like's index impl anyway
2015-05-23 15:52:05	-->	ericye16 (ericye16@moz-pr6.5rf.141.209.IP) has joined #rust
2015-05-23 15:52:20	iu	What is the best way to tell the compiler that I do want to pass a negative integer when the actual type is unsigned?
2015-05-23 15:52:42	<--	asQuirreL (asQuirreL@moz-ro1qqu.ox.ac.uk) has quit (Ping timeout: 121 seconds)
2015-05-23 15:52:53	srjek	something like (-1 as usize) ?
2015-05-23 15:53:16	-->	dmac_ (dmac@moz-2ig65r.ca.comcast.net) has joined #rust
2015-05-23 15:53:16	iu	It complains.
2015-05-23 15:53:29	iu	I would like to avoid muting warnings.
2015-05-23 15:53:35	@niconii	playbot: (-1i8) as u8
2015-05-23 15:53:36	--	Notice(playbot): 255
2015-05-23 15:53:41	eddyb	srjek: let me look at it
2015-05-23 15:53:42	iu	niconii: Aha!
2015-05-23 15:53:53	<--	nodweber (nodweber@moz-knt.fgq.178.5.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 15:53:54	@niconii	(actually you don't need the parens, but)
2015-05-23 15:53:56	iu	niconii: That’s where the parentheses should go.
2015-05-23 15:54:00	<--	KLP (KLP@moz-qdcjho.res.rr.com) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-05-23 15:54:03	iu	niconii: You do.
2015-05-23 15:54:14	@niconii	playbot: -1i8 as u8
2015-05-23 15:54:16	--	Notice(playbot): 255
2015-05-23 15:54:51	@niconii	you just need to specify a type suffix is all
2015-05-23 15:54:57	eddyb	srjek: minor nit: the official style has no spaces before :
2015-05-23 15:55:02	@niconii	playbot: -1 as u8 // fails
2015-05-23 15:55:03	--	Notice(playbot): <anon>:9:9: 9:11 error: unary negation of unsigned integers may be removed in the future
2015-05-23 15:55:04	--	Notice(playbot): <anon>:9         -1 as u8 // fails
2015-05-23 15:55:04	--	Notice(playbot): output truncated; full output at: http://bit.ly/1Am5Lh0
2015-05-23 15:55:06	<--	nstoddard (nstoddard@moz-ck2ddi.jcf6.2eo7.0009.2601.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 15:55:22	eddyb	(or spaces after ( and before ))
2015-05-23 15:55:28	-->	skeithc (skeith@moz-67r1nt.torservers.net) has joined #rust
2015-05-23 15:55:30	iu	niconii: You’re right.
2015-05-23 15:55:38	iu	niconii: Thank you!
2015-05-23 15:55:44	@niconii	iu: yep, no problem
2015-05-23 15:55:58	-->	tristanseifert (tristanseif@moz-r0t7ns.res.rr.com) has joined #rust
2015-05-23 15:56:02	-->	logan_e (logan_e@moz-k7b29v.hfc.comcastbusiness.net) has joined #rust
2015-05-23 15:56:29	<--	untitaker (untitaker@moz-4va3pu.highway.telekom.at) has quit (Ping timeout: 121 seconds)
2015-05-23 15:56:49	iu	Does anybody know what `iter::repeat(unsafe { mem::uninitialized() }).take(size).collect::<Vec<_>>()` will be optimized to?
2015-05-23 15:56:51	eddyb	srjek: http://is.gd/9QAo74
2015-05-23 15:57:00	eddyb	srjek: this shows that using transmute is problematic
2015-05-23 15:57:05	-->	yota (sdouche@moz-6nob1i.3iqc.r856.0e35.2a01.IP) has joined #rust
2015-05-23 15:57:24	<--	dmac_ (dmac@moz-2ig65r.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-23 15:57:29	srjek	yeah
2015-05-23 15:57:39	iu	I’m trying to express the idea that I need a chunk of uninitialized memory.
2015-05-23 15:57:46	<--	tav (tav@moz-ivrq8h.range31-52.btcentralplus.com) has quit (Client exited)
2015-05-23 15:58:16	srjek	I don't know how to work around that and still go between TraitObjects and &Trait through
2015-05-23 15:58:32	@niconii	iu: any particular reason?
2015-05-23 15:58:46	iu	niconii: Messing with some C code.
2015-05-23 15:58:56	_habnabit	so i'm not really sure how to define this macro; my two attempts are http://is.gd/Uuld7p and http://is.gd/gK8gKl -- i understand why it fails in both cases, but i'm not sure what i can do. the only solution i can think of that compiles is to take a $name2:ident and make a second function with that name. or, could i do something with making a module containing just the internal function?
2015-05-23 15:58:57	srjek	I might be able to macro get_vtable, but the implementing Index for my trait-like is going to be more problematic.
2015-05-23 15:59:00	-->	grodan (Mibbit@moz-o5eg8b.bredband.comhem.se) has joined #rust
2015-05-23 15:59:02	andschwa	all right, from and NumCast is frustrating me; can I write this function as generic over T: ExactSizeIterator, T::Item is an f64?
2015-05-23 15:59:08	<--	Tobba (Tobba@moz-o13d22.bredband.telia.com) has quit (Connection closed)
2015-05-23 15:59:11	<--	doomrobo (doomrobo@moz-e5v4r3.261j.6edk.2000.2604.IP) has quit (Quit: Leaving)
2015-05-23 15:59:30	eddyb	srjek: http://is.gd/kTWKJQ
2015-05-23 15:59:33	-->	tav (tav@moz-ivrq8h.range31-52.btcentralplus.com) has joined #rust
2015-05-23 15:59:34	iu	niconii: Trying to allocate a buffer for a C function.
2015-05-23 15:59:48	iu	niconii: I thought I could do without libc::malloc
2015-05-23 15:59:58	-->	untitaker (untitaker@moz-sih8lo.highway.telekom.at) has joined #rust
2015-05-23 16:00:01	<--	tristanseifert (tristanseif@moz-r0t7ns.res.rr.com) has quit (Ping timeout: 121 seconds)
2015-05-23 16:00:09	<--	Azer (Mibbit@moz-ro5v86.cable.virginm.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-23 16:00:10	-->	fyolnish (fyolnish@moz-ehtogo.so-net.ne.jp) has joined #rust
2015-05-23 16:00:13	srjek	huh
2015-05-23 16:00:13	@niconii	iu: well, one issue is, with this code, the first item will be uninitialized, but then it'll just be repeated
2015-05-23 16:00:15	-->	Tobba (Tobba@moz-o13d22.bredband.telia.com) has joined #rust
2015-05-23 16:00:35	-->	thiblahute_ (tsaunier@moz-68f5rr.rev.sfr.net) has joined #rust
2015-05-23 16:00:36	-->	sommoyogurt (sommoyogurt@moz-tm38ps.21-151.libero.it) has joined #rust
2015-05-23 16:00:42	<--	DemonOne (Avi@moz-tsjccr.red.bezeqint.net) has quit (Ping timeout: 121 seconds)
2015-05-23 16:00:42	-->	james4k__ (james@moz-1pbfu0.consolidated.net) has joined #rust
2015-05-23 16:00:48	eddyb	srjek: it safe-guards against calling get_vtable with the wrong values
2015-05-23 16:00:50	srjek	It's not compile-time when I suspect it could be, but it works.
2015-05-23 16:01:04	@niconii	iu: so if the memory goes like [1, 2, 3, 4, 5, 6, 7, 8], you'd just get [1, 1, 1, 1, 1, 1, 1, 1, 1, 1...]
2015-05-23 16:01:04	eddyb	it is compile-time
2015-05-23 16:01:18	iu	niconii: I think I saw it somewhere, and the claim was that the compiler should optimize it away to nothing. Not sure though whether the code was exactly like that.
2015-05-23 16:01:20	eddyb	srjek: I mean, the check optimizes out just fine
2015-05-23 16:01:24	srjek	I mean, it doesn't compile-time error
2015-05-23 16:01:26	srjek	yeah
2015-05-23 16:01:34	eddyb	well, the Unsize bound should keep errors away
2015-05-23 16:01:42	@niconii	iu: also, it won't be the same chunk of memory, because collecting to a Vec allocates memory on the heap
2015-05-23 16:02:02	eddyb	srjek: the compiler doesn't implement T: Unsize<U> for any sized U
2015-05-23 16:02:06	srjek	Actually, yeah, it should
2015-05-23 16:02:18	andschwa	gah I wish these docs had more examples :/
2015-05-23 16:02:21	eddyb	but there is no !Sized so Unsize is not as restricted as it could be
2015-05-23 16:02:31	-->	andresv (textual@moz-kvanfr.dyn.estpak.ee) has joined #rust
2015-05-23 16:02:33	eddyb	srjek: keep in mind your thing should work just fine with [T] instead of Trait
2015-05-23 16:02:54	@niconii	iu: if you want an uninitialized chunk of memory you'll probably want something more like `let a: [u8; 100] = unsafe { mem::uninitialized() };`
2015-05-23 16:02:58	<--	datalus (datalus@moz-oq4ug8.mycingular.net) has quit (Ping timeout: 121 seconds)
2015-05-23 16:03:13	<--	Halamix2 (Halamix2@moz-prmq1h.syrion.pl) has left #rust ("Okej, chyba mi starczy na dziś")
2015-05-23 16:03:17	@niconii	iu: not entirely sure if there's an easy way to do it on the heap
2015-05-23 16:03:36	iu	niconii: The thing is that the size is not known at compile time.
2015-05-23 16:03:45	iu	niconii: It should be allocated on the heap.
2015-05-23 16:04:10	eddyb	srjek: and you can restrict unsafety http://is.gd/mr93aw
2015-05-23 16:04:38	eddyb	srjek: so, [T]: all you have to do is maybe replace *mut () with usize, to be somewhat more generic (it shouldn't really matter)
2015-05-23 16:04:41	<--	lyra2 (kilm@moz-0pbl66.static.zebra.lt) has quit (Quit: Leaving)
2015-05-23 16:04:50	geofft	iu: there is std::rt::heap::allocate, but it's unstable / nightly 
2015-05-23 16:05:09	-->	lyra2 (kilm@moz-0pbl66.static.zebra.lt) has joined #rust
2015-05-23 16:05:12	-->	tristanseifert (tristanseif@moz-r0t7ns.res.rr.com) has joined #rust
2015-05-23 16:05:20	<--	fyolnish (fyolnish@moz-ehtogo.so-net.ne.jp) has quit (Ping timeout: 121 seconds)
2015-05-23 16:05:31	eddyb	srjek: and be careful to never access the vtable, but use size_of_val, align_of_val and drop_in_place
2015-05-23 16:06:01	srjek	Was never planning on touching the vtable pointer myself, just on using it to recreate the trait objects.
2015-05-23 16:06:10	iu	niconii, geofft: Maybe it’s not that important. I guess I’ll just allocate initialized with repeat(0.0).
2015-05-23 16:06:32	iu	niconii, geofft: Thanks.
2015-05-23 16:06:34	-->	pyon_ (pyon@moz-b0l.mdl.7.179.IP) has joined #rust
2015-05-23 16:06:38	eddyb	srjek: http://doc.rust-lang.org/nightly/std/mem/fn.size_of_val.html for example
2015-05-23 16:06:45	@niconii	iu: you could just do vec![0.0; size] in that case
2015-05-23 16:06:55	-->	dinfuehr (dinfuehr@moz-ldm58r.highway.telekom.at) has joined #rust
2015-05-23 16:06:59	<--	ParadoxSpiral_ (ParadoxSpir@moz-3qhqia.dip0.t-ipconnect.de) has quit (Quit: cya)
2015-05-23 16:06:59	@niconii	playbot: vec![0.0; 8]
2015-05-23 16:07:00	eddyb	srjek: should be able to pass &Trait to it to get the real size. or &[T]. or any type, really
2015-05-23 16:07:00	--	Notice(playbot): [0, 0, 0, 0, 0, 0, 0, 0]
2015-05-23 16:07:05	iu	niconii: Cool! I didn’t know about that shortcut!
2015-05-23 16:07:07	<--	pyon (pyon@moz-b0l.mdl.7.179.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 16:07:13	iu	Good to know)
2015-05-23 16:07:49	-->	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has joined #rust
2015-05-23 16:08:49	--	pyon_ is now known as pyon
2015-05-23 16:09:13	<--	johnsoft (johnsoft@moz-69mrig.res.rr.com) has quit (Ping timeout: 121 seconds)
2015-05-23 16:09:17	-->	johnsoft (johnsoft@moz-69mrig.res.rr.com) has joined #rust
2015-05-23 16:09:23	<--	ericye16 (ericye16@moz-pr6.5rf.141.209.IP) has quit (Client exited)
2015-05-23 16:10:55	<--	gandalf (zbraniecki@moz-cp7c4m.ca.comcast.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-23 16:10:58	<--	dinfuehr (dinfuehr@moz-ldm58r.highway.telekom.at) has quit (Ping timeout: 121 seconds)
2015-05-23 16:11:02	-->	swgillespie (swgillespie@moz-rn1.vmq.232.104.IP) has joined #rust
2015-05-23 16:11:35	<--	agile (mike@moz-m71dqt.rcsntx.sbcglobal.net) has quit (Connection closed)
2015-05-23 16:11:39	<--	simonoram (simonoram@moz-pllbvg.cable.virginm.net) has quit (Client exited)
2015-05-23 16:12:08	Morten	Is there a reason why this doesn't work? http://pastebin.com/yNxZWPpc
2015-05-23 16:12:13	<--	egor-laufer (uid78368@moz-0b5gqs.highgate.irccloud.com) has quit (Quit: Connection closed for inactivity)
2015-05-23 16:12:14	Morten	Apparently I can't match against struct fields, but regular variables work just fine
2015-05-23 16:12:29	srjek	eddyb: ...Did your last playground just crash the compiler?
2015-05-23 16:13:14	-->	jmbto (jmbto@moz-raeuva.hca5.8frp.0e35.2a01.IP) has joined #rust
2015-05-23 16:13:25	eddyb	huh
2015-05-23 16:13:26	-->	nodweber (nodweber@moz-knt.fgq.178.5.IP) has joined #rust
2015-05-23 16:13:43	eddyb	oh I didn't see that
2015-05-23 16:13:54	eddyb	srjek: buggy casts of raw pointers. the one before works, right?
2015-05-23 16:14:00	srjek	yeah
2015-05-23 16:14:43	eddyb	I'm not sure the value is right, hmm
2015-05-23 16:15:11	-->	mdcox (mdcox@moz-5a670o.pubnet.pdx.edu) has joined #rust
2015-05-23 16:15:17	lyxia	Morten: Note that the first still evaluates to true if you replace (2, three) by (2, four).
2015-05-23 16:15:22	-->	desophos (desophos@moz-oulfv4.98ku.27p0.6000.2606.IP) has joined #rust
2015-05-23 16:15:28	eddyb	ah, it's fine, "foo".as_bytes().as_ptr() produces a similar pointer
2015-05-23 16:16:11	lyxia	Morten: Match patterns bind new variables, you can't match against the value contained inside a variable.
2015-05-23 16:16:32	Morten	lyxia: ohh
2015-05-23 16:16:42	Morten	lyxia: You can only match against constants?
2015-05-23 16:16:46	@niconii	Morten: rather than comparing against the variable "three", what it's actually doing is going down the list and saying
2015-05-23 16:16:57	lyxia	Morten: Litteral constants yes.
2015-05-23 16:16:59	-->	FrozenCow (FrozenCow@moz-i2tvv4.chello.nl) has joined #rust
2015-05-23 16:17:00	-->	nicknikolov (nicknikolov@moz-7nc.uot.55.31.IP) has joined #rust
2015-05-23 16:17:16	-->	derps (Mibbit@moz-tpjl46.co.comcast.net) has joined #rust
2015-05-23 16:17:26	@niconii	Morten: "well, this doesn't match (2, 2), but it does match (2, x) where x is any number, so we'll do this path"
2015-05-23 16:17:33	mdcox	Hmmm, the term crate doesn't mention raw mode anywhere...does anyone know if there's something for doing that or if I'm going to have to hack something together?
2015-05-23 16:17:54	-->	dcb (textual@moz-j72nfe.ca.comcast.net) has joined #rust
2015-05-23 16:18:01	@niconii	Morten: it's just that you happened to call x "three", which is a separate "three" from your variable
2015-05-23 16:18:06	<--	gsingh93 (gulshan@moz-ln1ktu.st3l.iv8o.0004.2601.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 16:18:36	<--	logan_e (logan_e@moz-k7b29v.hfc.comcastbusiness.net) has quit (Client exited)
2015-05-23 16:18:55	Morten	niconii: I see
2015-05-23 16:19:16	Morten	niconii: Any particular reason you can't match against variables? It would be really useful to not have match guards everywhere
2015-05-23 16:19:33	<--	Kxepal (Miranda@moz-ggmu3h.pppoe.mtu-net.ru) has quit (Ping timeout: 121 seconds)
2015-05-23 16:20:02	-->	hyunsik (hyunsik@moz-3qgjl9.ca.comcast.net) has joined #rust
2015-05-23 16:20:06	@niconii	Morten: an illustration of what i mean: http://is.gd/AQmUiq
2015-05-23 16:20:25	@niconii	Morten: probably because it'd just be ambiguous with matching
2015-05-23 16:20:47	-->	bkoropoff (bkoropoff@moz-kthi5c.wa.comcast.net) has joined #rust
2015-05-23 16:20:48	@niconii	match (2, num.n) { ... } would work though
2015-05-23 16:21:03	geofft	mdcox: there are a few termios bindings on crates.io 
2015-05-23 16:21:08	<--	nicknikolov (nicknikolov@moz-7nc.uot.55.31.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 16:21:10	-->	Kxepal (Miranda@moz-fqukoc.pppoe.mtu-net.ru) has joined #rust
2015-05-23 16:21:26	-->	kidto_ (gabriel@moz-72d.fff.84.91.IP) has joined #rust
2015-05-23 16:21:39	-->	ParadoxSpiral (ParadoxSpir@moz-3qhqia.dip0.t-ipconnect.de) has joined #rust
2015-05-23 16:21:41	mdcox	geofft: Awesome, thanks! Don't know why I didn't think to search for that.
2015-05-23 16:21:48	-->	trigen (MSX@moz-sgda69.static.versatel.nl) has joined #rust
2015-05-23 16:22:03	-->	godlikesme (godlikesme@moz-2a2.dsd.174.79.IP) has joined #rust
2015-05-23 16:22:08	<--	ParadoxSpiral (ParadoxSpir@moz-3qhqia.dip0.t-ipconnect.de) has quit (Connection closed)
2015-05-23 16:22:20	Morten	niconii: Okay, thanks for the help
2015-05-23 16:22:49	-->	ericye16 (ericye16@moz-pr6.5rf.141.209.IP) has joined #rust
2015-05-23 16:23:01	<--	csoriano_ (csoriano@moz-g6rkdc.net.upcbroadband.cz) has quit (Client exited)
2015-05-23 16:23:01	-->	cursivecode (textual@moz-4u56i9.res.bhn.net) has joined #rust
2015-05-23 16:23:19	-->	winding-lines (textual@moz-9utvl5.frokca.sbcglobal.net) has joined #rust
2015-05-23 16:23:48	<--	jadbaires (jadrian@moz-kqu6hi.dfcu.o1j7.08a0.2001.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 16:24:17	<--	ericye16 (ericye16@moz-pr6.5rf.141.209.IP) has quit (Client exited)
2015-05-23 16:24:27	<--	lenstr (lenstr@moz-el8.vju.25.171.IP) has quit (Connection closed)
2015-05-23 16:24:28	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Connection closed)
2015-05-23 16:25:28	-->	lenstr (lenstr@moz-el8.vju.25.171.IP) has joined #rust
2015-05-23 16:25:37	<--	kidto_ (gabriel@moz-72d.fff.84.91.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 16:26:24	<--	trigen (MSX@moz-sgda69.static.versatel.nl) has quit (Ping timeout: 121 seconds)
2015-05-23 16:26:34	cworth	So what allows for casting between &String and &str (with "as"). Is this builtn-in magic? Or is this something that could be done with a user-defined type?
2015-05-23 16:26:40	<--	tamird (textual@moz-lje.m54.130.157.IP) has quit (Quit: Textual IRC Client: www.textualapp.com)
2015-05-23 16:26:51	-->	mawaldne (mawaldne@moz-7ig7k0.cg.shawcable.net) has joined #rust
2015-05-23 16:27:09	<--	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-23 16:27:28	Ilari	Is rustc --extern foo=bar/libfoo.rlib expected to work for dependicies of dependicies? Because I get complaints that dependency of dependency is not found, even if I have --extern for it.
2015-05-23 16:28:57	<--	rustyrazorblade (rustyrazorb@moz-ehrfqf.fios.verizon.net) has quit (Client exited)
2015-05-23 16:29:01	exalt	how tho do this ? https://gist.github.com/anonymous/8236617d417afb9ad905 
2015-05-23 16:29:11	<--	Riateche (Mibbit@moz-0nstkf.dhcp.mipt-telecom.ru) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-23 16:29:32	exalt	^ how to increase the value of a borrowed variable ?
2015-05-23 16:29:33	-->	DemonOne (Avi@moz-c3nu72.cablep.bezeqint.net) has joined #rust
2015-05-23 16:29:46	<--	Jackneill (Jackneill@moz-j3giv5.pool.digikabel.hu) has quit (Ping timeout: 121 seconds)
2015-05-23 16:30:12	<--	aldeka (quassel@moz-qqf.of6.243.162.IP) has quit (Connection closed)
2015-05-23 16:30:13	-->	aldeka (quassel@moz-qqf.of6.243.162.IP) has joined #rust
2015-05-23 16:31:04	Dabo	cworth, String implements Deref<str>
2015-05-23 16:31:10	Ilari	exalt: Use the borrowed reference itself?
2015-05-23 16:31:12	geofft	cworth: Hm, looks like Deref makes that work: https://play.rust-lang.org/?gist=9e52a77df6b40c4b4875&version=stable 
2015-05-23 16:31:23	Dabo	so if the compiler knows you want &str, it will automatically deref &String to &str
2015-05-23 16:31:28	<--	nham (nham@moz-lglsfe.il.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-23 16:31:30	-->	huoy (huoy@moz-6ve.v53.167.208.IP) has joined #rust
2015-05-23 16:31:32	Blei	iu: you could use let v = Vec::with_capacity(n); my_c_func(v.as_mut_ptr()); v.set_len(n);
2015-05-23 16:31:59	-->	dstrbad (dstrbad@moz-ggi.7af.217.31.IP) has joined #rust
2015-05-23 16:32:50	<--	dstrbad (dstrbad@moz-ggi.7af.217.31.IP) has quit (Connection closed)
2015-05-23 16:33:02	<--	winding-lines (textual@moz-9utvl5.frokca.sbcglobal.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-23 16:33:18	-->	dstrbad (dstrbad@moz-ggi.7af.217.31.IP) has joined #rust
2015-05-23 16:34:19	andschwa	all right, I must be missing something: what's the more idiomatic way to assign my calculated fitness? https://github.com/andschwa/rust-genetic-algorithm/blob/master/src/main.rs#L26
2015-05-23 16:34:32	Blei	exalt: you can't, this is impossible in rust's type system (unless you use something like Cell or RefCell)
2015-05-23 16:34:45	-->	winding-lines (textual@moz-9utvl5.frokca.sbcglobal.net) has joined #rust
2015-05-23 16:35:01	-->	simukis (nagisa@moz-8t068g.static.zebra.lt) has joined #rust
2015-05-23 16:35:42	-->	p1start (p1start@moz-nftjhe.org) has joined #rust
2015-05-23 16:35:56	Dabo	andschwa, set solution to a variable before creating `i`
2015-05-23 16:36:13	exalt	Blei: so there is no way to update a variable once its referenced ?
2015-05-23 16:36:37	-->	tamird (textual@moz-lje.m54.130.157.IP) has joined #rust
2015-05-23 16:36:50	cworth	geofft: Thanks. I'm glad to see that that's a generally-available mechanism.
2015-05-23 16:36:59	@niconii	exalt: you have to update it via y
2015-05-23 16:37:00	Blei	exalt: yes (except if you use escape hatches like Cell or RefCell, or unsafe stuff)
2015-05-23 16:37:07	-->	brainproxy (michael@moz-9vjtig.mo.charter.com) has joined #rust
2015-05-23 16:37:08	Dabo	`let solution = ...; let fitness = ...` `let i = Individual {...}`
2015-05-23 16:37:09	@niconii	exalt: *y += 1;
2015-05-23 16:37:21	andschwa	Dabo: my problem dong that is that solution gets moved when assigned to the individual, making the reference to it unusable
2015-05-23 16:37:24	andschwa	Dabo: ahhh
2015-05-23 16:37:36	lyxia	exalt: Or restrict the scope of the reference.
2015-05-23 16:37:40	-->	mib_rp4hmd (Mibbit@moz-aiq4ld.res.rr.com) has joined #rust
2015-05-23 16:37:41	Dabo	andschwa, doing it like that should work
2015-05-23 16:37:55	-->	Douman (Douman@moz-epkdg2.dynamic.mts-nn.ru) has joined #rust
2015-05-23 16:37:56	andschwa	that's perfect
2015-05-23 16:38:41	<--	etw (john@moz-3h5sr6.fios.verizon.net) has quit (Client exited)
2015-05-23 16:38:52	<--	eerie (eerie@moz-s5i4j9.red.bezeqint.net) has quit (Connection closed)
2015-05-23 16:39:09	andschwa	Dabo: that's what I was looking for :) https://github.com/andschwa/rust-genetic-algorithm/commit/de034f58d39945f424828a0ffa5978bb4f126782
2015-05-23 16:39:49	Dabo	andschwa, nice!
2015-05-23 16:40:00	<--	mocx (mocx@moz-9r990q.io) has quit (Quit: ZNC - 1.6.0 - http://znc.in)
2015-05-23 16:40:40	@niconii	exalt: http://is.gd/PSl5U7
2015-05-23 16:40:41	exalt	Blei, niconii, lyxia: the *y solution worked, is this considered as unsafe escape hatch stuff 
2015-05-23 16:40:41	andschwa	Dabo: I'm too used to doing all my stuff *in* the constructor, and needed to realize that new() is the constructor, not Individual {...}
2015-05-23 16:40:55	-->	mocx (mocx@moz-9r990q.io) has joined #rust
2015-05-23 16:41:02	@niconii	exalt: no, that's safe
2015-05-23 16:41:08	exalt	Ok thanx !
2015-05-23 16:41:09	Dabo	andschwa, yeah :)
2015-05-23 16:41:36	<--	mib_rp4hmd (Mibbit@moz-aiq4ld.res.rr.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-23 16:41:47	andschwa	Dabo: my hope is that I can implement Orderable on my individual, and then replace min_by with just min
2015-05-23 16:41:52	andschwa	or something of that nature
2015-05-23 16:41:53	<--	cobratbq (cobratbq@moz-qbkfd9.FTTH.ispfabriek.nl) has left #rust ("")
2015-05-23 16:41:56	<--	dstrbad (dstrbad@moz-ggi.7af.217.31.IP) has quit (Connection closed)
2015-05-23 16:42:02	iu	Blei: Splendid! Thank you.
2015-05-23 16:42:48	<--	sternmull (kringel@moz-16dg8t.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2015-05-23 16:42:52	andresv	is it possible to declare array size in runtime without boxing: http://is.gd/SGMxht
2015-05-23 16:43:06	<--	brainproxy (michael@moz-9vjtig.mo.charter.com) has quit (Ping timeout: 121 seconds)
2015-05-23 16:43:08	-->	Wild_Cat (Max@moz-fa8mvt.dsl.teksavvy.com) has joined #rust
2015-05-23 16:43:57	Dabo	andschwa, http://doc.rust-lang.org/std/cmp/trait.Ord.html is actually pretty simple to implement, all you need is one method to return an Ordering
2015-05-23 16:45:03	Dabo	you'll also need to implement http://doc.rust-lang.org/std/cmp/trait.PartialOrd.html, but all that takes is having partial_ord() return Some(self.ord())
2015-05-23 16:45:40	Dabo	er, partial_cmp / cmp not partial_ord / ord, but same idea
2015-05-23 16:46:42	-->	ahunt (ahunt@moz-vq4hs5.collabora.co.uk) has joined #rust
2015-05-23 16:46:48	andschwa	Dabo: danke! I have a partial ordering from my fitness: f64, and just need to turn that into an ordering
2015-05-23 16:47:08	andschwa	there was a post last night from a fine fellow on it
2015-05-23 16:47:12	andschwa	hopefully it's in my history
2015-05-23 16:47:13	<--	n0xff (n0xff@moz-v8omta.abo.wanadoo.fr) has quit (Quit: leaving)
2015-05-23 16:47:30	-->	lyc (lyc@moz-jft.nr8.226.207.IP) has joined #rust
2015-05-23 16:47:46	<--	winding-lines (textual@moz-9utvl5.frokca.sbcglobal.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-23 16:48:10	<--	Jesin (Jesin@moz-48mne2.nsvltn.sbcglobal.net) has quit (Connection closed)
2015-05-23 16:48:35	-->	JagaJaga (JagaJaga@moz-ua8.hhl.62.178.IP) has joined #rust
2015-05-23 16:48:59	andschwa	gah, I have the link but it's blank
2015-05-23 16:48:59	-->	Jesin (Jesin@moz-48mne2.nsvltn.sbcglobal.net) has joined #rust
2015-05-23 16:49:06	<--	thiblahute_ (tsaunier@moz-68f5rr.rev.sfr.net) has quit (Ping timeout: 121 seconds)
2015-05-23 16:49:25	-->	mcoffin (mcoffin@moz-hrs.16d.54.128.IP) has joined #rust
2015-05-23 16:49:26	-->	nham (nham@moz-lglsfe.il.comcast.net) has joined #rust
2015-05-23 16:49:53	-->	fmcauley (fmcauley@moz-n1jjb3.res.rr.com) has joined #rust
2015-05-23 16:50:29	andschwa	managed to fix it: http://is.gd/TicmO6
2015-05-23 16:50:35	andschwa	does not play well with noscript
2015-05-23 16:50:43	<--	Guest____ (textual@moz-rtn.fg7.77.192.IP) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-23 16:51:23	-->	Esption (Esption@moz-3gitvr.dynamic.tds.net) has joined #rust
2015-05-23 16:51:32	<--	lyc (lyc@moz-jft.nr8.226.207.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 16:52:49	<--	Jesin (Jesin@moz-48mne2.nsvltn.sbcglobal.net) has quit (Connection closed)
2015-05-23 16:53:05	-->	Jesin (Jesin@moz-48mne2.nsvltn.sbcglobal.net) has joined #rust
2015-05-23 16:53:16	Dabo	andschwa, I think you will probably want to manually implement both PartialOrd and Ord on your Individual struct using self.fitness - since deriving won't be able to figure out which internal variable you mean
2015-05-23 16:53:28	Dabo	but I'm not entirely sure what you're asking with those last messages .-.
2015-05-23 16:54:02	-->	dmac_ (dmac@moz-2ig65r.ca.comcast.net) has joined #rust
2015-05-23 16:54:23	andschwa	Dabo: that's what I'm doing, just needed to refer to an example of cmp
2015-05-23 16:55:04	-->	geri (Mibbit@moz-ec099b.highway.telekom.at) has joined #rust
2015-05-23 16:55:05	geri	hi
2015-05-23 16:55:06	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-23 16:55:14	Dabo	andschwa, calling self.fitness.cmp(other.fitness) should work afaik, same for partial_cmp
2015-05-23 16:55:18	geri	is it possible to define two targets in the cargo file?
2015-05-23 16:55:36	srjek	Note to self: Test code in debug first, so errors aren't optimized away.
2015-05-23 16:55:55	Dabo	geri, it's possible to have a library target and binary target, but besides that, no
2015-05-23 16:55:55	<--	Blei (philipp@moz-k6lbjp.dynamic.hispeed.ch) has quit (Quit: WeeChat 1.2)
2015-05-23 16:56:13	geri	Dabo: i would like to have 2 binary targets
2015-05-23 16:56:13	Dabo	why are you wanting multiple targets?
2015-05-23 16:56:16	andschwa	Dabo: heh, it will work for partial_cmp, but f64's don't have a strict ordering, and so don't implement cmp
2015-05-23 16:56:39	andschwa	for now I'm just going to delegate cmp to partial_cmp
2015-05-23 16:56:54	Dabo	andschwa, ah, ok - might as well just implement PartialOrd then, since I guess it really isn't possible to implement Ord
2015-05-23 16:56:54	-->	Kingsquee (kingsley@moz-3fm07c.bchsia.telus.net) has joined #rust
2015-05-23 16:57:02	andschwa	and deal with NaN later (which I DO have to deal, because once mutation and recombination comes into play, I can definitely get NaN solutions)
2015-05-23 16:57:03	--	kimundi is now known as zz_kimundi
2015-05-23 16:57:11	Dabo	or, yeah
2015-05-23 16:57:55	Dabo	andschwa, you could just have .unwrap_or(Ordering::Less) as well
2015-05-23 16:58:04	Dabo	er, no, not that
2015-05-23 16:58:05	Dabo	I don't know
2015-05-23 16:58:09	<--	dmac_ (dmac@moz-2ig65r.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-23 16:58:20	andschwa	as long as it's consistent it'll be fine
2015-05-23 16:58:28	andschwa	I had the same problem when I did this in C++
2015-05-23 16:58:45	andschwa	NaN solutions just need to be "infinitely unfit"
2015-05-23 16:58:54	andschwa	and so > than any non-nan
2015-05-23 16:58:55	Dabo	yeah
2015-05-23 16:58:57	-->	mib_m2ida1 (Mibbit@moz-4i895e.cable.mindspring.com) has joined #rust
2015-05-23 16:59:11	exalt	why does this doc.rustlang example not work ? https://play.rust-lang.org/?gist=40a3fa99c88d9f820631&version=stable
2015-05-23 16:59:26	Dabo	andschwa, probably just want to try partial_cmp, then implement it manually checking if NaN
2015-05-23 16:59:42	Dabo	since it does need to be consistent with two NaN things being compared
2015-05-23 17:00:05	Dabo	exalt, you need a Cargo project which depends on the `rand` crate
2015-05-23 17:00:12	-->	datalus (datalus@moz-oq4ug8.mycingular.net) has joined #rust
2015-05-23 17:00:27	Dabo	the playground doesn't allow you to depend on external crates from crates.io
2015-05-23 17:00:34	andresv	how to do this? let len: usize = 32; let buf: [u32; len] = [0; len];
2015-05-23 17:00:43	<--	mib_m2ida1 (Mibbit@moz-4i895e.cable.mindspring.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-23 17:00:55	exalt	Dabo: ahh yes! locally it works
2015-05-23 17:00:59	Dabo	andresv, not possible at the moment - fixed array sizes need to be constant
2015-05-23 17:01:19	Dabo	if `32` is a constant, you can declare it with `const len: usize = 32`
2015-05-23 17:01:45	Dabo	otherwise, if it is part of some calculation and may change, you should use a Vec instead
2015-05-23 17:02:05	-->	frangio (frangio@moz-04sgf8.fibertel.com.ar) has joined #rust
2015-05-23 17:03:33	-->	peferron (peferron@moz-k89vq8.ca.comcast.net) has joined #rust
2015-05-23 17:04:17	andresv	Dabo: right vec! is the correct thing to use,  i was confused with Box
2015-05-23 17:04:44	-->	fyolnish (fyolnish@moz-ehtogo.so-net.ne.jp) has joined #rust
2015-05-23 17:04:50	Dabo	andresv, awesome, glad that works out
2015-05-23 17:06:08	-->	larhat1 (Adium@moz-vlo5br.cable.virginm.net) has joined #rust
2015-05-23 17:06:26	<--	SerialVelocity (SerialVeloc@moz-attia0.cable.virginm.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2015-05-23 17:06:37	<--	jalcine (jacky@moz-7ghsj4.jalcine.me) has quit (Quit: ZNC - http://znc.in)
2015-05-23 17:06:39	andschwa	Dabo: it would seem that to implement Ord, I need to implement Eq as well, and same for the Partial versions
2015-05-23 17:06:44	-->	rkruppe (chatzilla@moz-qb299q.diu2.0rth.0908.2a02.IP) has joined #rust
2015-05-23 17:07:02	-->	lucian (lucian@moz-2c3pda.cable.virginm.net) has joined #rust
2015-05-23 17:07:36	Dabo	andschwa, ah, yeah, that shouldn't be too hard with just calling cmp and partial_cmp though from eq / partial_eq
2015-05-23 17:07:49	<--	detsak (darren@moz-804egb.dyn.optonline.net) has quit (Quit: WeeChat 1.2)
2015-05-23 17:08:08	--	irc: disconnected from server
2015-05-23 17:08:19	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-23 17:08:19	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-23 17:08:19	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-23 17:08:20	--	Channel #rust: 979 nicks (13 ops, 0 halfops, 2 voices, 964 normals)
2015-05-23 17:08:21	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-23 17:08:52	cworth	Here's a broken version that's missing a lifetime specifier for the function's return value: http://is.gd/BvMSsD
2015-05-23 17:09:22	cworth	I've tried sprinkling "'a" all over the function signature, but haven't made any real progress.
2015-05-23 17:09:23	-->	jminer (Instantbird@moz-b1u.qch.163.66.IP) has joined #rust
2015-05-23 17:09:47	<--	fyolnish (fyolnish@moz-ehtogo.so-net.ne.jp) has quit (Ping timeout: 121 seconds)
2015-05-23 17:10:03	<--	ahunt (ahunt@moz-vq4hs5.collabora.co.uk) has quit (Ping timeout: 121 seconds)
2015-05-23 17:10:14	<--	larhat1 (Adium@moz-vlo5br.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2015-05-23 17:10:14	Dabo	andschwa, since you're manually implementing all of them there shouldn't be a real problem
2015-05-23 17:10:16	cworth	I keep ending up with "cannot infer an appropriate lifetime due to conflicting requirements".
2015-05-23 17:10:34	SpaceManiac	cworth: http://is.gd/RLZiq5 seems to work
2015-05-23 17:10:50	-->	idegen (greg@moz-9c4nle.or.frontiernet.net) has joined #rust
2015-05-23 17:10:58	Dabo	all you need to guarantee is that PartialOrd/PartialEq/Ord/Eq agree completely when two types are equal or not
2015-05-23 17:11:04	<--	lucian (lucian@moz-2c3pda.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2015-05-23 17:11:14	cworth	SpaceManiac: Thanks! The answers always seem so easy once I see them working...
2015-05-23 17:11:18	<--	huoy (huoy@moz-6ve.v53.167.208.IP) has quit (Quit: Leaving)
2015-05-23 17:11:34	Ilari	Is there "nicer" way to write this: (&mut buf[0..bytes3]).clone_from_slice(&tmp1[0..bytes3]); (The element type is u8)?
2015-05-23 17:11:36	andschwa	Dabo: any chance you know of an example?
2015-05-23 17:12:16	<--	dinfuehr (dinfuehr@moz-ldm58r.highway.telekom.at) has quit (Ping timeout: 121 seconds)
2015-05-23 17:12:18	cworth	SpaceManiac: I think I had decorated every "&" in the signature to "&'a" except for the one before HashMap. :-P Thanks.
2015-05-23 17:13:19	--	irc: disconnected from server
2015-05-23 17:13:30	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-23 17:13:30	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-23 17:13:30	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-23 17:13:31	--	Channel #rust: 974 nicks (13 ops, 0 halfops, 2 voices, 959 normals)
2015-05-23 17:13:32	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-23 17:13:39	_habnabit	http://is.gd/2E9Sww hm so i tried to namespace the second function here but i guess if you define a module in a module it can't access things defined in the outer module by default?
2015-05-23 17:14:25	_habnabit	http://is.gd/cWpkvY urgh and it fails if i use c_export! twice too
2015-05-23 17:14:30	<--	mawaldne (mawaldne@moz-7ig7k0.cg.shawcable.net) has quit (Client exited)
2015-05-23 17:14:32	<--	datalus (datalus@moz-oq4ug8.mycingular.net) has quit (Ping timeout: 121 seconds)
2015-05-23 17:14:43	Dabo	andschwa, I don't have one on the top of my head, one second
2015-05-23 17:15:01	andschwa	partial_cmp was easy enough, since f64 has partial_cmp
2015-05-23 17:15:15	_habnabit	in a macro can i concatenate something onto an ident token?
2015-05-23 17:15:24	srjek	It seems (ptr type).offset() doesn't like me doing pointer math on a *mut ()....
2015-05-23 17:15:25	_habnabit	i think that's what ## in C does?
2015-05-23 17:16:48	cworth	So, now, what's the trick to get working lifetime information for this closure-based version:
2015-05-23 17:16:49	<--	swgillespie (swgillespie@moz-rn1.vmq.232.104.IP) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-23 17:16:51	cworth	http://is.gd/KargSW
2015-05-23 17:16:53	andschwa	Dabo: but partial_eq takes an arbitrary Rhs and it's tripping me up
2015-05-23 17:18:05	andschwa	wait I think I got it; I ignored the arbitrary part and just made it for my type
2015-05-23 17:18:20	rkruppe	_habnabit: There's concat_idents!() but you can't use it in most places where one needs an identifier (such as most declarations)
2015-05-23 17:18:24	-->	nicknikolov (nicknikolov@moz-20o.h30.144.109.IP) has joined #rust
2015-05-23 17:18:32	Dabo	andschwa, Rhs is just your type by default
2015-05-23 17:18:36	_habnabit	rkruppe, drat
2015-05-23 17:18:37	exalt	Dabo: this Cargo project from the book wont work locally: https://play.rust-lang.org/?gist=55b3caa977a78ce16d75&version=stable
2015-05-23 17:18:39	Dabo	if you don't provide a specific Rhs
2015-05-23 17:18:42	_habnabit	rkruppe, so not as a function name?
2015-05-23 17:18:55	andschwa	I get a use of undeclared typename on Rhs
2015-05-23 17:18:59	rkruppe	_habnabit: I don't know the exact list, you'd have to try it out
2015-05-23 17:19:05	-->	orangeshark (erik@moz-dkltlc.44tj.56ot.0306.2602.IP) has joined #rust
2015-05-23 17:19:21	_habnabit	rkruppe, i'll try it then
2015-05-23 17:19:25	<--	GrecKo (GrecKo@moz-0lk3f4.rev.poneytelecom.eu) has quit (Ping timeout: 121 seconds)
2015-05-23 17:19:36	-->	ogham (rally@moz-91e3hp.cable.virginm.net) has joined #rust
2015-05-23 17:19:45	-->	GrecKo (GrecKo@moz-la97mq.fr) has joined #rust
2015-05-23 17:20:32	_habnabit	rkruppe, oh, did you mean concat! ?
2015-05-23 17:20:42	_habnabit	oh no that gives you a string
2015-05-23 17:20:43	andschwa	Dabo: I worked it out but think it's messy
2015-05-23 17:20:43	andresv	how to init vec with zeroes, this just makes empty vec: let len: usize = 5; let mut buf = Vec::<u32>::with_capacity(len);
2015-05-23 17:20:55	_habnabit	rkruppe, nm i found the macro
2015-05-23 17:21:03	<--	Lilly (Lilly@moz-pfkvo9.bredband.comhem.se) has quit (Quit: bajs)
2015-05-23 17:21:12	-->	Binero (jeroen@moz-91joat.69vi.s4ge.1810.2a02.IP) has joined #rust
2015-05-23 17:21:47	Morten	Is there a method somewhere to create a string representation of a Vector?
2015-05-23 17:22:04	Morten	If the elements implement Display or some other trait
2015-05-23 17:22:27	-->	d356 (d@moz-go99rq.res.bhn.net) has joined #rust
2015-05-23 17:22:28	<--	DemonOne (Avi@moz-c3nu72.cablep.bezeqint.net) has quit (Ping timeout: 121 seconds)
2015-05-23 17:22:32	exalt	how can i fix this ? https://play.rust-lang.org/?gist=55b3caa977a78ce16d75&version=stable its the comparing guesses from the book ?
2015-05-23 17:22:33	-->	trigen (MSX@moz-sgda69.static.versatel.nl) has joined #rust
2015-05-23 17:22:35	<--	nicknikolov (nicknikolov@moz-20o.h30.144.109.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 17:23:00	_habnabit	rkruppe, yeah, can't do `fn concat_idents!(...) (...)` :(
2015-05-23 17:23:06	-->	larhat1 (Adium@moz-vlo5br.cable.virginm.net) has joined #rust
2015-05-23 17:23:08	<--	andresv (textual@moz-kvanfr.dyn.estpak.ee) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-23 17:23:16	geofft	the cfg(target_os) strings are mututally exclusive, right? "linux" doesn't include "android"? 
2015-05-23 17:23:42	_habnabit	rkruppe, i wish i could do this in just one function, but try! generates a 'return'
2015-05-23 17:23:47	_habnabit	... actually. i could make a closure, couldn't i
2015-05-23 17:23:54	_habnabit	yeah i think i could
2015-05-23 17:23:55	<--	jshs (jshs@moz-5ge6fc.dip0.t-ipconnect.de) has quit (Client exited)
2015-05-23 17:24:07	-->	kidto_ (gabriel@moz-72d.fff.84.91.IP) has joined #rust
2015-05-23 17:24:36	srjek	anyways, behold and cringe in horror, a trait slice-like. https://play.rust-lang.org/?gist=3f9bb474b8615f9bf417&version=nightly (pinging eddyb,Gankro)
2015-05-23 17:24:43	srjek	eddyb: Thanks for the help
2015-05-23 17:25:01	cworth	Morten: Such as vec!["1", "2", "3"].connect("") ?
2015-05-23 17:25:16	_habnabit	cool yeah a closure worked
2015-05-23 17:25:24	@niconii	geofft: seems like it, but there's also target_family which is either "unix" or "windows"
2015-05-23 17:25:25	<--	wipeDx (wipeD@moz-08ofe2.dip0.t-ipconnect.de) has quit (Connection closed)
2015-05-23 17:25:37	Dabo	andschwa, http://is.gd/c3BjWp is basically what I would do
2015-05-23 17:25:49	-->	ahunt (ahunt@moz-vq4hs5.collabora.co.uk) has joined #rust
2015-05-23 17:25:53	Dabo	eventually replacing unreachable!() statements with some handling for non-valid f64s
2015-05-23 17:26:19	-->	Soni (SoniEx2@moz-7ho.p0a.104.187.IP) has joined #rust
2015-05-23 17:26:20	Dabo	the PartialEq implementation needs to be consistent with PartialOrd, which is why I wouldn't just call f64.eq
2015-05-23 17:26:25	-->	Zidane (Zidane@moz-382v9o.ca.comcast.net) has joined #rust
2015-05-23 17:26:30	Morten	cworth: Just a string representation, for printing it, easy debugging, etc
2015-05-23 17:26:37	@niconii	geofft: (you can also just do #[cfg(unix)] and #[cfg(windows)] directly)
2015-05-23 17:26:40	Dabo	er, Eq needs to be consistent with Ord, which is why PartialEq doesn't call f64.eq
2015-05-23 17:27:17	<--	trigen (MSX@moz-sgda69.static.versatel.nl) has quit (Ping timeout: 121 seconds)
2015-05-23 17:27:34	cworth	Morten: Right. So, does connect(", ") or so not do the trick for you?
2015-05-23 17:28:01	<--	sommoyogurt (sommoyogurt@moz-tm38ps.21-151.libero.it) has quit (Connection closed)
2015-05-23 17:28:09	andschwa	Dabo: this is what I did, https://github.com/andschwa/rust-genetic-algorithm/blob/72719ad5253fafa7af723d2e47dcfb798c4d6a70/src/main.rs
2015-05-23 17:28:16	andschwa	which I'll now reconcile with the better way
2015-05-23 17:28:39	Morten	cworth: umm, where's it documented? I can't find it
2015-05-23 17:28:43	&mbrubeck	exalt: Keep reading in the book -- it explains that error and how to fix it.
2015-05-23 17:29:09	Dabo	andschwa, ok, yeah - just make sure to panic in eq() in every case which cmp() will panic
2015-05-23 17:29:14	&mbrubeck	steveklabnik: This is at least the second person who got tripped up by having code in the guessing game chapter that doesn't compile ^
2015-05-23 17:29:33	Dabo	because you really don't want to have eq() returning invalid results for something which implements Eq as well as PartialEq
2015-05-23 17:29:50	-->	jviereck (Adium@moz-do34uk.dclient.hispeed.ch) has joined #rust
2015-05-23 17:29:56	exalt	mbrubeck: o i feel so stupid now :P
2015-05-23 17:30:00	<--	ahunt (ahunt@moz-vq4hs5.collabora.co.uk) has quit (Ping timeout: 121 seconds)
2015-05-23 17:30:14	&mbrubeck	steveklabnik: Might want to make the "doesn't quite work yet" more prominent -- maybe have a comment within the code where the error is expected?
2015-05-23 17:30:22	Zidane	I'm trying to use a map to map terms in a vocabulary to integer IDs.  I have something like https://gist.github.com/bb73dcc7bf852150c24a, which clearly breaks ownership rules.  Can anyone help me understand 1) what's so unsafe about this kind of code; 2) what's the idiomatic way arround this type of get-and-set map usage
2015-05-23 17:30:28	&mbrubeck	exalt: Don't worry. :)  We're still shaking out problems with the docs.
2015-05-23 17:30:43	XMPPwocky	Zidane: the Entry API is for exactly this
2015-05-23 17:31:10	-->	shellac (textual@moz-9b49cr.cable.virginm.net) has joined #rust
2015-05-23 17:31:12	Zidane	I tried it, using entry(token).or_insert_with(...)
2015-05-23 17:31:14	-->	pgonda (peter@moz-s36.0tp.134.75.IP) has joined #rust
2015-05-23 17:31:22	<--	fmcauley (fmcauley@moz-n1jjb3.res.rr.com) has quit (Client exited)
2015-05-23 17:31:26	Zidane	but that still has a borrowing problem, because I'm trying to get the map.len()
2015-05-23 17:31:54	<--	Skyler (Skyler@moz-rv949t.sd.cox.net) has quit (Client exited)
2015-05-23 17:32:12	_habnabit	so if i have a C API that i'm reimplementing with rust, i'm not sure how to implement the function that is 'initialize this pointer to a struct'. the user is expected to allocate memory with the right size and alignment, and pass a pointer to it to the library so that it's initialized. so the rust function is `fn struct_init(s: *mut Struct)` and i'm not sure what to do. should i use mem::replace, or just `
2015-05-23 17:32:12	_habnabit	unsafe { *s = Struct::new() }` ?
2015-05-23 17:32:15	andschwa	mbrubeck: steveklabnik: I did that a few days ago and vaguely remember something not quite working right, so write me down as third
2015-05-23 17:32:38	geofft	hahaha, if you have a struct and a function with the same name, they _both_ get brought in scope by `use modulee::thing;` 
2015-05-23 17:33:03	XMPPwocky	_habnabit: std::ptr::write
2015-05-23 17:33:09	-->	brianloveswords (brianlovesw@moz-8cn.lfu.232.80.IP) has joined #rust
2015-05-23 17:33:14	XMPPwocky	_habnabit: assignment will also run any destructors on the old memory
2015-05-23 17:33:21	XMPPwocky	which, when it's uninitialized, is a Bad Thing(TM)
2015-05-23 17:33:25	_habnabit	XMPPwocky, ah, that's what i was worried about
2015-05-23 17:33:33	_habnabit	XMPPwocky, it seemed like mem::replace would do the same thing
2015-05-23 17:33:52	_habnabit	XMPPwocky, ok cool it looks like ptr::write is exactly what i want
2015-05-23 17:33:58	XMPPwocky	_habnabit: if you called mem::forget on the old value, replace would work
2015-05-23 17:34:03	-->	lenstr_ (lenstr@moz-el8.vju.25.171.IP) has joined #rust
2015-05-23 17:34:14	_habnabit	XMPPwocky, it looks like ptr::write is mem::replace with mem::forget
2015-05-23 17:34:15	cworth	Morten: I don't actually know. I've only just begun working through reading the book. I would have thought I had learned it from one of these two pages:
2015-05-23 17:34:21	cworth	http://doc.rust-lang.org/stable/book/iterators.html
2015-05-23 17:34:29	cworth	http://doc.rust-lang.org/stable/std/iter/
2015-05-23 17:34:46	cworth	But I can't find it at either of those now. So I don't actually now where I learned it.
2015-05-23 17:34:49	<--	lenstr (lenstr@moz-el8.vju.25.171.IP) has quit (Connection closed)
2015-05-23 17:34:54	<--	Binero (jeroen@moz-91joat.69vi.s4ge.1810.2a02.IP) has quit (Client exited)
2015-05-23 17:35:19	Dabo	Morten, cworth http://doc.rust-lang.org/stable/std/iter/trait.Iterator.html should have it
2015-05-23 17:35:23	Gankro	srjek: Woah! 0.o
2015-05-23 17:35:47	Dabo	er, maybe not
2015-05-23 17:35:55	exalt	mbrubeck: i got it working!
2015-05-23 17:36:11	&mbrubeck	http://doc.rust-lang.org/std/slice/trait.SliceConcatExt.html#tymethod.connect
2015-05-23 17:36:22	Dabo	Morten, cworth it's currently here: http://doc.rust-lang.org/stable/std/slice/trait.SliceConcatExt.html#tymethod.connect
2015-05-23 17:36:45	-->	adu (ajr@moz-0foa9t.md.comcast.net) has joined #rust
2015-05-23 17:37:08	Morten	dabo: There we go, thanks!
2015-05-23 17:37:38	Dabo	I'm not sure where it would be mentioned in the docs elsewhere, but perhaps when the trait itself is fully stabilized it will become more prominent
2015-05-23 17:38:06	Dabo	Currently just using std-implemented connect() is stable - but the trait itself isn't stable (so you can't implement it yourself)
2015-05-23 17:38:09	comex	error: Error loading target specification: Could not find specification for target "i386-linux-gnu"
2015-05-23 17:38:18	comex	huh...
2015-05-23 17:38:40	<--	eibwen (eibwen@moz-31em09.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2015-05-23 17:38:48	comex	this is with the rustc package in debian unstable
2015-05-23 17:38:50	-->	jadbaires (jadrian@moz-dhpu9p.dfcu.o1j7.08a0.2001.IP) has joined #rust
2015-05-23 17:38:58	<--	skeithc (skeith@moz-67r1nt.torservers.net) has quit (Ping timeout: 121 seconds)
2015-05-23 17:39:19	<--	jophish (jophish@moz-fjh8o1.gotadsl.co.uk) has quit (Connection closed)
2015-05-23 17:39:29	<--	kidto_ (gabriel@moz-72d.fff.84.91.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 17:39:32	comex	i686-unknown-linux-gnu worked... sort of
2015-05-23 17:40:11	cworth	Dabo: Looking at http://doc.rust-lang.org/stable/std/iter/ it seems unfortunate that in the first couple of paragraphs of overview that the various mentions of specific traits and methods aren't links to the documentation for those.
2015-05-23 17:40:11	-->	skeithc (skeith@moz-h9vqq1.enn.lu) has joined #rust
2015-05-23 17:40:12	<--	Irrelium (Irrelium@moz-4kl.9ut.19.71.IP) has quit (Quit: I need a cool quote to put here D:)
2015-05-23 17:40:24	Zidane	so both the following methods don't work for the get-and-set map usage: https://gist.github.com/b1a78218fbeced546931
2015-05-23 17:40:36	-->	nicoch (nicoch@moz-g02d7k.be) has joined #rust
2015-05-23 17:41:11	Zidane	I know I could maintain a separate counter for the IDs, and not use the map's len(), but this seems kind of a crude way around the borrow checker
2015-05-23 17:41:37	<--	mbudde (mbudde@moz-v8g.lim.109.2.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 17:41:51	<--	maraoz (maraoz@moz-1d0.g5p.29.181.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 17:42:05	_habnabit	if i have a #[no_mangle] pub extern "C" fn, that has to take a `*mut Struct`, right? it can't be `&mut Struct`, because C only has unsafe pointers?
2015-05-23 17:42:09	<--	lyra2 (kilm@moz-0pbl66.static.zebra.lt) has quit (Quit: Leaving)
2015-05-23 17:42:17	Dabo	cworth, all of those types are listed below in "Traits" though
2015-05-23 17:42:49	comex	ld still wants to link to the x86_64 libraries
2015-05-23 17:43:08	LookupError	hello. how to get length of slice?
2015-05-23 17:43:08	andschwa	Dabo: finished reconciling and grokking, thanks for the help!
2015-05-23 17:43:22	Dabo	andschwa, no problem!
2015-05-23 17:43:54	<--	tamird (textual@moz-lje.m54.130.157.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-23 17:43:55	-->	thepreacher (thepreacher@moz-qchso7.dyn.plus.net) has joined #rust
2015-05-23 17:44:23	<--	skeithc (skeith@moz-h9vqq1.enn.lu) has quit (Ping timeout: 121 seconds)
2015-05-23 17:44:29	cworth	Dabo: They are, (and I didn't find them the first time I was looking on that page). In general, the more linking the better for documentation, (in my view).
2015-05-23 17:44:47	Zidane	XMPPwocky: is token_id2 in https://gist.github.com/b1a78218fbeced546931 what you had in mind, or am I missing something else?
2015-05-23 17:44:58	-->	daheise (Mibbit@moz-gl1dm6.knvltn.sbcglobal.net) has joined #rust
2015-05-23 17:45:11	-->	kidto_ (gabriel@moz-72d.fff.84.91.IP) has joined #rust
2015-05-23 17:45:14	-->	kazimuth (james@moz-gne.8or.17.73.IP) has joined #rust
2015-05-23 17:45:20	<--	kidto_ (gabriel@moz-72d.fff.84.91.IP) has quit (Quit: Lost terminal)
2015-05-23 17:45:29	<--	DerisiveLogic (smuxi@moz-g93io6.res.rr.com) has quit (A TLS packet with unexpected length was received.)
2015-05-23 17:45:34	-->	DerisiveLogic (smuxi@moz-g93io6.res.rr.com) has joined #rust
2015-05-23 17:45:41	&mbrubeck	Zidane: What if you do `let len = vocab.len();` outside the closure, and use tha tinside the closure?
2015-05-23 17:45:53	<--	jadbaires (jadrian@moz-dhpu9p.dfcu.o1j7.08a0.2001.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 17:46:05	Dabo	cworth, yeah, I would agree - at least mentioning that they are linked below would also be good
2015-05-23 17:46:06	Zidane	&mbrubeck, that would work, but it's wasteful in the case where the entry already exists (which is the normal case), no?
2015-05-23 17:46:09	<--	atomic (atomic@moz-ke9rv2.nos-oignons.net) has quit (Quit: Leaving)
2015-05-23 17:46:32	-->	skeithc (skeith@moz-f1gsu4.impium.de) has joined #rust
2015-05-23 17:47:20	<--	frangio (frangio@moz-04sgf8.fibertel.com.ar) has quit (Client exited)
2015-05-23 17:47:22	<--	killercup (killercup@moz-qj5qhi.dip0.t-ipconnect.de) has quit (Quit: Bye)
2015-05-23 17:47:33	comex	ah, the ld issue is a bit of debian stupidity
2015-05-23 17:47:43	&mbrubeck	Zidane: yeah, it could end up calling len needlessly, though I'd be curious whether that makes a difference after optimization.
2015-05-23 17:47:57	Gankro	ughhh steve your fork was a triiick. It's litterally looking for the stage2 rustdoc
2015-05-23 17:48:15	<--	skeithc (skeith@moz-f1gsu4.impium.de) has quit (Quit: Poof!)
2015-05-23 17:48:15	-->	lyc (lyc@moz-jft.nr8.226.207.IP) has joined #rust
2015-05-23 17:48:22	Zidane	I'm starting to wonder if it's just my inexperience with rust, or whether even those that are more experienced feel overly constrained by the borrow checker.  I feel like both alternatives are inefficient workarounds: 1) maintaining the length separately from the map; 2) calling map.len() needlessly outside the closure
2015-05-23 17:48:46	&mbrubeck	Zidane: It's definitely constraining.
2015-05-23 17:48:57	Gankro	err, steveklabnik 
2015-05-23 17:49:19	cworth	Any thoughts on how to fix the "cannot infer an appropriate lifetime" here: http://is.gd/KargSW (SpaceManiac fixed a similar problem for me when I had a function instead of a closure).
2015-05-23 17:49:53	-->	Irrelium (Irrelium@moz-4kl.9ut.19.71.IP) has joined #rust
2015-05-23 17:50:07	<--	pyon (pyon@moz-b0l.mdl.7.179.IP) has quit (Quit: restart)
2015-05-23 17:50:43	<--	p1start (p1start@moz-nftjhe.org) has quit (Ping timeout: 121 seconds)
2015-05-23 17:51:40	&mbrubeck	Zidane: how's this? http://is.gd/cdEyog
2015-05-23 17:51:44	Zidane	&mbrubeck, so in cases like these, should I just mark the method as unsafe?  Or would you choose the inefficient .len() option?
2015-05-23 17:51:47	-->	p1start (p1start@moz-nftjhe.org) has joined #rust
2015-05-23 17:52:18	<--	lyc (lyc@moz-jft.nr8.226.207.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 17:52:39	Zidane	let me take a look...
2015-05-23 17:52:48	@bstrie	question of the day: if somebody wrote a library for C++-style iterators in rust, would it be able to safely avoid bounds checking just like rust-style iterators do?
2015-05-23 17:54:18	--	zz_kimundi is now known as kimundi
2015-05-23 17:54:48	-->	dmac_ (dmac@moz-2ig65r.ca.comcast.net) has joined #rust
2015-05-23 17:55:39	Gankro	bstrie: define "bounds checking"
2015-05-23 17:55:54	Gankro	Is that not what every iterator does on every step?
2015-05-23 17:56:36	&mbrubeck	Gankro: As discussed in http://doc.rust-lang.org/book/iterators.html
2015-05-23 17:56:44	LookupError	I found api for getting length http://doc.rust-lang.org/beta/std/raw/struct.Slice.html#examples but It is forbidden in beta (1.1).
2015-05-23 17:56:52	&mbrubeck	Compared to looping over vec[i]
2015-05-23 17:57:00	Hannibal_Smith	bstrie, there is already a very solid proposal to add Rust style iterators to C++
2015-05-23 17:57:19	&mbrubeck	LookupError: You want http://doc.rust-lang.org/std/primitive.slice.html#method.len
2015-05-23 17:57:26	Gankro	mbrubeck: I assert that the naive for loop doesn't include the bounds checks
2015-05-23 17:57:52	<--	jviereck (Adium@moz-do34uk.dclient.hispeed.ch) has quit (Ping timeout: 121 seconds)
2015-05-23 17:58:17	<--	SpaceManiac (Tad@moz-g50q8a.dyn.suddenlink.net) has quit (Ping timeout: 121 seconds)
2015-05-23 17:58:18	Hannibal_Smith	bstrie, https://www.youtube.com/watch?v=8yV2ONeWXyI
2015-05-23 17:58:35	-->	DemonOne (Avi@moz-16roj4.cablep.bezeqint.net) has joined #rust
2015-05-23 17:58:49	<--	pgonda (peter@moz-s36.0tp.134.75.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 17:58:54	<--	ygrek (user@moz-8j9aeu.org.ua) has quit (Ping timeout: 121 seconds)
2015-05-23 17:58:55	Hannibal_Smith	It's a only matter of time before C++ will get it
2015-05-23 17:58:56	<--	dmac_ (dmac@moz-2ig65r.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-23 17:58:56	&mbrubeck	Gankro: because the `assert!(index < self.len());` is trivially optimized out?
2015-05-23 17:59:13	<--	shellac (textual@moz-9b49cr.cable.virginm.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-23 17:59:22	Gankro	mbrubeck: basically
2015-05-23 17:59:31	&mbrubeck	fair point
2015-05-23 17:59:49	Zidane	&mbrubeck, your option works, but I guess I'm not seeing why.  If instead of the if let Some(...) syntax, I instead just to a let binding (let entry = vocab.get(token)) and then in subsequent lines check for is_some(), then I'm back to borrowing problems
2015-05-23 17:59:58	Zidane	I guess I'm just not grasping the rules
2015-05-23 18:00:43	&mbrubeck	Zidane: The `if let...` allows the borrow to be restricted to the scope of the `if let` expression, and released afterward.
2015-05-23 18:01:11	cworth	kimundi: I did now found this line of code in the documentation:
2015-05-23 18:01:17	cworth	    let y = &5; // this is the same as `let _y = 5; let y = &_y;`
2015-05-23 18:01:34	cworth	I had breezed past that on the first reading, but it really stuck out to me this time.
2015-05-23 18:01:39	Zidane	I see.  That's a cool trick
2015-05-23 18:01:40	cworth	[http://doc.rust-lang.org/book/lifetimes.html]
2015-05-23 18:02:06	<--	nicoch (nicoch@moz-g02d7k.be) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-23 18:02:11	<--	rmdashrf (rmdashrf@moz-ecr.kjm.54.128.IP) has quit (Quit: WeeChat 0.4.2)
2015-05-23 18:02:18	-->	jadbaires (jadrian@moz-dhpu9p.dfcu.o1j7.08a0.2001.IP) has joined #rust
2015-05-23 18:02:35	&mbrubeck	Zidane: With more complex non-lexical borrowing rules, that could be the case with your original `match` version too, since `None` is not actually borrowing anything from the HashMap, so the borrow doesn't *need* to still be around then.  But borrow scopes in Rust are always lexical (at least for today).
2015-05-23 18:02:36	Zidane	&mbrubeck; do you find yourself having to work around things like this a lot?  Or often using unsafe?  Just trying to gauge how big an obstacle the checker is
2015-05-23 18:03:22	Zidane	yeah, I saw a Jira entry for that.  Do you think the non-lexical borrowing rules will find their way into a release any time soon?
2015-05-23 18:03:22	&mbrubeck	Zidane: It's generally possible to work around things by fiddling with scopes.  `unsafe` is generally not a good solution for this sort of thing, since it doesn't turn off the borrow checker (unless you cast everything to raw pointers).
2015-05-23 18:03:58	<--	grodan (Mibbit@moz-o5eg8b.bredband.comhem.se) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-23 18:04:03	<--	FrozenCow (FrozenCow@moz-i2tvv4.chello.nl) has quit (Connection closed)
2015-05-23 18:04:24	&mbrubeck	I don't know if there are any future plans for non-lexical borrows.
2015-05-23 18:04:49	Zidane	&mbrubeck, well thanks for your help.  Much appreciated.
2015-05-23 18:04:54	<--	kazimuth (james@moz-gne.8or.17.73.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-23 18:04:55	&mbrubeck	Lexical borrowing has the advantage that it's fairly easy to reason about.  If the borrow checker gets too clever, we have to get more clever to keep up with it.  :)
2015-05-23 18:05:01	&mbrubeck	you're welcome!
2015-05-23 18:05:07	-->	pyon (pyon@moz-b0l.mdl.7.179.IP) has joined #rust
2015-05-23 18:05:45	-->	Grimsley (Grimsley@moz-uijrh1.dglo.vc9u.0306.2602.IP) has joined #rust
2015-05-23 18:06:04	@steveklabnik	mbrubeck: yeah, thatd probably be good
2015-05-23 18:06:10	<--	loz (quassel@moz-0m7tp3.tpgi.com.au) has quit (Connection closed)
2015-05-23 18:06:19	@steveklabnik	Zidane: mbrubeck in general, there are plans for non-lexical borrows, but i don't know how soon they'll get implemented
2015-05-23 18:06:50	_habnabit	can i convert a (*const libc::c_uchar, libc::size_t) to a &[u8]? i was looking over http://doc.rust-lang.org/std/primitive.slice.html but i didn't see anything obvious for making a slice from a raw pointer
2015-05-23 18:06:50	Gankro	mbrubeck: Can confirm, at -O both forms of iteration are basically the same for summing the contents
2015-05-23 18:06:57	_habnabit	also didn't see anything in std::ptr
2015-05-23 18:07:00	-->	arBmind (Andreas@moz-0qsi4t.dyn.telefonica.de) has joined #rust
2015-05-23 18:07:05	Gankro	bstrie: ^
2015-05-23 18:07:17	@bstrie	steveklabnik: trpl is on the front page of HN, btw
2015-05-23 18:07:38	-->	Guest____ (textual@moz-rtn.fg7.77.192.IP) has joined #rust
2015-05-23 18:08:07	&mbrubeck	_habnabit: http://doc.rust-lang.org/std/slice/fn.from_raw_parts.html
2015-05-23 18:08:10	-->	swgillespie (swgillespie@moz-rn1.vmq.232.104.IP) has joined #rust
2015-05-23 18:08:19	_habnabit	mbrubeck, oh, thanks
2015-05-23 18:08:23	@bstrie	Gankro: by "both forms" I'm guessing you mean iterators vs while-loops-with-indexing, but don't C++-style iterators let you do arbitrary pointer arithmetic at each step?
2015-05-23 18:08:38	@steveklabnik	bstrie: oh yeah? 
2015-05-23 18:08:43	@bstrie	Hannibal_Smith: honestly, I thought C++ already did have rust-style iterators, is that not what they call ranges?
2015-05-23 18:08:50	 *	mbrubeck really wants full-fledged hoogle-style search-by-type in rustdoc for questions like _habnabit's
2015-05-23 18:08:54	-->	dinfuehr (dinfuehr@moz-ldm58r.highway.telekom.at) has joined #rust
2015-05-23 18:09:01	_habnabit	mbrubeck, that would be nice
2015-05-23 18:09:04	Hannibal_Smith	bstrie, C++ iterators are completly different thing from Rust iterator
2015-05-23 18:09:16	Hannibal_Smith	And IMHO, it's a much beautiful abstraction
2015-05-23 18:09:16	&mbrubeck	_habnabit: Also http://doc.rust-lang.org/std/ffi/struct.CStr.html#method.from_ptr if you have a nul-terminated C string.
2015-05-23 18:09:18	Gankro	bstrie: The problem with CPP iterators is that you have two independent mutable handles
2015-05-23 18:09:19	-->	loz (quassel@moz-0m7tp3.tpgi.com.au) has joined #rust
2015-05-23 18:09:24	-->	atomic (atomic@moz-pjn.cru.169.195.IP) has joined #rust
2015-05-23 18:09:24	Hannibal_Smith	But I think is only a personal opinion
2015-05-23 18:09:37	<--	Astrum|Lap (Astrum|Lap@moz-skcefh.co.comcast.net) has quit (Client exited)
2015-05-23 18:09:40	_habnabit	mbrubeck, ah okay. these are all char*/size_t combinations though
2015-05-23 18:09:44	@bstrie	Gankro: yes, and I'm asking if, if that model existed in rust, we would be able to optimize out the bounds checking as easily as we do with current iterators
2015-05-23 18:09:57	-->	fyolnish (fyolnish@moz-ehtogo.so-net.ne.jp) has joined #rust
2015-05-23 18:10:26	<--	Zidane (Zidane@moz-382v9o.ca.comcast.net) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-05-23 18:10:38	Gankro	bstrie: if you do a straight-line iteration, definitely
2015-05-23 18:10:51	Gankro	bstrie: if you do random access, probably not
2015-05-23 18:11:13	@bstrie	Hannibal_Smith: watching this video now
2015-05-23 18:11:14	Gankro	bstrie: cpp iterators is basically what slice iterators look like internally
2015-05-23 18:11:23	<--	d356 (d@moz-go99rq.res.bhn.net) has quit (Client exited)
2015-05-23 18:11:37	&mbrubeck	steveklabnik: More random docs feedback: I've had trouble finding a good place to point people to answer basic questions abuot "what is a slice and how/why do I use one?"  Both the book and http://doc.rust-lang.org/std/slice/ are fairly terse on the topic.
2015-05-23 18:11:47	Hannibal_Smith	bstrie, you will find something that already know in that video
2015-05-23 18:12:00	Hannibal_Smith	For C++ iterator I think you can find better resources
2015-05-23 18:12:13	@steveklabnik	mbrubeck: noted :)
2015-05-23 18:12:18	Hannibal_Smith	C++ range proposal is pretty similar to Rust iterator
2015-05-23 18:12:26	Hannibal_Smith	(and also D range)
2015-05-23 18:12:32	_habnabit	mbrubeck, so why is this on std::slice and not on the slice primitive? because there is no actual 'slice' type to do slice::from_raw_parts?
2015-05-23 18:12:39	&mbrubeck	_habnabit: right
2015-05-23 18:12:43	<--	espadrine (tyl@moz-l019mn.fbx.proxad.net) has quit (Ping timeout: 121 seconds)
2015-05-23 18:12:57	<--	dinfuehr (dinfuehr@moz-ldm58r.highway.telekom.at) has quit (Ping timeout: 121 seconds)
2015-05-23 18:13:03	@bstrie	Hannibal_Smith: you say you prefer C++ iterators to C++ ranges? if so, why do you want C++ to add the latter?
2015-05-23 18:13:22	Hannibal_Smith	bstrie, because as Rust show, they are easier to work with
2015-05-23 18:13:46	Hannibal_Smith	<Gankro> bstrie: The problem with CPP iterators is that you have two independent mutable handles <-
2015-05-23 18:13:51	Hannibal_Smith	Is a common problem for a newbie
2015-05-23 18:14:20	-->	loyd (loyd@moz-jsb.32f.108.213.IP) has joined #rust
2015-05-23 18:14:25	Hannibal_Smith	But to me, it's a more natural and powerful abstraction
2015-05-23 18:14:34	chowmeined	the number of times c++ iterators have led me to segfaults is too much
2015-05-23 18:14:53	Hannibal_Smith	Unfortunatelly to me, Rust has taken another way :-P
2015-05-23 18:15:03	chowmeined	No segfaults?
2015-05-23 18:15:10	<--	fyolnish (fyolnish@moz-ehtogo.so-net.ne.jp) has quit (Ping timeout: 121 seconds)
2015-05-23 18:15:16	chowmeined	I can live with that
2015-05-23 18:15:50	Hannibal_Smith	As you can see, a good number of people don't like C++ iterators
2015-05-23 18:16:02	-->	GGist (Mibbit@moz-st7v59.wa.comcast.net) has joined #rust
2015-05-23 18:16:56	Hannibal_Smith	Personally I really find beautiful all the original work of Stepanov that is what derive current C++ containers, generic programming and iteraotrs
2015-05-23 18:16:59	chowmeined	I don't like segfaults
2015-05-23 18:18:46	-->	cschneid (cschneid@moz-s0h5kj.reverse.softlayer.com) has joined #rust
2015-05-23 18:18:58	_habnabit	oh, hm, variables don't escape from unsafe blocks?
2015-05-23 18:19:03	-->	nicknikolov (nicknikolov@moz-7nc.uot.55.31.IP) has joined #rust
2015-05-23 18:19:17	Gankro	_habnabit: They're just a normal block
2015-05-23 18:19:19	_habnabit	i mean, `unsafe { let x = y; }` and then outside that block `x` is out of scope?
2015-05-23 18:19:26	-->	thelink2012 (Mibbit@moz-pbo.6ju.214.186.IP) has joined #rust
2015-05-23 18:19:28	&mbrubeck	_habnabit: No, but you can `let (a, b, c) = unsafe { ...; ...; (a, b, c) }`
2015-05-23 18:19:34	<--	Dryvnt (Dryvnt@moz-6v9.ele.218.85.IP) has quit (Quit: Leaving)
2015-05-23 18:19:40	 *	mbrubeck forgot a semicolon after `}`
2015-05-23 18:19:42	_habnabit	mbrubeck, ah okay, that was going to be my first try
2015-05-23 18:19:42	Gankro	_habnabit: Same thing happens if you jsut remove the `unsafe` keyword
2015-05-23 18:19:45	_habnabit	well, second
2015-05-23 18:19:53	@steveklabnik	let x; unsafe { x = y; }
2015-05-23 18:19:53	_habnabit	Gankro, i just expected 'unsafe' to be special, i guess
2015-05-23 18:20:02	&mbrubeck	steveklabnik forgot a `mut` :)
2015-05-23 18:20:07	@steveklabnik	shouldn't need it
2015-05-23 18:20:09	Gankro	mbrubeck: No need :)
2015-05-23 18:20:09	@steveklabnik	to first assign
2015-05-23 18:20:13	&mbrubeck	oh right!
2015-05-23 18:20:20	_habnabit	steveklabnik, semantically i think i prefer `let x = unsafe { y }`
2015-05-23 18:20:27	@steveklabnik	yeah, i probably do too
2015-05-23 18:20:39	_habnabit	well. 'syntactically'? idk; either way it seems to read better to me
2015-05-23 18:20:55	&mbrubeck	steveklabnik's form might be nicer if you have more than one or two variables, assigned at different parts of the block.
2015-05-23 18:21:20	_habnabit	yeah, this is three variables just at the start of the block
2015-05-23 18:21:38	<--	dcb (textual@moz-j72nfe.ca.comcast.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-23 18:22:18	-->	ahunt (ahunt@moz-2obh4g.cam.ac.uk) has joined #rust
2015-05-23 18:23:18	<--	nicknikolov (nicknikolov@moz-7nc.uot.55.31.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 18:23:19	-->	trigen (MSX@moz-sgda69.static.versatel.nl) has joined #rust
2015-05-23 18:23:28	_habnabit	the number of unsafe blocks in this code is worrying, but it's just a bunch of glue around C code :(
2015-05-23 18:23:45	<--	chc4 (chc4@moz-mjph4c.ma.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-23 18:23:46	_habnabit	seems unavoidable
2015-05-23 18:24:10	<--	kmicu (kmicu@moz-uga.edn.218.91.IP) has quit (Client exited)
2015-05-23 18:24:32	LookupError	mbrubeck, thanks.
2015-05-23 18:25:07	Havvy	_habnabit:  As long as you can prove that each one is safe.
2015-05-23 18:25:10	-->	brainproxy (michael@moz-9vjtig.mo.charter.com) has joined #rust
2015-05-23 18:25:12	-->	d356 (d@moz-go99rq.res.bhn.net) has joined #rust
2015-05-23 18:26:04	-->	logan_e (logan_e@moz-k7b29v.hfc.comcastbusiness.net) has joined #rust
2015-05-23 18:26:34	<--	cschneid (cschneid@moz-s0h5kj.reverse.softlayer.com) has quit (Connection closed)
2015-05-23 18:27:27	_habnabit	Havvy, what kind of 'prove' are you thinking of? i can't really prove that any C code calling my rust code will pass in a valid pointer
2015-05-23 18:27:47	Havvy	Ah, so the unsafe goes the other way.
2015-05-23 18:27:52	<--	trigen (MSX@moz-sgda69.static.versatel.nl) has quit (Ping timeout: 121 seconds)
2015-05-23 18:27:53	_habnabit	yeah
2015-05-23 18:28:21	kimundi	_habnabit: well you can decide based o0n the documentation of the C function how it behaves, and then write the unsafe code so that it is correct
2015-05-23 18:28:22	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Connection closed)
2015-05-23 18:29:07	<--	fkaa (tundmatu@moz-501od2.business.telia.com) has quit (Ping timeout: 121 seconds)
2015-05-23 18:29:15	<--	ahunt (ahunt@moz-2obh4g.cam.ac.uk) has quit (Ping timeout: 121 seconds)
2015-05-23 18:29:21	Dabo	kimundi, afaik he's talking about C calling rust, not the other way around
2015-05-23 18:29:30	_habnabit	well
2015-05-23 18:29:32	_habnabit	it's kind of both
2015-05-23 18:29:35	<--	ziocroc (ziocroc@moz-bfu.33o.74.151.IP) has quit (Client exited)
2015-05-23 18:29:50	_habnabit	it's taking some C code and exposing a different C interface, but with rust in the middle instead of more C
2015-05-23 18:30:10	<--	brainproxy (michael@moz-9vjtig.mo.charter.com) has quit (Ping timeout: 121 seconds)
2015-05-23 18:30:22	Dabo	if C is calling rust, you can kind of just like assume it's valid - because you can still say that passing invalid data from C is undefined behavior then
2015-05-23 18:30:39	<--	jadbaires (jadrian@moz-dhpu9p.dfcu.o1j7.08a0.2001.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 18:30:53	Dabo	_habnabit, would the C code you are replacing try to account for invalid data . ?
2015-05-23 18:30:59	<--	d356 (d@moz-go99rq.res.bhn.net) has quit (Client exited)
2015-05-23 18:31:37	_habnabit	Dabo, only insofar as it can check if a pointer passed is null; it doesn't try to ensure that pointers passed in are able to be dereferenced beyond that
2015-05-23 18:32:26	_habnabit	heh; the worst part is that the ultimate consumer is python code, but it has to go through this unsafe C API
2015-05-23 18:32:29	-->	ahunt (ahunt@moz-2obh4g.cam.ac.uk) has joined #rust
2015-05-23 18:32:35	_habnabit	since there's no rust ffi for python (yet) ;p[
2015-05-23 18:33:06	@niconii	rust and C are kind of a clash of philosophies, aren't they
2015-05-23 18:33:13	swgillespie	it would be pretty cool if we could make something like boost::python for Rust
2015-05-23 18:33:17	swgillespie	i wonder if that's possible with macros
2015-05-23 18:33:18	<--	Rusky (russell@moz-j4j5mk.slkc.qwest.net) has quit (Quit: Leaving.)
2015-05-23 18:33:45	@niconii	rust really encourages you to check and handle errors everywhere -- the borrow checker handles a *lot* too
2015-05-23 18:34:12	@niconii	C feels more like "gosh, i sure hope they called this function correctly #yoloswag"
2015-05-23 18:34:30	-->	arBmind1 (Andreas@moz-5nqjp0.dyn.telefonica.de) has joined #rust
2015-05-23 18:34:35	<--	JagaJaga (JagaJaga@moz-ua8.hhl.62.178.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 18:34:35	-->	frangio (frangio@moz-b8v5r5.telecom.net.ar) has joined #rust
2015-05-23 18:34:36	-->	Rusky (russell@moz-j4j5mk.slkc.qwest.net) has joined #rust
2015-05-23 18:34:42	<--	arBmind (Andreas@moz-0qsi4t.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2015-05-23 18:35:19	<--	brianloveswords (brianlovesw@moz-8cn.lfu.232.80.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-23 18:36:44	<--	Hannibal_Smith (nico@moz-7gi1c3.retail.telecomitalia.it) has quit (Quit: Leaving)
2015-05-23 18:36:48	<--	ahunt (ahunt@moz-2obh4g.cam.ac.uk) has quit (Ping timeout: 121 seconds)
2015-05-23 18:37:06	<--	copycat (Thunderbird@moz-mm4e60.singnet.com.sg) has quit (Ping timeout: 121 seconds)
2015-05-23 18:38:06	@bstrie	niconii: I need a #yoloswag pragma in C that acts like try! in rust
2015-05-23 18:38:33	<--	Morten (Morten@moz-e371d2.eduroam.uib.no) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-05-23 18:38:46	<--	LookupError (stepan@moz-vbg.24j.51.176.IP) has left #rust
2015-05-23 18:39:58	-->	jophish (jophish@moz-fjh8o1.gotadsl.co.uk) has joined #rust
2015-05-23 18:40:11	<--	SiegeLord (sl@moz-9jtaei.ca.comcast.net) has quit (Connection closed)
2015-05-23 18:40:28	-->	thirtythreeforty (thirtythree@moz-ee49rc.mycingular.net) has joined #rust
2015-05-23 18:41:59	<--	adu (ajr@moz-0foa9t.md.comcast.net) has quit (Client exited)
2015-05-23 18:42:41	-->	SiegeLord (sl@moz-9jtaei.ca.comcast.net) has joined #rust
2015-05-23 18:43:09	thirtythreeforty	I have a lifetime question.  In this code (http://is.gd/2stJ9Q), the compiler complains that 'the parameter type `T` may not live long enough.'
2015-05-23 18:44:05	thirtythreeforty	It suggests binding the lifetime 'a to T in the generic list explicitly (LinkedIter<'a, T: 'a>, and indeed that makes the error go away.
2015-05-23 18:44:26	thirtythreeforty	Why does it think that T may not live long enough?
2015-05-23 18:44:33	XMPPwocky	thirtythreeforty: T could be *any* type
2015-05-23 18:44:44	XMPPwocky	including, for example, a reference with a lifetime shorter than 'a
2015-05-23 18:45:29	thirtythreeforty	But T is merely a parameter of the Linked<T> that is an element of of the Linked<T>
2015-05-23 18:46:23	thirtythreeforty	(I'm coming from C++ templates so I'm thinking of T as just a template parameter, but obv. there's something else going on here.)
2015-05-23 18:46:23	-->	bombless (_@moz-p7bm0v.0v2u.0v40.0da8.2001.IP) has joined #rust
2015-05-23 18:46:42	<--	nodweber (nodweber@moz-knt.fgq.178.5.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-23 18:46:47	thirtythreeforty	What's different?
2015-05-23 18:46:48	XMPPwocky	thirtythreeforty: you can't have a reference to something unless that something outlives the refreence
2015-05-23 18:47:29	thirtythreeforty	Ok, that makes sense.  But then why wouldn't I assign the lifetime 'a to the Linked<T>, instead of the T?
2015-05-23 18:47:34	XMPPwocky	Linked<T> can't be allowed to outlive its data field
2015-05-23 18:47:46	<--	kaeluka (kaeluka@moz-tn3lqd.cust.bredbandsbolaget.se) has quit (Client exited)
2015-05-23 18:47:58	<--	SkyEye (gaveen@moz-lnd.5md.157.175.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-23 18:48:03	proc	is it normal that I'm getting ghost processes through process run ?
2015-05-23 18:48:04	XMPPwocky	thirtythreeforty: because Linked<T> doesn't take a lifetime parameter
2015-05-23 18:48:26	XMPPwocky	https://gist.github.com/XMPPwocky/d820f45ac138bb4d6c3f
2015-05-23 18:48:38	proc	they're not creating any memory / cpu usage, but they're appearing in the `ps aux` till I'm closing the whole program
2015-05-23 18:48:40	-->	chc4 (chc4@moz-mjph4c.ma.comcast.net) has joined #rust
2015-05-23 18:48:42	<--	swgillespie (swgillespie@moz-rn1.vmq.232.104.IP) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-23 18:48:58	XMPPwocky	proc: you need to wait on them, otherwise they'll be zombies, iirc
2015-05-23 18:49:05	-->	lyc (lyc@moz-jft.nr8.226.207.IP) has joined #rust
2015-05-23 18:49:13	<--	larhat1 (Adium@moz-vlo5br.cable.virginm.net) has quit (Quit: Leaving.)
2015-05-23 18:49:40	<--	gleb (gleb@moz-3u1drv.rusanovka-net.kiev.ua) has quit (Ping timeout: 121 seconds)
2015-05-23 18:49:46	XMPPwocky	thirtythreeforty: the lifetime of Linked<T> can't be allowed to be longer than the lifetime of that T
2015-05-23 18:50:03	proc	XMPPwocky: https://git.proctet.net/proctrap/yayd-backend/blob/master/src/lib/downloader.rs#L87-101
2015-05-23 18:50:08	-->	zyphrus (David@moz-1a4.urk.98.101.IP) has joined #rust
2015-05-23 18:50:08	XMPPwocky	thus, we need to set the lifetime of T
2015-05-23 18:50:12	proc	s I'm waiting till the process run through
2015-05-23 18:50:17	proc	because I'm parsing the output
2015-05-23 18:50:22	proc	but it's simply staying as ghost
2015-05-23 18:50:25	XMPPwocky	once we've done that, the lifetime of Linked<T> will work
2015-05-23 18:50:45	-->	kaeluka (kaeluka@moz-tn3lqd.cust.bredbandsbolaget.se) has joined #rust
2015-05-23 18:51:07	-->	lixiaofeng (lixiaofeng@moz-dm7.656.240.220.IP) has joined #rust
2015-05-23 18:51:17	<--	abique (abique@moz-alq0r9.ko9f.54u1.0e35.2a01.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 18:51:56	thirtythreeforty	XMPPwocky, That makes sense, I suppose.  But since the Linked<T> owns its T, I would expect that the T cannot outlive it.
2015-05-23 18:52:01	-->	swgillespie (swgillespie@moz-rn1.vmq.232.104.IP) has joined #rust
2015-05-23 18:52:03	<--	logan_e (logan_e@moz-k7b29v.hfc.comcastbusiness.net) has quit (Client exited)
2015-05-23 18:52:23	XMPPwocky	thirtythreeforty: it's a little more nuanced than that
2015-05-23 18:52:34	XMPPwocky	imagine if T was a reference
2015-05-23 18:52:51	XMPPwocky	you couldn't let Linked<T> live longer than the reference could
2015-05-23 18:53:07	<--	kaeluka (kaeluka@moz-tn3lqd.cust.bredbandsbolaget.se) has quit (Client exited)
2015-05-23 18:53:10	<--	lyc (lyc@moz-jft.nr8.226.207.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 18:53:26	XMPPwocky	i.e. you can't let x = { let foo = 42; let bar = Linked { data: &foo }; bar } 
2015-05-23 18:54:05	XMPPwocky	because the reference in that Linked would then be dangling
2015-05-23 18:54:12	thirtythreeforty	Oh, OK, I see.  I was thinking of T as only a data type; didn't consider a reference type.
2015-05-23 18:54:23	XMPPwocky	reference types aren't actually that special
2015-05-23 18:54:53	XMPPwocky	any reference restricts the lifetime of things containing it
2015-05-23 18:54:55	-->	minot2 (kkus@moz-baj4jj.74.srtnet.com) has joined #rust
2015-05-23 18:55:11	XMPPwocky	those things that  contain it, then, act just like references
2015-05-23 18:55:13	thirtythreeforty	So would a better solution be to constrain the lifetime of T to be the same as that of Linked<T> in the definition of Linked<T>?
2015-05-23 18:55:22	-->	lucian (lucian@moz-2c3pda.cable.virginm.net) has joined #rust
2015-05-23 18:55:35	-->	dmac_ (dmac@moz-2ig65r.ca.comcast.net) has joined #rust
2015-05-23 18:55:41	-->	logan_e (logan_e@moz-k7b29v.hfc.comcastbusiness.net) has joined #rust
2015-05-23 18:55:48	<--	swgillespie (swgillespie@moz-rn1.vmq.232.104.IP) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-23 18:55:50	thirtythreeforty	^^ that makes sense, too
2015-05-23 18:55:54	XMPPwocky	you can't do that, actually
2015-05-23 18:56:18	thirtythreeforty	Oh? Why not?
2015-05-23 18:56:20	XMPPwocky	you can't constrain something to live no longer than yourself
2015-05-23 18:56:27	XMPPwocky	because *that already happens*
2015-05-23 18:56:45	XMPPwocky	the reason something like struct Foo<'a> { x: &'a u32 } works
2015-05-23 18:56:54	<--	loyd (loyd@moz-jsb.32f.108.213.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 18:57:05	XMPPwocky	read that as "for any lifetime 'a, struct Foo { x: &'a u32 }"
2015-05-23 18:57:11	-->	jadbaires (jadrian@moz-dhpu9p.dfcu.o1j7.08a0.2001.IP) has joined #rust
2015-05-23 18:57:19	XMPPwocky	and because of the lifetime rules, any struct Foo instantiated with some lifetime
2015-05-23 18:57:19	thirtythreeforty	alright
2015-05-23 18:57:25	XMPPwocky	can't be allowed to outlive that lifetime
2015-05-23 18:57:36	XMPPwocky	because otherwise, the reference *inside* it would dangle
2015-05-23 18:58:02	proc	I'll look later some more at that bug, but I'm clearly waiting for the ending of the process. Even more, they're alive as long as the daemon-like program runns..
2015-05-23 18:58:11	proc	( => enough time to end )
2015-05-23 18:58:20	-->	mattico (matt@moz-d3u46j.mpls.qwest.net) has joined #rust
2015-05-23 18:58:49	thirtythreeforty	So even though Linked<T> cannot outlive its T, a &Linked<T> *could* outlive the T?
2015-05-23 18:59:10	XMPPwocky	no, it can't either
2015-05-23 18:59:24	<--	lucian (lucian@moz-2c3pda.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2015-05-23 18:59:30	XMPPwocky	Linked<T> can't last longer than T would be allowed to
2015-05-23 18:59:42	<--	dmac_ (dmac@moz-2ig65r.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-23 19:00:10	XMPPwocky	the issue is that you said, "for any type T, and any lifetime 'a, struct LinkedIter { foo: &'a Linked<T> }"
2015-05-23 19:00:24	-->	zhoeon (fc@moz-cuhqb2.cable.teksavvy.com) has joined #rust
2015-05-23 19:00:25	-->	SpaceManiac (Tad@moz-g50q8a.dyn.suddenlink.net) has joined #rust
2015-05-23 19:00:39	XMPPwocky	but a reference with lifetime, say, 'foo, can't hold a reference with lifetime, say, 'bar, unless 'bar outlives 'foo
2015-05-23 19:01:04	thirtythreeforty	That makes more sense now
2015-05-23 19:01:13	XMPPwocky	so you need to explicitly say, "for any lifetime 'a, and any type T that outlives 'a...
2015-05-23 19:01:17	XMPPwocky	"
2015-05-23 19:01:20	<--	jmbto (jmbto@moz-raeuva.hca5.8frp.0e35.2a01.IP) has quit (Quit: WeeChat 1.1.1)
2015-05-23 19:01:46	<--	oal (oal@moz-0lm.qc2.255.130.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 19:01:52	<--	tigrou3tac (fabien@moz-gdonfo.fbx.proxad.net) has quit (Ping timeout: 121 seconds)
2015-05-23 19:02:20	<--	logan_e (logan_e@moz-k7b29v.hfc.comcastbusiness.net) has quit (Client exited)
2015-05-23 19:03:00	thirtythreeforty	Alright, another question, would it be possible (and sufficient) to declare in LinkedIter<T> something like the following?
2015-05-23 19:03:26	thirtythreeforty	node: Option<&'a (Linked<T>: 'a)>
2015-05-23 19:03:31	thirtythreeforty	That is, assign 'a to the Linked<T>
2015-05-23 19:03:41	thirtythreeforty	that my reference refers to
2015-05-23 19:03:42	XMPPwocky	not inline like that
2015-05-23 19:04:09	thirtythreeforty	What would be the syntax?
2015-05-23 19:04:38	XMPPwocky	oh, i thought a where clause would work, it doesn't
2015-05-23 19:04:58	XMPPwocky	i *suspect* that is actually a compiler bug, but it might not be
2015-05-23 19:05:12	thirtythreeforty	woo young compilers haha
2015-05-23 19:05:40	thirtythreeforty	So you should be able to define another type L and constrain with "where L: Linked<T>: 'a"?
2015-05-23 19:05:59	XMPPwocky	no need for another generic parameter
2015-05-23 19:06:05	XMPPwocky	you'd just have where Linked<T>: 'a
2015-05-23 19:06:07	<--	posborne (posborne@moz-9hioom.mn.comcast.net) has quit (Connection closed)
2015-05-23 19:06:11	XMPPwocky	you can write it as where T: 'a
2015-05-23 19:06:42	thirtythreeforty	Oh OK, that makes more sense, and that's actually what I thought the lifetime should be (the reference cannot outlast the thing it is referring to).
2015-05-23 19:06:47	-->	posborne (posborne@moz-9hioom.mn.comcast.net) has joined #rust
2015-05-23 19:06:55	XMPPwocky	oh, i see why you can't do that
2015-05-23 19:07:04	thirtythreeforty	Of course guaranteeing that the reference doesn't outlast the T accomplishes the same thing, but is a bit more confusing
2015-05-23 19:07:12	XMPPwocky	it can't, from that, extrapolate that T can't be allowed to outlive 'a
2015-05-23 19:07:24	<--	Wild_Cat (Max@moz-fa8mvt.dsl.teksavvy.com) has quit (Ping timeout: 121 seconds)
2015-05-23 19:07:26	-->	bytewise (bytewise@moz-mkh5h4.hsi16.unitymediagroup.de) has joined #rust
2015-05-23 19:08:01	thirtythreeforty	Really?  I thought the compiler knows that Linked<T> can't outlive T
2015-05-23 19:08:41	--	kimundi is now known as zz_kimundi
2015-05-23 19:09:29	XMPPwocky	right, which is why it rejects it
2015-05-23 19:09:33	<--	mattico (matt@moz-d3u46j.mpls.qwest.net) has quit (Quit: Leaving)
2015-05-23 19:09:39	XMPPwocky	it won't allow that because it notices the problem
2015-05-23 19:10:09	-->	dinfuehr (dinfuehr@moz-ldm58r.highway.telekom.at) has joined #rust
2015-05-23 19:10:22	<--	derps (Mibbit@moz-tpjl46.co.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-23 19:11:48	<--	posborne (posborne@moz-9hioom.mn.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-23 19:11:53	thirtythreeforty	Hmm ok.  I had thought that constraining the &Linked<T> to 'a would imply that T's lifetime is at most 'a.
2015-05-23 19:12:00	<--	REMqb (REMqb@moz-atvqum.abo.wanadoo.fr) has quit (Client exited)
2015-05-23 19:12:07	thirtythreeforty	at least* I mean
2015-05-23 19:12:34	-->	unquiet (unqirc@moz-plr.7h1.213.81.IP) has joined #rust
2015-05-23 19:12:56	<--	proc (proc@moz-m4bmmk.dip0.t-ipconnect.de) has quit (Quit: Gotta eat my pizza)
2015-05-23 19:13:17	thirtythreeforty	Thanks for the explanation, it helps a lot
2015-05-23 19:13:24	<--	willem (willem@moz-facs2s.dynamic.upc.nl) has quit (Quit: leaving)
2015-05-23 19:14:12	<--	dinfuehr (dinfuehr@moz-ldm58r.highway.telekom.at) has quit (Ping timeout: 121 seconds)
2015-05-23 19:14:12	<--	unquiet (unqirc@moz-plr.7h1.213.81.IP) has quit (Connection closed)
2015-05-23 19:14:14	-->	unquiet (unqirc@moz-plr.7h1.213.81.IP) has joined #rust
2015-05-23 19:15:33	-->	Astrum|Lap (Astrum|Lap@moz-skcefh.co.comcast.net) has joined #rust
2015-05-23 19:15:43	<--	ecogiko (ecogiko@moz-p59qrv.chello.nl) has quit (A TLS packet with unexpected length was received.)
2015-05-23 19:16:40	-->	zcdziura (zcdziura@moz-r9t2at.nh.comcast.net) has joined #rust
2015-05-23 19:17:23	-->	posborne (posborne@moz-9hioom.mn.comcast.net) has joined #rust
2015-05-23 19:17:52	d-snp	how do I debug this error? http://pastie.org/10204272
2015-05-23 19:17:56	<--	vosen (vosen@moz-mtm1g4.dynamic.chello.pl) has quit (Connection closed)
2015-05-23 19:18:04	d-snp	there's no backtrace so I dont know where it's thrown from
2015-05-23 19:18:13	thirtythreeforty	d-snp, compile with -g
2015-05-23 19:18:19	d-snp	ok thanks
2015-05-23 19:18:34	thirtythreeforty	That'll even let you feed it to rust-gdb and step through it
2015-05-23 19:18:44	-->	kngl (Adium@moz-rmgnkh.dynamic.voo.be) has joined #rust
2015-05-23 19:18:45	<--	spider-mario (spidermario@moz-coblcf.fbx.proxad.net) has quit (Connection closed)
2015-05-23 19:19:27	-->	logan_e (logan_e@moz-k7b29v.hfc.comcastbusiness.net) has joined #rust
2015-05-23 19:20:16	-->	ptalbot (ptalbot@moz-j4gnuh.fbx.proxad.net) has joined #rust
2015-05-23 19:20:32	-->	wenderen (uid34286@moz-9vna9c.charlton.irccloud.com) has joined #rust
2015-05-23 19:20:40	<--	meunierd (dmeunier@moz-glf54u.cpe.sourcecable.net) has quit (Ping timeout: 121 seconds)
2015-05-23 19:21:24	-->	mcoffee (mcoffee@moz-f3t.vl0.222.162.IP) has joined #rust
2015-05-23 19:22:08	<--	mdcox (mdcox@moz-5a670o.pubnet.pdx.edu) has quit (Quit: leaving)
2015-05-23 19:22:30	-->	unq (unqirc@moz-plr.7h1.213.81.IP) has joined #rust
2015-05-23 19:22:30	<--	unquiet (unqirc@moz-plr.7h1.213.81.IP) has quit (Connection closed)
2015-05-23 19:22:45	@steveklabnik	d-snp: RUST_BACKTRACE=1 ./foo
2015-05-23 19:22:47	d-snp	thirtythreeforty: I feel a bit silly now, but how do I get cargo to pass -g?
2015-05-23 19:22:49	@steveklabnik	will give you a backtrace
2015-05-23 19:22:56	@steveklabnik	also, cargo build does a -g by default so that's already there
2015-05-23 19:23:01	d-snp	ah alright
2015-05-23 19:23:05	d-snp	thanks :)
2015-05-23 19:23:10	@steveklabnik	np :)
2015-05-23 19:23:43	thirtythreeforty	Oh that's cool, I just thought RUST_BACKTRACE was for the compiler only.
2015-05-23 19:23:49	@steveklabnik	nope, any rust program
2015-05-23 19:23:51	@steveklabnik	:)
2015-05-23 19:23:54	thirtythreeforty	very nice
2015-05-23 19:24:04	-->	trigen (MSX@moz-sgda69.static.versatel.nl) has joined #rust
2015-05-23 19:24:13	@steveklabnik	also, googling 'os error 2' shows 'the system cannot find the file specified'
2015-05-23 19:24:19	@steveklabnik	so d-snp , i'd guess that's your issue
2015-05-23 19:24:21	thirtythreeforty	heh
2015-05-23 19:24:29	-->	brson (brson@moz-r1h.uhc.47.96.IP) has joined #rust
2015-05-23 19:24:29	--	Mode #rust [+ao brson brson] by ChanServ
2015-05-23 19:25:29	<--	zhoeon (fc@moz-cuhqb2.cable.teksavvy.com) has quit (Quit: leaving)
2015-05-23 19:27:10	<--	logan_e (logan_e@moz-k7b29v.hfc.comcastbusiness.net) has quit (Client exited)
2015-05-23 19:27:29	-->	agjacome (agjacome@moz-acoq63.dynamic.jazztel.es) has joined #rust
2015-05-23 19:28:33	<--	mcoffee (mcoffee@moz-f3t.vl0.222.162.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-23 19:28:38	<--	trigen (MSX@moz-sgda69.static.versatel.nl) has quit (Ping timeout: 121 seconds)
2015-05-23 19:28:42	d-snp	well yeah, but I don't know which file :P
2015-05-23 19:29:52	grant	I want to wrap a TcpStream in a BufReader and a BufWriter. Both of these take ownership of the stream. How can I do this?
2015-05-23 19:30:08	-->	structuct (Mibbit@moz-d970r5.cable.teksavvy.com) has joined #rust
2015-05-23 19:30:26	<--	brson (brson@moz-r1h.uhc.47.96.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 19:30:50	<--	Lovot (Lovot@moz-1je.00u.73.69.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 19:31:19	thirtythreeforty	Do RefReader and RefWriter help?  (Just looking through the docs)
2015-05-23 19:32:30	--	irc: disconnected from server
2015-05-23 19:32:42	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-23 19:32:42	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-23 19:32:42	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-23 19:32:42	--	Channel #rust: 946 nicks (13 ops, 0 halfops, 2 voices, 931 normals)
2015-05-23 19:32:43	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-23 19:33:01	<--	Douman (Douman@moz-epkdg2.dynamic.mts-nn.ru) has quit (Quit: )
2015-05-23 19:33:38	-->	munksgaard (munksgaard@moz-478pev.u.parknet.dk) has joined #rust
2015-05-23 19:34:29	@bstrie	structuct: a Path is always a single size, I'm not sure what you mean
2015-05-23 19:34:41	@bstrie	playbot: std::mem::size_of::<std::path::Path>()
2015-05-23 19:34:42	--	Notice(playbot): <anon>:9:9: 9:45 error: the trait `core::marker::Sized` is not implemented for the type `[u8]` [E0277]
2015-05-23 19:34:42	--	Notice(playbot): <anon>:9         std::mem::size_of::<std::path::Path>()
2015-05-23 19:34:42	--	Notice(playbot): output truncated; full output at: http://bit.ly/1IS3Tzn
2015-05-23 19:34:43	geofft	bstrie: Path is unsized, right? 
2015-05-23 19:34:50	@bstrie	structuct: ah right, I didn't realize that
2015-05-23 19:35:02	--	bvssvni is now known as bvssvni_
2015-05-23 19:35:23	@bstrie	structuct: as with anything unsized, you need to put it behind a pointer. so store either &Path or Box<Path> or Rc<Path> or anything like that
2015-05-23 19:35:27	<--	Triton (cindela@moz-dlkpia.bb.dnainternet.fi) has quit (Ping timeout: 121 seconds)
2015-05-23 19:35:31	@bstrie	(not sure if Rc<Path> works yet, it should soon)
2015-05-23 19:35:48	geofft	right, hold a reference to it (which means your struct gets a lifetime), or make a copy of it in a Box, or make a copy of it in an OsString 
2015-05-23 19:35:56	<--	det (chris@moz-9klsea.lv.cox.net) has quit (Connection closed)
2015-05-23 19:35:58	<--	unq (unqirc@moz-plr.7h1.213.81.IP) has quit (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
2015-05-23 19:35:59	geofft	oh, I guess PathBuf is the thing for this 
2015-05-23 19:36:02	geofft	https://doc.rust-lang.org/std/path/struct.PathBuf.html 
2015-05-23 19:36:03	-->	dmac_ (dmac@moz-2ig65r.ca.comcast.net) has joined #rust
2015-05-23 19:36:18	-->	det (chris@moz-9klsea.lv.cox.net) has joined #rust
2015-05-23 19:36:36	-->	Lovot (Lovot@moz-1je.00u.73.69.IP) has joined #rust
2015-05-23 19:37:17	<--	thirtythreeforty (thirtythree@moz-ee49rc.mycingular.net) has quit (Quit: You've been great, folks!)
2015-05-23 19:39:56	-->	logan_e (logan_e@moz-k7b29v.hfc.comcastbusiness.net) has joined #rust
2015-05-23 19:40:30	-->	nedp (nedp@moz-vg6vvt.bigpond.net.au) has joined #rust
2015-05-23 19:40:55	<--	lenstr_ (lenstr@moz-el8.vju.25.171.IP) has quit (Connection closed)
2015-05-23 19:41:03	<--	asQuirre_ (asQuirreL@moz-ro1qqu.ox.ac.uk) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-23 19:41:10	-->	lenstr (lenstr@moz-el8.vju.25.171.IP) has joined #rust
2015-05-23 19:41:41	--	irc: disconnected from server
2015-05-23 19:41:53	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-23 19:41:53	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-23 19:41:53	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-23 19:41:53	--	Channel #rust: 945 nicks (13 ops, 0 halfops, 2 voices, 930 normals)
2015-05-23 19:41:54	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-23 19:42:10	-->	brainproxy (michael@moz-9vjtig.mo.charter.com) has joined #rust
2015-05-23 19:42:15	<--	logan_e (logan_e@moz-k7b29v.hfc.comcastbusiness.net) has quit (Client exited)
2015-05-23 19:42:31	geri	rust is popular in russia? http://www.google.com/trends/explore#q=%2Fm%2F0dsbpg6&cmpt=q&tz=
2015-05-23 19:42:54	<--	peferron (peferron@moz-k89vq8.ca.comcast.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-23 19:43:50	<--	Altazimuth (Altazimuth@moz-rb7u6p.skybroadband.com) has quit (Ping timeout: 121 seconds)
2015-05-23 19:43:59	stringy	any guidance on using a type alias versus a new type when one needs to implement some traits, like Display, but not shadow any of the inherent impl methods for the type?
2015-05-23 19:44:06	structuct	bstrie: right forgot to mention I tried &Path, which asks for a lifetime specifier. is this good practice? -- side question: I have diffrent struct, Foo { name: String } -- why does the compiler not yell, isn't String also unsized?
2015-05-23 19:44:23	-->	ifim (user@moz-vjs.adg.229.177.IP) has joined #rust
2015-05-23 19:45:14	grant	is matching over a string stable in 1.0?
2015-05-23 19:45:21	<--	minot2 (kkus@moz-baj4jj.74.srtnet.com) has quit (Ping timeout: 121 seconds)
2015-05-23 19:45:28	-->	winding-lines (textual@moz-9utvl5.frokca.sbcglobal.net) has joined #rust
2015-05-23 19:45:38	@steveklabnik	geri: there's been a number of russian-language posts about rust, so maybe?
2015-05-23 19:45:50	<--	Firedancer (user@moz-9ehgvi.bb.dnainternet.fi) has quit (Ping timeout: 121 seconds)
2015-05-23 19:45:57	@steveklabnik	also, there's an in-progress russian translation of the book
2015-05-23 19:46:05	@steveklabnik	structuct: String is sized
2015-05-23 19:46:19	<--	tomprogrammer (thomas@moz-eok1a5.tr5r.qept.4dd0.2001.IP) has quit (Quit: WeeChat 1.2)
2015-05-23 19:46:25	@steveklabnik	structuct: and yes, if you want &Path, you'll need a lifetime specifier
2015-05-23 19:46:33	<--	ai (ai@moz-pqofrl.sunline.net.ua) has quit (Quit: Leaving.)
2015-05-23 19:46:54	SpaceManiac	stringy: you need a newtype if you want to change functionality at all
2015-05-23 19:47:16	Dr-Emann	structuct: str and String are related in the same way as Path and PathBuf
2015-05-23 19:47:20	-->	minot2 (kkus@moz-baj4jj.74.srtnet.com) has joined #rust
2015-05-23 19:47:58	@steveklabnik	grant: http://is.gd/G0PJ8l ?
2015-05-23 19:48:38	grant	steveklabnik: thanks, was getting compile errors with that in the beta
2015-05-23 19:48:49	<--	mib_gtqljb (Mibbit@moz-38gbb7.bon.riksnet.se) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-23 19:48:54	stringy	not inherent functionality, but add an impl Display; basically I have a type alias "let Stack<I> = Vec<StackItem<I>>" but I can't define a generic impl Display, because of E0210
2015-05-23 19:49:03	<--	munksgaard (munksgaard@moz-478pev.u.parknet.dk) has quit (Ping timeout: 121 seconds)
2015-05-23 19:49:09	<--	brainproxy (michael@moz-9vjtig.mo.charter.com) has quit (Ping timeout: 121 seconds)
2015-05-23 19:49:27	stringy	i.e. type parameter `I` must be used as the type parameter for some local type (e.g. `MyStruct<T>`); only traits defined in the current crate can be implemented for a type paramter
2015-05-23 19:49:46	-->	lyc (lyc@moz-jft.nr8.226.207.IP) has joined #rust
2015-05-23 19:50:08	structuct	ok thanks guys
2015-05-23 19:50:21	stringy	how do I constrain the I in the way it indicates? how do I show that it is "used as the type parameter for some local type"?
2015-05-23 19:50:41	-->	gandalf (zbraniecki@moz-cp7c4m.ca.comcast.net) has joined #rust
2015-05-23 19:50:51	<--	structuct (Mibbit@moz-d970r5.cable.teksavvy.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-23 19:50:57	-->	peferron (peferron@moz-k89vq8.ca.comcast.net) has joined #rust
2015-05-23 19:53:08	talchas	stringy: iirc it's legal if StackItem is local
2015-05-23 19:53:21	-->	eschatite (eschatite@moz-95cjjj.res.rr.com) has joined #rust
2015-05-23 19:53:31	talchas	if not, you can make Stack be a tuple struct instead of a transparent type alias
2015-05-23 19:53:48	<--	lyc (lyc@moz-jft.nr8.226.207.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 19:54:25	<--	zcdziura (zcdziura@moz-r9t2at.nh.comcast.net) has quit (Client exited)
2015-05-23 19:54:43	<--	ptalbot (ptalbot@moz-j4gnuh.fbx.proxad.net) has quit (Ping timeout: 121 seconds)
2015-05-23 19:54:48	stringy	talchas: yeah, that's what I got out of the message :/ I was hesitant to make it a struct with a member, but I think a tuple struct is a reasonable ergonomic hit to using the type in order to still be able to extend it
2015-05-23 19:54:49	-->	zcdziura (zcdziura@moz-r9t2at.nh.comcast.net) has joined #rust
2015-05-23 19:54:57	<--	zcdziura (zcdziura@moz-r9t2at.nh.comcast.net) has quit (Client exited)
2015-05-23 19:55:04	<--	gandalf (zbraniecki@moz-cp7c4m.ca.comcast.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-23 19:55:17	stringy	thanks SpaceManiac and talchas I'll give that a shot :)
2015-05-23 19:55:45	<--	mutsune (mutsune@moz-634799.mesh.ad.jp) has quit (Connection closed)
2015-05-23 19:55:55	<--	dalarmmst (dalarmmst@moz-mb21j4.bredband.comhem.se) has quit (Ping timeout: 121 seconds)
2015-05-23 19:56:04	-->	logan_e (logan_e@moz-k7b29v.hfc.comcastbusiness.net) has joined #rust
2015-05-23 19:56:07	talchas	(or if StackItem wasn't local due to also being an alias, you might be able to make that a tuple struct if it's nicer)
2015-05-23 19:56:08	-->	mutsune (mutsune@moz-634799.mesh.ad.jp) has joined #rust
2015-05-23 19:56:34	stringy	StackItem is a local enum
2015-05-23 19:56:35	-->	Morten (Morten@moz-ao432p.bb.online.no) has joined #rust
2015-05-23 19:57:08	<--	winding-lines (textual@moz-9utvl5.frokca.sbcglobal.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-23 19:57:31	<--	lenstr (lenstr@moz-el8.vju.25.171.IP) has quit (Connection closed)
2015-05-23 19:57:48	<--	eschatite (eschatite@moz-95cjjj.res.rr.com) has quit (Quit: Leaving)
2015-05-23 19:57:54	-->	lenstr (lenstr@moz-el8.vju.25.171.IP) has joined #rust
2015-05-23 19:58:12	-->	eschatite (eschatite@moz-95cjjj.res.rr.com) has joined #rust
2015-05-23 19:58:22	<--	frangio (frangio@moz-b8v5r5.telecom.net.ar) has quit (Client exited)
2015-05-23 19:59:36	<--	danyel (danyel@moz-0irepv.dip0.t-ipconnect.de) has quit (Client exited)
2015-05-23 20:00:10	<--	mutsune (mutsune@moz-634799.mesh.ad.jp) has quit (Ping timeout: 121 seconds)
2015-05-23 20:00:29	-->	aatch (james@moz-is4j4r.cable.telstraclear.net) has joined #rust
2015-05-23 20:00:30	-->	frangio (frangio@moz-b8v5r5.telecom.net.ar) has joined #rust
2015-05-23 20:01:32	<--	Nextra (Nextra@moz-5i3.5v0.233.89.IP) has quit (Connection closed)
2015-05-23 20:01:34	<--	thelink2012 (Mibbit@moz-pbo.6ju.214.186.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-23 20:02:07	<--	Morten (Morten@moz-ao432p.bb.online.no) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-05-23 20:02:45	<--	frangio (frangio@moz-b8v5r5.telecom.net.ar) has quit (Client exited)
2015-05-23 20:02:53	<--	eschatite (eschatite@moz-95cjjj.res.rr.com) has quit (Quit: Leaving)
2015-05-23 20:03:12	<--	agjacome (agjacome@moz-acoq63.dynamic.jazztel.es) has quit (Ping timeout: 121 seconds)
2015-05-23 20:03:15	-->	eschatite (eschatite@moz-95cjjj.res.rr.com) has joined #rust
2015-05-23 20:03:23	-->	doomrobo (doomrobo@moz-tj2e6v.261j.6edk.2000.2604.IP) has joined #rust
2015-05-23 20:03:39	doomrobo	is there anything in the standard library I could use to get a sliding window iterator over a String?
2015-05-23 20:03:45	_habnabit	playbot, 'x' as u8
2015-05-23 20:03:46	--	Notice(playbot): 120
2015-05-23 20:03:49	_habnabit	okay cool
2015-05-23 20:04:42	@steveklabnik	playbot: b'x'
2015-05-23 20:04:43	--	Notice(playbot): 120
2015-05-23 20:04:48	_habnabit	oh! that works
2015-05-23 20:04:53	@steveklabnik	playbot: b'foobar'
2015-05-23 20:04:54	--	Notice(playbot): <anon>:9:9: 9:12 error: unterminated byte constant: b'f
2015-05-23 20:04:54	--	Notice(playbot): <anon>:9         b'foobar'
2015-05-23 20:04:54	--	Notice(playbot): output truncated; full output at: http://bit.ly/1HpGrUj
2015-05-23 20:05:00	<--	cursivecode (textual@moz-4u56i9.res.bhn.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-23 20:05:01	@steveklabnik	heh
2015-05-23 20:05:13	-->	p32 (Mibbit@moz-305o0v.cpe.netcabo.pt) has joined #rust
2015-05-23 20:05:16	@steveklabnik	playbot: b"foobar"
2015-05-23 20:05:17	--	Notice(playbot): [102, 111, 111, 98, 97, 114]
2015-05-23 20:05:33	aatch	byte constant literals are so useful.
2015-05-23 20:05:50	-->	structuct (Mibbit@moz-d970r5.cable.teksavvy.com) has joined #rust
2015-05-23 20:05:54	_habnabit	yes
2015-05-23 20:05:55	<--	p32 (Mibbit@moz-305o0v.cpe.netcabo.pt) has left #rust
2015-05-23 20:05:59	Remram	Option's and_then() is bind?
2015-05-23 20:06:22	-->	yuja (yuja@moz-4hssp3.so-net.ne.jp) has joined #rust
2015-05-23 20:06:46	aatch	I've got some code that converts bytes in base n to a human readable string, so I can just do `byte + b'0'` (for n <= 10 anyway);
2015-05-23 20:07:31	@steveklabnik	Remram: basically, yes
2015-05-23 20:07:31	structuct	back, wait im ust be misunderstanding - how can String be Sized if it's a growable, heap allocated string? -- how can the compiler know the size of String in struct Foo { name: String }? 
2015-05-23 20:07:34	-->	Hail_Spacecake (greg@moz-djc.ktt.28.204.IP) has joined #rust
2015-05-23 20:07:46	@steveklabnik	structuct: String is a struct with a pointer, length, and capacity
2015-05-23 20:07:50	@steveklabnik	(iirc)
2015-05-23 20:07:53	@steveklabnik	so, it's three pointers
2015-05-23 20:08:11	@steveklabnik	oh
2015-05-23 20:08:12	@steveklabnik	lol
2015-05-23 20:08:14	Gankro	D: did darinmorrison flee the internet?
2015-05-23 20:08:15	@steveklabnik	pub struct String { vec: Vec<u8>,
2015-05-23 20:08:15	@steveklabnik	}
2015-05-23 20:08:30	@steveklabnik	so yes, literally that
2015-05-23 20:08:46	@steveklabnik	remember, it's the size _of the type_
2015-05-23 20:08:57	geofft	structuct: It might help to think of how Box<T> is always sized, even if T isn't sized 
2015-05-23 20:08:58	<--	logan_e (logan_e@moz-k7b29v.hfc.comcastbusiness.net) has quit (Client exited)
2015-05-23 20:08:58	@steveklabnik	... does that make sense structuct 
2015-05-23 20:09:03	<--	peferron (peferron@moz-k89vq8.ca.comcast.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-23 20:09:38	_habnabit	(how does Vec allocate space on the heap?)
2015-05-23 20:09:49	Hail_Spacecake	is it possible to selectively overload lang_items?
2015-05-23 20:09:53	aatch	_habnabit, using a memory allocator.
2015-05-23 20:10:00	_habnabit	aatch, can i do that in my code?
2015-05-23 20:10:05	structuct	oh... yeah, just trying to wrap my head around it. rust is my first non-scrpting language...
2015-05-23 20:10:08	structuct	thanks
2015-05-23 20:10:11	<--	dgrunwald (Daniel@moz-ho507c.hsi4.kabel-badenwuerttemberg.de) has quit (Connection closed)
2015-05-23 20:10:12	@steveklabnik	:)
2015-05-23 20:10:19	@steveklabnik	any time
2015-05-23 20:10:22	aatch	_habnabit, sure, though it's unstable right now.
2015-05-23 20:10:29	_habnabit	aatch, oh, okay
2015-05-23 20:10:43	aatch	_habnabit, `alloc::heap` or `std::rt::heap` (they're the same thing).
2015-05-23 20:10:53	@steveklabnik	_habnabit: to expand, you can use rust's default allocator (jemalloc) but we don't have a way for you to write your own allocators or use a different one
2015-05-23 20:10:54	-->	dinfuehr (dinfuehr@moz-ldm58r.highway.telekom.at) has joined #rust
2015-05-23 20:11:00	_habnabit	okay
2015-05-23 20:11:18	@steveklabnik	having such things is a fairly high priority
2015-05-23 20:11:20	aatch	_habnabit, you could directly use `malloc` and friends via FFI, but I'd advise against it.
2015-05-23 20:11:37	Remram	basically?
2015-05-23 20:11:49	aatch	_habnabit, using multiple low-level allocators in a program tends to be bad.
2015-05-23 20:11:50	<--	Grimsley (Grimsley@moz-uijrh1.dglo.vc9u.0306.2602.IP) has quit (Quit: Leaving)
2015-05-23 20:12:03	_habnabit	aatch, sure. i don't need it in my program; i was just curious
2015-05-23 20:12:05	aatch	Remram, what's the signature of `bind` again?
2015-05-23 20:12:06	-->	Wild_Cat (Max@moz-fa8mvt.dsl.teksavvy.com) has joined #rust
2015-05-23 20:12:24	<--	structuct (Mibbit@moz-d970r5.cable.teksavvy.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-23 20:12:29	aatch	_habnabit, just giving you all the options, and the appropriate warnings and caveats.
2015-05-23 20:12:46	-->	mohaba (Mibbit@moz-hf6tgh.mn.charter.com) has joined #rust
2015-05-23 20:13:22	Remram	(>>=) :: m a -> (a -> m b) -> m b
2015-05-23 20:13:23	desophos	what's the best way to keep a list (array, Vec, whatever) of unchanging instances of an struct? i'd like to keep it associated with the struct, maybe like a static field or something, but i'm not sure how to go about this
2015-05-23 20:13:26	<--	}ls{ (uhelp@moz-nmmm3r.dip0.t-ipconnect.de) has quit (Quit: User terminated by real life interrupt)
2015-05-23 20:13:36	d-snp	hey steveklabnik did you see the 'criticism' on rust that claimed rust has similar performance to Haskell? was there some specific bad case that he hit?
2015-05-23 20:13:55	@steveklabnik	d-snp: which link is that?
2015-05-23 20:13:58	aatch	Remram, then yes, `and_then` is pretty much `bind`.
2015-05-23 20:14:09	aatch	d-snp, my guess: No optimisation.
2015-05-23 20:14:18	Hail_Spacecake	aatch: from reading the documentation of lang items
2015-05-23 20:14:21	@steveklabnik	Remram: i said 'basically' because, well, we don't even have higher kinded types yet, and bind is expected t follow the monad laws, etc
2015-05-23 20:14:25	d-snp	steveklabnik: I'm looking it up right now, was a week ago I think
2015-05-23 20:14:29	-->	mib_c0472p (Mibbit@moz-84song.dip0.t-ipconnect.de) has joined #rust
2015-05-23 20:14:36	Hail_Spacecake	it looks like that's exactly what hte fucntions that implement box allocation and deallocaiton are already doing
2015-05-23 20:14:40	<--	mib_c0472p (Mibbit@moz-84song.dip0.t-ipconnect.de) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-23 20:14:42	Hail_Spacecake	unless I'm misunderstanding what's going on
2015-05-23 20:15:02	<--	dinfuehr (dinfuehr@moz-ldm58r.highway.telekom.at) has quit (Ping timeout: 121 seconds)
2015-05-23 20:15:15	aatch	Hail_Spacecake, hmm?
2015-05-23 20:15:45	Hail_Spacecake	aatch: the exchange_malloc and exchange_free lang items
2015-05-23 20:15:55	Hail_Spacecake	have calls to libc::malloc and libc::free
2015-05-23 20:16:07	Hail_Spacecake	which I assume are FFIs to get access to your OS's malloc and free
2015-05-23 20:16:10	<--	mohaba (Mibbit@moz-hf6tgh.mn.charter.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-23 20:16:16	Hail_Spacecake	that's why I'm wondering about selectively overriding lang items
2015-05-23 20:16:28	aatch	Hail_Spacecake, there's multiple implementations for those lang items.
2015-05-23 20:16:32	--	NameNotFound is now known as zz_NameNotFound
2015-05-23 20:16:36	<--	hhhhhhhhhh (mike@moz-44gc7d.as13285.net) has quit (Quit: WeeChat 1.2)
2015-05-23 20:16:53	--	irc: disconnected from server
2015-05-23 20:17:05	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-23 20:17:05	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-23 20:17:05	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-23 20:17:05	--	Channel #rust: 929 nicks (13 ops, 0 halfops, 2 voices, 914 normals)
2015-05-23 20:17:07	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-23 20:17:10	<--	bombless (_@moz-p7bm0v.0v2u.0v40.0da8.2001.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 20:17:17	d-snp	this one steveklabnik http://www.viva64.com/en/b/0324/
2015-05-23 20:17:18	Hail_Spacecake	aatch: how does that actually work?
2015-05-23 20:17:27	aatch	Hail_Spacecake, conditional compilation IIRC
2015-05-23 20:17:30	Hail_Spacecake	is there just one thing in the standard library that has that lang_item attribute?
2015-05-23 20:17:30	geofft	Hail_Spacecake: are you looking at liballoc/heap.rs? 
2015-05-23 20:17:36	@steveklabnik	d-snp: oh that one heh
2015-05-23 20:17:37	Hail_Spacecake	no I'm looking at https://doc.rust-lang.org/book/lang-items.html
2015-05-23 20:18:05	--	irc: disconnected from server
2015-05-23 20:18:17	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-23 20:18:17	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-23 20:18:17	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-23 20:18:17	--	Channel #rust: 928 nicks (13 ops, 0 halfops, 2 voices, 913 normals)
2015-05-23 20:18:19	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-23 20:18:19	Hail_Spacecake	so, aare exchange_malloc and exchange_free not actually the names of the lang items that implement Box?
2015-05-23 20:18:24	-->	fyolnish (fyolnish@moz-ehtogo.so-net.ne.jp) has joined #rust
2015-05-23 20:18:26	@steveklabnik	plus, the author or this blog or whatever sells c++ static analysis tools
2015-05-23 20:18:40	geofft	Hail_Spacecake: https://doc.rust-lang.org/src/alloc/heap.rs.html 
2015-05-23 20:18:57	@steveklabnik	they also link to the benchmark game to 'prove' about performance, and we just don't really pay much attention to the game
2015-05-23 20:19:07	@steveklabnik	if they had linked six months ago we would have been faster than C++ most of the time
2015-05-23 20:19:23	-->	jbomo (dkd@moz-uol4mm.fios.verizon.net) has joined #rust
2015-05-23 20:19:29	geofft	liballoc binds the lang items to its functions exchange_malloc and exchange_free, which end up calling imp::allocate or imp::deallocate 
2015-05-23 20:19:40	geofft	and if you look at the bottom, there are multiple implementations of mod imp 
2015-05-23 20:20:17	--	irc: disconnected from server
2015-05-23 20:20:29	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-23 20:20:29	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-23 20:20:29	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-23 20:20:29	--	Channel #rust: 930 nicks (13 ops, 0 halfops, 2 voices, 915 normals)
2015-05-23 20:20:30	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-23 20:20:31	godlikesme	I tried something == b"literal"
2015-05-23 20:20:33	@steveklabnik	godlikesme: newbie questions are fine!
2015-05-23 20:20:45	godlikesme	but it didn't work :(
2015-05-23 20:21:04	godlikesme	I could convert vec u8 to string using from_utf8_slice 
2015-05-23 20:21:11	Hail_Spacecake	geofft: so what would that look like in practice, assuming I wanted to use every other part of the rust std lib the same?
2015-05-23 20:21:29	Hail_Spacecake	can I make a main.rs file, redefine the lang item, and expect that to compile?
2015-05-23 20:21:45	<--	lenstr (lenstr@moz-el8.vju.25.171.IP) has quit (Connection closed)
2015-05-23 20:21:55	Hail_Spacecake	or do I actually have to get the rust source and change how imp::allocate works and somehow tell the compiler to use my own slightly-modified rust source for the standard library?
2015-05-23 20:21:57	Dabo	 godlikesme b"literal" should be comparable with &[u8] / &Vec
2015-05-23 20:22:08	-->	lenstr (lenstr@moz-el8.vju.25.171.IP) has joined #rust
2015-05-23 20:22:15	<--	GGist (Mibbit@moz-st7v59.wa.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-23 20:22:19	godlikesme	Dabo, this is the error I get
2015-05-23 20:22:40	aatch	d-snp, oh, that article. I saw it on reddit, most of the comments there were fairly critical of it.
2015-05-23 20:22:44	godlikesme	   Compiling net v0.0.1 (file:///Users/putilin/servo/components/servo)/Users/putilin/servo/components/net/resource_task.rs:107:41: 107:74 error: the trait `core::cmp::PartialEq<u8>` is not implemented for the type `collections::vec::Vec<u8>` [E0277]/Users/putilin/servo/components/net/resource_task.rs:107                 check_for_apache_bug = (raw_content_type == b"text/plain"^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2015-05-23 20:22:48	godlikesme	oops 
2015-05-23 20:22:58	godlikesme	   Compiling net v0.0.1 (file:///Users/putilin/servo/components/servo)
2015-05-23 20:22:58	godlikesme	                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2015-05-23 20:23:13	d-snp	aatch: yeah I didn't pay it much attention, just was curious about the performance part of it
2015-05-23 20:23:34	godlikesme	:(http://paste.ubuntu.com/11316817/
2015-05-23 20:23:41	godlikesme	sorry for the poor formatting 
2015-05-23 20:24:06	d-snp	I've done C++ and I know why I don't like it :P I like rust because it attempts to have similar or at least predictable performance and has all the nice modernities
2015-05-23 20:24:06	Dabo	godlikesme, could you include the rest of the compilation?
2015-05-23 20:24:49	-->	trigen (MSX@moz-sgda69.static.versatel.nl) has joined #rust
2015-05-23 20:24:55	godlikesme	Dabo, http://pastebin.com/xpA7EJSx
2015-05-23 20:24:59	aatch	d-snp, the article has a strong streak of "you should use C++ because C++ is what you should use".
2015-05-23 20:25:27	<--	fyolnish (fyolnish@moz-ehtogo.so-net.ne.jp) has quit (Ping timeout: 121 seconds)
2015-05-23 20:25:53	Dabo	godlikesme, hm. what's to the right of b"text/plain" before the ending `)`?
2015-05-23 20:26:32	<--	aatch (james@moz-is4j4r.cable.telstraclear.net) has quit (Connection closed)
2015-05-23 20:27:19	-->	nstoddard (nstoddard@moz-u5oeum.jcf6.2eo7.0009.2601.IP) has joined #rust
2015-05-23 20:27:20	Dabo	I have to go for now, but someone else might be able to help
2015-05-23 20:27:23	godlikesme	Dabo, http://pastebin.com/ydVfHviW
2015-05-23 20:27:25	-->	casey (casey@moz-v0ns05.tpgi.com.au) has joined #rust
2015-05-23 20:28:12	-->	aatch (james@moz-is4j4r.cable.telstraclear.net) has joined #rust
2015-05-23 20:28:51	-->	GGist (Mibbit@moz-st7v59.wa.comcast.net) has joined #rust
2015-05-23 20:29:21	<--	trigen (MSX@moz-sgda69.static.versatel.nl) has quit (Ping timeout: 121 seconds)
2015-05-23 20:30:12	<--	aldeka (quassel@moz-qqf.of6.243.162.IP) has quit (Connection closed)
2015-05-23 20:30:51	-->	bombless (_@moz-te844b.0v2u.0v40.0da8.2001.IP) has joined #rust
2015-05-23 20:31:25	&mbrubeck	godlikesme: It looks like get_raw returns an `&[Vec<u8>]`: http://doc.servo.org/hyper/header/struct.Headers.html#method.get_raw
2015-05-23 20:32:28	--	irc: disconnected from server
2015-05-23 20:32:45	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-23 20:32:45	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-23 20:32:45	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-23 20:32:45	--	Channel #rust: 930 nicks (13 ops, 0 halfops, 2 voices, 915 normals)
2015-05-23 20:32:47	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-23 20:33:12	-->	jimmyhmiller (jimmyhmille@moz-udn.p8n.137.104.IP) has joined #rust
2015-05-23 20:33:18	godlikesme	ohhh thanks! 
2015-05-23 20:33:31	-->	rmdashrf (rmdashrf@moz-ecr.kjm.54.128.IP) has joined #rust
2015-05-23 20:35:07	&mbrubeck	godlikesme: I guess that's in case there's more than one Content-Type header in the response?  The docs aren't completely clear.
2015-05-23 20:35:28	reem	Avoid the raw API if at all possible
2015-05-23 20:35:39	-->	logan_e (logan_e@moz-k7b29v.hfc.comcastbusiness.net) has joined #rust
2015-05-23 20:35:40	reem	It's a lot less easy to use
2015-05-23 20:35:46	reem	Since it needs to expose everything
2015-05-23 20:35:49	godlikesme	mbrubeck, checked it, I need the last one
2015-05-23 20:36:10	godlikesme	reem, I agree, but I'm implementing 5.1 here: https://mimesniff.spec.whatwg.org/#no-sniff-flag
2015-05-23 20:36:33	godlikesme	and it says that "Set the check-for-apache-bug flag if supplied-type is exactly equal to one of the values in the following table:"
2015-05-23 20:36:38	<--	doomrobo (doomrobo@moz-tj2e6v.261j.6edk.2000.2604.IP) has quit (Quit: Leaving)
2015-05-23 20:36:48	godlikesme	so it looks like I should use raw api here, no? 
2015-05-23 20:36:56	sam113101	is there a function similar to divmod in ruby, in the standard library?
2015-05-23 20:37:01	<--	erz (erz@moz-fiq1tl.broadband.corbina.ru) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-23 20:37:24	bombless	https://doc.rust-lang.org/book/dining-philosophers.html "we make a [struct][struct] to represent a philosopher" seems that rustdoc doesn't render it in a right way. And it renders differently on Windows, weird.
2015-05-23 20:38:25	&mbrubeck	sam113101: I don't think so, though I could be wrong...
2015-05-23 20:39:12	jimmyhmiller	Does rust have anything similar to haskells do notation? Or any plans to add something similar?
2015-05-23 20:40:06	&mbrubeck	jimmyhmiller: Not currently, though some people have written macros to simulate it.
2015-05-23 20:40:20	<--	idegen (greg@moz-9c4nle.or.frontiernet.net) has quit (Quit: Leaving.)
2015-05-23 20:40:42	geofft	I sorta think do notation only really shines because Haskell has multiple monads, and Rust doesn't (yet) have that 
2015-05-23 20:40:42	&mbrubeck	jimmyhmiller: Properly expressing things like Haskell's `Monad` type in Rust may take changes to the type system.
2015-05-23 20:40:55	geofft	to be honest, try! is _kinda_ like do-notation for Results 
2015-05-23 20:41:54	desophos	what's the best way to keep a list (array, Vec, whatever) of unchanging instances of an struct? i'd like to keep it associated with the struct, maybe like a static field or something, but i'm not sure how to go about this
2015-05-23 20:42:45	jimmyhmiller	I’m guessing there is no support for high kinded types in rust currently?
2015-05-23 20:42:52	jimmyhmiller	higher*
2015-05-23 20:43:05	<--	simukis (nagisa@moz-8t068g.static.zebra.lt) has quit (Ping timeout: 121 seconds)
2015-05-23 20:43:23	&mbrubeck	jimmyhmiller: Right, at least in general.
2015-05-23 20:44:05	&mbrubeck	pcwalton was talking about expressing higher-kinded types using Rust's associated types, but I haven't dug into that yet...
2015-05-23 20:44:19	-->	lenstr_ (lenstr@moz-el8.vju.25.171.IP) has joined #rust
2015-05-23 20:44:22	SpaceManiac	bombless: I think it's just an error in the docs. It looks fixed on https://doc.rust-lang.org/nightly/book/dining-philosophers.html
2015-05-23 20:44:59	<--	lenstr (lenstr@moz-el8.vju.25.171.IP) has quit (Connection closed)
2015-05-23 20:45:04	&mbrubeck	https://internals.rust-lang.org/t/priorities-after-1-0/1901/101
2015-05-23 20:45:38	bombless	SpaceManic: Thanks :)
2015-05-23 20:46:23	<--	eschatite (eschatite@moz-95cjjj.res.rr.com) has quit (Ping timeout: 121 seconds)
2015-05-23 20:46:47	-->	harrisonclarke (harrisoncla@moz-p78oth.eastlink.ca) has joined #rust
2015-05-23 20:47:33	<--	JanC__ (janc@moz-cdg90q.dsl.scarlet.be) has quit (Ping timeout: 121 seconds)
2015-05-23 20:47:37	&mbrubeck	sam113101: The `num` crate has divmod-like functions: http://doc.rust-lang.org/num/num/integer/index.html
2015-05-23 20:47:43	-->	danyel (danyel@moz-0irepv.dip0.t-ipconnect.de) has joined #rust
2015-05-23 20:48:05	&mbrubeck	sam113101: That's not in the standard library, but it's maintained by the Rust team and stuff may move from `num` into std::num over time.
2015-05-23 20:48:50	<--	harrisonclarke (harrisoncla@moz-p78oth.eastlink.ca) has quit (Connection closed)
2015-05-23 20:48:58	&mbrubeck	sam113101: Looks like it's just implemented as (x / y, x % y) though.
2015-05-23 20:49:08	-->	cursivecode (textual@moz-4u56i9.res.bhn.net) has joined #rust
2015-05-23 20:50:13	<--	logan_e (logan_e@moz-k7b29v.hfc.comcastbusiness.net) has quit (Client exited)
2015-05-23 20:50:22	Yurumechan	sam113101, mbrubeck : num also has a floor division routine.
2015-05-23 20:50:31	-->	lyc (lyc@moz-jft.nr8.226.207.IP) has joined #rust
2015-05-23 20:52:00	<--	danyel (danyel@moz-0irepv.dip0.t-ipconnect.de) has quit (Client exited)
2015-05-23 20:52:56	<--	geri (Mibbit@moz-ec099b.highway.telekom.at) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-23 20:54:34	<--	lyc (lyc@moz-jft.nr8.226.207.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 20:55:59	boblehest	Hmm, lately I've started dereferencing a lot of unintialized unique_ptrs in C++.. I think it might be Rust's fault.
2015-05-23 20:56:09	boblehest	auto myptr = std::unique_ptr<MyClass>();
2015-05-23 20:56:17	boblehest	myptr->dostuff();
2015-05-23 20:56:59	boblehest	Actually never done it just like that. Usually I have a unique_ptr class member, and I forget that I have to explicitly initialize it. It never happened before I tried Rust though.
2015-05-23 20:57:16	geofft	mbrubeck: Looks like LLVM optimizes it to the right thing anyway: http://is.gd/eVljLd 
2015-05-23 20:57:55	geofft	if you look at the ASM in release mode, it compiles down to a single div instruction 
2015-05-23 20:58:34	&mbrubeck	cool
2015-05-23 20:58:51	<--	mcoffin (mcoffin@moz-hrs.16d.54.128.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 20:58:56	geofft	I'm glad my "LLVM will probably take care of it" instinct was right :) 
2015-05-23 20:59:59	-->	woboats (tatterdemal@moz-a0dnkb.ca.comcast.net) has joined #rust
2015-05-23 21:00:47	<--	panicbit (panicbit@moz-rcvp1e.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2015-05-23 21:01:02	woboats	I want to spawn off a thread & handle any errors from it in the parent thread. What is the best practice for this? If I .unwrap() results, will the panic pass the error value to the JoinGuard?
2015-05-23 21:01:10	-->	brainproxy (michael@moz-9vjtig.mo.charter.com) has joined #rust
2015-05-23 21:01:36	-->	JanC__ (janc@moz-7a6uj1.dsl.scarlet.be) has joined #rust
2015-05-23 21:02:10	-->	tamird (textual@moz-gg3hct.res.rr.com) has joined #rust
2015-05-23 21:02:35	&mbrubeck	woboats: Yes - http://doc.rust-lang.org/std/thread/fn.spawn.html
2015-05-23 21:02:59	woboats	I guess I wasn't sure that the argument given to panic was the error & not its debug message
2015-05-23 21:03:38	estabroo	I have a privacy issue :) - two public structures, the first struct contains an instance of the second, when I try to access a field in the second struct I get an error that it is private
2015-05-23 21:04:01	&mbrubeck	woboats: Oh, in the case of .unwrap() it's probably just the message...
2015-05-23 21:04:12	@huon	estabroo: you need to make the fields public if you wish to access them outside the module in which the struct is defined
2015-05-23 21:04:12	<--	jminer (Instantbird@moz-b1u.qch.163.66.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 21:04:28	@huon	estabroo: i.e. `pub name: Type` instead of just `name: Type`
2015-05-23 21:04:32	woboats	:-\ How should the Errors be passed between threads then?
2015-05-23 21:04:42	aatch	geofft, yeah, its a pretty common optimisation to recognize a div followed by a mod and emit a single instruction (if available).
2015-05-23 21:04:58	<--	bytewise (bytewise@moz-mkh5h4.hsi16.unitymediagroup.de) has quit (Quit: Quit)
2015-05-23 21:05:02	woboats	I guess do what try! expands to except instead panic! on error?
2015-05-23 21:05:10	estabroo	huon, and pub struct Name doesn't make the whole structure public?
2015-05-23 21:05:42	<--	plumshark (pat@moz-2i04hr.35n5.ltgp.0306.2602.IP) has quit (Connection closed)
2015-05-23 21:05:55	&mbrubeck	woboats: Yeah, that sounds good. You could use result.unwrap_or_else(|e| panic!(e))
2015-05-23 21:05:56	aatch	geofft, LLVM can also do some cool things like recognise a multi-word add and use better instructions.
2015-05-23 21:05:58	&mbrubeck	or write a try!-like macro
2015-05-23 21:06:03	woboats	Or just try!, unwrap the return of join(), and try on that.
2015-05-23 21:06:10	<--	brainproxy (michael@moz-9vjtig.mo.charter.com) has quit (Ping timeout: 121 seconds)
2015-05-23 21:06:12	rkruppe	estabroo: It makes the struct public, but not all its fields, which often should be encapsulated to uphold delicate invariants
2015-05-23 21:06:45	geofft	now I'm trying to talk LLVM into skipping the divide-by-zero check, but std::intrinsics::unreachable doesn't seem to help... 
2015-05-23 21:06:47	rkruppe	estabroo: For example, a RedBlackTree should not allow anyone to modify the color of the nodes
2015-05-23 21:07:21	estabroo	so would it be better practice to use an impl and add functions to modify the fields?
2015-05-23 21:07:30	-->	genbattle (genbattle@moz-r09mao.xtra.co.nz) has joined #rust
2015-05-23 21:07:36	aatch	geofft, yeah, I had to use `assume` to get it to remove that check.
2015-05-23 21:08:22	geofft	ooh 
2015-05-23 21:08:52	rkruppe	estabroo: If you don't need encapsulation, there's no point in having trivial getters and setters. Just consider that those fields are then part of your API and can't change without breaking other code.
2015-05-23 21:09:58	estabroo	thanks
2015-05-23 21:10:28	-->	markstory (textual@moz-tb3ghu.cable.rogers.com) has joined #rust
2015-05-23 21:11:31	-->	logan_e (logan_e@moz-k7b29v.hfc.comcastbusiness.net) has joined #rust
2015-05-23 21:11:37	-->	mutsune (mutsune@moz-634799.mesh.ad.jp) has joined #rust
2015-05-23 21:11:37	geofft	... TIL that xorl %edx, %edx actually clears all of %rdx 
2015-05-23 21:11:39	-->	dinfuehr (dinfuehr@moz-ldm58r.highway.telekom.at) has joined #rust
2015-05-23 21:11:57	<--	Matthias247 (Miranda@moz-49li60.hsi14.kabel-badenwuerttemberg.de) has quit (Connection closed)
2015-05-23 21:11:58	-->	jminer (Instantbird@moz-b1u.qch.163.66.IP) has joined #rust
2015-05-23 21:12:01	aji	:o would that be a bug?
2015-05-23 21:12:14	<--	lenstr_ (lenstr@moz-el8.vju.25.171.IP) has quit (Connection closed)
2015-05-23 21:12:48	geofft	apparently it's specified that way 
2015-05-23 21:13:41	aatch	IIRC all operations that write to the lower-half of a 64-bit register zero the upper half.
2015-05-23 21:14:03	<--	dmac_ (dmac@moz-2ig65r.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-23 21:14:19	-->	lenstr (lenstr@moz-el8.vju.25.171.IP) has joined #rust
2015-05-23 21:14:43	geofft	I think this is the best I can do: http://is.gd/wl9P6t (nightly, ASM) 
2015-05-23 21:15:40	Remram	How do I return an iterator on an empty HashMap? Do I have to create an empty HashMap?
2015-05-23 21:15:41	<--	mutsune (mutsune@moz-634799.mesh.ad.jp) has quit (Ping timeout: 121 seconds)
2015-05-23 21:15:42	<--	dinfuehr (dinfuehr@moz-ldm58r.highway.telekom.at) has quit (Ping timeout: 121 seconds)
2015-05-23 21:16:17	Remram	I could always return None instead of the empty iterable but meh
2015-05-23 21:16:35	--	zz_NameNotFound is now known as NameNotFound
2015-05-23 21:16:44	rkruppe	Remram: Do you actually need one of the HashMap-specific iterator structs, or just any iterator?
2015-05-23 21:17:10	Remram	the function returns a hashmap iterator on some condition
2015-05-23 21:17:59	Remram	so I have to stick to the type
2015-05-23 21:18:12	<--	kngl (Adium@moz-rmgnkh.dynamic.voo.be) has quit (Quit: Leaving.)
2015-05-23 21:18:22	rkruppe	If we had anonymous return types you could change the return type to `impl Iterator<Item=...>` and return an empty iterator /pouting
2015-05-23 21:18:43	<--	rmdashrf (rmdashrf@moz-ecr.kjm.54.128.IP) has quit (Quit: WeeChat 0.4.2)
2015-05-23 21:18:50	rkruppe	No, unless HashMap specifically supports it (unlikely) you'll have to create an empty HashMap
2015-05-23 21:18:50	Remram	I don't think that would be possible without dynamic dispatch
2015-05-23 21:19:13	rkruppe	The beauty of anonymous return types is that they would allow that with static dispatch
2015-05-23 21:19:14	Remram	I can always make one empty HashMap and always return iterators to that one I suppose
2015-05-23 21:19:31	rkruppe	If it's a fixed type, yeah, you could create a static
2015-05-23 21:19:47	rkruppe	Actually, can you call constructors in statics?
2015-05-23 21:19:49	-->	freewizard (freewizard@moz-0hh8j9.res.rr.com) has joined #rust
2015-05-23 21:19:59	rkruppe	(a fixed key and value type)
2015-05-23 21:20:44	-->	mutsune (mutsune@moz-634799.mesh.ad.jp) has joined #rust
2015-05-23 21:21:10	rkruppe	No, you can't create a static HashMap =/
2015-05-23 21:21:18	<--	Wild_Cat (Max@moz-fa8mvt.dsl.teksavvy.com) has quit (Ping timeout: 121 seconds)
2015-05-23 21:21:30	<--	c_wraith (c_wraith@moz-2e872h.click-network.com) has quit (Ping timeout: 121 seconds)
2015-05-23 21:21:33	<--	logan_e (logan_e@moz-k7b29v.hfc.comcastbusiness.net) has quit (Client exited)
2015-05-23 21:21:44	<--	mutsune (mutsune@moz-634799.mesh.ad.jp) has quit (Connection closed)
2015-05-23 21:21:45	<--	lenstr (lenstr@moz-el8.vju.25.171.IP) has quit (Connection closed)
2015-05-23 21:21:52	rkruppe	There's std::sync::Once but that gets pretty ugly (and slower, too)
2015-05-23 21:22:45	--	irc: disconnected from server
2015-05-23 21:22:57	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-23 21:22:57	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-23 21:22:57	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-23 21:22:57	--	Channel #rust: 922 nicks (13 ops, 0 halfops, 2 voices, 907 normals)
2015-05-23 21:22:58	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-23 21:23:44	Remram	but RawTable isn't public
2015-05-23 21:24:03	rkruppe	Yeah, it's private and for good reasons (freedom to change implementation details)
2015-05-23 21:24:35	rkruppe	You can't construct an HashMap iterator from nothing, you always have to go through a HashMap
2015-05-23 21:24:52	rkruppe	Partly because the iterators always contain references to the hash table internally
2015-05-23 21:25:02	Remram	I think it's not worth me keeping an empty HashMap, I'll probably just return None
2015-05-23 21:25:09	Remram	make this return value an Option
2015-05-23 21:25:12	<--	delma_ (Mibbit@moz-8ibfpd.bb.dnainternet.fi) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-23 21:25:33	-->	trigen (MSX@moz-sgda69.static.versatel.nl) has joined #rust
2015-05-23 21:26:17	-->	fyolnish (fyolnish@moz-ehtogo.so-net.ne.jp) has joined #rust
2015-05-23 21:27:21	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-23 21:27:41	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Connection closed)
2015-05-23 21:27:56	--	irc: disconnected from server
2015-05-23 21:28:08	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-23 21:28:08	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-23 21:28:08	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-23 21:28:08	--	Channel #rust: 924 nicks (13 ops, 0 halfops, 2 voices, 909 normals)
2015-05-23 21:28:10	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-23 21:28:45	<--	freewizard (freewizard@moz-0hh8j9.res.rr.com) has quit (Quit: Textual IRC Client: www.textualapp.com)
2015-05-23 21:29:00	<--	genbattle (genbattle@moz-r09mao.xtra.co.nz) has quit (Quit: Leaving)
2015-05-23 21:29:52	<--	jimmyhmiller (jimmyhmille@moz-udn.p8n.137.104.IP) has quit (Client exited)
2015-05-23 21:30:16	<--	trigen (MSX@moz-sgda69.static.versatel.nl) has quit (Ping timeout: 121 seconds)
2015-05-23 21:30:19	<--	fyolnish (fyolnish@moz-ehtogo.so-net.ne.jp) has quit (Ping timeout: 121 seconds)
2015-05-23 21:30:38	-->	stubbz (Mibbit@moz-6e5cs6.res.rr.com) has joined #rust
2015-05-23 21:31:30	-->	forgottenone (forgottenon@moz-h3n.fd4.131.217.IP) has joined #rust
2015-05-23 21:31:33	desophos	what's the best way to keep a list (array, Vec, whatever) of unchanging instances of an struct? i'd like to keep it associated with the struct, maybe like a static field or something; i just want a const list of instances to choose from, but i'm not sure how to go about this
2015-05-23 21:31:57	-->	mcoffin (mcoffin@moz-hrs.16d.54.128.IP) has joined #rust
2015-05-23 21:32:23	aatch	desophos, what are you trying to do?
2015-05-23 21:32:41	<--	lenstr (lenstr@moz-el8.vju.25.171.IP) has quit (Connection closed)
2015-05-23 21:33:00	stubbz	I'm having a tough time finding the power function... what am I doing wrong 
2015-05-23 21:33:01	-->	psd__ (psd@moz-uhqf1q.mtnl.net.in) has joined #rust
2015-05-23 21:33:12	stubbz	The docs suggest that std::num should have it
2015-05-23 21:33:28	aatch	stubbz, its a method on the type
2015-05-23 21:33:42	rkruppe	stubbz: Most of std::num has been replaced with methods on the type, e.g., 42.pow(3)
2015-05-23 21:33:47	aatch	playbot, 2.pow(10)
2015-05-23 21:33:48	--	Notice(playbot): <anon>:9:11: 9:18 error: type `_` does not implement any method in scope named `pow`
2015-05-23 21:33:49	--	Notice(playbot): <anon>:9         2.pow(10)
2015-05-23 21:33:49	--	Notice(playbot): output truncated; full output at: http://bit.ly/1cU2zOD
2015-05-23 21:33:49	-->	lenstr (lenstr@moz-el8.vju.25.171.IP) has joined #rust
2015-05-23 21:33:53	<--	psd_ (psd@moz-ihb3m3.mtnl.net.in) has quit (Ping timeout: 121 seconds)
2015-05-23 21:33:54	-->	aldeka (quassel@moz-qqf.of6.243.162.IP) has joined #rust
2015-05-23 21:33:55	aatch	bah!
2015-05-23 21:34:12	desophos	aatch: i'm trying to keep a list of instances to select from without having to re-initialize them all every time i try to access the list
2015-05-23 21:34:21	desophos	because they'll never change
2015-05-23 21:35:04	aatch	playbot, 2u32.pow(10)
2015-05-23 21:35:05	--	Notice(playbot): 1024
2015-05-23 21:35:13	stubbz	ah! very cool
2015-05-23 21:36:13	desophos	aatch: right now i have a function that returns a closure that returns a Vec<Obj> of the choices, but it calls Obj::new, so i have to pass params to it to init the Objs every time it's called
2015-05-23 21:36:49	<--	vladimirthegreat (Mibbit@moz-0oldmp.dip0.t-ipconnect.de) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-23 21:37:23	desophos	so now every function that wants to see the list of choices has to pass in the init params
2015-05-23 21:37:28	<--	lbn (lbn@moz-h4eamh.cable.virginm.net) has quit (Quit: Leaving.)
2015-05-23 21:38:19	aatch	desophos, well how "constant" is this list? It sounds like you want memoisation.
2015-05-23 21:39:03	desophos	aatch: the contents never change after the program starts
2015-05-23 21:39:14	desophos	well, i don't want them to
2015-05-23 21:39:18	-->	Tuba (Tobba@moz-o13d22.bredband.telia.com) has joined #rust
2015-05-23 21:39:50	-->	tunnuz (tunnuz@moz-bhfcsd.8rnv.rggd.6180.2400.IP) has joined #rust
2015-05-23 21:40:04	aatch	desophos, ok. something std::sync::Once might be useful, and/or lazy_static.
2015-05-23 21:41:06	-->	kngl (Adium@moz-rmgnkh.dynamic.voo.be) has joined #rust
2015-05-23 21:41:43	-->	adu (adu@moz-unlrtv.ms5a.74ae.000a.2601.IP) has joined #rust
2015-05-23 21:42:16	<--	Tobba (Tobba@moz-o13d22.bredband.telia.com) has quit (Ping timeout: 121 seconds)
2015-05-23 21:42:20	estabroo	can you have a hashmap with function (references?) as the value, basically a function lookup
2015-05-23 21:42:37	desophos	wait, crap... what i actually want is to be able to instantiate new instances with args that never change
2015-05-23 21:42:51	desophos	because they have sprites that need to change
2015-05-23 21:43:00	Remram	I can't even reference HashMap's Iter type
2015-05-23 21:43:00	desophos	and there'll be multiple instances
2015-05-23 21:43:15	desophos	so, my mistake, what i described isn't actually what i need -_-
2015-05-23 21:43:59	rkruppe	Remram: std::collections::hash_map::Iter ?
2015-05-23 21:44:21	Remram	oh wait no I misspelled it :]
2015-05-23 21:45:01	Remram	I should use a better IDE
2015-05-23 21:46:03	-->	brainproxy (michael@moz-9vjtig.mo.charter.com) has joined #rust
2015-05-23 21:46:24	desophos	aatch: actually, maybe i could just store the arguments as static and then instantiate when i need to? would that work?
2015-05-23 21:46:41	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-23 21:46:49	-->	mib_yyo9c4 (Mibbit@moz-tdejt8.res.rr.com) has joined #rust
2015-05-23 21:47:51	<--	JuggleTux (tux@moz-ho0t1f.adslplus.ch) has quit (Ping timeout: 121 seconds)
2015-05-23 21:48:08	<--	kngl (Adium@moz-rmgnkh.dynamic.voo.be) has quit (Quit: Leaving.)
2015-05-23 21:48:08	<--	mib_yyo9c4 (Mibbit@moz-tdejt8.res.rr.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-23 21:48:37	<--	p1start (p1start@moz-nftjhe.org) has quit (Quit: Lost terminal)
2015-05-23 21:48:39	<--	rkruppe (chatzilla@moz-qb299q.diu2.0rth.0908.2a02.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 21:49:08	-->	logan_ (logan@moz-19veku.res.rr.com) has joined #rust
2015-05-23 21:49:34	-->	Wild_Cat (Max@moz-fa8mvt.dsl.teksavvy.com) has joined #rust
2015-05-23 21:49:48	zamabe	!playground
2015-05-23 21:49:48	+rustbot	<https://play.rust-lang.org> — The Rust Playground (a.k.a. Playpen) is a Web service for running and sharing short Rust programs.
2015-05-23 21:51:16	-->	Morten (Morten@moz-15vhm0.bb.online.no) has joined #rust
2015-05-23 21:51:16	-->	lyc (lyc@moz-jft.nr8.226.207.IP) has joined #rust
2015-05-23 21:51:39	Morten	Is it not possible to overload the comparison operators?
2015-05-23 21:51:56	--	bentley|away is now known as bentley
2015-05-23 21:51:59	--	Tuba is now known as Tobba
2015-05-23 21:52:11	Remram	Can I put a lifetime parameter on an associated type?
2015-05-23 21:52:14	XMPPwocky	Morten: PartialOrd / PartialEq is what you want
2015-05-23 21:53:35	-->	p1start (p1start@moz-nftjhe.org) has joined #rust
2015-05-23 21:54:39	Remram	maybe a paste is in order: http://is.gd/ONMZe2
2015-05-23 21:54:45	Morten	XMPPwocky: So implementing that overloads the comparison operators? The docs aren't really clear
2015-05-23 21:55:10	XMPPwocky	Morten: the comparison operators use PartialOrd, yes
2015-05-23 21:55:18	<--	lyc (lyc@moz-jft.nr8.226.207.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 21:55:51	Remram	I would want the associated type to be `type PkgIterator<'r> = HashMapValues<'r, Version, Pkg>;`
2015-05-23 21:55:58	Remram	but apparently I can't do that
2015-05-23 21:56:15	<--	areski (areski@moz-2lg0ha.user.ono.com) has quit (Ping timeout: 121 seconds)
2015-05-23 21:56:44	--	bentley is now known as bentley|away
2015-05-23 21:56:44	XMPPwocky	rusti: trait Foo { type Meow; } impl Foo for () { type Meow = for<'r> &'r u32; }
2015-05-23 21:56:45	--	Notice(playbot): <anon>:9:72: 9:73 error: expected ident, found `&`
2015-05-23 21:56:45	--	Notice(playbot): <anon>:9         trait Foo { type Meow; } impl Foo for () { type Meow = for<'r> &'r u32; }
2015-05-23 21:56:45	--	Notice(playbot): output truncated; full output at: http://bit.ly/1JLnkJk
2015-05-23 21:57:11	<--	GGist (Mibbit@moz-st7v59.wa.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-23 21:57:19	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Connection closed)
2015-05-23 21:57:40	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-23 21:58:41	-->	Pink (Mibbit@moz-q5ktpc.ma.comcast.net) has joined #rust
2015-05-23 21:59:19	<--	mcarton (martin@moz-ag64s6.rev.sfr.net) has quit (Ping timeout: 121 seconds)
2015-05-23 21:59:22	-->	fmcauley (fmcauley@moz-n1jjb3.res.rr.com) has joined #rust
2015-05-23 21:59:37	Pink	Is there a stable way to get an elements index beside psotion_elem?
2015-05-23 22:00:30	XMPPwocky	Pink: .iter().position(|x| x == thingy_to_find)
2015-05-23 22:00:38	XMPPwocky	sorry, *x == ...
2015-05-23 22:00:56	Remram	XMPPwocky: so I can't?
2015-05-23 22:01:12	Pink	Thanks, I'll give that a shot :)
2015-05-23 22:01:16	XMPPwocky	Remram: i don't think so, no
2015-05-23 22:01:20	XMPPwocky	eddyb might know
2015-05-23 22:01:31	Remram	I found http://git.io/vT5JV which doesn't sound too good
2015-05-23 22:01:42	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Ping timeout: 121 seconds)
2015-05-23 22:02:04	logan_	are there any decent tutorials for piston yet?
2015-05-23 22:02:25	XMPPwocky	higher-kinded lifetimes exist
2015-05-23 22:02:26	-->	jocull (Mibbit@moz-annv25.in.comcast.net) has joined #rust
2015-05-23 22:02:27	XMPPwocky	i tried to use them
2015-05-23 22:02:35	XMPPwocky	no idea how they're supposed to work, though
2015-05-23 22:02:43	-->	jimmyhmiller (jimmyhmille@moz-ihe843.res.bhn.net) has joined #rust
2015-05-23 22:03:06	zamabe	I'm setting an iterator in a variable, then iterating over another list and calling the original iterator once per element to iter both at the same time. Is there a better way to do this? :/ http://is.gd/Bgaxpp
2015-05-23 22:03:16	grant	Is there a macro that expands to "if condition { break; }"
2015-05-23 22:03:20	XMPPwocky	zamabe: .zip ?
2015-05-23 22:03:23	grant	like "guard!(condition)"
2015-05-23 22:04:06	zamabe	XMPPwocky: yay, knew it was something simple :)
2015-05-23 22:04:20	SpaceManiac	grant: you could just write one
2015-05-23 22:04:28	XMPPwocky	although one caveat: apparently, zip doesn't optimize well
2015-05-23 22:04:32	XMPPwocky	no idea why or anything
2015-05-23 22:04:36	-->	wei2912 (wei2912@moz-fre.2ue.156.175.IP) has joined #rust
2015-05-23 22:04:41	XMPPwocky	but apparently, it doesn't
2015-05-23 22:05:24	<--	Rym (y@moz-c2u.sd4.38.217.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 22:05:58	Remram	hmm found http://redd.it/2p7f1l
2015-05-23 22:07:54	XMPPwocky	https://github.com/rust-lang/rust/issues/18639
2015-05-23 22:09:44	<--	adu (adu@moz-unlrtv.ms5a.74ae.000a.2601.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 22:09:46	Remram	rusti: struct Bar<'a>; trait Foo { type Meow; } impl Foo for () { type Meow = for<'r> Bar<'r>; }
2015-05-23 22:09:47	--	Notice(playbot): <anon>:9:88: 9:95 error: `Bar` is not a trait
2015-05-23 22:09:47	--	Notice(playbot): <anon>:9         struct Bar<'a>; trait Foo { type Meow; } impl Foo for () { type Meow = for<'r> Bar<'r>; }
2015-05-23 22:09:47	--	Notice(playbot): output truncated; full output at: http://bit.ly/1Q3UuU5
2015-05-23 22:09:51	-->	pohl (textual@moz-0a4vld.res.rr.com) has joined #rust
2015-05-23 22:09:52	<--	fmcauley (fmcauley@moz-n1jjb3.res.rr.com) has quit (Client exited)
2015-05-23 22:09:53	<--	jimmyhmiller (jimmyhmille@moz-ihe843.res.bhn.net) has quit (Client exited)
2015-05-23 22:10:00	Remram	this error is surprising though, does this work for traits?
2015-05-23 22:10:06	-->	ryanhiebert (ryanhiebert@moz-nsd5kl.ks.cox.net) has joined #rust
2015-05-23 22:11:08	grant	What’s the easiest way to get the u8 representing an ascii char?
2015-05-23 22:11:17	<--	tristanseifert (tristanseif@moz-r0t7ns.res.rr.com) has quit (Ping timeout: 121 seconds)
2015-05-23 22:11:20	XMPPwocky	rusti: b'4'
2015-05-23 22:11:21	--	Notice(playbot): 52
2015-05-23 22:11:24	XMPPwocky	grant: that is.
2015-05-23 22:11:27	grant	Thanks
2015-05-23 22:11:45	XMPPwocky	you can also do b"meow", which gives you [u8; length]
2015-05-23 22:11:50	<--	hroi (hroi@moz-d273ub.static.netgroup.dk) has quit (Ping timeout: 121 seconds)
2015-05-23 22:12:25	-->	dinfuehr (dinfuehr@moz-ldm58r.highway.telekom.at) has joined #rust
2015-05-23 22:13:47	-->	fournm (Aria@moz-12meki.res.rr.com) has joined #rust
2015-05-23 22:15:17	<--	fournm (Aria@moz-12meki.res.rr.com) has quit (Quit: Leaving)
2015-05-23 22:15:32	-->	rmdashrf (rmdashrf@moz-ecr.kjm.54.128.IP) has joined #rust
2015-05-23 22:16:21	<--	jpg (jpg@moz-8qqr98.internode.on.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-23 22:16:28	<--	dinfuehr (dinfuehr@moz-ldm58r.highway.telekom.at) has quit (Ping timeout: 121 seconds)
2015-05-23 22:16:32	@niconii	&[u8; length] actually, iirc
2015-05-23 22:16:39	@niconii	though it'll auto-deref
2015-05-23 22:17:40	<--	minot2 (kkus@moz-baj4jj.74.srtnet.com) has quit (Connection closed)
2015-05-23 22:18:06	-->	bpugh (bpugh@moz-715e47.ca.comcast.net) has joined #rust
2015-05-23 22:18:07	<--	psd__ (psd@moz-uhqf1q.mtnl.net.in) has quit (Connection closed)
2015-05-23 22:18:26	grant	Can anyone give a small example of a TakeWhile iterator? The predicate, to be specific.
2015-05-23 22:18:49	thombles	I'm trying to do a build off current master, does anybody know why I might be getting this compile error? http://pastebin.com/Cu31Uy0V
2015-05-23 22:19:17	grant	I have a Bytes iterator, I want an iterator that takes while the current byte does not equal b’-'
2015-05-23 22:24:00	-->	frangio (frangio@moz-b8v5r5.telecom.net.ar) has joined #rust
2015-05-23 22:24:10	Mutabah	grant: .take_while(|&v| v!=b'-')
2015-05-23 22:24:23	grant	Ah. I was a bit confused about the trait of the predicate
2015-05-23 22:24:48	-->	armink (Mibbit@moz-7sk.s3p.254.114.IP) has joined #rust
2015-05-23 22:24:54	Mutabah	Ah yes, I think there's a section in the book con closures, which should cover the Fn* traits
2015-05-23 22:25:02	Mutabah	There's an example in the docs too
2015-05-23 22:25:13	@niconii	grant: rather than worry about the different kinds of iterator structs, it's better just to look here: https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.take_while
2015-05-23 22:25:19	bluss	oh, it's a closure. So you'll see that everywhere. Closures in rust implement the FnOnce, FnMut, Fn traits (as appropriate)
2015-05-23 22:25:42	-->	eat_multi (daniel@moz-j2sp1t.cable.virginm.net) has joined #rust
2015-05-23 22:25:46	grant	bluss: it’s that part I was confused about. Didn’t know they implemented that without any work on my part
2015-05-23 22:25:54	<--	thepreacher (thepreacher@moz-qchso7.dyn.plus.net) has quit (Quit: Leaving...)
2015-05-23 22:26:18	-->	trigen (MSX@moz-sgda69.static.versatel.nl) has joined #rust
2015-05-23 22:27:16	bluss	even function pointers implement the traits
2015-05-23 22:27:23	Mutabah	thombles: I'm a bit rusty on C++ (that's the C++ from llvm), but how old is your compiler?
2015-05-23 22:27:23	-->	d8v3 (user@moz-krf.q4t.193.66.IP) has joined #rust
2015-05-23 22:27:28	<--	frangio (frangio@moz-b8v5r5.telecom.net.ar) has quit (Client exited)
2015-05-23 22:27:31	<--	aatch (james@moz-is4j4r.cable.telstraclear.net) has quit (Ping timeout: 121 seconds)
2015-05-23 22:27:54	-->	swgillespie (swgillespie@moz-rn1.vmq.232.104.IP) has joined #rust
2015-05-23 22:27:56	-->	Feyn (Feyn@moz-r04.5ro.115.42.IP) has joined #rust
2015-05-23 22:27:59	bluss	grant: notice with .take_while that even the element that halts processing is consumed from the iterato
2015-05-23 22:28:07	ubeatlenine	I'm trying to grab a webpage using hyper, but I think I'm misunderstanding how the try! macro works http://is.gd/FTwVFj
2015-05-23 22:28:13	thombles	Mutabah: just the clang that comes with OSX 10.10
2015-05-23 22:28:31	&mbrubeck	ubeatlenine: try! only works in functions that return Result<T,E>
2015-05-23 22:28:48	&mbrubeck	and only if the Result inside the try! has the correct Err type.
2015-05-23 22:28:51	thombles	I'm pretty sure the build worked on the same machine a few months ago
2015-05-23 22:29:02	&mbrubeck	http://doc.rust-lang.org/book/error-handling.html#using-try!
2015-05-23 22:29:08	<--	swgillespie (swgillespie@moz-rn1.vmq.232.104.IP) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-23 22:29:13	&mbrubeck	ubeatlenine: For a simple script you might want to use Result::unwrap instead.
2015-05-23 22:29:18	@niconii	mbrubeck: try! can use From to convert error types though, i thought?
2015-05-23 22:29:26	Mutabah	niconii: It can
2015-05-23 22:29:29	grant	Can I pattern match on vectors?
2015-05-23 22:29:40	Mutabah	grant: :/ on slices maybe
2015-05-23 22:29:51	Mutabah	grant: (they were feature gated last I looked)
2015-05-23 22:30:06	-->	fyolnish (fyolnish@moz-ehtogo.so-net.ne.jp) has joined #rust
2015-05-23 22:30:10	&mbrubeck	Yes, still feature gated: http://doc.rust-lang.org/book/slice-patterns.html
2015-05-23 22:30:17	&mbrubeck	niconii: Yes, good point.
2015-05-23 22:30:31	grant	Mutabah: what does feature gated mean exactly?
2015-05-23 22:30:49	Mutabah	grant: Subject to change, so cannot be used in the stable compiler
2015-05-23 22:30:54	<--	trigen (MSX@moz-sgda69.static.versatel.nl) has quit (Ping timeout: 121 seconds)
2015-05-23 22:30:56	Pink	If anyone is feeling up to it, I would love some feedback on a recent Rust attempt :) https://github.com/Pink401k/dailyprogrammer/blob/master/dp-215-sadcycles/rust/src/main.rs
2015-05-23 22:31:43	Mutabah	Pink: Maybe handle the Err case on parsing
2015-05-23 22:31:46	grant	Mutabah: because I have a Vec<u8> I just read from a socket. I want to pattern match it on a string, but I don’t want to deal with potential utf8 errors or anything, because I can just match on the byte literals 
2015-05-23 22:31:55	Mutabah	(Since this inteacts with the user, you will get invalid inputs)
2015-05-23 22:32:02	Pink	this is very true
2015-05-23 22:32:09	grant	Mutabah: e.g. see if a vector contains the ascii bytes 'G' 'E' ’T' 
2015-05-23 22:32:10	Pink	I hadn't thought of that, thanks! 
2015-05-23 22:32:37	-->	lucian (lucian@moz-2c3pda.cable.virginm.net) has joined #rust
2015-05-23 22:32:41	seanmonstar	ubeatlenine: try! bubbles the error up. If you don't want to return the Result, you need to handle the error yourself
2015-05-23 22:32:46	Mutabah	grant: You can do a conversion to str (for free), and treat an error as no match
2015-05-23 22:33:02	<--	rovar (rovar@moz-96effg.dyn.optonline.net) has quit (Connection closed)
2015-05-23 22:33:05	<--	d8v3 (user@moz-krf.q4t.193.66.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 22:33:06	-->	idegen (greg@moz-9c4nle.or.frontiernet.net) has joined #rust
2015-05-23 22:33:10	Mutabah	grant: match str::from_utf8(bytes) { Ok("GET") => {}, _ => {} }
2015-05-23 22:33:11	grant	How do you conver to str for free?
2015-05-23 22:33:14	grant	ah
2015-05-23 22:33:38	XMPPwocky	well, that conversion runs through the bytes and validates them
2015-05-23 22:33:46	&mbrubeck	Pink: Nice. For the final output, you might replace the last `for` loop with `println!("{}", pattern.map(ToString::to_string).connect(", "))`
2015-05-23 22:33:47	Mutabah	actually, it's ::std::str::from_utf8
2015-05-23 22:33:51	Mutabah	XMPPwocky: Yeah
2015-05-23 22:33:56	&mbrubeck	(untested)
2015-05-23 22:34:04	Mutabah	grant: It's not 100% free, but it is pretty cheap
2015-05-23 22:34:15	Mutabah	grant: Especially if you slice down to the length you care about
2015-05-23 22:34:24	Pink	mbrubeck: Woah, that's awesome. Didn't know that was possible :)
2015-05-23 22:34:30	XMPPwocky	of course, you can also just compare byte strings
2015-05-23 22:36:05	<--	tunnuz (tunnuz@moz-bhfcsd.8rnv.rggd.6180.2400.IP) has quit (Quit: Leaving)
2015-05-23 22:36:09	Mutabah	XMPPwocky: Wait, that works?
2015-05-23 22:36:33	XMPPwocky	they implement Eq, so...
2015-05-23 22:36:39	<--	lucian (lucian@moz-2c3pda.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2015-05-23 22:36:45	grant	XMPPwocky: example?
2015-05-23 22:37:04	XMPPwocky	rusti: b"\x00" == &[0]
2015-05-23 22:37:05	--	Notice(playbot): true
2015-05-23 22:37:10	seanmonstar	&[u8] impls Eq
2015-05-23 22:37:26	Mutabah	XMPPwocky: Oh, compare, not match
2015-05-23 22:37:45	XMPPwocky	yeah
2015-05-23 22:38:03	<--	fyolnish (fyolnish@moz-ehtogo.so-net.ne.jp) has quit (Ping timeout: 121 seconds)
2015-05-23 22:42:38	<--	ferdinand (Mibbit@moz-i7cb3r.fios.verizon.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-23 22:43:12	-->	psd (psd@moz-uhqf1q.mtnl.net.in) has joined #rust
2015-05-23 22:44:11	<--	cakecatz (cakecatz@moz-edrvuc.sannet.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-23 22:44:18	grant	What’s the current stable way to append a vector to another vector?
2015-05-23 22:44:43	grant	the .append method says "Unstable: new API, waiting for dust to settle"
2015-05-23 22:45:22	Morten	Is the main class implicitly in a module?
2015-05-23 22:45:58	Mutabah	grant: .extend I think
2015-05-23 22:46:17	grant	Mutabah: I don’t see that listed anywhere
2015-05-23 22:46:33	Mutabah	It's a trait method
2015-05-23 22:46:39	<--	hyunsik (hyunsik@moz-3qgjl9.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-23 22:46:52	grant	I see
2015-05-23 22:47:14	<--	logan_ (logan@moz-19veku.res.rr.com) has quit (Ping timeout: 121 seconds)
2015-05-23 22:48:09	-->	Rym (y@moz-c2u.sd4.38.217.IP) has joined #rust
2015-05-23 22:48:45	-->	minot2 (kkus@moz-baj4jj.74.srtnet.com) has joined #rust
2015-05-23 22:49:10	-->	yorickpeterse (yorickpeter@moz-kpg9ml.compute.amazonaws.com) has joined #rust
2015-05-23 22:50:02	<--	jocull (Mibbit@moz-annv25.in.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-23 22:50:29	yorickpeterse	Is it possible to create a reference to something with an explicit lifetime? For example, say you have a "struct Foo<'l> { some_field: &'l SomeReference }" and you want to assign "some_field" from a method, simply using "some_field = &something" will result in the reference not outliving the method's body
2015-05-23 22:50:36	-->	cakecatz (cakecatz@moz-edrvuc.sannet.ne.jp) has joined #rust
2015-05-23 22:50:47	yorickpeterse	basically I want to assign a reference with a lifetime as long as the struct the method belongs to
2015-05-23 22:51:36	SpaceManiac	fn set_some_field(field: &'l SomeReference) { ... }
2015-05-23 22:51:38	minot2	Does one normally have to reboot/log out before changes to path take effect on Windows? 
2015-05-23 22:52:01	SpaceManiac	minot2: you should at worst have to re-open command prompt
2015-05-23 22:52:01	-->	lyc (lyc@moz-jft.nr8.226.207.IP) has joined #rust
2015-05-23 22:52:03	aji	is there some way to know what traits you can #[derive]?
2015-05-23 22:52:17	<--	bluss (bluss@moz-ec5o68.cust.bredbandsbolaget.se) has quit (Ping timeout: 121 seconds)
2015-05-23 22:52:36	@huon	hm, the reference used to list that
2015-05-23 22:52:37	-->	tristanseifert (tristanseif@moz-r0t7ns.res.rr.com) has joined #rust
2015-05-23 22:52:38	yorickpeterse	SpaceManiac: the reference would be created from within the method in this case
2015-05-23 22:52:39	minot2	SpaceManiac, that's what I thought as well but I could not get rustc to show up until after reboot 
2015-05-23 22:52:40	@huon	seems it's been removed :/
2015-05-23 22:52:44	aji	i guessed and apparently you can #[derive(Hash)], and this surprised me because i thought Hash was a std-only trait
2015-05-23 22:52:57	-->	Jouan (Mibbit@moz-clk0e9.austtx.sbcglobal.net) has joined #rust
2015-05-23 22:53:00	grant	is there an equivalent python’s array[-1] syntax to get the last element of an array?
2015-05-23 22:53:11	Jouan	Hi
2015-05-23 22:53:26	Mutabah	grant: there's the .last() method
2015-05-23 22:53:26	@huon	aji: Eq, PartialEq, Ord, PartialOrd, Copy, Clone, Hash, Debug, Default
2015-05-23 22:53:37	@huon	aji: RustcDecodable, RustcEncodable
2015-05-23 22:53:48	Jouan	I'm getting an error like this : "Could not find `Cargo.toml` in..."
2015-05-23 22:53:52	zamabe	Mutabah: Is there an array[3..-4], though?
2015-05-23 22:53:54	grant	Mutabah: what about .secondToLast() ;) for array[-2] ?
2015-05-23 22:53:54	SpaceManiac	yorickpeterse: it'd have to be a reference to some location that outlives the method's body
2015-05-23 22:53:57	Mutabah	zamabe: no
2015-05-23 22:54:01	grant	darn
2015-05-23 22:54:08	aji	huon: hm, interesting
2015-05-23 22:54:08	Mutabah	for that you need to do array.len()-4
2015-05-23 22:54:11	SpaceManiac	same as you can't return a reference to a method's stack, you can't store such a reference in a field
2015-05-23 22:54:13	Jouan	There is definitely a Cargo.toml in the specified folder though
2015-05-23 22:54:21	yorickpeterse	SpaceManiac: that's the thing, I have explicit lifetimes on the struct that the method is defined on, so I'm wondering if I could re-use that lifetime
2015-05-23 22:54:32	minot2	touch
2015-05-23 22:54:54	geofft	does Rust guarantee short-circuiting on ||? 
2015-05-23 22:54:55	aji	huon: are there plans to allow user-defined ways to #[derive]?
2015-05-23 22:54:57	geofft	(for bools) 
2015-05-23 22:54:57	SpaceManiac	yorickpeterse: the referenced data would have to live somewhere. Where?
2015-05-23 22:55:15	<--	johnsoft (johnsoft@moz-69mrig.res.rr.com) has quit (Quit: Leaving)
2015-05-23 22:55:16	@huon	aji: there are now, with procedural macros (aka compiler plugins)
2015-05-23 22:55:21	-->	johnsoft (johnsoft@moz-69mrig.res.rr.com) has joined #rust
2015-05-23 22:55:27	@huon	aji: doing in a stable way would be nice too, though
2015-05-23 22:55:36	yorickpeterse	SpaceManiac: gimme a sec, I'll cook up an example
2015-05-23 22:56:03	<--	lyc (lyc@moz-jft.nr8.226.207.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 22:56:23	<--	Feyn (Feyn@moz-r04.5ro.115.42.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 22:56:40	yorickpeterse	http://is.gd/jueFBM
2015-05-23 22:56:44	yorickpeterse	(playpen)
2015-05-23 22:57:06	yorickpeterse	In my case I have a Thread struct, which contains a reference to CallFrame
2015-05-23 22:57:19	yorickpeterse	I want to assign a new CallFrame from within a method of Thread
2015-05-23 22:57:26	yorickpeterse	One option is to use Box but meh
2015-05-23 22:57:31	grant	Does rust have do-while loops?
2015-05-23 22:58:48	SpaceManiac	yorickpeterse: the 'other' is on the stack of 'set_other', and disappears after the method exits, so you can't possibly keep a reference to it for longer than that
2015-05-23 22:59:05	<--	zz_kimundi (kimundi@moz-q41ugj.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2015-05-23 22:59:09	yorickpeterse	So I have to Box it?
2015-05-23 22:59:16	yorickpeterse	(or pass it in as an argument, which just shifts the problem)
2015-05-23 22:59:29	<--	Shackra (Jorge@moz-7bh.ng6.177.186.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 22:59:53	<--	stubbz (Mibbit@moz-6e5cs6.res.rr.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-23 23:00:14	-->	Shackra (Jorge@moz-7bh.ng6.177.186.IP) has joined #rust
2015-05-23 23:00:22	<--	bfrog (tburdick@moz-hqe1t2.il.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-23 23:00:36	-->	zz_kimundi (kimundi@moz-0lp43l.dip0.t-ipconnect.de) has joined #rust
2015-05-23 23:00:57	--	zz_kimundi is now known as kimundi
2015-05-23 23:01:08	SpaceManiac	either Box it or just own it in the struct
2015-05-23 23:01:23	Jouan	Can anybody help me with a problem with Cargo dependencies, please?
2015-05-23 23:01:31	grant	Mutabah: I have a Vec<u8> and a &[u8]. I want to test if the last bytes of the vec equal the array. like <1,2,3,4,5,6,7> and [5,6,7] would be true
2015-05-23 23:01:38	yorickpeterse	Well, a CallFrame is recursive (it can have a parent CallFrame), making this quite messy
2015-05-23 23:01:41	grant	Mutabah: elegantw way to do this?
2015-05-23 23:02:15	Mutabah	grant: array[array.len()-3..] == [5,6,7]
2015-05-23 23:02:51	grant	so in general it would be my_vec[my_vec.len() - my_array.len() .. ] == my_array ?
2015-05-23 23:03:12	Mutabah	Yep
2015-05-23 23:03:31	Mutabah	watch out, might panic if myvec.len() < myarray.len()
2015-05-23 23:03:41	yorickpeterse	hm, I need to think this out, thanks
2015-05-23 23:03:41	grant	Noted
2015-05-23 23:04:35	<--	forgottenone (forgottenon@moz-h3n.fd4.131.217.IP) has quit (Quit: Konversation terminated!)
2015-05-23 23:05:12	<--	yorickpeterse (yorickpeter@moz-kpg9ml.compute.amazonaws.com) has left #rust ("WeeChat 1.0.1")
2015-05-23 23:05:22	<--	Jouan (Mibbit@moz-clk0e9.austtx.sbcglobal.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-23 23:05:56	_habnabit	so if a C function is `void InitSponge(struct spongeState *)`, would the requisite rust be `extern "C" { pub fn InitSponge(state: *mut spongeState) }` after declaring a `#[repr(C)] struct spongeState` ?
2015-05-23 23:07:23	<--	Tobba (Tobba@moz-o13d22.bredband.telia.com) has quit (Ping timeout: 121 seconds)
2015-05-23 23:07:55	-->	annodomini (lambda@moz-p5j4a2.vermontel.net) has joined #rust
2015-05-23 23:07:59	Morten	How do I use methods from main.rs in other modules?
2015-05-23 23:08:18	<--	meh (meh@moz-5b2553.42-151.net24.it) has quit (Ping timeout: 121 seconds)
2015-05-23 23:09:09	Mutabah	Morten: ::method
2015-05-23 23:09:30	Morten	Mutabah: thanks!
2015-05-23 23:09:38	<--	bombless (_@moz-te844b.0v2u.0v40.0da8.2001.IP) has quit (Ping timeout: 121 seconds)
2015-05-23 23:09:51	<--	markstory (textual@moz-tb3ghu.cable.rogers.com) has quit (Quit: Textual IRC Client: www.textualapp.com)
2015-05-23 23:09:52	_habnabit	aw crap i figured out the problem with my code that called into C: rust-bindgen automatically derived Copy, which was copying my structs in some places i wasn't expecting :(
2015-05-23 23:09:54	Mutabah	Morten: main.rs is also known as the "crate root". Rust crates create a tree similar to C++ namespaces. the root is the top level of that tree, and modules add new nodes to the current node/module
2015-05-23 23:10:14	_habnabit	removing the #[derive(Copy)] showed me where i was copying where i shouldn't have been
2015-05-23 23:10:32	-->	summerlight_ (summerlight@moz-99k.2mj.130.121.IP) has joined #rust
2015-05-23 23:11:14	-->	fyolnish (fyolnish@moz-ehtogo.so-net.ne.jp) has joined #rust
2015-05-23 23:12:51	_habnabit	aha, at last a use for mem::replace
2015-05-23 23:13:10	-->	dinfuehr (dinfuehr@moz-ldm58r.highway.telekom.at) has joined #rust
2015-05-23 23:13:44	<--	lenstr (lenstr@moz-el8.vju.25.171.IP) has quit (Connection closed)
2015-05-23 23:14:13	_habnabit	or not :I
2015-05-23 23:14:53	grant	I have a String, how do I match it against some strint literals? Some sort of funkiness with &str String stuff
2015-05-23 23:15:08	Mutabah	I use it reasonaby often, mostly to "move" out of a borrowed context
2015-05-23 23:15:11	-->	lenstr (lenstr@moz-el8.vju.25.171.IP) has joined #rust
2015-05-23 23:15:29	Mutabah	grant: match &string { "Hi" => {}, _ => {} }
2015-05-23 23:15:30	<--	idegen (greg@moz-9c4nle.or.frontiernet.net) has quit (Quit: Leaving.)
2015-05-23 23:15:42	Mutabah	grant: That will most probably deref coerce correctly
2015-05-23 23:16:02	grant	Mutabah: 
2015-05-23 23:16:02	grant	 expected `&collections::string::String`,
2015-05-23 23:16:03	grant	    found `&'static str`
2015-05-23 23:16:06	Mutabah	(You could use == of course, but match is better than an if-elseif chain
2015-05-23 23:16:16	Mutabah	grant: Ah, stick a * in the middle &*string
2015-05-23 23:16:21	grant	What does that do?
2015-05-23 23:16:33	Mutabah	dereferences the String into a str
2015-05-23 23:16:38	grant	It worked
2015-05-23 23:16:41	Mutabah	and then borrows the str into &str
2015-05-23 23:16:43	-->	lyc (lyc@moz-jft.nr8.226.207.IP) has joined #rust
2015-05-23 23:16:50	grant	I see...
2015-05-23 23:16:58	grant	Seems really boilerplatey
2015-05-23 23:17:08	zamabe	Mutabah: is there a blog post that explains that?
2015-05-23 23:17:13	<--	dinfuehr (dinfuehr@moz-ldm58r.highway.telekom.at) has quit (Ping timeout: 121 seconds)
2015-05-23 23:17:13	grant	I’m sure necessary for some type reasons, but still annoying to type
2015-05-23 23:17:15	zamabe	(what you just said)
2015-05-23 23:17:23	Mutabah	zamabe: Deref? It's in the book
2015-05-23 23:17:32	zamabe	cool :)
2015-05-23 23:17:35	Mutabah	grant: It is a little boilerplate-y
2015-05-23 23:17:49	Mutabah	grant: This is one of the few places that * is still needed
2015-05-23 23:18:06	Mutabah	grant: In most other places, &String will coerce to &str
2015-05-23 23:18:18	grant	Why not here?
2015-05-23 23:18:28	<--	fyolnish (fyolnish@moz-ehtogo.so-net.ne.jp) has quit (Ping timeout: 121 seconds)
2015-05-23 23:18:43	Mutabah	Possibly becuase it didn't realise that the match was over &str? I'm not sure
2015-05-23 23:18:49	-->	gattscha1do (richard@moz-6dhapo.dyn.telefonica.de) has joined #rust
2015-05-23 23:18:54	Mutabah	(maybe match statements don't do deref coercions)
2015-05-23 23:19:04	-->	adu (ajr@moz-0foa9t.md.comcast.net) has joined #rust
2015-05-23 23:19:27	Mutabah	grant: If you think it's ugly, there's the longer but "prettier" &string[..]
2015-05-23 23:19:38	Mutabah	(does the same thing, but using a different operator)
2015-05-23 23:20:21	thombles	We've been talking about that on the forum https://users.rust-lang.org/t/string-type-coercion-in-rust/1439
2015-05-23 23:20:34	thombles	The reason I'm trying to get a build is so I can put up a PR for a change to the book to make it clearer :p
2015-05-23 23:21:48	<--	gattschardo (richard@moz-qk9ds0.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2015-05-23 23:22:05	<--	Pink (Mibbit@moz-q5ktpc.ma.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-23 23:22:56	thombles	I feel like I should at least be able to render the html before I propose markdown changes...
2015-05-23 23:23:27	<--	cakecatz (cakecatz@moz-edrvuc.sannet.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-23 23:24:06	<--	adu (ajr@moz-0foa9t.md.comcast.net) has quit (Client exited)
2015-05-23 23:24:27	-->	choplin (choplin@moz-oqm67s.t6mc.g9m6.001a.240d.IP) has joined #rust
2015-05-23 23:25:14	Mutabah	Random Idea - a /% operator, that returns (division, remainder)
2015-05-23 23:25:40	Mutabah	(not suggesting it be added really, can be served just as easily by a helper or macro)
2015-05-23 23:26:54	<--	annodomini (lambda@moz-p5j4a2.vermontel.net) has quit (Client exited)
2015-05-23 23:27:03	-->	trigen (MSX@moz-sgda69.static.versatel.nl) has joined #rust
2015-05-23 23:27:11	_habnabit	i'm unsure how one can do this; here are my attempts: http://is.gd/bfs6Cf http://is.gd/OE7R3B -- i understand that in the first one, i could return self and do `let s = s.swap()`, but that seems silly, somehow. in the second one, i'm not sure how i can move `s` so i can successfully do the replacement
2015-05-23 23:28:51	bugQ	does llvm optimize divmod, because I know x86 outputs both at the same time
2015-05-23 23:29:20	Mutabah	bugQ: I don't know, might check :D
2015-05-23 23:29:43	<--	daheise (Mibbit@moz-gl1dm6.knvltn.sbcglobal.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-24 09:10:42	--	irc: disconnected from server
2015-05-24 09:11:54	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-24 09:11:54	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-24 09:11:54	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-24 09:11:54	--	Channel #rust: 962 nicks (12 ops, 0 halfops, 2 voices, 948 normals)
2015-05-24 09:11:56	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-24 10:17:31	--	irc: disconnected from server
2015-05-24 10:17:42	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-24 10:17:42	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-24 10:17:42	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-24 10:17:43	--	Channel #rust: 967 nicks (12 ops, 0 halfops, 2 voices, 953 normals)
2015-05-24 10:17:58	--	irc: disconnected from server
2015-05-24 10:18:10	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-24 10:18:10	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-24 10:18:10	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-24 10:18:10	--	Channel #rust: 967 nicks (12 ops, 0 halfops, 2 voices, 953 normals)
2015-05-24 10:18:11	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-24 10:18:15	yorickpeterse	since there's already a &mut self
2015-05-24 10:18:36	<--	silven (quassel@moz-0roor3.priv.bahnhof.se) has quit (Ping timeout: 121 seconds)
2015-05-24 10:19:04	-->	silven (quassel@moz-0roor3.priv.bahnhof.se) has joined #rust
2015-05-24 10:19:28	-->	Wild_Cat (Max@moz-fa8mvt.dsl.teksavvy.com) has joined #rust
2015-05-24 10:19:43	gaveen	percy, I'm just guessing here. Perhaps you need the 'ffi' gem installed?
2015-05-24 10:19:49	<--	mkpankov (mkpankov@moz-ck7.70f.16.195.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 10:19:59	percy	no, that's not it
2015-05-24 10:20:04	Blei	yorickpeterse: yes, they are required. `self.call_frame` actually dereferences, resulting in a Box<whatevs>. you have to reborrow it with &mut
2015-05-24 10:20:10	percy	https://github.com/alexcrichton/rust-ffi-examples/blob/master/ruby-to-rust/Makefile
2015-05-24 10:20:17	Blei	this happens automatically in some contexts, but only for non-mut &
2015-05-24 10:20:17	<--	xcombelle (xcombelle@moz-1frl96.abo.wanadoo.fr) has quit (Connection closed)
2015-05-24 10:20:24	percy	So when I run this example, it works beautifully
2015-05-24 10:20:41	yorickpeterse	Blei: ah ok, and the initial &mut self is needed too?
2015-05-24 10:20:42	percy	but when I run the same commands from the command line, I get the ffi load error
2015-05-24 10:20:55	-->	petervaro (petervaro@moz-qkmsnl.pool.telekom.hu) has joined #rust
2015-05-24 10:21:08	mib_vm0ljy	percy, windows, unix, os x?
2015-05-24 10:21:13	percy	osx
2015-05-24 10:21:27	Blei	yorickpeterse: yes, that's the way to declare that self should be mutable. otherwise you wouldn't be allowed to reborrow as mutable as you'd only have a non-mutable reference to start with
2015-05-24 10:21:41	mib_vm0ljy	percy, maybe the working directory is the culprit?
2015-05-24 10:21:42	<--	petervaro (petervaro@moz-qkmsnl.pool.telekom.hu) has quit (Quit: Lingo: www.lingoirc.com)
2015-05-24 10:21:54	percy	I've checked that too -- printed out the working dir in the ruby file.
2015-05-24 10:21:56	percy	same both ways
2015-05-24 10:22:06	<--	lucian (lucian@moz-2c3pda.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2015-05-24 10:22:08	-->	nicknikolov (nicknikolov@moz-0q4.2rm.211.90.IP) has joined #rust
2015-05-24 10:22:10	percy	when I include ffi and run ruby foo.rb, bad stuff
2015-05-24 10:22:18	percy	but running with make, no problemo
2015-05-24 10:22:27	-->	qrlpx (smuxi@moz-50cslv.dip0.t-ipconnect.de) has joined #rust
2015-05-24 10:22:34	percy	If I remove ffi and print the working dir, they are the same
2015-05-24 10:22:48	yorickpeterse	Blei: ok thanks, I think I'll go with the mem::swap in that case
2015-05-24 10:22:56	yorickpeterse	for now this seems to be the most reasonable
2015-05-24 10:23:14	-->	Gamecubic (cubic@moz-bglmk5.mc.videotron.ca) has joined #rust
2015-05-24 10:23:52	yorickpeterse	thanks!
2015-05-24 10:24:01	Blei	yw :)
2015-05-24 10:24:10	-->	kimwonyong (kimwonyong@moz-981.63m.38.118.IP) has joined #rust
2015-05-24 10:24:13	<--	kidto_ (gabriel@moz-72d.fff.84.91.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 10:25:23	<--	Stebalien (Stebalien@moz-i00.hrk.38.73.IP) has quit (Quit: leaving)
2015-05-24 10:25:37	yorickpeterse	one more question, does mem::swap dereference a Box?
2015-05-24 10:25:54	yorickpeterse	That is, if a swap results in a Box having no more references, is it de-allocated?
2015-05-24 10:26:01	-->	zucchini (Mibbit@moz-o5eg8b.bredband.comhem.se) has joined #rust
2015-05-24 10:26:21	yorickpeterse	so e.g. if you use mem::swap to do the inverse (replace current with the parent, instead of vice-versa), does the old "current" get de-allocated?
2015-05-24 10:26:39	--	Mode #rust [+b Erwin1!*@*] by mbrubeck
2015-05-24 10:26:55	<--	eibwen (eibwen@moz-c603kn.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2015-05-24 10:27:08	<--	bombless (_@moz-uag.piv.41.59.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 10:27:28	Havvy	mbrubeck:  *!*@moz-8a46g9.compute.amazonaws.com would be better.
2015-05-24 10:27:42	--	Mode #rust [+b *!*@moz-8a46g9.compute.amazonaws.com] by mbrubeck
2015-05-24 10:27:44	&mbrubeck	thanks
2015-05-24 10:28:03	-->	Rym (y@moz-c2u.sd4.38.217.IP) has joined #rust
2015-05-24 10:28:04	Havvy	(You can grab the hostname from /whois Erwin1
2015-05-24 10:28:54	eddyb	woooo https://github.com/rust-lang/rust/pull/25609#discussion_r30951759
2015-05-24 10:29:10	<--	wei2912 (wei2912@moz-fre.2ue.156.175.IP) has quit (Quit: Lost terminal)
2015-05-24 10:29:20	Blei	yorickpeterse: swap itself doesn't do any allocation or deallocation, it does simple memcopys
2015-05-24 10:29:29	Mutabah	eddyb: Woot! It's merged!
2015-05-24 10:29:33	percy	Never mind, I figured it out
2015-05-24 10:29:34	eddyb	now we "just" need a snapshot and we can start using const fn's in libcore and libstd
2015-05-24 10:29:42	-->	Nextra (Nextra@moz-ghdeuq.ewe-ip-backbone.de) has joined #rust
2015-05-24 10:29:42	Blei	whether anything gets deallocated depends on what you do with the values you are swapping
2015-05-24 10:29:44	Mutabah	eddyb: Two PRs I love landed in one day!
2015-05-24 10:30:04	Blei	in your original example, if you didn't move `tmp` into self.call_frame again, it would be deallocated at the end of the function
2015-05-24 10:30:20	<--	percy (Mibbit@moz-27v.di5.156.104.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-24 10:31:58	-->	froglegstew (Mibbit@moz-i7cb3r.fios.verizon.net) has joined #rust
2015-05-24 10:32:14	mindtree	Mutabah: what's the other?
2015-05-24 10:32:35	<--	yota (sdouche@moz-6nob1i.3iqc.r856.0e35.2a01.IP) has quit (Quit: WeeChat 1.1.1)
2015-05-24 10:32:36	<--	Rym (y@moz-c2u.sd4.38.217.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 10:32:40	-->	desophos (desophos@moz-d6sgjd.98ku.27p0.6000.2606.IP) has joined #rust
2015-05-24 10:33:04	Mutabah	mindtree: Manishearth's plugin registrar changes (to allow suppressing the unused attribute warning)
2015-05-24 10:33:09	eddyb	Dabo: https://github.com/rust-lang/regex/issues/86#event-312554726
2015-05-24 10:33:15	-->	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has joined #rust
2015-05-24 10:33:27	--	NameNotFound is now known as zz_NameNotFound
2015-05-24 10:33:34	&Manishearth	which landed btw
2015-05-24 10:33:49	-->	dirvine (dirvine@moz-42j0at.cable.virginm.net) has joined #rust
2015-05-24 10:34:17	-->	new_one_ (new_one@moz-ck48t4.kbni.1u98.0009.2601.IP) has joined #rust
2015-05-24 10:34:44	Mutabah	Manishearth: Tests passed eventually?
2015-05-24 10:35:29	<--	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has quit (Connection closed)
2015-05-24 10:35:31	yorickpeterse	Blei: ah ok, thanks
2015-05-24 10:35:42	<--	yuja (yuja@moz-4hssp3.so-net.ne.jp) has quit (Ping timeout: 121 seconds)
2015-05-24 10:35:43	gaveen	I was going though the docs and I'm not clear about the distinction of a 'method' over a 'function'. Maybe I'm getting confused with baggage from other languages. Anyway to clarify?
2015-05-24 10:36:01	&Manishearth	yeah it was intermittent
2015-05-24 10:36:10	&Manishearth	gaveen: method is something that takes self basically
2015-05-24 10:36:25	-->	kidto_ (gabriel@moz-72d.fff.84.91.IP) has joined #rust
2015-05-24 10:36:27	&Manishearth	or anything in an impl block
2015-05-24 10:36:35	&Manishearth	there's very little difference as far as rust goes
2015-05-24 10:36:38	&Manishearth	esp with ufcs
2015-05-24 10:37:06	<--	new_one_ (new_one@moz-ck48t4.kbni.1u98.0009.2601.IP) has quit (Quit: WeeChat 1.1.1)
2015-05-24 10:37:41	morton	Is there any binaries for armv6?
2015-05-24 10:37:58	desophos	is there a way to select an item from an immutable Vec?
2015-05-24 10:38:00	<--	kaeluka (kaeluka@moz-tn3lqd.cust.bredbandsbolaget.se) has quit (Client exited)
2015-05-24 10:38:04	-->	ethan_tqa (Mibbit@moz-a6v.a3k.212.218.IP) has joined #rust
2015-05-24 10:38:05	Mutabah	desophos: indexing?
2015-05-24 10:38:14	desophos	Mutabah: ... great idea!
2015-05-24 10:38:31	desophos	thanks haha
2015-05-24 10:38:34	-->	annodomini (lambda@moz-de8.ono.137.32.IP) has joined #rust
2015-05-24 10:38:38	harrisonclarke	hmm. i want to generically implement a trait, but it's complaining about unconstrained type variables. is it possible to make this work? http://is.gd/yxvYP2
2015-05-24 10:38:46	-->	Hannibal_Smith (nico@moz-7gi1c3.retail.telecomitalia.it) has joined #rust
2015-05-24 10:39:31	<--	hyunsik (hyunsik@moz-3qgjl9.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-24 10:39:36	eddyb	gaveen: a method is an associated function (in an impl block). it's just convention to call it a method, especially if it can be called like x.foo() (a "method call")
2015-05-24 10:39:42	<--	yorickpeterse (yorickpeter@moz-kpg9ml.compute.amazonaws.com) has left #rust ("WeeChat 1.0.1")
2015-05-24 10:40:03	eddyb	harrisonclarke: you forgot to set the RHS type
2015-05-24 10:40:33	-->	kaeluka (kaeluka@moz-tn3lqd.cust.bredbandsbolaget.se) has joined #rust
2015-05-24 10:40:33	eddyb	harrisonclarke: http://is.gd/HLQyva
2015-05-24 10:40:46	eddyb	it was defaulting to X<T> while your RHS was X<T1>
2015-05-24 10:40:59	eddyb	T1 is a pretty bad name for a type param, easily leads to confusion
2015-05-24 10:41:25	eddyb	harrisonclarke: the convention is more like http://is.gd/pzJkax
2015-05-24 10:41:54	harrisonclarke	thanks. the error message had me looking in all the wrong places!
2015-05-24 10:42:35	gaveen	eddyb, ah, that makes more sense. So there's no other syntactic declarations?
2015-05-24 10:42:43	<--	new_one (new_one@moz-ps5j1c.fs1g.619c.a880.2604.IP) has quit (Quit: WeeChat 1.1.1)
2015-05-24 10:42:47	-->	andresv (textual@moz-kvanfr.dyn.estpak.ee) has joined #rust
2015-05-24 10:43:18	eddyb	gaveen: like Manishearth said, usually you'll see the self parameter
2015-05-24 10:43:34	eddyb	e.g. impl Foo { fn foo(&self) -> bool { self.is_foo } }
2015-05-24 10:44:30	<--	Havvy (Havvy@moz-2v0ao2.5euu.k9bm.0007.2601.IP) has left #rust
2015-05-24 10:44:30	-->	Havvy (Havvy@moz-2v0ao2.5euu.k9bm.0007.2601.IP) has joined #rust
2015-05-24 10:44:47	harrisonclarke	is there a type variable convention when you have multiple type parameters? for example, a struct Foo<T,U>, you would use Foo<V,W> for rhs? or i suppose Foo<TRhs,URhs> or something would do
2015-05-24 10:45:12	gaveen	eddyb, ah, that's what Manishearth meant. Sorry, I din't quite get what he said earlier apart from the impl block. Thanks. :)
2015-05-24 10:45:14	<--	mdcox (mdcox@moz-aqs97l.or.comcast.net) has quit (Quit: leaving)
2015-05-24 10:45:33	Havvy	mbrubeck:  Ban onebooks (on join spammer)
2015-05-24 10:45:41	Havvy	Hannibal_Smith:  I'm not an op in here.
2015-05-24 10:45:57	Havvy	(Nor am I an IRC OP on Moznet)
2015-05-24 10:46:10	--	Mode #rust [+b *!*@moz-4pf.s0j.162.14.IP] by mbrubeck
2015-05-24 10:46:12	--	Mode #rust [+o Havvy] by mbrubeck
2015-05-24 10:46:24	<--	andresv (textual@moz-kvanfr.dyn.estpak.ee) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-24 10:46:28	eddyb	harrisonclarke: or A, B, C, D
2015-05-24 10:46:33	eddyb	harrisonclarke: T, U, X, Y
2015-05-24 10:46:39	-->	new_one (new_one@moz-ps5j1c.fs1g.619c.a880.2604.IP) has joined #rust
2015-05-24 10:46:49	eddyb	harrisonclarke: there's lots of choices :)
2015-05-24 10:47:02	<--	Havvy has kicked onebooks (Havvy)
2015-05-24 10:47:02	gaveen	Manishearth, sorry to trouble you again. But what did you mean by ufc?
2015-05-24 10:47:12	-->	jviereck (Adium@moz-ggirh3.97ug.g469.067c.2001.IP) has joined #rust
2015-05-24 10:47:19	eddyb	UFCS
2015-05-24 10:47:31	eddyb	gaveen: in the example above, you can call x.foo() or Foo::foo(x)
2015-05-24 10:47:31	-->	winding-lines (textual@moz-hmr.hc9.20.99.IP) has joined #rust
2015-05-24 10:47:31	-->	mib_rortgr (Mibbit@moz-1os.i9i.227.223.IP) has joined #rust
2015-05-24 10:47:49	-->	hjr3 (hradtke@moz-rga0be.ca.comcast.net) has joined #rust
2015-05-24 10:47:50	eddyb	gaveen: the latter is called UFCS
2015-05-24 10:47:51	mib_rortgr	hi Rustaceans!
2015-05-24 10:47:53	@Havvy	!ufcs
2015-05-24 10:47:53	+rustbot	Universal Function Call Syntax - https://doc.rust-lang.org/book/ufcs.html | https://github.com/rust-lang/rfcs/blob/master/text/0132-ufcs.md
2015-05-24 10:48:01	<--	Slava_I (slava@moz-tia.hi8.135.31.IP) has quit (Connection closed)
2015-05-24 10:48:06	mib_rortgr	need some help reg. file io
2015-05-24 10:48:11	gaveen	eddyb, thanks
2015-05-24 10:48:12	eddyb	there's multiple forms, <Foo>::foo(x) and, well, if it's a trait, e.g. <Foo as Clone>::clone(x) and Clone::clone(x)
2015-05-24 10:48:35	eddyb	(Foo::clone(x), <Foo>::clone(x) and x.clone() also work)
2015-05-24 10:48:39	eddyb	choices!
2015-05-24 10:48:40	mib_rortgr	i need an example to read text file line by line
2015-05-24 10:49:09	--	irc: disconnected from server
2015-05-24 10:49:22	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-24 10:49:22	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-24 10:49:22	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-24 10:49:24	--	Channel #rust: 968 nicks (13 ops, 0 halfops, 2 voices, 953 normals)
2015-05-24 10:49:25	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-24 10:49:39	-->	tristanseifert (tristanseif@moz-r0t7ns.res.rr.com) has joined #rust
2015-05-24 10:49:50	mib_rortgr	hi eddyb. thank you
2015-05-24 10:50:10	-->	bombless (_@moz-uag.piv.41.59.IP) has joined #rust
2015-05-24 10:50:35	-->	rouma (zack@moz-p8e0re.res.rr.com) has joined #rust
2015-05-24 10:51:26	&mbrubeck	mib_rortgr: Here's a simple example: http://is.gd/wM94nP
2015-05-24 10:51:43	&mbrubeck	I also just added an example to the nightly version of those docs http://doc.rust-lang.org/nightly/std/io/struct.BufReader.html
2015-05-24 10:51:46	<--	kidto_ (gabriel@moz-72d.fff.84.91.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 10:51:56	-->	kidto_ (gabriel@moz-72d.fff.84.91.IP) has joined #rust
2015-05-24 10:52:08	<--	jviereck (Adium@moz-ggirh3.97ug.g469.067c.2001.IP) has quit (Quit: Leaving.)
2015-05-24 10:52:09	Mutabah	When do nightlies start building?
2015-05-24 10:52:30	<--	SneakySnake (nya@moz-i9is4u.pool.telekom.hu) has quit (Quit: Leaving)
2015-05-24 10:53:21	-->	Mazzy (bzlandfill@moz-vdd.8qj.143.91.IP) has joined #rust
2015-05-24 10:53:36	-->	SneakySnake (nya@moz-i9is4u.pool.telekom.hu) has joined #rust
2015-05-24 10:54:06	<--	Mazzy (bzlandfill@moz-vdd.8qj.143.91.IP) has quit (Quit: CGI:IRC (EOF))
2015-05-24 10:54:48	-->	dmac_ (dmac@moz-2ig65r.ca.comcast.net) has joined #rust
2015-05-24 10:55:19	-->	tav_ (tav@moz-ivrq8h.range31-52.btcentralplus.com) has joined #rust
2015-05-24 10:55:31	-->	dinfuehr_ (dinfuehr@moz-sh7u9l.highway.telekom.at) has joined #rust
2015-05-24 10:55:46	-->	pgonda (peter@moz-s36.0tp.134.75.IP) has joined #rust
2015-05-24 10:55:58	<--	tav (tav@moz-ivrq8h.range31-52.btcentralplus.com) has quit (Connection closed)
2015-05-24 10:55:58	--	tav_ is now known as tav
2015-05-24 10:56:04	-->	massyy (bzlandfill@moz-vdd.8qj.143.91.IP) has joined #rust
2015-05-24 10:56:10	massyy	uusted puuede lamer mi Pene y mis Huuevoos de ooroo y besar mi Cuuloo hijoo de puuta coon uun Trastoornoo de la persoonalidad desde el más proofuundoo de loos abismoos del infiernoo desde loos Abismoos de Moozilla!  Vete a la mierda y quue tuu Madre te auutista hijoo de puuta, vas a lamer Puutin Huuevoos, Puutoo Maricoon Fascista!  La mierda de suu Perroo, suu Gatoo y suu suucioo Cabra de moontaña quue Maricoon Pendejoo!  Chuupar Moozilla Poollas y t
2015-05-24 10:56:10	<--	CMCDragonkai (nobody@moz-v01.321.218.216.IP) has quit (Connection closed)
2015-05-24 10:56:18	massyy	uusted puuede lamer mi Pene y mis Huuevoos de ooroo y besar mi Cuuloo hijoo de puuta coon uun Trastoornoo de la persoonalidad desde el más proofuundoo de loos abismoos del infiernoo desde loos Abismoos de Moozilla!  Vete a la mierda y quue tuu Madre te auutista hijoo de puuta, vas a lamer Puutin Huuevoos, Puutoo Maricoon Fascista!  La mierda de suu Perroo, suu Gatoo y suu suucioo Cabra de moontaña quue Maricoon Pendejoo!  Chuupar Moozilla Poollas y t
2015-05-24 10:56:21	massyy	uusted puuede lamer mi Pene y mis Huuevoos de ooroo y besar mi Cuuloo hijoo de puuta coon uun Trastoornoo de la persoonalidad desde el más proofuundoo de loos abismoos del infiernoo desde loos Abismoos de Moozilla!  Vete a la mierda y quue tuu Madre te auutista hijoo de puuta, vas a lamer Puutin Huuevoos, Puutoo Maricoon Fascista!  La mierda de suu Perroo, suu Gatoo y suu suucioo Cabra de moontaña quue Maricoon Pendejoo!  Chuupar Moozilla Poollas y t
2015-05-24 10:56:22	massyy	uusted puuede lamer mi Pene y mis Huuevoos de ooroo y besar mi Cuuloo hijoo de puuta coon uun Trastoornoo de la persoonalidad desde el más proofuundoo de loos abismoos del infiernoo desde loos Abismoos de Moozilla!  Vete a la mierda y quue tuu Madre te auutista hijoo de puuta, vas a lamer Puutin Huuevoos, Puutoo Maricoon Fascista!  La mierda de suu Perroo, suu Gatoo y suu suucioo Cabra de moontaña quue Maricoon Pendejoo!  Chuupar Moozilla Poollas y t
2015-05-24 10:56:22	--	Mode #rust [+b *!*@moz-vdd.8qj.143.91.IP] by Havvy
2015-05-24 10:56:22	-->	CMCDragonkai (nobody@moz-v01.321.218.216.IP) has joined #rust
2015-05-24 10:56:23	--	Mode #rust [+b massyy!*@*] by mbrubeck
2015-05-24 10:56:26	<--	Havvy has kicked massyy (Havvy)
2015-05-24 10:57:11	<--	morton (Mibbit@moz-7p45du.cust.bahnhof.se) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-24 10:58:05	<--	kidto_ (gabriel@moz-72d.fff.84.91.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 10:58:55	<--	dmac_ (dmac@moz-2ig65r.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-24 10:59:17	-->	bombela (bombela@moz-mu0.s74.170.68.IP) has joined #rust
2015-05-24 10:59:22	<--	eschatite (eschatite@moz-95cjjj.res.rr.com) has quit (Ping timeout: 121 seconds)
2015-05-24 10:59:27	mib_rortgr	thanks mbrubeck.. that was really help
2015-05-24 10:59:29	mib_rortgr	ful
2015-05-24 10:59:32	-->	Slava_I (slava@moz-tia.hi8.135.31.IP) has joined #rust
2015-05-24 10:59:33	mib_rortgr	bye
2015-05-24 10:59:35	<--	dinfuehr_ (dinfuehr@moz-sh7u9l.highway.telekom.at) has quit (Ping timeout: 121 seconds)
2015-05-24 10:59:36	-->	IceMaster (Ice@moz-4je.pdi.191.101.IP) has joined #rust
2015-05-24 10:59:48	-->	cakecatz (cakecatz@moz-edrvuc.sannet.ne.jp) has joined #rust
2015-05-24 10:59:48	<--	IceMaster (Ice@moz-4je.pdi.191.101.IP) has left #rust
2015-05-24 10:59:54	<--	mib_rortgr (Mibbit@moz-1os.i9i.227.223.IP) has left #rust
2015-05-24 10:59:58	-->	kroltan (koltan@moz-hd9fdj.brasiltelecom.net.br) has joined #rust
2015-05-24 11:00:29	<--	kroltan (koltan@moz-hd9fdj.brasiltelecom.net.br) has quit (Quit: Leaving)
2015-05-24 11:00:29	<--	winding-lines (textual@moz-hmr.hc9.20.99.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-24 11:01:16	ubeatlenine	Could someone give me a use case for a unit-like struct? I'm confused as to what the point of them is.
2015-05-24 11:01:33	Mutabah	ubeatlenine: Implementing traits on
2015-05-24 11:01:42	&mbrubeck	ubeatlenine: Here's one https://blog.mozilla.org/research/2014/06/23/static-checking-of-units-in-servo/
2015-05-24 11:02:21	--	irc: disconnected from server
2015-05-24 11:02:32	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-24 11:02:32	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-24 11:02:32	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-24 11:02:33	--	Channel #rust: 969 nicks (13 ops, 0 halfops, 2 voices, 954 normals)
2015-05-24 11:02:34	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-24 11:03:15	<--	avikpal (avikpal@moz-c9m.pde.251.117.IP) has quit (Connection closed)
2015-05-24 11:03:31	-->	vmx (vmx@moz-v5li2v.pools.vodafone-ip.de) has joined #rust
2015-05-24 11:04:54	-->	Costenslayer (Costenslaye@moz-h0t.na8.231.5.IP) has joined #rust
2015-05-24 11:05:33	<--	tav (tav@moz-ivrq8h.range31-52.btcentralplus.com) has quit (Ping timeout: 121 seconds)
2015-05-24 11:07:26	-->	tav (tav@moz-ivrq8h.range31-52.btcentralplus.com) has joined #rust
2015-05-24 11:07:46	-->	lyc (lyc@moz-jft.nr8.226.207.IP) has joined #rust
2015-05-24 11:07:50	-->	gdfdf5 (bzlandfill@moz-mod.3nd.197.91.IP) has joined #rust
2015-05-24 11:07:56	<--	annodomini (lambda@moz-de8.ono.137.32.IP) has quit (Client exited)
2015-05-24 11:07:57	-->	tav_ (tav@moz-ivrq8h.range31-52.btcentralplus.com) has joined #rust
2015-05-24 11:07:58	<--	tav (tav@moz-ivrq8h.range31-52.btcentralplus.com) has quit (Connection closed)
2015-05-24 11:07:59	gdfdf5	uusted puuede lamer mi Pene y mis Huuevoos de ooroo y besar mi Cuuloo hijoo de puuta coon uun Trastoornoo de la persoonalidad desde el más proofuundoo de loos abismoos del infiernoo desde loos Abismoos de Moozilla!  Vete a la mierda y quue tuu Madre te auutista hijoo de puuta, vas a lamer Puutin Huuevoos, Puutoo Maricoon Fascista!  La mierda de suu Perroo, suu Gatoo y suu suucioo Cabra de moontaña quue Maricoon Pendejoo!  Chuupar Moozilla Poollas y t
2015-05-24 11:07:59	<--	CMCDragonkai (nobody@moz-v01.321.218.216.IP) has quit (Connection closed)
2015-05-24 11:07:59	gdfdf5	uusted puuede lamer mi Pene y mis Huuevoos de ooroo y besar mi Cuuloo hijoo de puuta coon uun Trastoornoo de la persoonalidad desde el más proofuundoo de loos abismoos del infiernoo desde loos Abismoos de Moozilla!  Vete a la mierda y quue tuu Madre te auutista hijoo de puuta, vas a lamer Puutin Huuevoos, Puutoo Maricoon Fascista!  La mierda de suu Perroo, suu Gatoo y suu suucioo Cabra de moontaña quue Maricoon Pendejoo!  Chuupar Moozilla Poollas y t
2015-05-24 11:08:00	gdfdf5	uusted puuede lamer mi Pene y mis Huuevoos de ooroo y besar mi Cuuloo hijoo de puuta coon uun Trastoornoo de la persoonalidad desde el más proofuundoo de loos abismoos del infiernoo desde loos Abismoos de Moozilla!  Vete a la mierda y quue tuu Madre te auutista hijoo de puuta, vas a lamer Puutin Huuevoos, Puutoo Maricoon Fascista!  La mierda de suu Perroo, suu Gatoo y suu suucioo Cabra de moontaña quue Maricoon Pendejoo!  Chuupar Moozilla Poollas y t
2015-05-24 11:08:00	gdfdf5	uusted puuede lamer mi Pene y mis Huuevoos de ooroo y besar mi Cuuloo hijoo de puuta coon uun Trastoornoo de la persoonalidad desde el más proofuundoo de loos abismoos del infiernoo desde loos Abismoos de Moozilla!  Vete a la mierda y quue tuu Madre te auutista hijoo de puuta, vas a lamer Puutin Huuevoos, Puutoo Maricoon Fascista!  La mierda de suu Perroo, suu Gatoo y suu suucioo Cabra de moontaña quue Maricoon Pendejoo!  Chuupar Moozilla Poollas y t
2015-05-24 11:08:00	<--	belew.mozilla.org has kicked gdfdf5 (Channel flood triggered (limit is 5 lines in 3 secs))
2015-05-24 11:08:05	--	tav_ is now known as tav
2015-05-24 11:08:06	-->	axqd (Mibbit@moz-q6bh5g.singnet.com.sg) has joined #rust
2015-05-24 11:08:12	-->	CMCDragonkai (nobody@moz-v01.321.218.216.IP) has joined #rust
2015-05-24 11:08:28	<--	markstory (textual@moz-tb3ghu.cable.rogers.com) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-24 11:08:47	<--	Matthias247 (Miranda@moz-49li60.hsi14.kabel-badenwuerttemberg.de) has quit (Connection closed)
2015-05-24 11:10:03	--	Mode #rust [+b *!*@moz-mod.3nd.197.91.IP] by mbrubeck
2015-05-24 11:11:16	-->	gdfdf5 (bzlandfill@moz-0n4.mq8.28.31.IP) has joined #rust
2015-05-24 11:11:21	gdfdf5	You are traitors to all Open-Source-related! Shame on you Mozilla developers and your "out of this world" "leaders" with less than half a brain!You are traitors to all Open-Source-related! Shame on you Mozilla developers and your "out of this world" "leaders" with less than half a brain!You are traitors to all Open-Source-related! Shame on you Mozilla developers and your "out of this world" "leaders" with less than half a brain!You are traitors to all O
2015-05-24 11:11:21	<--	CMCDragonkai (nobody@moz-v01.321.218.216.IP) has quit (Connection closed)
2015-05-24 11:11:22	gdfdf5	You are traitors to all Open-Source-related! Shame on you Mozilla developers and your "out of this world" "leaders" with less than half a brain!You are traitors to all Open-Source-related! Shame on you Mozilla developers and your "out of this world" "leaders" with less than half a brain!You are traitors to all Open-Source-related! Shame on you Mozilla developers and your "out of this world" "leaders" with less than half a brain!
2015-05-24 11:11:23	gdfdf5	You are traitors to all Open-Source-related! Shame on you Mozilla developers and your "out of this world" "leaders" with less than half a brain!You are traitors to all Open-Source-related! Shame on you Mozilla developers and your "out of this world" "leaders" with less than half a brain!You are traitors to all Open-Source-related! Shame on you Mozilla developers and your "out of this world" "leaders" with less than half a brain!
2015-05-24 11:11:25	gdfdf5	You are traitors to all Open-Source-related! Shame on you Mozilla developers and your "out of this world" "leaders" with less than half a brain!
2015-05-24 11:11:26	gdfdf5	You are traitors to all Open-Source-related! Shame on you Mozilla developers and your "out of this world" "leaders" with less than half a brain!You are traitors to all Open-Source-related! Shame on you Mozilla developers and your "out of this world" "leaders" with less than half a brain!You are traitors to all Open-Source-related! Shame on you Mozilla developers and your "out of this world" "leaders" with less than half a brain!You are traitors to all O
2015-05-24 11:11:30	<--	gdfdf5 (bzlandfill@moz-0n4.mq8.28.31.IP) has quit (RecvQ exceeded)
2015-05-24 11:11:34	<--	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has left #rust ("WeeChat 1.2")
2015-05-24 11:12:40	--	irc: disconnected from server
2015-05-24 11:12:47	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-24 11:12:47	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-24 11:12:47	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-24 11:12:48	--	Channel #rust: 968 nicks (13 ops, 0 halfops, 2 voices, 953 normals)
2015-05-24 11:12:49	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-24 11:12:53	--	Mode #rust [+b gdfdf5!*@*] by mbrubeck
2015-05-24 11:13:03	fredrik	wouldnt it be more effective banning *!* otherwise the same guy can just rejoin
2015-05-24 11:13:19	&Manishearth	I banned his IP
2015-05-24 11:13:31	Hannibal_Smith	You don't want to ban everybody fredrik :-P
2015-05-24 11:13:31	&mbrubeck	Bugzilla CGI:IRC User (bzlandfill@moz-0n4.mq8.28.31.IP)
2015-05-24 11:13:44	-->	nott (nott@moz-to4.06o.57.86.IP) has joined #rust
2015-05-24 11:13:45	&mbrubeck	I assume they're using some CGI gateway
2015-05-24 11:13:45	barometz	also when he can rejoin it becomes ban evasion which can be conveniently escalated 
2015-05-24 11:13:51	saati	they would just retrigger the flood protect
2015-05-24 11:13:55	saati	instantly
2015-05-24 11:13:58	<--	ethan_tqa (Mibbit@moz-a6v.a3k.212.218.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-24 11:14:10	saati	oh they came back, sorry, nevermind
2015-05-24 11:14:22	<--	mcoffee (mcoffee@moz-erlnm0.bchsia.telus.net) has quit (Quit: Leaving...)
2015-05-24 11:14:50	<--	dwrensha (chatzilla@moz-52ciq2.east.verizon.net) has quit (Ping timeout: 121 seconds)
2015-05-24 11:15:16	--	irc: disconnected from server
2015-05-24 11:15:39	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-24 11:15:39	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-24 11:15:39	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-24 11:15:40	--	Channel #rust: 965 nicks (13 ops, 0 halfops, 2 voices, 950 normals)
2015-05-24 11:15:41	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-24 11:15:43	-->	jbomo (dkd@moz-uol4mm.fios.verizon.net) has joined #rust
2015-05-24 11:16:18	-->	bombless (_@moz-uag.piv.41.59.IP) has joined #rust
2015-05-24 11:16:32	-->	Lilly (Lilly@moz-pfkvo9.bredband.comhem.se) has joined #rust
2015-05-24 11:16:47	-->	c_wraith (c_wraith@moz-7i8.v6v.191.131.IP) has joined #rust
2015-05-24 11:16:48	Blei	is there something like offsetof in the stdlib?
2015-05-24 11:17:02	<--	mib_vm0ljy (Mibbit@moz-h7adkg.dip0.t-ipconnect.de) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-24 11:17:34	-->	kidto_ (gabriel@moz-72d.fff.84.91.IP) has joined #rust
2015-05-24 11:18:14	--	wenderen is now known as ajnirp
2015-05-24 11:18:15	&Manishearth	Blei: I believe there's something about alignment in intrinsics?
2015-05-24 11:18:31	@steveklabnik	and we have a keyword reserved iirc
2015-05-24 11:18:37	@steveklabnik	playbot: offsetof
2015-05-24 11:18:37	--	Notice(playbot): <anon>:9:9: 9:17 error: `offsetof` is a reserved keyword
2015-05-24 11:18:38	--	Notice(playbot): <anon>:9         offsetof
2015-05-24 11:18:38	--	Notice(playbot): output truncated; full output at: http://bit.ly/1FN42Dy
2015-05-24 11:18:45	<--	areski (areski@moz-2lg0ha.user.ono.com) has quit (Ping timeout: 121 seconds)
2015-05-24 11:18:59	Blei	ah, there's size_of and align_of, but apparently no offset_of
2015-05-24 11:19:12	<--	ytain (ytain@moz-07c3h9.dsl.teksavvy.com) has quit (Quit: Textual IRC Client: www.textualapp.com)
2015-05-24 11:19:14	--	irc: disconnected from server
2015-05-24 11:19:53	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-24 11:19:53	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-24 11:19:53	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-24 11:19:53	--	Channel #rust: 966 nicks (13 ops, 0 halfops, 2 voices, 951 normals)
2015-05-24 11:19:54	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-24 11:20:05	-->	mib_jnetsv (Mibbit@moz-o5eg8b.bredband.comhem.se) has joined #rust
2015-05-24 11:20:30	<--	mark_edward (mark@moz-dg4mrp.in.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-24 11:24:23	axqd	hi, i'm trying the 'dining philosophers' problem in rust-lang book, but got the following errors, I think it is exactly the same code. any ideas why the type is not thread::JoinHandle as expected? Thanks. http://pastebin.com/FGsHqZk7
2015-05-24 11:24:23	<--	hjr3 (hradtke@moz-rga0be.ca.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2015-05-24 11:24:23	tomaka	wouldn't offsetof be better as a macro?
2015-05-24 11:24:23	estabroo	is there an easy way to combine Strings and get a String?  currently using string1.push_str(string2.as_ref()) and format!("{}{}", string1, string2) kinds of things
2015-05-24 11:24:23	tomaka	it is very easy to implement
2015-05-24 11:24:23	Blei	i think it even has to be one
2015-05-24 11:24:23	tomaka	estabroo: string1 + string2 should work
2015-05-24 11:24:23	-->	Rym (y@moz-c2u.sd4.38.217.IP) has joined #rust
2015-05-24 11:24:23	@steveklabnik	axqd:      }); <- that's your problem
2015-05-24 11:24:23	@steveklabnik	if you have a ; after thread::spawn
2015-05-24 11:24:23	<--	Tobba (Tobba@moz-o13d22.bredband.telia.com) has quit (Connection closed)
2015-05-24 11:24:23	-->	LuthL (bzlandfill@moz-kfa7us.donbass.com) has joined #rust
2015-05-24 11:24:23	@steveklabnik	it collects up (), rather than a handle
2015-05-24 11:24:23	@steveklabnik	hence your error
2015-05-24 11:24:23	LuthL	gavin asshole cocksucker Australis Chrome clone fucktard! You are traitors to all Open-Source-related! Shame on you Mozilla developers and your "out of this world" "leaders" with less than half a brain! Australis whores, Google Chrome clone fucktards! Rapists! Cucksuckers!gavin asshole cocksucker Australis Chrome clone fucktard! You are traitors to all Open-Source-related! Shame on you Mozilla developers and your "out of this world" "leaders" with less
2015-05-24 11:24:23	<--	CMCDragonkai (nobody@moz-v01.321.218.216.IP) has quit (Connection closed)
2015-05-24 11:24:23	estabroo	tomaka, when I tried that, + op expected the second item to be &str not String
2015-05-24 11:24:23	<--	eerie (eerie@moz-i6pant.red.bezeqint.net) has quit (Connection closed)
2015-05-24 11:24:23	LuthL	gavin asshole cocksucker Australis Chrome clone fucktard! You are traitors to all Open-Source-related! Shame on you Mozilla developers and your "out of this world" "leaders" with less than half a brain! Australis whores, Google Chrome clone fucktards! Rapists! Cucksuckers!
2015-05-24 11:24:23	--	Mode #rust [+b *!*@moz-kfa7us.donbass.com] by mbrubeck
2015-05-24 11:24:23	<--	mbrubeck has kicked LuthL ()
2015-05-24 11:24:23	-->	CMCDragonkai (nobody@moz-v01.321.218.216.IP) has joined #rust
2015-05-24 11:24:23	tomaka	estabroo: well, you can't do more efficient than pushing a &str
2015-05-24 11:24:23	<--	silven (quassel@moz-0roor3.priv.bahnhof.se) has quit (Ping timeout: 121 seconds)
2015-05-24 11:24:23	--	Mode #rust [+b *!bzlandfill@*] by mbrubeck
2015-05-24 11:24:23	--	irc: disconnected from server
2015-05-24 11:24:40	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-24 11:24:40	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-24 11:24:40	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-24 11:24:40	--	Channel #rust: 964 nicks (13 ops, 0 halfops, 2 voices, 949 normals)
2015-05-24 11:24:42	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-24 11:24:47	<--	kidto_ (gabriel@moz-72d.fff.84.91.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 11:24:49	-->	jeffasinger (jeff@moz-u5nog7.res.rr.com) has joined #rust
2015-05-24 11:25:09	<--	iliekturtles (mike@moz-c7hb0v.me.comcast.net) has quit (Quit: leaving)
2015-05-24 11:25:11	<--	Keao (Keao@moz-s7q.avq.31.27.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 11:26:30	-->	kidto_ (gabriel@moz-72d.fff.84.91.IP) has joined #rust
2015-05-24 11:26:46	<--	Rym (y@moz-c2u.sd4.38.217.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 11:26:46	-->	basicdays (basicdays@moz-vreeoj.cable.rcn.com) has joined #rust
2015-05-24 11:26:54	<--	iu (iu@moz-6263qv.cc.cmu.edu) has quit (Quit: )
2015-05-24 11:26:56	-->	bkoropoff (bkoropoff@moz-kthi5c.wa.comcast.net) has joined #rust
2015-05-24 11:27:29	<--	ptalbot (ptalbot@moz-j4gnuh.fbx.proxad.net) has quit (Ping timeout: 121 seconds)
2015-05-24 11:29:02	<--	kimwonyong (kimwonyong@moz-981.63m.38.118.IP) has quit (Connection closed)
2015-05-24 11:29:06	Blei	argh, foiled by alignment :P
2015-05-24 11:30:06	<--	tav (tav@moz-ivrq8h.range31-52.btcentralplus.com) has quit (Ping timeout: 121 seconds)
2015-05-24 11:30:35	Blei	sizeof(my_struct) is 140 in c++ and 144 in my hand-translated rust file. it turns out the original was compiled on x86 and I'm compiling on x64 and it contains a u64 which causes the struct to have differing alignment on 64bit
2015-05-24 11:30:35	-->	Zidane (Zidane@moz-382v9o.ca.comcast.net) has joined #rust
2015-05-24 11:30:48	<--	axqd (Mibbit@moz-q6bh5g.singnet.com.sg) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-24 11:31:55	<--	Zidane (Zidane@moz-382v9o.ca.comcast.net) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-05-24 11:32:07	-->	nodweber (nodweber@moz-knt.fgq.178.5.IP) has joined #rust
2015-05-24 11:33:12	meh	does #[cfg] have to be toplevel?
2015-05-24 11:33:14	WindowsBunny	Blei: yay alignment
2015-05-24 11:33:22	desophos	how can i get an iterator to return mutable references?
2015-05-24 11:33:23	@steveklabnik	meh: no
2015-05-24 11:33:25	--	zz_NameNotFound is now known as NameNotFound
2015-05-24 11:33:36	@steveklabnik	desophos: iter_mut() gives &muts
2015-05-24 11:33:41	meh	must be doing something wrong
2015-05-24 11:33:59	desophos	steveklabnik: thanks. couldn't find that in the docs
2015-05-24 11:34:08	-->	gleb (gleb@moz-3u1drv.rusanovka-net.kiev.ua) has joined #rust
2015-05-24 11:34:17	-->	kushal (kdas@moz-kmml9a.202.sitibroadband.in) has joined #rust
2015-05-24 11:34:18	meh	steveklabnik, http://sprunge.us/RcTZ something wrong with this?
2015-05-24 11:34:24	meh	says it expects and item after the attribute
2015-05-24 11:34:42	-->	csherratt (textual@moz-357qdq.cable.teksavvy.com) has joined #rust
2015-05-24 11:34:43	<--	bombless (_@moz-uag.piv.41.59.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 11:34:43	@steveklabnik	meh: oh, well yeah, you can only use cfg on items
2015-05-24 11:34:44	meh	should use cfg! probably
2015-05-24 11:34:46	--	Mode #rust [+b *!bzlandfill@moz-892.m03.82.88.IP] by Manishearth
2015-05-24 11:35:42	<--	kidto_ (gabriel@moz-72d.fff.84.91.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 11:36:38	<--	nodweber (nodweber@moz-knt.fgq.178.5.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 11:39:13	-->	eerie (eerie@moz-i6pant.red.bezeqint.net) has joined #rust
2015-05-24 11:39:38	-->	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has joined #rust
2015-05-24 11:40:15	<--	panicbit (panicbit@moz-rcvp1e.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2015-05-24 11:40:38	<--	rkruppe (chatzilla@moz-qsbik2.diu2.0rth.0908.2a02.IP) has quit (Quit: ChatZilla 0.9.91.1 [Firefox 38.0.1/20150513174244])
2015-05-24 11:40:51	-->	zrneely (Mibbit@moz-fnb.gl9.56.172.IP) has joined #rust
2015-05-24 11:41:03	<--	mayeko (mayeko@moz-ishpc0.ovr0.0mfe.0e35.2a01.IP) has quit (Connection closed)
2015-05-24 11:41:49	<--	Douman (Douman@moz-0rn9ec.dynamic.mts-nn.ru) has quit (Ping timeout: 121 seconds)
2015-05-24 11:42:43	meh	Copy makes the type automatically Send, right?
2015-05-24 11:43:07	zrneely	If I have a usize n, a mutable Vec<u8>, and a BufRead, how can I read the next n bytes into the vector? I've been having a lot of trouble with this. n could be large and is variable, so I can't use an array.
2015-05-24 11:43:10	-->	kidto_ (gabriel@moz-72d.fff.84.91.IP) has joined #rust
2015-05-24 11:43:30	-->	sommoyog_ (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has joined #rust
2015-05-24 11:43:40	<--	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has quit (Ping timeout: 121 seconds)
2015-05-24 11:44:29	comex	zrneely: reader.read(&mut vec[start..start+n])
2015-05-24 11:44:29	<--	sommoyog_ (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has quit (Connection closed)
2015-05-24 11:44:44	<--	pgonda (peter@moz-s36.0tp.134.75.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 11:45:02	-->	iliekturtles (mike@moz-c7hb0v.me.comcast.net) has joined #rust
2015-05-24 11:45:10	comex	oh, you want to append to the vector
2015-05-24 11:45:17	comex	reader.take(n).read_to_end(&mut vec)
2015-05-24 11:45:20	comex	i think
2015-05-24 11:45:23	zrneely	comex: nope, just fill it
2015-05-24 11:45:54	--	NameNotFound is now known as zz_NameNotFound
2015-05-24 11:45:55	-->	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has joined #rust
2015-05-24 11:45:56	zrneely	thanks! I was looking in the documentation for Read and BufRead and all over - I never thought about slices.
2015-05-24 11:45:59	-->	rust_newbie (Mibbit@moz-a3v.ibt.207.112.IP) has joined #rust
2015-05-24 11:48:02	-->	winding-lines (textual@moz-9utvl5.frokca.sbcglobal.net) has joined #rust
2015-05-24 11:48:56	<--	dinfuehr (dominik@moz-sh7u9l.highway.telekom.at) has quit (Client exited)
2015-05-24 11:49:19	<--	kidto_ (gabriel@moz-72d.fff.84.91.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 11:49:27	-->	xcombelle (xcombelle@moz-1frl96.abo.wanadoo.fr) has joined #rust
2015-05-24 11:50:48	-->	tarka (Mibbit@moz-sr5.slb.109.92.IP) has joined #rust
2015-05-24 11:50:52	-->	kimwonyong (kimwonyong@moz-981.63m.38.118.IP) has joined #rust
2015-05-24 11:50:54	<--	zrneely (Mibbit@moz-fnb.gl9.56.172.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-24 11:51:21	@Havvy	What's an idiomatic way of going from `Option<PathBuf> to Result<PathBuf, MyErrorType>` ?
2015-05-24 11:51:33	<--	iomu (iomu@moz-3hvipa.dip0.t-ipconnect.de) has quit (Connection closed)
2015-05-24 11:51:36	@Havvy	(Without resulting to a `match`)
2015-05-24 11:51:42	-->	zrneely (Mibbit@moz-fnb.gl9.56.172.IP) has joined #rust
2015-05-24 11:51:54	@steveklabnik	why without a match?
2015-05-24 11:52:10	-->	kidto_ (gabriel@moz-72d.fff.84.91.IP) has joined #rust
2015-05-24 11:52:11	<--	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has quit (Connection closed)
2015-05-24 11:52:16	&mbrubeck	Havvy: http://doc.rust-lang.org/std/option/enum.Option.html#method.ok_or
2015-05-24 11:52:22	<--	madmalik (uid13697@moz-lfin5p.brockwell.irccloud.com) has quit (Quit: Connection closed for inactivity)
2015-05-24 11:52:33	-->	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has joined #rust
2015-05-24 11:53:12	@Havvy	steveklabnik:  Because `match` is a low level primitive compared to what I'm doing.  (s/resulting/resorting in previous statement)
2015-05-24 11:53:19	@Havvy	mbrubeck:  Thanks
2015-05-24 11:53:57	@steveklabnik	yeah, maybe my confusion is that ok_or is just a match statement https://github.com/rust-lang/rust/blob/31e3cb7c4e8895fff23aa67e1cd6b58d798cdac4/src/libcore/option.rs#L482-L487
2015-05-24 11:54:21	&mbrubeck	I took it to mean "something shorter I can tack in the middle of a method chain"
2015-05-24 11:54:21	tarka	What's the best way to get the current process ID? Linux-specific is fine.
2015-05-24 11:55:07	@Havvy	steveklabnik:  Exactly. `ok_or` is built on top of the lower level primitive. ;)
2015-05-24 11:55:17	@Havvy	And what mbrubeck said.
2015-05-24 11:55:33	-->	dmac_ (dmac@moz-2ig65r.ca.comcast.net) has joined #rust
2015-05-24 11:55:48	&mbrubeck	tarka: You could use getpid from https://crates.io/crates/libc
2015-05-24 11:56:16	-->	dinfuehr (dinfuehr@moz-sh7u9l.highway.telekom.at) has joined #rust
2015-05-24 11:57:30	-->	mbudde (mbudde@moz-v8g.lim.109.2.IP) has joined #rust
2015-05-24 11:58:20	<--	kidto_ (gabriel@moz-72d.fff.84.91.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 11:58:40	-->	nham (nham@moz-lglsfe.il.comcast.net) has joined #rust
2015-05-24 11:59:03	<--	mib_jnetsv (Mibbit@moz-o5eg8b.bredband.comhem.se) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-24 11:59:10	<--	bfops (uid58242@moz-e5u6m0.charlton.irccloud.com) has quit (Quit: Connection closed for inactivity)
2015-05-24 11:59:40	<--	dmac_ (dmac@moz-2ig65r.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-24 11:59:42	killercu_	steveklabnik: just wanted to let you know i rewrote https://github.com/killercup/trpl-ebook in rust, only dep is regex. could help if you wanted to move it in-tree at some point
2015-05-24 11:59:43	<--	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has quit (Connection closed)
2015-05-24 11:59:51	@steveklabnik	oh yeah that'd be awesome
2015-05-24 12:00:08	tarka	mbrubeck: Thanks!
2015-05-24 12:00:23	<--	dinfuehr (dinfuehr@moz-sh7u9l.highway.telekom.at) has quit (Ping timeout: 121 seconds)
2015-05-24 12:00:55	@Havvy	killercu_++
2015-05-24 12:00:56	-->	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has joined #rust
2015-05-24 12:01:36	--	zz_NameNotFound is now known as NameNotFound
2015-05-24 12:01:37	<--	sternmull (kringel@moz-vdai01.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2015-05-24 12:02:35	<--	johnsoft (johnsoft@moz-69mrig.res.rr.com) has quit (Ping timeout: 121 seconds)
2015-05-24 12:03:01	-->	johnsoft (johnsoft@moz-69mrig.res.rr.com) has joined #rust
2015-05-24 12:03:09	<--	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-24 12:04:27	<--	bytetrip (bytetrip@moz-v7l26k.bc.googleusercontent.com) has quit (Quit: WeeChat 1.0.1)
2015-05-24 12:05:16	<--	acgtyrant (acgtyrant@moz-3kd.b79.160.124.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 12:05:39	<--	winding-lines (textual@moz-9utvl5.frokca.sbcglobal.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-24 12:05:42	<--	meh (meh@moz-qcq.1lf.174.213.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 12:05:54	-->	decaf (mehmet@moz-b05.st2.229.88.IP) has joined #rust
2015-05-24 12:08:33	-->	lyc (lyc@moz-jft.nr8.226.207.IP) has joined #rust
2015-05-24 12:09:01	<--	Jesin (Jesin@moz-48mne2.nsvltn.sbcglobal.net) has quit (Quit: Leaving)
2015-05-24 12:09:11	-->	eerie_ (eerie@moz-i6pant.red.bezeqint.net) has joined #rust
2015-05-24 12:11:45	<--	bkoropoff (bkoropoff@moz-kthi5c.wa.comcast.net) has quit (Client exited)
2015-05-24 12:12:18	<--	eerie (eerie@moz-i6pant.red.bezeqint.net) has quit (Ping timeout: 121 seconds)
2015-05-24 12:12:31	<--	decaf (mehmet@moz-b05.st2.229.88.IP) has quit (Quit: Leaving)
2015-05-24 12:12:36	<--	lyc (lyc@moz-jft.nr8.226.207.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 12:13:06	-->	kgrandon (Adium@moz-jqh0ek.fios.verizon.net) has joined #rust
2015-05-24 12:13:11	<--	ajhager (aajhager@moz-3jp3vb.bltnin.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-24 12:13:59	<--	kgrandon (Adium@moz-jqh0ek.fios.verizon.net) has quit (Quit: Leaving.)
2015-05-24 12:14:10	-->	ajhager (aajhager@moz-3jp3vb.bltnin.sbcglobal.net) has joined #rust
2015-05-24 12:15:18	<--	eerie_ (eerie@moz-i6pant.red.bezeqint.net) has quit (Connection closed)
2015-05-24 12:16:18	-->	Rym (y@moz-c2u.sd4.38.217.IP) has joined #rust
2015-05-24 12:17:02	-->	Guest67_ (textual@moz-j4v.h3a.97.74.IP) has joined #rust
2015-05-24 12:17:20	harrisonclarke	is there a trait or something for converting from a literal? like, if i want to make a i128 type, and have integer literals work like they do for the built in int types?
2015-05-24 12:17:34	<--	Guest67 (textual@moz-gfs9v0.fios.verizon.net) has quit (Connection closed)
2015-05-24 12:17:46	<--	thiblahute_ (tsaunier@moz-68f5rr.rev.sfr.net) has quit (Ping timeout: 121 seconds)
2015-05-24 12:18:53	-->	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has joined #rust
2015-05-24 12:19:39	<--	nadirs (nadirs@moz-g80ull.retail.telecomitalia.it) has quit (Quit: leaving)
2015-05-24 12:19:51	-->	ryanhiebert (ryanhiebert@moz-nsd5kl.ks.cox.net) has joined #rust
2015-05-24 12:20:54	<--	Rym (y@moz-c2u.sd4.38.217.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 12:20:54	<--	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has quit (Connection closed)
2015-05-24 12:21:10	<--	joeyjoej1ejr (jbdietrich@moz-jvm432.ne.charter.com) has quit (Ping timeout: 121 seconds)
2015-05-24 12:21:20	-->	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has joined #rust
2015-05-24 12:21:36	-->	th4t (toasty@moz-k30in7.dip0.t-ipconnect.de) has joined #rust
2015-05-24 12:21:40	<--	joeyjoejoejr (jbdietrich@moz-jvm432.ne.charter.com) has quit (Ping timeout: 121 seconds)
2015-05-24 12:22:15	-->	dgrunwald (Daniel@moz-qibrho.hsi4.kabel-badenwuerttemberg.de) has joined #rust
2015-05-24 12:22:51	<--	thisismetesting (thisismetes@moz-g71vrk.gvt.net.br) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-05-24 12:22:55	<--	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has quit (Connection closed)
2015-05-24 12:22:58	-->	thisismetesting (thisismetes@moz-qial6m.gvt.net.br) has joined #rust
2015-05-24 12:23:44	-->	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has joined #rust
2015-05-24 12:23:54	-->	Rym (y@moz-c2u.sd4.38.217.IP) has joined #rust
2015-05-24 12:24:29	delma_	harrisonclarke: http://doc.rust-lang.org/num/num/
2015-05-24 12:25:06	delma_	There is trait FromPrimitive and ToPrimitive for that
2015-05-24 12:25:54	eddyb	harrisonclarke: there is no custom literals, sorry
2015-05-24 12:26:09	eddyb	harrisonclarke: there isn't even a way to be generic over types which can be represented with literals
2015-05-24 12:26:30	delma_	ah read the question wrong xD
2015-05-24 12:26:35	delma_	^
2015-05-24 12:27:18	<--	copycat (Thunderbird@moz-mm4e60.singnet.com.sg) has quit (Ping timeout: 121 seconds)
2015-05-24 12:28:04	<--	Halamix2 (Halamix2@moz-7rvoh1.syrion.pl) has quit (Quit: Generic goodbye message)
2015-05-24 12:28:22	delma_	Is there a way to be generic over trait object and generics? I would like the user of my api to able to decide what thet want to use
2015-05-24 12:28:26	delma_	(propably not=
2015-05-24 12:28:28	<--	Rym (y@moz-c2u.sd4.38.217.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 12:28:29	delma_	)*
2015-05-24 12:29:00	bluss	delma_: yes if the trait object implements the trait itself
2015-05-24 12:29:17	bluss	delma_: for example you can pass &mut FnMut where a generic F: FnMut is expected
2015-05-24 12:29:41	delma_	ah
2015-05-24 12:29:42	delma_	nicew
2015-05-24 12:30:00	bluss	Read / Write and Iterator should have similar possibilities
2015-05-24 12:30:17	<--	aldeka (quassel@moz-qqf.of6.243.162.IP) has quit (Connection closed)
2015-05-24 12:30:18	-->	aldeka (quassel@moz-qqf.of6.243.162.IP) has joined #rust
2015-05-24 12:30:37	-->	meh (meh@moz-5b2553.42-151.net24.it) has joined #rust
2015-05-24 12:30:38	-->	FrozenCow (FrozenCow@moz-i2tvv4.chello.nl) has joined #rust
2015-05-24 12:30:47	<--	csherratt (textual@moz-357qdq.cable.teksavvy.com) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-24 12:30:50	<--	nicknikolov (nicknikolov@moz-0q4.2rm.211.90.IP) has quit (Connection closed)
2015-05-24 12:31:03	-->	mib_z3erxy (Mibbit@moz-g77l04.ca.comcast.net) has joined #rust
2015-05-24 12:31:09	-->	DerisiveLogic (smuxi@moz-g93io6.res.rr.com) has joined #rust
2015-05-24 12:31:11	-->	nicknikolov (nicknikolov@moz-0q4.2rm.211.90.IP) has joined #rust
2015-05-24 12:31:36	<--	Wild_Cat (Max@moz-fa8mvt.dsl.teksavvy.com) has quit (Ping timeout: 121 seconds)
2015-05-24 12:32:08	-->	hohoho (hohoho@moz-o79jn4.pools.vodafone-ip.de) has joined #rust
2015-05-24 12:32:08	<--	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has quit (Connection closed)
2015-05-24 12:32:12	-->	csherratt (textual@moz-357qdq.cable.teksavvy.com) has joined #rust
2015-05-24 12:32:27	-->	Jesin (Jesin@moz-48mne2.nsvltn.sbcglobal.net) has joined #rust
2015-05-24 12:32:54	<--	ryanhiebert (ryanhiebert@moz-nsd5kl.ks.cox.net) has quit (Ping timeout: 121 seconds)
2015-05-24 12:33:05	-->	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has joined #rust
2015-05-24 12:33:26	-->	nickniko_ (nicknikolov@moz-0q4.2rm.211.90.IP) has joined #rust
2015-05-24 12:33:27	<--	nicknikolov (nicknikolov@moz-0q4.2rm.211.90.IP) has quit (Connection closed)
2015-05-24 12:33:31	<--	mib_z3erxy (Mibbit@moz-g77l04.ca.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-24 12:35:02	delma_	It's just that if you don't annotate the type when calling function it seems that rust is unable to infer it...
2015-05-24 12:35:37	bluss	depends. deref coercions don't happen just in order to match a trait
2015-05-24 12:35:57	delma_	I just want to contain Rng in my struct...
2015-05-24 12:36:02	meh	do I always have to tell the compiler that I might want a function inlined or can it figure it out itself?
2015-05-24 12:36:18	<--	th4t (toasty@moz-k30in7.dip0.t-ipconnect.de) has left #rust
2015-05-24 12:36:24	meh	for instance one-line functions
2015-05-24 12:36:40	bluss	meh: depends. Inside a crate it can figure out itself
2015-05-24 12:36:45	meh	bluss, cool
2015-05-24 12:37:05	meh	bluss, http://sprunge.us/YYiP?rust it's this
2015-05-24 12:37:13	<--	csherratt (textual@moz-357qdq.cable.teksavvy.com) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-24 12:37:40	bluss	meh: all generic things are exported as uncompiled code too in a crate. so those are available to inline cross-crate by themselves
2015-05-24 12:38:03	bluss	but nongeneric public functions or methods need #[inline] to be emitted in the crate data
2015-05-24 12:38:16	meh	bluss, cool, thanks
2015-05-24 12:38:49	bluss	meh: if I understand correctly you don't need any attributes on your functions
2015-05-24 12:38:57	<--	rust_newbie (Mibbit@moz-a3v.ibt.207.112.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-24 12:39:10	meh	bluss, I do, format and device are only exported when the cfg is on
2015-05-24 12:39:24	meh	erm, not exported, compile
2015-05-24 12:39:35	meh	I mean, the `mod format` and `mod device` are only when the cfg is on
2015-05-24 12:39:42	bluss	but I've often had something simple like something like pub fn zero() -> usize { 0 }  and forgot to mark it #[inline]
2015-05-24 12:39:48	bluss	meh: oh I just meant inline attributes
2015-05-24 12:39:56	meh	ooh, okay then :D
2015-05-24 12:39:57	-->	kidto_ (gabriel@moz-72d.fff.84.91.IP) has joined #rust
2015-05-24 12:40:04	-->	SiegeLord (sl@moz-9jtaei.ca.comcast.net) has joined #rust
2015-05-24 12:40:56	-->	Rym (y@moz-c2u.sd4.38.217.IP) has joined #rust
2015-05-24 12:41:14	--	bvssvni_ is now known as bvssvni
2015-05-24 12:41:26	<--	mindtree (Mitch@moz-rlmfmi.iprimus.net.au) has quit (Quit: leaving)
2015-05-24 12:41:41	<--	johnsoft (johnsoft@moz-69mrig.res.rr.com) has quit (Ping timeout: 121 seconds)
2015-05-24 12:42:00	-->	wilma (Mibbit@moz-ncp531.fios.verizon.net) has joined #rust
2015-05-24 12:42:00	<--	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has quit (Connection closed)
2015-05-24 12:42:02	<--	wilma (Mibbit@moz-ncp531.fios.verizon.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-24 12:42:11	-->	johnsoft (johnsoft@moz-69mrig.res.rr.com) has joined #rust
2015-05-24 12:42:30	<--	zrneely (Mibbit@moz-fnb.gl9.56.172.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-24 12:42:39	-->	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has joined #rust
2015-05-24 12:43:09	<--	Morten (Morten@moz-15vhm0.bb.online.no) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-05-24 12:43:11	<--	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has quit (Connection closed)
2015-05-24 12:43:28	-->	Morten (Morten@moz-15vhm0.bb.online.no) has joined #rust
2015-05-24 12:43:57	Morten	Is it not possible to add comments to assert_eq!() ?
2015-05-24 12:44:04	<--	mirek (mirek@moz-teb.mhc.122.189.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 12:44:10	-->	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has joined #rust
2015-05-24 12:44:33	Morten	Like assert!("Error: should be true", 1 == 1);
2015-05-24 12:44:49	<--	errordeveloper (ilya@moz-385.mbh.200.90.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 12:45:01	-->	tamird (textual@moz-gg3hct.res.rr.com) has joined #rust
2015-05-24 12:45:39	-->	bkoropoff (bkoropoff@moz-kthi5c.wa.comcast.net) has joined #rust
2015-05-24 12:46:06	<--	kidto_ (gabriel@moz-72d.fff.84.91.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 12:46:07	<--	rmdashrf (rmdashrf@moz-ecr.kjm.54.128.IP) has quit (Quit: WeeChat 0.4.2)
2015-05-24 12:47:02	-->	d356 (d@moz-go99rq.res.bhn.net) has joined #rust
2015-05-24 12:47:02	--	NameNotFound is now known as zz_NameNotFound
2015-05-24 12:47:08	<--	d356 (d@moz-go99rq.res.bhn.net) has quit (Client exited)
2015-05-24 12:47:14	--	Mode #rust [-b *!bzlandfill@moz-892.m03.82.88.IP] by Havvy
2015-05-24 12:47:27	--	Mode #rust [-b *!bzlandfill@moz-0n4.mq8.28.31.IP] by Havvy
2015-05-24 12:47:41	--	Mode #rust [-b Erwin1!*@*] by Havvy
2015-05-24 12:48:07	--	Mode #rust [-b massyy!*@*] by Havvy
2015-05-24 12:49:45	<--	vosen (vosen@moz-mtm1g4.dynamic.chello.pl) has quit (Ping timeout: 121 seconds)
2015-05-24 12:50:08	-->	ril (ril@moz-p7jr3k.ca.comcast.net) has joined #rust
2015-05-24 12:50:32	-->	Diggsey (diggsey@moz-97o4tk.dsl.pipex.com) has joined #rust
2015-05-24 12:50:36	--	ril is now known as ril[away]
2015-05-24 12:50:39	--	ril[away] is now known as ril
2015-05-24 12:50:48	--	zz_kimundi is now known as kimundi
2015-05-24 12:51:43	<--	tilde (namidasshu@moz-kfnfp2.retail.telecomitalia.it) has quit (Quit: Leaving)
2015-05-24 12:53:01	delma_	Like why rust cannot infer type in this: https://play.rust-lang.org/?gist=51d26695c1c072aafd16&version=stable
2015-05-24 12:53:36	-->	FallingAlways (FallingTime@moz-ruksei.cable.rogers.com) has joined #rust
2015-05-24 12:54:28	-->	eschatite (eschatite@moz-95cjjj.res.rr.com) has joined #rust
2015-05-24 12:54:32	bluss	delma_: you have two type parameters, R and RR
2015-05-24 12:54:51	bluss	delma_: RR is inferred from the argument rand, but R is undeterminable
2015-05-24 12:54:52	-->	villev (chatzilla@moz-lemqa0.elisa-laajakaista.fi) has joined #rust
2015-05-24 12:55:21	bluss	delma_: I'm talking only about lines 8 to 12.
2015-05-24 12:55:24	delma_	....
2015-05-24 12:56:16	delma_	dunno what I have been thinking
2015-05-24 12:56:17	-->	dmac_ (dmac@moz-2ig65r.ca.comcast.net) has joined #rust
2015-05-24 12:56:21	-->	agjacome (agjacome@moz-acoq63.dynamic.jazztel.es) has joined #rust
2015-05-24 12:56:26	delma_	propably nothing
2015-05-24 12:56:29	<--	AlwaysFalling (FallingTime@moz-ruksei.cable.rogers.com) has quit (Ping timeout: 121 seconds)
2015-05-24 12:56:49	-->	errordeveloper (ilya@moz-41f.3sd.204.90.IP) has joined #rust
2015-05-24 12:57:15	-->	ryanhiebert (ryanhiebert@moz-nsd5kl.ks.cox.net) has joined #rust
2015-05-24 12:57:36	-->	dinfuehr (dinfuehr@moz-sh7u9l.highway.telekom.at) has joined #rust
2015-05-24 12:57:57	Remram	Hmm, the correct way to get coverage reports from Rust code seems to be kcov
2015-05-24 12:58:14	Remram	however kcov fails on my machine with "Error: Cannot open linux-vdso.so.1" does that mean anything to anyone?
2015-05-24 13:00:25	<--	dmac_ (dmac@moz-2ig65r.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-24 13:00:29	<--	eschatite (eschatite@moz-95cjjj.res.rr.com) has quit (Ping timeout: 121 seconds)
2015-05-24 13:00:52	-->	Astrum|Lap (Astrum|Lap@moz-skcefh.co.comcast.net) has joined #rust
2015-05-24 13:01:27	<--	bkoropoff (bkoropoff@moz-kthi5c.wa.comcast.net) has quit (Client exited)
2015-05-24 13:01:42	<--	dinfuehr (dinfuehr@moz-sh7u9l.highway.telekom.at) has quit (Ping timeout: 121 seconds)
2015-05-24 13:02:41	-->	tomprogrammer (thomas@moz-i2g8m6.tr5r.qept.4dd0.2001.IP) has joined #rust
2015-05-24 13:02:46	<--	Ms2ger (Ms2ger@moz-rlr.63c.182.91.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 13:03:10	<--	ajhager (aajhager@moz-3jp3vb.bltnin.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-24 13:03:21	-->	bkoropoff (bkoropoff@moz-kthi5c.wa.comcast.net) has joined #rust
2015-05-24 13:03:22	-->	loyd (loyd@moz-ce6.cua.228.94.IP) has joined #rust
2015-05-24 13:03:40	-->	brain (brain@moz-ake53i.rcsntx.sbcglobal.net) has joined #rust
2015-05-24 13:04:18	<--	harrisonclarke (harrisoncla@moz-oprktf.ns.bellaliant.net) has quit (Connection closed)
2015-05-24 13:04:24	-->	grant (grant@moz-jfh.0nq.187.64.IP) has joined #rust
2015-05-24 13:04:57	-->	peferron (peferron@moz-k89vq8.ca.comcast.net) has joined #rust
2015-05-24 13:05:18	-->	Porkepix (Porkepix@moz-g50t2v.abo.wanadoo.fr) has joined #rust
2015-05-24 13:06:21	<--	munksgaa1d (munksgaard@moz-urnkl5.u.parknet.dk) has quit (Ping timeout: 121 seconds)
2015-05-24 13:06:47	liamfraser	Remram: do you need to compile it?
2015-05-24 13:06:54	<--	Astrum|Lap (Astrum|Lap@moz-skcefh.co.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-24 13:07:04	-->	yota (sdouche@moz-9atnlv.3iqc.r856.0e35.2a01.IP) has joined #rust
2015-05-24 13:07:14	liamfraser	The linux-vdso.so.1 is a "library" that is injected into every process by the kernel
2015-05-24 13:07:22	-->	lucian (lucian@moz-2c3pda.cable.virginm.net) has joined #rust
2015-05-24 13:07:35	liamfraser	http://www.trilithium.com/johan/2005/08/linux-gate/
2015-05-24 13:08:24	-->	munksgaard (munksgaard@moz-urnkl5.u.parknet.dk) has joined #rust
2015-05-24 13:08:25	<--	agjacome (agjacome@moz-acoq63.dynamic.jazztel.es) has quit (Quit: leaving)
2015-05-24 13:08:46	-->	jviereck (Adium@moz-pqri8u.dclient.hispeed.ch) has joined #rust
2015-05-24 13:09:05	<--	xcombelle (xcombelle@moz-1frl96.abo.wanadoo.fr) has quit (Ping timeout: 121 seconds)
2015-05-24 13:09:17	-->	lyc (lyc@moz-jft.nr8.226.207.IP) has joined #rust
2015-05-24 13:10:06	geofft	yeah, analysis programs should basically ignore linux-vdso / linux-gate 
2015-05-24 13:10:13	--	bvssvni is now known as bvssvni_
2015-05-24 13:11:24	<--	lucian (lucian@moz-2c3pda.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2015-05-24 13:11:36	geofft	so, how do the "you can't nest std::rt::unwind::try" and "you must catch panics at FFI boundaries" rules interact? 
2015-05-24 13:11:38	delma_	Does cargo run doc tests inside crate? Because if I: extern crate mycrate; use mycrate::Struct;
2015-05-24 13:11:57	delma_	It says that: did you mean self::Struct
2015-05-24 13:12:22	geofft	what should I do in an extern callback passed to C that might panic? 
2015-05-24 13:12:47	<--	mbudde (mbudde@moz-v8g.lim.109.2.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 13:13:10	geofft	letting unwinding pass through C seems wrong, but so does nesting my own unwind::try() inside lang_start's 
2015-05-24 13:13:19	<--	lyc (lyc@moz-jft.nr8.226.207.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 13:13:43	-->	brendan (brendaneich@moz-049eb4.rqq6.9eok.1010.2600.IP) has joined #rust
2015-05-24 13:14:19	-->	anthgur (textual@moz-3j5pq7.hfc.comcastbusiness.net) has joined #rust
2015-05-24 13:14:41	-->	mbudde (mbudde@moz-v8g.lim.109.2.IP) has joined #rust
2015-05-24 13:14:43	bluss	geofft: It's unclear to me
2015-05-24 13:14:45	<--	psd (psd@moz-k9m1pq.mtnl.net.in) has quit (Connection closed)
2015-05-24 13:15:00	bluss	geofft: there's an open issue on std::thread::catch_panic which basically relates to this
2015-05-24 13:15:17	bluss	well it's about when it's safe to call and not
2015-05-24 13:15:26	-->	veqz (veqz@moz-rr3tu7.60.getinternet.no) has joined #rust
2015-05-24 13:15:50	geofft	hrm 
2015-05-24 13:16:00	-->	eerie (eerie@moz-i6pant.red.bezeqint.net) has joined #rust
2015-05-24 13:16:04	bluss	delma_: yes it does. you don't need to put extern crate in an example
2015-05-24 13:16:10	<--	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-24 13:16:12	<--	k1000 (k1000@moz-bodlln.ip-198-50-149.net) has quit (Ping timeout: 121 seconds)
2015-05-24 13:16:24	<--	kimwonyong (kimwonyong@moz-981.63m.38.118.IP) has quit (Quit: )
2015-05-24 13:16:29	bluss	delma_: I want to call it a compile/run checked code example. The main purpose is documentation (a good example), not testing
2015-05-24 13:16:47	geofft	bluss: what's the issue there, TLS as a unit might be in a not-invariant-holding state on panic, and catch_panic uses tls? 
2015-05-24 13:16:57	<--	eerie (eerie@moz-i6pant.red.bezeqint.net) has quit (Connection closed)
2015-05-24 13:16:59	-->	eerie (eerie@moz-i6pant.red.bezeqint.net) has joined #rust
2015-05-24 13:17:22	-->	Stebalien (Stebalien@moz-arevrd.tmodns.net) has joined #rust
2015-05-24 13:18:20	-->	nodweber (nodweber@moz-knt.fgq.178.5.IP) has joined #rust
2015-05-24 13:18:23	bluss	geofft: I don't know it
2015-05-24 13:18:44	geofft	you commented on it :P (assuming we're talking about gh25662) 
2015-05-24 13:18:47	bluss	since I asked on the issue I should probably get to work on that
2015-05-24 13:18:48	<--	mbudde (mbudde@moz-v8g.lim.109.2.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 13:18:48	<--	filsmick_ (filsmick@moz-0svev4.abo.wanadoo.fr) has quit (Quit: )
2015-05-24 13:18:50	bluss	yeah
2015-05-24 13:19:03	geofft	also, rt::try's comment "Unwinding twice can lead to resource leaks where some destructors are not run." seems a bit confusing 
2015-05-24 13:19:06	bluss	the others supplied the knowledge and mentioned type invariants
2015-05-24 13:19:09	ubeatlenine	I'm having trouble understanding the borrow checker. Why am I not allowed to assign to x in this simple example? http://is.gd/snKWDl
2015-05-24 13:19:12	<--	brendan (brendaneich@moz-049eb4.rqq6.9eok.1010.2600.IP) has quit (Client exited)
2015-05-24 13:19:20	bluss	I just commented that BinaryHeap was mem unsafe in such a situation
2015-05-24 13:19:21	-->	Zidane (Zidane@moz-382v9o.ca.comcast.net) has joined #rust
2015-05-24 13:19:26	geofft	wasn't the conclusion of destructorgate that destructors not running is totally fine (in weird cases) and not even close to unsafe? 
2015-05-24 13:20:03	bluss	geofft: I'm talking about the first time thread::scoped was changed for soundness issues
2015-05-24 13:20:10	bluss	the leak issue was the second time
2015-05-24 13:20:25	bluss	first version of thread::scoped allowed catching panics
2015-05-24 13:20:28	Levans	ubeatlenine: y is an immutable borrow of x, so x cannot be mutated as log as y exists
2015-05-24 13:20:42	geofft	oh huh 
2015-05-24 13:21:01	geofft	ubeatlenine: try `&mut x` instead of `&x` 
2015-05-24 13:21:02	-->	Astrum|Lap (Astrum|Lap@moz-skcefh.co.comcast.net) has joined #rust
2015-05-24 13:21:06	<--	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has quit (Connection closed)
2015-05-24 13:21:10	<--	Zidane (Zidane@moz-382v9o.ca.comcast.net) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-05-24 13:21:31	Levans	geofft: this won't make x any more mutable, as y will still be a reference to it
2015-05-24 13:21:35	-->	lutter1 (lutter@moz-7v7ueu.PUBLIC.monkeybrains.net) has joined #rust
2015-05-24 13:21:38	-->	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has joined #rust
2015-05-24 13:21:47	geofft	oh, read too fast 
2015-05-24 13:22:03	Levans	^^
2015-05-24 13:22:32	<--	nodweber (nodweber@moz-knt.fgq.178.5.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 13:22:44	-->	k1000 (k1000@moz-bodlln.ip-198-50-149.net) has joined #rust
2015-05-24 13:22:49	<--	jincreator (Thunderbird@moz-588.igi.7.59.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 13:22:53	-->	bytewise (bytewise@moz-mkh5h4.hsi16.unitymediagroup.de) has joined #rust
2015-05-24 13:23:37	ubeatlenine	Levans: so is the idea that if x and y were unsynced, there could be a data race where y read while x was writing?
2015-05-24 13:24:07	<--	eerie (eerie@moz-i6pant.red.bezeqint.net) has quit (Connection closed)
2015-05-24 13:24:29	-->	panicbit (panicbit@moz-rcvp1e.dip0.t-ipconnect.de) has joined #rust
2015-05-24 13:25:20	Levans	ubeatlenine: it's not only about data races
2015-05-24 13:25:57	<--	silven (quassel@moz-0roor3.priv.bahnhof.se) has quit (Ping timeout: 121 seconds)
2015-05-24 13:25:59	DemonOne	https://rust.godbolt.org/ is pretty damn cool
2015-05-24 13:26:01	-->	Kornel (Kornel@moz-l20jk6.81.in-addr.arpa) has joined #rust
2015-05-24 13:26:23	-->	silven (quassel@moz-0roor3.priv.bahnhof.se) has joined #rust
2015-05-24 13:26:25	Levans	ubeatlenine: when you hold a reference to something, you are guaranteed it won't be modified by something else as long as you hold the reference (expect for special types with interior mutability, but they are still guaranteed to be in a state coherent with their API)
2015-05-24 13:26:35	Levans	except *
2015-05-24 13:26:49	Kornel	Rustaceans! I'm stuck - I need variable-length arrays, but Rust doesn't have them, and borrow checker gets in the way of other ideas that I have: http://stackoverflow.com/questions/30423786/how-to-convert-c-variable-length-array-code-to-rust
2015-05-24 13:26:56	-->	jmbto (jmbto@moz-q4m8bu.hca5.8frp.0e35.2a01.IP) has joined #rust
2015-05-24 13:27:30	Remram	liamfraser: I know
2015-05-24 13:27:44	<--	kaeluka (kaeluka@moz-tn3lqd.cust.bredbandsbolaget.se) has quit (Client exited)
2015-05-24 13:28:39	-->	kaeluka (kaeluka@moz-tn3lqd.cust.bredbandsbolaget.se) has joined #rust
2015-05-24 13:29:09	-->	nicoch (nicoch@moz-g02d7k.be) has joined #rust
2015-05-24 13:29:29	geofft	Kornel: my first thought is, if you know that tmp is at most 4 elements, make an array on the stack (or a Vec) of 4 elements and let tmp be a mutable slice of it of the right size 
2015-05-24 13:29:44	<--	dirvine (dirvine@moz-42j0at.cable.virginm.net) has quit (Quit: leaving)
2015-05-24 13:31:05	Kornel	geofft: but how do I initialize such array? I've tried for i in 0..channels { tmp[i] = &mut img.chan[i]… }; but these borrows don't outlive the loop!
2015-05-24 13:31:05	<--	Quanttek (quassel@moz-25k96c.6fkd.dvrb.8108.2a02.IP) has quit (Connection closed)
2015-05-24 13:31:12	-->	dirvine (dirvine@moz-42j0at.cable.virginm.net) has joined #rust
2015-05-24 13:31:15	-->	eerie (eerie@moz-i6pant.red.bezeqint.net) has joined #rust
2015-05-24 13:31:27	Kornel	geofft: and I've tried tmp.map(), but Rust can't map on an array
2015-05-24 13:31:50	<--	nott (nott@moz-to4.06o.57.86.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 13:32:28	-->	ygrek (user@moz-8j9aeu.org.ua) has joined #rust
2015-05-24 13:32:38	<--	ray (ray@moz-8m8.t3f.66.59.IP) has quit (Connection closed)
2015-05-24 13:32:54	-->	Quanttek (quassel@moz-25k96c.6fkd.dvrb.8108.2a02.IP) has joined #rust
2015-05-24 13:32:57	bluss	geofft: ok, I found a segfault!
2015-05-24 13:33:00	bluss	geofft: :-)
2015-05-24 13:34:24	delma_	bluss: problem seems that because I extern rand crate it doesn't extern my crate automatically
2015-05-24 13:34:26	delma_	:/
2015-05-24 13:34:43	-->	gandalf (zbraniecki@moz-cp7c4m.ca.comcast.net) has joined #rust
2015-05-24 13:35:14	panicbit	Why is position_elem/rposition_elem marked unstable?
2015-05-24 13:37:15	-->	harrisonclarke (harrisoncla@moz-th044a.ns.bellaliant.net) has joined #rust
2015-05-24 13:37:58	<--	jmbto (jmbto@moz-q4m8bu.hca5.8frp.0e35.2a01.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 13:38:48	<--	summerlight_ (summerlight@moz-99k.2mj.130.121.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 13:38:50	<--	bytewise (bytewise@moz-mkh5h4.hsi16.unitymediagroup.de) has quit (Quit: Quit)
2015-05-24 13:39:28	<--	Eonil (Eonil@moz-h8e.ibn.59.113.IP) has quit (Quit: This computer has gone to sleep)
2015-05-24 13:39:30	<--	cakecatz (cakecatz@moz-edrvuc.sannet.ne.jp) has quit (Quit: Textual IRC Client: www.textualapp.com)
2015-05-24 13:39:48	bluss	panicbit: might be no reason, or didn't have time to go over stabilization yet
2015-05-24 13:39:57	-->	yoshi (Mibbit@moz-fnb.gl9.56.172.IP) has joined #rust
2015-05-24 13:40:29	-->	dcb (textual@moz-j72nfe.ca.comcast.net) has joined #rust
2015-05-24 13:40:54	yoshi	What is the null closure? That takes no arguments and returns ()? I tried || -> () but it says it's expecting a "{"
2015-05-24 13:40:58	<--	dcb (textual@moz-j72nfe.ca.comcast.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-24 13:41:05	-->	dcb (textual@moz-j72nfe.ca.comcast.net) has joined #rust
2015-05-24 13:41:08	-->	agjacome (agjacome@moz-acoq63.dynamic.jazztel.es) has joined #rust
2015-05-24 13:41:11	bluss	yoshi: just || should work I think
2015-05-24 13:41:20	bluss	let null_closure = ||;
2015-05-24 13:41:40	-->	cakecatz (cakecatz@moz-edrvuc.sannet.ne.jp) has joined #rust
2015-05-24 13:41:44	bluss	apparently not
2015-05-24 13:41:45	<--	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has quit (Connection closed)
2015-05-24 13:41:48	bluss	playbot: let null_closure = ||{}; null_closure()
2015-05-24 13:41:49	--	Notice(playbot): ()
2015-05-24 13:41:59	<--	nstoddard (nstoddard@moz-u5oeum.jcf6.2eo7.0009.2601.IP) has quit (Quit: ChatZilla 0.9.91.1 [Firefox 38.0.1/20150513174244])
2015-05-24 13:42:11	-->	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has joined #rust
2015-05-24 13:42:11	yoshi	Thanks!
2015-05-24 13:42:18	heftig	playbot: || ()
2015-05-24 13:42:20	--	Notice(playbot): output truncated; full output at: http://bit.ly/1IXugSO
2015-05-24 13:42:21	<--	ygrek (user@moz-8j9aeu.org.ua) has quit (A record packet with illegal version was received.)
2015-05-24 13:42:33	-->	ygrek (user@moz-8j9aeu.org.ua) has joined #rust
2015-05-24 13:42:36	-->	lucian (lucian@moz-2c3pda.cable.virginm.net) has joined #rust
2015-05-24 13:42:36	bluss	yoshi: writing out the result type is optional in labmda expressions
2015-05-24 13:42:41	bluss	playbot: let null_closure = || -> () {}; null_closure()
2015-05-24 13:42:43	--	Notice(playbot): ()
2015-05-24 13:42:50	<--	lucian (lucian@moz-2c3pda.cable.virginm.net) has quit (Quit: Leaving...)
2015-05-24 13:42:54	heftig	playbot: let a = ||(); a()
2015-05-24 13:42:55	--	Notice(playbot): ()
2015-05-24 13:43:01	-->	SpaceManiac (Tad@moz-g50q8a.dyn.suddenlink.net) has joined #rust
2015-05-24 13:43:07	<--	nicoch (nicoch@moz-g02d7k.be) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-24 13:44:13	geofft	writing out the result type if it's () is optional everywhere, right? 
2015-05-24 13:44:22	yoshi	When do you need the "->"?
2015-05-24 13:44:37	geofft	fn main() {} is fn main() -> () {}, FnOnce(i32) is FnOnce(i32) -> (), etc. 
2015-05-24 13:44:44	geofft	when you're returning something other than () 
2015-05-24 13:45:04	<--	SiegeLord (sl@moz-9jtaei.ca.comcast.net) has quit (Quit: It's a joke, it's all a joke.)
2015-05-24 13:45:04	-->	ogham (rally@moz-85h.edm.199.138.IP) has joined #rust
2015-05-24 13:45:28	heftig	playbot: let a = || 3; a()
2015-05-24 13:45:29	--	Notice(playbot): 3
2015-05-24 13:45:34	heftig	geofft: nope
2015-05-24 13:45:35	geofft	Kornel: hm, apparently the lack of Copy on &mut [f32] makes my clever idea not work (I was throwing Option in) 
2015-05-24 13:45:36	<--	peferron (peferron@moz-k89vq8.ca.comcast.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-24 13:45:48	geofft	heftig: oh, did not realize that got inferred 
2015-05-24 13:46:00	-->	eerie_ (eerie@moz-i6pant.red.bezeqint.net) has joined #rust
2015-05-24 13:46:37	-->	tormoz (geov@moz-3q6.afp.124.178.IP) has joined #rust
2015-05-24 13:46:39	yoshi	Slightly related: if I have an array of functions, is there a way to quickly fill it with null functions until they are replaced later? FnMut doesn't have Copy (as geofft said)
2015-05-24 13:46:39	-->	tyler569 (tyler@moz-j21k4h.dyn.optonline.net) has joined #rust
2015-05-24 13:46:43	-->	csherratt (textual@moz-357qdq.cable.teksavvy.com) has joined #rust
2015-05-24 13:47:00	<--	Morten (Morten@moz-15vhm0.bb.online.no) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-05-24 13:47:02	--	zz_NameNotFound is now known as NameNotFound
2015-05-24 13:47:14	-->	Morten (Morten@moz-1bovh0.bb.online.no) has joined #rust
2015-05-24 13:48:19	<--	anthgur (textual@moz-3j5pq7.hfc.comcastbusiness.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-24 13:48:26	-->	nicoch (nicoch@moz-g02d7k.be) has joined #rust
2015-05-24 13:48:30	-->	nott (nott@moz-to4.06o.57.86.IP) has joined #rust
2015-05-24 13:49:11	-->	cjwelborn (cjwelborn@moz-np6hed.al.charter.com) has joined #rust
2015-05-24 13:49:12	-->	peferron (peferron@moz-k89vq8.ca.comcast.net) has joined #rust
2015-05-24 13:49:15	<--	csherratt (textual@moz-357qdq.cable.teksavvy.com) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-24 13:49:17	<--	eerie (eerie@moz-i6pant.red.bezeqint.net) has quit (Ping timeout: 121 seconds)
2015-05-24 13:49:30	-->	xcombelle (xcombelle@moz-1frl96.abo.wanadoo.fr) has joined #rust
2015-05-24 13:49:31	-->	betawaffle (betawaffle@moz-n1t5l2.compute-1.amazonaws.com) has joined #rust
2015-05-24 13:50:53	<--	peferron (peferron@moz-k89vq8.ca.comcast.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-24 13:50:55	betawaffle	is it possible to "move" a value to a new thread's stack when spawning it?
2015-05-24 13:51:21	<--	spider-mario (spidermario@moz-coblcf.fbx.proxad.net) has quit (Ping timeout: 121 seconds)
2015-05-24 13:51:26	@Havvy	With `box` syntax yes, but that's not in stable Rust yet.
2015-05-24 13:51:33	<--	thiblahute (tsaunier@moz-68f5rr.rev.sfr.net) has quit (Ping timeout: 121 seconds)
2015-05-24 13:51:41	liamfraser	yoshi: use Option<Function>?
2015-05-24 13:51:56	<--	Morten (Morten@moz-1bovh0.bb.online.no) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-05-24 13:52:13	bluss	betawaffle: you know the move keyword?
2015-05-24 13:52:26	betawaffle	does this `box` syntax involve it being placed on the heap first?
2015-05-24 13:52:41	@Havvy	betawaffle:  `box` is Rust's name for `placement new`.
2015-05-24 13:52:42	-->	Morten (Morten@moz-1bovh0.bb.online.no) has joined #rust
2015-05-24 13:53:06	bluss	yoshi: don't know if you ever need -> on the lambda expression. never happened to me
2015-05-24 13:53:10	-->	curmet (Mibbit@moz-h7adkg.dip0.t-ipconnect.de) has joined #rust
2015-05-24 13:53:27	-->	anthgur (textual@moz-3j5pq7.hfc.comcastbusiness.net) has joined #rust
2015-05-24 13:53:44	meh	is there some builtin thing to convert a c_int to a bool?
2015-05-24 13:53:49	betawaffle	where can i read about the `box` syntax?
2015-05-24 13:53:52	bluss	yoshi: don't know a simple way. What's the element type of the array?
2015-05-24 13:53:55	meh	or something that handles truthiness for FFI stuff
2015-05-24 13:54:31	meh	betawaffle, http://doc.rust-lang.org/nightly/book/box-syntax-and-patterns.html
2015-05-24 13:54:48	FreeFull	meh: "your_c_int == 0"
2015-05-24 13:54:56	FreeFull	Actually, != 0
2015-05-24 13:55:10	meh	FreeFull, thanks, I just realized how retarded the question was, especially since I've been doing that everywhere else
2015-05-24 13:55:15	meh	◕ ◡ ◔ 
2015-05-24 13:55:25	bluss	FreeFull: hehe don't give the helper function people such good arguments!
2015-05-24 13:55:40	-->	csherratt (textual@moz-357qdq.cable.teksavvy.com) has joined #rust
2015-05-24 13:55:53	<--	Cork (Cork@moz-rmmud5.priv.bahnhof.se) has quit (Quit: .)
2015-05-24 13:55:53	<--	ygrek (user@moz-8j9aeu.org.ua) has quit (A record packet with illegal version was received.)
2015-05-24 13:56:02	<--	anthgur (textual@moz-3j5pq7.hfc.comcastbusiness.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-24 13:56:06	-->	ygrek (user@moz-8j9aeu.org.ua) has joined #rust
2015-05-24 13:57:05	-->	dmac_ (dmac@moz-2ig65r.ca.comcast.net) has joined #rust
2015-05-24 13:57:12	<--	Slava_I (slava@moz-tia.hi8.135.31.IP) has quit (Connection closed)
2015-05-24 13:57:15	-->	Slava_I (slava@moz-tia.hi8.135.31.IP) has joined #rust
2015-05-24 13:57:16	-->	mars (Mibbit@moz-o5eg8b.bredband.comhem.se) has joined #rust
2015-05-24 13:57:25	<--	eerie_ (eerie@moz-i6pant.red.bezeqint.net) has quit (Connection closed)
2015-05-24 13:57:27	-->	seamus (seamus@moz-bns6pi.members.linode.com) has joined #rust
2015-05-24 13:57:51	-->	fabianvf (fabianvf@moz-fjqmui.va.comcast.net) has joined #rust
2015-05-24 13:57:57	FreeFull	bluss: =P
2015-05-24 13:58:02	<--	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has quit (Connection closed)
2015-05-24 13:58:06	betawaffle	i'm trying to get around declaring my trait 'static, but I don't know that actually makes sense
2015-05-24 13:58:13	<--	ygrek (user@moz-8j9aeu.org.ua) has quit (A record packet with illegal version was received.)
2015-05-24 13:58:25	-->	ygrek (user@moz-8j9aeu.org.ua) has joined #rust
2015-05-24 13:58:33	-->	dinfuehr (dinfuehr@moz-sh7u9l.highway.telekom.at) has joined #rust
2015-05-24 13:58:57	-->	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has joined #rust
2015-05-24 13:58:58	bluss	betawaffle: what is it you're trying to do?
2015-05-24 13:59:14	bluss	betawaffle: the trait object can have a 'static bound instead of the trait having it
2015-05-24 13:59:34	betawaffle	make a trait for something that can be run from a different thread
2015-05-24 13:59:35	<--	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has quit (Connection closed)
2015-05-24 14:00:09	-->	markstory (textual@moz-tb3ghu.cable.rogers.com) has joined #rust
2015-05-24 14:00:09	mars	If one has a reference to an iterator it, what's an idiomatic way to skip the next n elements? Is there any more elegant solution than a for loop invoking it.next() ?
2015-05-24 14:00:10	<--	seamus (seamus@moz-bns6pi.members.linode.com) has quit (Quit: leaving)
2015-05-24 14:00:29	bluss	mars: you can use .skip()?
2015-05-24 14:00:37	<--	markstory (textual@moz-tb3ghu.cable.rogers.com) has quit (Quit: Textual IRC Client: www.textualapp.com)
2015-05-24 14:00:47	-->	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has joined #rust
2015-05-24 14:00:49	bluss	mars: you can also use .by_ref().take(n).count();  to kill of n elements
2015-05-24 14:00:55	bluss	*off
2015-05-24 14:01:02	mars	hmm... so you mean it = it.skip(5) ?
2015-05-24 14:01:12	<--	dmac_ (dmac@moz-2ig65r.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-24 14:01:13	<--	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has quit (Connection closed)
2015-05-24 14:01:17	-->	jawzi (jawzi@moz-0tl5mf.sc.comcast.net) has joined #rust
2015-05-24 14:01:28	-->	SkyEye (gaveen@moz-239.4dt.157.175.IP) has joined #rust
2015-05-24 14:01:31	--	NameNotFound is now known as zz_NameNotFound
2015-05-24 14:01:34	-->	nstoddard (nstoddard@moz-iu69ov.jcf6.2eo7.0009.2601.IP) has joined #rust
2015-05-24 14:01:42	bluss	let it_ = it.skip(5) in that case since it returns a new adaptor
2015-05-24 14:01:45	bluss	with a new type
2015-05-24 14:01:55	-->	seamus (seamus@moz-bns6pi.members.linode.com) has joined #rust
2015-05-24 14:01:59	betawaffle	bluss: im kinda trying to work my way up to actors, learning about rust along the way
2015-05-24 14:02:08	<--	ygrek (user@moz-8j9aeu.org.ua) has quit (A record packet with illegal version was received.)
2015-05-24 14:02:18	gleb	bluss: `let it = something else` is also valid
2015-05-24 14:02:21	-->	ygrek (user@moz-8j9aeu.org.ua) has joined #rust
2015-05-24 14:02:24	-->	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has joined #rust
2015-05-24 14:02:38	-->	Dekker (Dekker@moz-qc61ff.tbcn.telia.com) has joined #rust
2015-05-24 14:02:39	<--	dinfuehr (dinfuehr@moz-sh7u9l.highway.telekom.at) has quit (Ping timeout: 121 seconds)
2015-05-24 14:02:40	bluss	gleb: sure but I thought a new name would make the explanation clearer
2015-05-24 14:02:45	gleb	mars: or just it.skip(5).the_next_thing_you_wanted_to_do()
2015-05-24 14:02:58	<--	yoshi (Mibbit@moz-fnb.gl9.56.172.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-24 14:03:25	<--	curmet (Mibbit@moz-h7adkg.dip0.t-ipconnect.de) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-24 14:03:25	<--	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has quit (Connection closed)
2015-05-24 14:03:28	-->	peferron (peferron@moz-k89vq8.ca.comcast.net) has joined #rust
2015-05-24 14:03:40	bluss	betawaffle: if you want to avoid 'static you need scoped threads which are still in design stage basically
2015-05-24 14:03:49	<--	gaveen (gaveen@moz-c18.kq1.157.175.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 14:04:00	-->	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has joined #rust
2015-05-24 14:04:29	-->	Halamix2 (Halamix2@moz-7rvoh1.syrion.pl) has joined #rust
2015-05-24 14:04:37	betawaffle	ok, so, what limitations does 'static really put on me? perhaps I don't *need* to avoid 'static
2015-05-24 14:04:45	<--	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has quit (Connection closed)
2015-05-24 14:05:01	<--	peferron (peferron@moz-k89vq8.ca.comcast.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-24 14:05:03	mars	gleb: I'm not sure I follow, but perhaps that solution just doesn't fit my use case very well.
2015-05-24 14:05:28	<--	dcb (textual@moz-j72nfe.ca.comcast.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-24 14:05:31	-->	dcb (textual@moz-j72nfe.ca.comcast.net) has joined #rust
2015-05-24 14:05:31	-->	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has joined #rust
2015-05-24 14:05:35	-->	peferron (peferron@moz-k89vq8.ca.comcast.net) has joined #rust
2015-05-24 14:05:51	gleb	mars: I just wanted to emphasize composability
2015-05-24 14:06:14	<--	ygrek (user@moz-8j9aeu.org.ua) has quit (A record packet with illegal version was received.)
2015-05-24 14:06:26	-->	ygrek (user@moz-8j9aeu.org.ua) has joined #rust
2015-05-24 14:07:08	gleb	betawaffle: the struct that implements the trait can't hold references or any types that do
2015-05-24 14:07:25	mars	I guess it.by_ref().take(n).count() would work, but perhaps a simple for loop will be most clear after all.
2015-05-24 14:07:28	<--	Nextra (Nextra@moz-ghdeuq.ewe-ip-backbone.de) has quit (Connection closed)
2015-05-24 14:07:53	-->	dwrensha (chatzilla@moz-52ciq2.east.verizon.net) has joined #rust
2015-05-24 14:08:01	gleb	mars: sorry, I missed that you only have a reference
2015-05-24 14:08:09	-->	zzing (textual@moz-jucm1n.cpe.distributel.net) has joined #rust
2015-05-24 14:08:20	<--	Slava_I (slava@moz-tia.hi8.135.31.IP) has quit (Connection closed)
2015-05-24 14:08:29	<--	veqz (veqz@moz-rr3tu7.60.getinternet.no) has quit (Ping timeout: 121 seconds)
2015-05-24 14:08:40	-->	Nextra (Nextra@moz-ghdeuq.ewe-ip-backbone.de) has joined #rust
2015-05-24 14:09:17	bluss	mars: the .count() thing just to drain that iterator is a bit unclear maybe. But it's probably the most common way to do it
2015-05-24 14:09:31	posix4e	solodon4/Mach7 · GitHub (https://github.com/solodon4/Mach7)
2015-05-24 14:09:46	posix4e	Pattern matching In c++
2015-05-24 14:10:03	-->	lyc (lyc@moz-jft.nr8.226.207.IP) has joined #rust
2015-05-24 14:10:07	Hannibal_Smith	posix4e, not something new
2015-05-24 14:10:18	<--	nott (nott@moz-to4.06o.57.86.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 14:10:18	mars	bluss: yes. I had just hoped that there'd be some other function with a name that more clearly indicated that it's just a drain.
2015-05-24 14:10:42	Hannibal_Smith	I don't know why only now it was linked to sites like reddit
2015-05-24 14:11:14	bluss	mars: hm there is .dropn(n) in itertools for this use case. It had .drain() but removed it due to semi name clash with drain in libstd
2015-05-24 14:11:32	<--	ahunt (ahunt@moz-2obh4g.cam.ac.uk) has quit (Quit: Leaving)
2015-05-24 14:11:49	<--	Morten (Morten@moz-1bovh0.bb.online.no) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-05-24 14:11:52	<--	godlikesme (godlikesme@moz-2a2.dsd.174.79.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 14:12:36	-->	andresv (textual@moz-cmffkg.cable.starman.ee) has joined #rust
2015-05-24 14:13:14	<--	harrisonclarke (harrisoncla@moz-th044a.ns.bellaliant.net) has quit (Connection closed)
2015-05-24 14:13:16	<--	gandalf (zbraniecki@moz-cp7c4m.ca.comcast.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-24 14:13:17	<--	jviereck (Adium@moz-pqri8u.dclient.hispeed.ch) has quit (Quit: Leaving.)
2015-05-24 14:13:18	mars	bluss: great. Seems exactly like I want. Was no biggie in either case - I just wondered what the idiomatic solution was.
2015-05-24 14:13:52	-->	Slava_I (slava@moz-tia.hi8.135.31.IP) has joined #rust
2015-05-24 14:14:05	<--	lyc (lyc@moz-jft.nr8.226.207.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 14:15:50	-->	godlikesme (godlikesme@moz-2a2.dsd.174.79.IP) has joined #rust
2015-05-24 14:16:04	<--	egrep (egrep@moz-vqao7u.org) has quit (Quit: Error -38: Black hole has swalled this client.)
2015-05-24 14:16:15	-->	egrep (egrep@moz-vqao7u.org) has joined #rust
2015-05-24 14:16:39	<--	ril (ril@moz-p7jr3k.ca.comcast.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-24 14:17:56	<--	Rym (y@moz-c2u.sd4.38.217.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 14:18:04	-->	Morten (Morten@moz-h1823n.bb.online.no) has joined #rust
2015-05-24 14:19:06	-->	dstrbad (dstrbad@moz-n16907.dsl.iskon.hr) has joined #rust
2015-05-24 14:19:17	-->	gandalf (zbraniecki@moz-cp7c4m.ca.comcast.net) has joined #rust
2015-05-24 14:19:30	-->	harrisonclarke (harrisoncla@moz-uur7pt.eastlink.ca) has joined #rust
2015-05-24 14:20:57	<--	kushal (kdas@moz-kmml9a.202.sitibroadband.in) has quit (Ping timeout: 121 seconds)
2015-05-24 14:21:46	--	irc: disconnected from server
2015-05-24 14:21:57	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-24 14:21:57	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-24 14:21:57	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-24 14:21:58	--	Channel #rust: 966 nicks (13 ops, 0 halfops, 2 voices, 951 normals)
2015-05-24 14:21:59	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-24 14:22:02	cjwelborn	excuse me, I don't really know anyone that writes Rust. I was hoping to get a code review for a ~300 line program I wrote, just to see if any major or minor flaws/smells jump out at you: https://github.com/welbornprod/phonewords/blob/dev/src/main.rs  ..it's the only way I can know if I'm on the right track.
2015-05-24 14:22:10	--	kimundi is now known as zz_kimundi
2015-05-24 14:22:19	<--	ygrek (user@moz-8j9aeu.org.ua) has quit (A record packet with illegal version was received.)
2015-05-24 14:22:31	-->	ygrek (user@moz-8j9aeu.org.ua) has joined #rust
2015-05-24 14:22:36	-->	tav (tav@moz-ivrq8h.range31-52.btcentralplus.com) has joined #rust
2015-05-24 14:22:59	-->	vosen (vosen@moz-mtm1g4.dynamic.chello.pl) has joined #rust
2015-05-24 14:23:04	<--	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has quit (Connection closed)
2015-05-24 14:23:07	<--	ygrek (user@moz-8j9aeu.org.ua) has quit (A record packet with illegal version was received.)
2015-05-24 14:23:09	-->	Matthias247 (Miranda@moz-49li60.hsi14.kabel-badenwuerttemberg.de) has joined #rust
2015-05-24 14:23:18	<--	jawzi (jawzi@moz-0tl5mf.sc.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-24 14:23:19	-->	ygrek (user@moz-8j9aeu.org.ua) has joined #rust
2015-05-24 14:23:47	<--	ygrek (user@moz-8j9aeu.org.ua) has quit (A record packet with illegal version was received.)
2015-05-24 14:23:51	tomprogrammer	cjwelborn: I would make VERSIONSTR a const
2015-05-24 14:23:59	-->	ygrek (user@moz-8j9aeu.org.ua) has joined #rust
2015-05-24 14:24:00	-->	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has joined #rust
2015-05-24 14:24:44	cjwelborn	tomprogrammer: noted, thanks. I hadn't even thought about that (not much of a C or C++ programmer either).
2015-05-24 14:25:51	<--	ygrek (user@moz-8j9aeu.org.ua) has quit (A record packet with illegal version was received.)
2015-05-24 14:26:03	-->	ygrek (user@moz-8j9aeu.org.ua) has joined #rust
2015-05-24 14:26:31	tomprogrammer	cjwelborn: In line 40, let mut quiet = false; is enough.
2015-05-24 14:26:33	@Havvy	Anybody know how I can do this?  `Iter<io::Result<PathBuf>> -> io::Result<Iter<PathBuf>>`
2015-05-24 14:26:36	<--	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has quit (Connection closed)
2015-05-24 14:26:48	<--	ogham (rally@moz-85h.edm.199.138.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 14:26:53	<--	Hannibal_Smith (nico@moz-7gi1c3.retail.telecomitalia.it) has quit (Quit: Leaving)
2015-05-24 14:26:58	<--	ygrek (user@moz-8j9aeu.org.ua) has quit (A record packet with illegal version was received.)
2015-05-24 14:27:11	-->	ygrek (user@moz-8j9aeu.org.ua) has joined #rust
2015-05-24 14:27:22	cjwelborn	tomprogrammer: ahh, the unnecessary type hint. got it.
2015-05-24 14:27:41	-->	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has joined #rust
2015-05-24 14:27:48	-->	Cork (Cork@moz-rmmud5.priv.bahnhof.se) has joined #rust
2015-05-24 14:27:49	-->	_Vi (vi@moz-bbs.vhj.131.104.IP) has joined #rust
2015-05-24 14:27:52	<--	ygrek (user@moz-8j9aeu.org.ua) has quit (A record packet with illegal version was received.)
2015-05-24 14:28:04	-->	ygrek (user@moz-8j9aeu.org.ua) has joined #rust
2015-05-24 14:28:04	heftig	cjwelborn: Vec is already a boxed vector
2015-05-24 14:28:14	<--	dstrbad (dstrbad@moz-n16907.dsl.iskon.hr) has quit (A TLS packet with unexpected length was received.)
2015-05-24 14:28:45	cjwelborn	heftig:so there's no reason for me to box it? it will already be on the heap?
2015-05-24 14:28:48	<--	errordeveloper (ilya@moz-41f.3sd.204.90.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 14:28:58	bluss	heftig: you can't do that, but you can collect inside the Result
2015-05-24 14:29:02	bluss	Havvy: ^
2015-05-24 14:29:07	heftig	cjwelborn: yes
2015-05-24 14:29:16	cjwelborn	heftig: very good to know. thank you.
2015-05-24 14:29:34	-->	eerie (eerie@moz-i6pant.red.bezeqint.net) has joined #rust
2015-05-24 14:30:14	<--	ygrek (user@moz-8j9aeu.org.ua) has quit (A record packet with illegal version was received.)
2015-05-24 14:30:14	<--	Cork (Cork@moz-rmmud5.priv.bahnhof.se) has quit (Connection closed)
2015-05-24 14:30:18	bluss	Havvy: -> `Result<Vec<PathBuf>, _>` is fine (collect implements this, crazy!)
2015-05-24 14:30:26	-->	ygrek (user@moz-8j9aeu.org.ua) has joined #rust
2015-05-24 14:30:30	bluss	Havvy: see also std::result::fold
2015-05-24 14:30:32	<--	ygrek (user@moz-8j9aeu.org.ua) has quit (A record packet with illegal version was received.)
2015-05-24 14:30:40	heftig	cjwelborn: Vec itself is a pointer to the data, a length, and a capacity
2015-05-24 14:30:44	-->	ygrek (user@moz-8j9aeu.org.ua) has joined #rust
2015-05-24 14:31:02	<--	ellinokon (ellinokon@moz-gh5.r2h.62.178.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-24 14:31:05	-->	Guest (textual@moz-rtn.fg7.77.192.IP) has joined #rust
2015-05-24 14:31:05	-->	ellinokon (ellinokon@moz-gh5.r2h.62.178.IP) has joined #rust
2015-05-24 14:31:06	-->	Hannibal_Smith (nico@moz-7gi1c3.retail.telecomitalia.it) has joined #rust
2015-05-24 14:31:12	bluss	all Vec values have the same size_of (3 x usize)
2015-05-24 14:31:26	@Havvy	bluss:  Yeah, Vecs would work just as well. I'll try.
2015-05-24 14:31:51	<--	andresv (textual@moz-cmffkg.cable.starman.ee) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-24 14:31:58	-->	andresv (textual@moz-cmffkg.cable.starman.ee) has joined #rust
2015-05-24 14:32:03	<--	andresv (textual@moz-cmffkg.cable.starman.ee) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-24 14:32:04	-->	Rym (y@moz-c2u.sd4.38.217.IP) has joined #rust
2015-05-24 14:32:57	--	irc: disconnected from server
2015-05-24 14:33:08	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-24 14:33:08	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-24 14:33:08	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-24 14:33:09	--	Channel #rust: 967 nicks (13 ops, 0 halfops, 2 voices, 952 normals)
2015-05-24 14:33:10	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-24 14:33:20	-->	ygrek (user@moz-8j9aeu.org.ua) has joined #rust
2015-05-24 14:33:51	<--	waguan (waguan@moz-grk6nt.swbr.surewest.net) has quit (Connection closed)
2015-05-24 14:34:10	-->	Cork (Cork@moz-rmmud5.priv.bahnhof.se) has joined #rust
2015-05-24 14:34:23	tomprogrammer	cjwelborn: In get_combos I see no IO operation. I would use a custom error struct/enum there.
2015-05-24 14:35:46	<--	ygrek (user@moz-8j9aeu.org.ua) has quit (A record packet with illegal version was received.)
2015-05-24 14:35:58	-->	ygrek (user@moz-8j9aeu.org.ua) has joined #rust
2015-05-24 14:36:01	<--	munksgaard (munksgaard@moz-urnkl5.u.parknet.dk) has quit (Ping timeout: 121 seconds)
2015-05-24 14:36:02	<--	ygrek (user@moz-8j9aeu.org.ua) has quit (A record packet with illegal version was received.)
2015-05-24 14:36:11	-->	rustyrazorblade (rustyrazorb@moz-ehrfqf.fios.verizon.net) has joined #rust
2015-05-24 14:36:14	-->	ygrek (user@moz-8j9aeu.org.ua) has joined #rust
2015-05-24 14:36:50	-->	errordeveloper (ilya@moz-41f.3sd.204.90.IP) has joined #rust
2015-05-24 14:37:44	<--	GrecKo (GrecKo@moz-la97mq.fr) has quit (Ping timeout: 121 seconds)
2015-05-24 14:38:28	cjwelborn	tomprogrammer: i see what you mean. I could refactor to use `try!`, which would also mean less lines in that area. I was being lazy reusing the io error. I will have to make my own. I don't fully understand how to make my own simple error type (with a custom error message). I need to read more on that.
2015-05-24 14:39:22	<--	vmx (vmx@moz-v5li2v.pools.vodafone-ip.de) has quit (Quit: Leaving)
2015-05-24 14:39:25	<--	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has quit (Connection closed)
2015-05-24 14:40:06	-->	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has joined #rust
2015-05-24 14:40:31	<--	Lilly (Lilly@moz-pfkvo9.bredband.comhem.se) has quit (Quit: bajs)
2015-05-24 14:40:34	<--	ygrek (user@moz-8j9aeu.org.ua) has quit (A record packet with illegal version was received.)
2015-05-24 14:40:46	-->	ygrek (user@moz-8j9aeu.org.ua) has joined #rust
2015-05-24 14:41:41	-->	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has joined #rust
2015-05-24 14:42:36	<--	tyler569 (tyler@moz-j21k4h.dyn.optonline.net) has quit (Ping timeout: 121 seconds)
2015-05-24 14:42:41	grant	Is there an idiomatic way to wrap a Result in an io::Result? In Haskell I’d do something like make an EitherIO monad transformer or something
2015-05-24 14:42:49	<--	ygrek (user@moz-8j9aeu.org.ua) has quit (A record packet with illegal version was received.)
2015-05-24 14:43:01	-->	ygrek (user@moz-8j9aeu.org.ua) has joined #rust
2015-05-24 14:43:21	<--	ygrek (user@moz-8j9aeu.org.ua) has quit (A record packet with illegal version was received.)
2015-05-24 14:43:33	-->	ygrek (user@moz-8j9aeu.org.ua) has joined #rust
2015-05-24 14:43:48	-->	kushal (kdas@moz-kmml9a.202.sitibroadband.in) has joined #rust
2015-05-24 14:43:55	<--	mars (Mibbit@moz-o5eg8b.bredband.comhem.se) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-24 14:44:06	<--	ruukasu (ruukasu@moz-obsv1c.res.rr.com) has quit (Ping timeout: 121 seconds)
2015-05-24 14:45:28	-->	veqz (veqz@moz-rr3tu7.60.getinternet.no) has joined #rust
2015-05-24 14:45:31	-->	swgillespie (swgillespie@moz-rn1.vmq.232.104.IP) has joined #rust
2015-05-24 14:46:19	-->	munksgaard (munksgaard@moz-478pev.u.parknet.dk) has joined #rust
2015-05-24 14:46:33	-->	spider-mario (spidermario@moz-coblcf.fbx.proxad.net) has joined #rust
2015-05-24 14:46:40	-->	gopar (gopar@moz-5039uj.ca.comcast.net) has joined #rust
2015-05-24 14:47:07	mrmonday	grant: what do you mean exactly?
2015-05-24 14:47:39	grant	mrmonday: I’m inside a function that returns type io::Result<Result<T, E>>
2015-05-24 14:47:40	mrmonday	io::Result is simply a Result<T, io::Error>
2015-05-24 14:47:59	mrmonday	oh, I see
2015-05-24 14:48:00	grant	I guess what I’m looking for is some double-layered try!
2015-05-24 14:48:23	<--	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has quit (Ping timeout: 121 seconds)
2015-05-24 14:48:28	grant	If the inner-result is Err, I want to return Ok(inner_err)
2015-05-24 14:48:39	grant	If the IO result is Err, I want to pass it along (what try! does)
2015-05-24 14:48:54	--	Shados_ is now known as Shados
2015-05-24 14:49:00	-->	Palmik (palmik@moz-7pku2p.net.upcbroadband.cz) has joined #rust
2015-05-24 14:49:14	mrmonday	I'd probably just use a match statement for it
2015-05-24 14:49:58	grant	Yeah that’s more or less what I did. Was wondering if there was a macro for it.
2015-05-24 14:50:13	-->	areski (areski@moz-2lg0ha.user.ono.com) has joined #rust
2015-05-24 14:50:17	<--	Sho (sho@moz-17131k.cust.telecolumbus.net) has quit (A TLS packet with unexpected length was received.)
2015-05-24 14:50:46	<--	Hannibal_Smith (nico@moz-7gi1c3.retail.telecomitalia.it) has quit (Quit: Leaving)
2015-05-24 14:50:49	mrmonday	there's a load of methods in Result which might be of use, I've never looked into them all that much though
2015-05-24 14:51:05	mrmonday	one of them/a combination of them probably does what you want
2015-05-24 14:52:08	--	irc: disconnected from server
2015-05-24 14:52:25	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-24 14:52:25	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-24 14:52:25	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-24 14:52:25	--	Channel #rust: 969 nicks (13 ops, 0 halfops, 2 voices, 954 normals)
2015-05-24 14:52:27	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-24 14:52:36	-->	madmalik (uid13697@moz-lfin5p.brockwell.irccloud.com) has joined #rust
2015-05-24 14:52:46	Blei	is there a version of CStr::from_ptr which supports specifying a max size?
2015-05-24 14:53:23	--	zz_NameNotFound is now known as NameNotFound
2015-05-24 14:54:25	--	irc: disconnected from server
2015-05-24 14:54:37	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-24 14:54:37	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2015-05-24 14:54:37	--	Topic set by huon (huon@moz-hj272o.8rnv.rggd.6180.2400.IP) on Sat, 16 May 2015 02:15:51
2015-05-24 14:54:37	--	Channel #rust: 969 nicks (13 ops, 0 halfops, 2 voices, 954 normals)
2015-05-24 14:54:38	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-24 14:55:25	-->	ril (ril@moz-p7jr3k.ca.comcast.net) has joined #rust
2015-05-24 14:55:30	-->	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has joined #rust
2015-05-24 14:55:41	<--	hhhhhhhhhh (mike@moz-44gc7d.as13285.net) has quit (Quit: WeeChat 1.2)
2015-05-24 14:56:09	<--	trigen (MSX@moz-sgda69.static.versatel.nl) has quit (Connection closed)
2015-05-24 14:56:39	-->	Rym_ (y@moz-c2u.sd4.38.217.IP) has joined #rust
2015-05-24 14:56:55	mrmonday	Blei: you should be able to roll your own fairly simply - you can see the source code for from_ptr here: http://doc.rust-lang.org/src/std/ffi/c_str.rs.html#285
2015-05-24 14:57:14	<--	Rym (y@moz-c2u.sd4.38.217.IP) has quit (Connection closed)
2015-05-24 14:57:30	<--	kushal (kdas@moz-kmml9a.202.sitibroadband.in) has quit (Quit: Leaving)
2015-05-24 14:57:38	Blei	mrmonday: hmm, I might try that, thanks
2015-05-24 14:57:50	-->	dmac_ (dmac@moz-2ig65r.ca.comcast.net) has joined #rust
2015-05-24 14:57:55	<--	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has quit (Connection closed)
2015-05-24 14:58:42	<--	ygrek (user@moz-8j9aeu.org.ua) has quit (Ping timeout: 121 seconds)
2015-05-24 14:58:51	-->	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has joined #rust
2015-05-24 14:58:54	-->	ELD (textual@moz-tbcsac.co.comcast.net) has joined #rust
2015-05-24 14:59:28	-->	dinfuehr (dinfuehr@moz-sh7u9l.highway.telekom.at) has joined #rust
2015-05-24 14:59:33	-->	eerie_ (eerie@moz-i6pant.red.bezeqint.net) has joined #rust
2015-05-24 15:01:19	<--	jophish (jophish@moz-fjh8o1.gotadsl.co.uk) has quit (Connection closed)
2015-05-24 15:01:57	<--	dmac_ (dmac@moz-2ig65r.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-24 15:02:14	-->	kazimuth (james@moz-tms.f4o.251.50.IP) has joined #rust
2015-05-24 15:02:34	-->	jviereck (Adium@moz-lf92ov.dclient.hispeed.ch) has joined #rust
2015-05-24 15:02:36	<--	eerie (eerie@moz-i6pant.red.bezeqint.net) has quit (Ping timeout: 121 seconds)
2015-05-24 15:02:43	<--	dwrensha (chatzilla@moz-52ciq2.east.verizon.net) has quit (Ping timeout: 121 seconds)
2015-05-24 15:02:52	--	NameNotFound is now known as zz_NameNotFound
2015-05-24 15:03:25	<--	zzing (textual@moz-jucm1n.cpe.distributel.net) has quit (Ping timeout: 121 seconds)
2015-05-24 15:03:34	<--	dinfuehr (dinfuehr@moz-sh7u9l.highway.telekom.at) has quit (Ping timeout: 121 seconds)
2015-05-24 15:03:38	<--	godlikesme (godlikesme@moz-2a2.dsd.174.79.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 15:03:46	-->	chc4 (chc4@moz-mjph4c.ma.comcast.net) has joined #rust
2015-05-24 15:04:18	-->	sternmull (kringel@moz-vdai01.dip0.t-ipconnect.de) has joined #rust
2015-05-24 15:04:32	<--	csherratt (textual@moz-357qdq.cable.teksavvy.com) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-24 15:04:33	-->	mark_edward (mark@moz-dg4mrp.in.comcast.net) has joined #rust
2015-05-24 15:05:53	<--	forgottenone (forgottenon@moz-h3n.fd4.131.217.IP) has quit (Quit: Konversation terminated!)
2015-05-24 15:05:55	-->	dwrensha (chatzilla@moz-52ciq2.east.verizon.net) has joined #rust
2015-05-24 15:05:56	<--	tarka (Mibbit@moz-sr5.slb.109.92.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-24 15:07:04	-->	jmbto (jmbto@moz-q4m8bu.hca5.8frp.0e35.2a01.IP) has joined #rust
2015-05-24 15:08:09	-->	Zidane (Zidane@moz-382v9o.ca.comcast.net) has joined #rust
2015-05-24 15:08:37	<--	Astrum|Lap (Astrum|Lap@moz-skcefh.co.comcast.net) has quit (Client exited)
2015-05-24 15:09:30	<--	veqz (veqz@moz-rr3tu7.60.getinternet.no) has quit (Ping timeout: 121 seconds)
2015-05-24 15:09:55	<--	Zidane (Zidane@moz-382v9o.ca.comcast.net) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-05-24 15:10:44	<--	Rym_ (y@moz-c2u.sd4.38.217.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 15:10:49	-->	lyc (lyc@moz-jft.nr8.226.207.IP) has joined #rust
2015-05-24 15:11:02	<--	harrisonclarke (harrisoncla@moz-uur7pt.eastlink.ca) has quit (Connection closed)
2015-05-24 15:11:02	<--	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has quit (Connection closed)
2015-05-24 15:11:06	@Havvy	http://is.gd/sDxysT I *really* don't understand this error.
2015-05-24 15:11:52	-->	kakefabrikken (Mibbit@moz-9m21i0.studby.ntnu.no) has joined #rust
2015-05-24 15:12:15	-->	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has joined #rust
2015-05-24 15:12:38	<--	c_wraith (c_wraith@moz-7i8.v6v.191.131.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 15:12:44	@Havvy	Oh wait, it's because I'm not collecting anywhere.
2015-05-24 15:13:59	<--	Jackneill (Jackneill@moz-j3giv5.pool.digikabel.hu) has quit (Ping timeout: 121 seconds)
2015-05-24 15:14:29	-->	Astrum|Lap (Astrum|Lap@moz-skcefh.co.comcast.net) has joined #rust
2015-05-24 15:14:44	bluss	Havvy: why don't you use try! ?
2015-05-24 15:14:48	bluss	just a question
2015-05-24 15:14:52	<--	lyc (lyc@moz-jft.nr8.226.207.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 15:14:56	-->	Shackra (Jorge@moz-7bh.ng6.177.186.IP) has joined #rust
2015-05-24 15:14:58	<--	munksgaard (munksgaard@moz-478pev.u.parknet.dk) has quit (Ping timeout: 121 seconds)
2015-05-24 15:15:02	<--	gandalf (zbraniecki@moz-cp7c4m.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-24 15:15:34	@Havvy	bluss:  Mostly because I haven't had in my toolbox until now.
2015-05-24 15:15:39	-->	gandalf (zbraniecki@moz-cp7c4m.ca.comcast.net) has joined #rust
2015-05-24 15:15:47	@Havvy	And I think better in functional chains.
2015-05-24 15:15:54	bluss	your code looks neat anyway
2015-05-24 15:16:32	@Havvy	(And if you're wondering why it hasn't been in my toolbox, this is the first time I've written Rust in six months, but I ported the Result type to JS)
2015-05-24 15:16:55	bluss	oh
2015-05-24 15:18:06	-->	rkruppe (chatzilla@moz-62qg82.diu2.0rth.0908.2a02.IP) has joined #rust
2015-05-24 15:18:23	-->	asQuirre_ (asQuirreL@moz-ro1qqu.ox.ac.uk) has joined #rust
2015-05-24 15:18:24	bluss	tomaka: I'm going to leave proposing a solution to others I think
2015-05-24 15:18:24	-->	thelink2012 (Mibbit@moz-gd7.6ju.214.186.IP) has joined #rust
2015-05-24 15:18:49	bluss	tomaka: but it looks like into_inner can be unsafe but catch_panic will need to be unsafe as well?
2015-05-24 15:18:58	<--	jbomo (dkd@moz-uol4mm.fios.verizon.net) has quit (Quit: )
2015-05-24 15:19:23	thelink2012	any ideas how to make this macro work? the ',' between the subtokens etc http://is.gd/SVtuGm
2015-05-24 15:19:26	-->	harrisonclarke (harrisoncla@moz-uur7pt.eastlink.ca) has joined #rust
2015-05-24 15:20:07	<--	Soni (SoniEx2@moz-7ho.p0a.104.187.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 15:20:19	-->	erz (erz@moz-fiq1tl.broadband.corbina.ru) has joined #rust
2015-05-24 15:20:43	-->	geri (Mibbit@moz-1gtkp6.highway.telekom.at) has joined #rust
2015-05-24 15:20:45	<--	villev (chatzilla@moz-lemqa0.elisa-laajakaista.fi) has quit (Ping timeout: 121 seconds)
2015-05-24 15:20:47	<--	jviereck (Adium@moz-lf92ov.dclient.hispeed.ch) has quit (Ping timeout: 121 seconds)
2015-05-24 15:20:49	-->	godlikesme (godlikesme@moz-2a2.dsd.174.79.IP) has joined #rust
2015-05-24 15:21:08	<--	asQuirreL (asQuirreL@moz-ro1qqu.ox.ac.uk) has quit (Ping timeout: 121 seconds)
2015-05-24 15:21:08	geri	cool i can run RUST on my ARM...neat :)
2015-05-24 15:21:42	bluss	thelink2012: I don't know exactly but a tt is just a single token tree
2015-05-24 15:21:52	bluss	thelink2012: so that can be a single token or something wrapped in ()
2015-05-24 15:22:04	bluss	thelink2012: but tt doesn't match x = hbox[]()  for example
2015-05-24 15:22:09	<--	peferron (peferron@moz-k89vq8.ca.comcast.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-24 15:23:37	bluss	thelink2012: so I'm no expert but I'll show you something that does work, but you have to call it weird http://is.gd/RwBXf2
2015-05-24 15:23:38	-->	victor (Mibbit@moz-fgundf.dynamic.ziggo.nl) has joined #rust
2015-05-24 15:24:02	-->	Soni (SoniEx2@moz-7ho.p0a.104.187.IP) has joined #rust
2015-05-24 15:24:21	bluss	thelink2012: by the way, the macro cases are selected by the first that matches I think?
2015-05-24 15:24:59	tomaka	bluss: if RefCell has poisoning, then it doesn't need to be unsafe
2015-05-24 15:25:11	tomaka	bluss: *or*, TLS can use poisoning
2015-05-24 15:25:30	bluss	sounds better to put it there
2015-05-24 15:25:33	tomaka	maintain the "Send" requirement and add poisoning to TLS
2015-05-24 15:25:52	tomaka	it's a bit clumbsy this way though
2015-05-24 15:26:09	tomaka	it works, but it feels like a coincidence if it works
2015-05-24 15:26:18	bluss	tomaka: either way I think this crasher bug does not exist in stable features at least
2015-05-24 15:26:32	victor	Hi! I want to write a generic function which computes the average over the elements of a slice &[T]. I defined the types necessary for most of the operations, but I am stuck at sum / arr.len() because when I cast arr.len() as T I am getting the error "non-scalar cast"
2015-05-24 15:26:42	tomaka	yeah stable rust is safe
2015-05-24 15:26:52	<--	aepsil0n (eduard@moz-6491ha.mv2h.pepi.8071.2a02.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 15:26:54	victor	*I defined the traits necessary*
2015-05-24 15:27:01	@Havvy	:( PathExt is unstable. And I cannot find an analogue for them.
2015-05-24 15:27:11	bluss	victor: you need some method on some trait to give you the usize -> T conversion too
2015-05-24 15:27:12	thelink2012	bluss: Ahhh, ty
2015-05-24 15:27:14	@Havvy	Maybe I should check the source...
2015-05-24 15:27:24	tomaka	bluss: this is not yet stable rust's first leakocalyspe
2015-05-24 15:27:26	tomaka	:)
2015-05-24 15:27:30	<--	silven (quassel@moz-0roor3.priv.bahnhof.se) has quit (Ping timeout: 121 seconds)
2015-05-24 15:27:35	victor	bluss: Is there a trait for the "as" operator?
2015-05-24 15:27:37	-->	silven (quassel@moz-0roor3.priv.bahnhof.se) has joined #rust
2015-05-24 15:27:39	bluss	victor: no
2015-05-24 15:28:11	<--	harrisonclarke (harrisoncla@moz-uur7pt.eastlink.ca) has quit (Connection closed)
2015-05-24 15:28:11	<--	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has quit (Connection closed)
2015-05-24 15:28:33	victor	so I should... write one myself together with a cast method?
2015-05-24 15:28:41	-->	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has joined #rust
2015-05-24 15:29:01	FreeFull	victor: Maybe one of the traits from the num crate would be suitable
2015-05-24 15:29:05	&mbrubeck	or http://doc.rust-lang.org/std/convert/
2015-05-24 15:29:08	ELD	So, I'm messing around with generics and trait bounds, mixed with lifetimes. I'm totally new to Rust so I might be doing something horribly wrong. Here's a boiled down version of what I'm trying to do: http://is.gd/LSS7q7 I get an error that std::io::Read is not implemented for type &R when I constrain the generic to require the implementation of std::io::Read. At least I think that's what I'm doing. I could be doing it totally wrong through.
2015-05-24 15:29:27	-->	mib_pwu6oc (Mibbit@moz-vi0ek7.net.upcbroadband.cz) has joined #rust
2015-05-24 15:29:35	-->	eerie (eerie@moz-i6pant.red.bezeqint.net) has joined #rust
2015-05-24 15:29:42	victor	Perfect! Thanks FreeFull and mbrubeck !
2015-05-24 15:29:47	victor	and bluss 
2015-05-24 15:29:59	victor	Cheers!
2015-05-24 15:29:59	<--	mib_pwu6oc (Mibbit@moz-vi0ek7.net.upcbroadband.cz) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-24 15:30:10	&mbrubeck	ELD: BufReader takes ownership of the original reader, so you can't construct it with just a reference
2015-05-24 15:30:10	bluss	victor: num crate has the tools for generics + numerics. well, some basic ones. good luck
2015-05-24 15:30:24	-->	phynx (chatzilla@moz-fubq84.dsl.scarlet.be) has joined #rust
2015-05-24 15:30:32	ELD	&mbrubeck: Oh, I didn't realize that. Okay, that makes sense then.
2015-05-24 15:30:36	<--	godlikesme (godlikesme@moz-2a2.dsd.174.79.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 15:30:39	-->	niconii (nicole@moz-hnv1fo.frgo.qwest.net) has joined #rust
2015-05-24 15:30:40	--	Mode #rust [+o niconii] by ChanServ
2015-05-24 15:31:07	-->	DodoFXP (Mibbit@moz-fihu96.unity-media.net) has joined #rust
2015-05-24 15:31:28	@Havvy	Yep, checking the source helped. :D
2015-05-24 15:31:36	-->	godlikesme (godlikesme@moz-2a2.dsd.174.79.IP) has joined #rust
2015-05-24 15:32:20	<--	xcombelle (xcombelle@moz-1frl96.abo.wanadoo.fr) has quit (Quit: Leaving)
2015-05-24 15:32:35	<--	eerie_ (eerie@moz-i6pant.red.bezeqint.net) has quit (Ping timeout: 121 seconds)
2015-05-24 15:33:05	<--	Vivitron (user@moz-u8q.vvq.199.198.IP) has quit (Connection closed)
2015-05-24 15:33:18	-->	Douman (Douman@moz-m316k8.dynamic.mts-nn.ru) has joined #rust
2015-05-24 15:33:20	ELD	&mbrubeck: Oh yeah, that worked perfectly. Thanks! I'm not sure how I missed that a BufReader takes ownership of the underlying reader.
2015-05-24 15:33:53	&mbrubeck	Havvy: I added a note to the unstable warning in nightly: http://doc.rust-lang.org/nightly/std/fs/trait.PathExt.html
2015-05-24 15:34:09	&mbrubeck	Havvy: But it's not in the 1.0 or 1.1 docs.
2015-05-24 15:34:11	DodoFXP	Hey guys, quick design/ease of use question: Why doesn't "push_all" on a Vec not return self/Vec? 
2015-05-24 15:34:50	@Havvy	mbrubeck:  Yeah...gotta love the 6 week cycle on docs.
2015-05-24 15:34:51	bluss	DodoFXP: should it return Vec<T> or &mut Vec<T> ?
2015-05-24 15:35:34	DodoFXP	I guess &mut Vec<T> as push_all takes a &mut self, no?
2015-05-24 15:35:49	<--	FrozenCow (FrozenCow@moz-i2tvv4.chello.nl) has quit (Connection closed)
2015-05-24 15:35:56	bluss	DodoFXP: yeah. It could do that! Rust seems to not use this
2015-05-24 15:36:27	bluss	DodoFXP: and then .push should too.
2015-05-24 15:36:34	DodoFXP	I am trying to get 'stainless' to compile under 1.0 and it used a lot of some-vec + other-elements idioms... 
2015-05-24 15:36:39	DodoFXP	So this is what I am thinking of doing: http://pastebin.com/TjaKGfLF
2015-05-24 15:36:46	-->	TheDan64 (TheDan64@moz-6hceng.ma.charter.com) has joined #rust
2015-05-24 15:37:06	&mbrubeck	DodoFXP: https://www.reddit.com/r/rust/comments/2wssch/function_chaining/
2015-05-24 15:37:34	@Havvy	What's the syntax for renaming a `use` binding?
2015-05-24 15:37:44	bluss	DodoFXP: ok I see. Btw (*now).clone() would probably be the idiomatic way to write the third line
2015-05-24 15:37:51	DodoFXP	Thanks mbrubeck , I'll read through that :)
2015-05-24 15:37:53	bluss	Havvy: use x as newname;
2015-05-24 15:38:02	-->	kidto_ (gabriel@moz-72d.fff.84.91.IP) has joined #rust
2015-05-24 15:38:15	DodoFXP	bluss: does + work on vecs? I didn't know that...
2015-05-24 15:38:22	@Havvy	playbot: use std::fs::{metadata as fs_metadata};
2015-05-24 15:38:23	--	Notice(playbot): <anon>:9:32: 9:34 error: expected `,`, found `as`
2015-05-24 15:38:23	--	Notice(playbot): <anon>:9         use std::fs::{metadata as fs_metadata};
2015-05-24 15:38:23	--	Notice(playbot): output truncated; full output at: http://bit.ly/1LuN0s5
2015-05-24 15:38:27	bluss	DodoFXP: it used to, but not anymore
2015-05-24 15:38:42	@Havvy	Is it allowed in the `{binding, binding, binding}` thing?
2015-05-24 15:38:54	swgillespie	Havvy: I don't think so :/
2015-05-24 15:39:05	TheDan64	Why is it that chars use i32 but strings use i8*? I assume that i32 for chars is so you can fit utf8 in one memory block. i8 because its assumed ascii chars are more common and so i8 will use less space, but can split utf8 into multiple i8s when needed?
2015-05-24 15:39:28	&mbrubeck	playbot: use std::{io as new_io};
2015-05-24 15:39:29	--	Notice(playbot): <anon>:9:22: 9:24 error: expected `,`, found `as`
2015-05-24 15:39:29	--	Notice(playbot): <anon>:9         use std::{io as new_io};
2015-05-24 15:39:29	--	Notice(playbot): output truncated; full output at: http://bit.ly/1Kt7uV8
2015-05-24 15:39:35	<--	spider-mario (spidermario@moz-coblcf.fbx.proxad.net) has quit (A TLS packet with unexpected length was received.)
2015-05-24 15:39:38	bluss	TheDan64: char is one codepoint basically. Not in utf-8 encoding
2015-05-24 15:39:39	-->	Zidane (Zidane@moz-382v9o.ca.comcast.net) has joined #rust
2015-05-24 15:39:58	DodoFXP	bluss: yeah. How do you guys deal with constructing Structs (e.g. for some kind of result/response) in the middle of matches? Build each temp variable and then assign them? Or do you extract functions and call them?
2015-05-24 15:40:09	tomprogrammer	cjwelborn: Do you have a logic error in your program? What should happen if the arglen is 2?
2015-05-24 15:40:24	-->	alister (oink@moz-o17fvt.dip0.t-ipconnect.de) has joined #rust
2015-05-24 15:40:33	bluss	DodoFXP: I think you'd just build the variable in a temporary
2015-05-24 15:40:37	tomprogrammer	cjwelborn: Oh, forget. I answered myself.
2015-05-24 15:40:45	-->	nott (nott@moz-to4.06o.57.86.IP) has joined #rust
2015-05-24 15:40:48	@Havvy	Alright, I'll just move the renamed ones out to their own line then.
2015-05-24 15:40:58	-->	peferron (peferron@moz-k89vq8.ca.comcast.net) has joined #rust
2015-05-24 15:41:05	&mbrubeck	TheDan64: Strings are stored as UTF-8, which is an 8-bit encoding, therefore they are a sequence of 8-bit bytes.  Internally a string is Vec<u8> (or &[u8] for a slice), though of course you can trivially cast u8 to i8.
2015-05-24 15:41:11	DodoFXP	Cool bluss , thanks for the quick help :D
2015-05-24 15:41:13	bluss	DodoFXP: in your case you can probably use [&parent.stmt, &now.stmts].concat() ? 
2015-05-24 15:41:16	bluss	DodoFXP: not sure..
2015-05-24 15:41:21	cjwelborn	tomprogrammer: sorry, I was busy implementing the suggestions I received.
2015-05-24 15:41:26	<--	peferron (peferron@moz-k89vq8.ca.comcast.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-24 15:41:45	&mbrubeck	`char` is a Unicode code-points, which is a 32-bit integer by definition.
2015-05-24 15:41:47	<--	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has quit (Connection closed)
2015-05-24 15:41:50	&mbrubeck	*point
2015-05-24 15:41:59	bluss	playbot: let a = vec![1,2,3]; let b = vec![0]; [&a[..], &b[..]].concat()
2015-05-24 15:42:01	--	Notice(playbot): [1, 2, 3, 0]
2015-05-24 15:42:08	bluss	needs explicit slice type
2015-05-24 15:42:22	-->	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has joined #rust
2015-05-24 15:42:29	TheDan64	mbrubeck, well utf8 is variable width, so i32 is the maximum size for utf8 i believe?
2015-05-24 15:43:04	&mbrubeck	TheDan64: But we don't use i32 for UTF-8 encoded characters
2015-05-24 15:43:19	&mbrubeck	We only use it for decoded (UCS-4) code points
2015-05-24 15:43:21	rkruppe	TheDan64: Don't mix up encodings and the abstract notion of a code point
2015-05-24 15:43:37	DodoFXP	hm, that may be cool @bluss !
2015-05-24 15:44:27	&mbrubeck	playbot: "☃".as_bytes()
2015-05-24 15:44:29	--	Notice(playbot): [226, 152, 131]
2015-05-24 15:44:35	-->	zyphrus (David@moz-1a4.urk.98.101.IP) has joined #rust
2015-05-24 15:44:40	victor	okay, now I am thoroughly confused :) I still cannot tell rust that    a.len() as T   should work. What trait should T implement?
2015-05-24 15:44:42	&mbrubeck	playbot: '☃' as i32
2015-05-24 15:44:43	--	Notice(playbot): 9731
2015-05-24 15:45:12	<--	kidto_ (gabriel@moz-72d.fff.84.91.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 15:45:15	-->	frogonia (Mibbit@moz-o5eg8b.bredband.comhem.se) has joined #rust
2015-05-24 15:45:27	-->	decafbad (decaf@moz-b05.st2.229.88.IP) has joined #rust
2015-05-24 15:45:27	Remram	What determines the hash in the test binaries names?
2015-05-24 15:45:27	&mbrubeck	victor: Try http://doc.rust-lang.org/num/num/traits/trait.NumCast.html from the `num` crate
2015-05-24 15:45:43	Remram	I'm building the same code on two Debian machines and one Ubuntu machine, one of them gets a different hash
2015-05-24 15:45:52	bluss	DodoFXP: it is cool. It's variadic, unlike rust functions and it walks the slice of slices first to preallocate the correct amount for the concatenation just once
2015-05-24 15:45:55	DodoFXP	bluss: error: type `[syntax::ptr::P<syntax::codemap::Spanned<syntax::ast::Stmt_>>]` cannot be dereferenced
2015-05-24 15:46:02	<--	hohoho (hohoho@moz-o79jn4.pools.vodafone-ip.de) has quit (Quit: Leaving)
2015-05-24 15:46:30	victor	I tried constraining T to implement convert::From<usize> but it said that the trait `core::convert::From<usize>` is not implemented for the type `f64`
2015-05-24 15:46:33	-->	proc (proc@moz-pushtu.dip0.t-ipconnect.de) has joined #rust
2015-05-24 15:46:36	bluss	DodoFXP: that's your smart pointer, not mine :) You know how to get a slice out of that and not me :)
2015-05-24 15:46:45	TheDan64	Hmm that makes sense
2015-05-24 15:47:18	-->	lenstr (lenstr@moz-oaq.vju.25.171.IP) has joined #rust
2015-05-24 15:47:29	-->	spider-mario (spidermario@moz-coblcf.fbx.proxad.net) has joined #rust
2015-05-24 15:47:29	DodoFXP	bluss: I know very little :/ I just wanted to use 'stainless' testing but I'd like to have 1.0 support...
2015-05-24 15:47:44	bluss	victor: I think that's correct. the convert traits are used for numerics
2015-05-24 15:47:52	bluss	victor: *are not used
2015-05-24 15:47:55	-->	fengshaun (fengshaun@moz-oagll1.cpe.pppoe.ca) has joined #rust
2015-05-24 15:48:08	victor	mbrubeck: Thanks! I will try it! But first, I would like to understand something about the std::convert standard module. convert::From<T> is supposed to be a trait for the "as T" operator. But it does not seem to be implemented.
2015-05-24 15:48:24	<--	Halamix2 (Halamix2@moz-7rvoh1.syrion.pl) has quit (Quit: Generic goodbye message)
2015-05-24 15:48:27	<--	asQuirre_ (asQuirreL@moz-ro1qqu.ox.ac.uk) has quit (Connection closed)
2015-05-24 15:48:28	&mbrubeck	victor: No, there is no trait for the `as` operator.
2015-05-24 15:48:29	Zidane	so how come I can write the following: hash_map.entry(&key).or_insert(value);  but if I instead write hash_map.get(&key) to get an entry, followed by a separate call to hash_map.insert(), I'll get a borrow error
2015-05-24 15:48:45	-->	Binero (jeroen@moz-91joat.69vi.s4ge.1810.2a02.IP) has joined #rust
2015-05-24 15:49:00	-->	nodweber (nodweber@moz-knt.fgq.178.5.IP) has joined #rust
2015-05-24 15:49:15	-->	asQuirreL (asQuirreL@moz-ro1qqu.ox.ac.uk) has joined #rust
2015-05-24 15:49:18	Zidane	I'm trying to figure out this Entry API, but I don't see how it is working around the borrowing issue
2015-05-24 15:49:19	victor	mbrubeck: Ahh. Now I see that the documentation said it only follows the convention of "as"
2015-05-24 15:49:19	&mbrubeck	victor: If you require T: NumCast then you can cast with `T::from(a.len()).unwrap()`
2015-05-24 15:49:27	-->	KLP (KLP@moz-qdcjho.res.rr.com) has joined #rust
2015-05-24 15:49:32	-->	winding-lines (textual@moz-9utvl5.frokca.sbcglobal.net) has joined #rust
2015-05-24 15:49:46	bluss	Zidane: well it's a smart API. You know &mut borrowing is based on exclusive access
2015-05-24 15:50:08	-->	mcarton1 (martin@moz-ag64s6.rev.sfr.net) has joined #rust
2015-05-24 15:50:13	bluss	Zidane: during .entry().or_insert() the exclusive access (&mut borrow) of the hash table belongs to those methods
2015-05-24 15:50:28	bluss	Zidane: if .or_insert() receives it from the Entry all is fine
2015-05-24 15:51:19	victor	mbrubeck: but NumCast::from seems to suggest that the cast may fail (therefore the .unwrap()). Can't I tell Rust statically that "as" will work? 
2015-05-24 15:51:42	victor	mbrubeck: If I were not to use generics, I could easily say a.len() as f64 and the compiler wouldn't have complained.
2015-05-24 15:51:44	yrjan	how would I convert a char to an unsigned int (or a signed int)?
2015-05-24 15:51:45	Zidane	bluss, I think I get it; will need to try a small example to see if I really got it though.  Thanks
2015-05-24 15:52:13	bluss	Zidane: I don't know what the level of trickery inside entry actually is
2015-05-24 15:52:20	victor	mbrubeck: Also, I could have said "a.len() as f32". Can't I generalize over all the types T for which a.len() as T would just work?
2015-05-24 15:52:34	Zidane	yeah, that's the problem.  I'm not really getting the Entry code at first glance
2015-05-24 15:53:00	<--	rkruppe (chatzilla@moz-62qg82.diu2.0rth.0908.2a02.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 15:53:09	<--	mcarton (martin@moz-ag64s6.rev.sfr.net) has quit (Ping timeout: 121 seconds)
2015-05-24 15:53:09	&mbrubeck	victor: What do you want do with cases like `129 as i8`?
2015-05-24 15:53:13	-->	willem (willem@moz-facs2s.dynamic.upc.nl) has joined #rust
2015-05-24 15:53:20	<--	nodweber (nodweber@moz-knt.fgq.178.5.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 15:53:24	<--	DodoFXP (Mibbit@moz-fihu96.unity-media.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-24 15:53:33	&mbrubeck	victor: Here's how the underlying implementation works for integer-to-integer conversions: http://doc.rust-lang.org/num/src/num/traits.rs.html#982-992
2015-05-24 15:53:38	bluss	Zidane: you can see that the &mut HashMap borrow is passed into the Entry value
2015-05-24 15:53:51	&mbrubeck	it just calls `as` when widening the type, and adds bounds-checking when narrowing
2015-05-24 15:54:48	&mbrubeck	Casting to f32 or f64 always succeeds http://doc.rust-lang.org/num/src/num/traits.rs.html#1037-1040
2015-05-24 15:54:58	&mbrubeck	(starting from an integer type, that is)
2015-05-24 15:55:51	<--	untitaker (untitaker@moz-sih8lo.highway.telekom.at) has quit (Ping timeout: 121 seconds)
2015-05-24 15:56:04	--	ril is now known as ril[away]
2015-05-24 15:56:12	zamabe	What would be the right way to do this? :/
2015-05-24 15:56:14	zamabe	let (e,t,a,o,i,n,s,h,r,d,l,u) = [0u8; 12];
2015-05-24 15:56:23	victor	mbrubeck: out of curiosity I just tried assert_eq!(129i32 as i8, 129) and the test passed :-s 
2015-05-24 15:56:52	zamabe	Google is not helpful, can't figure out how to destructure, I suppose
2015-05-24 15:56:53	<--	fabianvf (fabianvf@moz-fjqmui.va.comcast.net) has quit (Connection closed)
2015-05-24 15:57:04	<--	dirvine (dirvine@moz-42j0at.cable.virginm.net) has quit (Quit: leaving)
2015-05-24 15:57:06	-->	hyunsik (hyunsik@moz-3qgjl9.ca.comcast.net) has joined #rust
2015-05-24 15:57:09	<--	godlikesme (godlikesme@moz-2a2.dsd.174.79.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 15:57:11	bluss	victor: probably treating 129 as i8, I think it's a known bug
2015-05-24 15:57:12	zamabe	well, to multiple variables with the range thingie
2015-05-24 15:57:32	VShell	playbot: let [e,t,a,o,i,n,s,h,r,d,l,u] = [0u8; 12]; e
2015-05-24 15:57:33	--	Notice(playbot): <anon>:9:13: 9:38 error: slice pattern syntax is experimental
2015-05-24 15:57:33	--	Notice(playbot): <anon>:9         let [e,t,a,o,i,n,s,h,r,d,l,u] = [0u8; 12]; e
2015-05-24 15:57:33	--	Notice(playbot): output truncated; full output at: http://bit.ly/1LuPMO1
2015-05-24 15:57:48	--	ril[away] is now known as ril
2015-05-24 15:57:53	&mbrubeck	zamabe: Not yet stable, but http://doc.rust-lang.org/book/slice-patterns.html
2015-05-24 15:58:02	-->	kidto_ (gabriel@moz-72d.fff.84.91.IP) has joined #rust
2015-05-24 15:58:14	<--	bfrog (tburdick@moz-hqe1t2.il.comcast.net) has quit (Quit: WeeChat 1.2)
2015-05-24 15:58:21	zamabe	ah
2015-05-24 15:58:25	zamabe	thanks :)
2015-05-24 15:58:34	-->	dmac_ (dmac@moz-2ig65r.ca.comcast.net) has joined #rust
2015-05-24 15:58:46	&mbrubeck	playbot: let (e,t,a,o,i,n,s,h,r,d,l,u) = Default::default();
2015-05-24 15:58:47	--	Notice(playbot): <anon>:9:14: 9:15 error: unable to infer enough type information about `_`; type annotations required [E0282]
2015-05-24 15:58:47	--	Notice(playbot): <anon>:9         let (e,t,a,o,i,n,s,h,r,d,l,u) = Default::default();
2015-05-24 15:58:47	--	Notice(playbot): output truncated; full output at: http://bit.ly/1Kt8Kre
2015-05-24 15:59:00	exalt	why do some arguments in rust requere vertical lines like .map(|p| {...})? what is the idea behind it? isnt .map(p, {}) much clearer?
2015-05-24 15:59:15	-->	untitaker (untitaker@moz-1ut3mh.highway.telekom.at) has joined #rust
2015-05-24 15:59:27	bluss	exalt: it's a lambda expression, it creates a closure
2015-05-24 15:59:32	@steveklabnik	exalt: its a closure
2015-05-24 15:59:33	bluss	exalt: it's not two arguments
2015-05-24 15:59:36	-->	ajhager (aajhager@moz-mcdsgi.iplsin.sbcglobal.net) has joined #rust
2015-05-24 15:59:37	-->	eerie_ (eerie@moz-i6pant.red.bezeqint.net) has joined #rust
2015-05-24 15:59:51	&mbrubeck	playbot: let (e: u8, t: u8, a: u8) = Default::default(); (e,t,a)
2015-05-24 15:59:51	--	Notice(playbot): <anon>:9:15: 9:16 error: expected one of `,` or `@`, found `:`
2015-05-24 15:59:52	--	Notice(playbot): <anon>:9         let (e: u8, t: u8, a: u8) = Default::default(); (e,t,a)
2015-05-24 15:59:52	--	Notice(playbot): output truncated; full output at: http://bit.ly/1LuQ33l
2015-05-24 16:00:01	victor	playbot: let large = 129i32 as i8; assert_eq!(large as i32, 129i32);
2015-05-24 16:00:02	-->	dinfuehr (dinfuehr@moz-sh7u9l.highway.telekom.at) has joined #rust
2015-05-24 16:00:02	--	Notice(playbot): thread '<main>' panicked at 'assertion failed: `(left == right)` (left: `-127`, right: `129`)', <anon>:9
2015-05-24 16:00:03	--	Notice(playbot): playpen: application terminated with error code 101
2015-05-24 16:00:07	exalt	its like pythons lambda x: some_func(x) ?
2015-05-24 16:00:09	-->	zslayton (Mibbit@moz-0gsjuf.res.rr.com) has joined #rust
2015-05-24 16:00:22	bluss	exalt: very similar, more powerful
2015-05-24 16:00:23	&mbrubeck	exalt: yes
2015-05-24 16:00:33	@steveklabnik	in python they can only be one epression though
2015-05-24 16:00:37	@steveklabnik	in rust they can be any amount of code
2015-05-24 16:00:41	victor	hmm.. so "as" allows overflows :) cool. how do I do that for generics?
2015-05-24 16:00:47	-->	godlikesme (godlikesme@moz-2a2.dsd.174.79.IP) has joined #rust
2015-05-24 16:01:24	&mbrubeck	victor: If you want to use `as` directly you could us a macro instead of a generic
2015-05-24 16:01:32	&mbrubeck	to generate impls for each of the integer types, say
2015-05-24 16:02:05	<--	kidto_ (gabriel@moz-72d.fff.84.91.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 16:02:11	exalt	its just my eyes start tolling when i see something like ".map(|p| { thread::spawn(move ||" im like whats getting piped all around ?
2015-05-24 16:02:18	-->	rumpler (Mibbit@moz-84song.dip0.t-ipconnect.de) has joined #rust
2015-05-24 16:02:29	zslayton	Hi all. How expensive is it to clone a Sender<T>? I'm interested in both the size of the new Sender that's produced as well as the time it takes for the clone to complete.
2015-05-24 16:02:39	<--	eerie (eerie@moz-i6pant.red.bezeqint.net) has quit (Ping timeout: 121 seconds)
2015-05-24 16:02:42	<--	dmac_ (dmac@moz-2ig65r.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-24 16:02:53	victor	mbrubeck: Indeed, that might be an option. But I am not looking for a "work-around", but rather I am curious about the expresivity of the language.
2015-05-24 16:03:02	victor	Thank you for all your answers!
2015-05-24 16:03:04	rumpler	Hello, gentlemen. Gotta a problem. Wanted to compile rust lib but I got this error: rustc -C opt-level=2 -Z no-landing-pads --target thumbv7m-none-eabi -g src/libcore/lib.rs --out-dir libcore-thumbv7m
2015-05-24 16:03:22	rumpler	note: this feature may not be used in the stable release channel src/libcore/lib.rs:76:1: 76:30 error: unstable feature src/libcore/lib.rs:76 #![feature(custom_attribute)]
2015-05-24 16:03:34	@steveklabnik	rumpler: not just gentelmen here ;)
2015-05-24 16:03:36	-->	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has joined #rust
2015-05-24 16:03:42	<--	ajhager (aajhager@moz-mcdsgi.iplsin.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-24 16:03:45	@steveklabnik	however
2015-05-24 16:03:53	@steveklabnik	yes, if you're using libcore directly, you have to use the nightly compiler
2015-05-24 16:03:59	tomaka	zslayton: I think a Sender is just a smart pointer, so at most something like 10-15 nanoseconds
2015-05-24 16:04:07	<--	Douman (Douman@moz-m316k8.dynamic.mts-nn.ru) has quit (Quit: )
2015-05-24 16:04:09	<--	dinfuehr (dinfuehr@moz-sh7u9l.highway.telekom.at) has quit (Ping timeout: 121 seconds)
2015-05-24 16:04:18	rumpler	ahh ok.Thanks I will try
2015-05-24 16:04:23	zslayton	tomaka: Ah, great! Thanks.
2015-05-24 16:04:47	exalt	steveklabnik: the code example with dining philosophers fails btw: http://is.gd/zyue5C
2015-05-24 16:05:10	-->	jophish (jophish@moz-fjh8o1.gotadsl.co.uk) has joined #rust
2015-05-24 16:05:19	<--	xilec (Mibbit@moz-g6k.oht.161.46.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-24 16:05:33	<--	jophish (jophish@moz-fjh8o1.gotadsl.co.uk) has quit (Connection closed)
2015-05-24 16:05:35	@steveklabnik	exalt: hmmm that's very odd
2015-05-24 16:05:58	zslayton	I'm toying around with the idea of making an auto-recycling library for Strings/Vecs/what-have-you. I'm wondering if handing out structs with the desired value (e.g. String) as well as a Sender that can be used in a Drop impl to return the String to the pool that issued it would be feasible.
2015-05-24 16:06:36	tomaka	zslayton: cloning a Sender is cheap, but sending someone on it isn't
2015-05-24 16:06:49	exalt	steveklabnik: the one with the mutex does not throw an error but: playpen: timeout triggered!
2015-05-24 16:06:50	<--	zeebo (zeebo@moz-6rqv1a.ut.comcast.net) has quit (Connection closed)
2015-05-24 16:07:06	tomaka	zslayton: unless you need a lot of objects, malloc/free are probably more efficient than what you're trying to do
2015-05-24 16:07:20	@steveklabnik	exalt: yeah, well, that's to be expected, it runs longer than the playpen allows
2015-05-24 16:07:22	bluss	zslayton: there is https://github.com/frankmcsherry/recycler but I don't know if it has any drop code
2015-05-24 16:07:43	zslayton	tomaka: Hm, interesting. I would've thought that message passing on channels would've been cheaper than a system call for malloc
2015-05-24 16:08:07	-->	munksgaard (munksgaard@moz-urnkl5.u.parknet.dk) has joined #rust
2015-05-24 16:08:20	zslayton	bluss: Thanks, I was looking at that. It's great, but it relies on the developer to recycle() things at every exit point for a scope
2015-05-24 16:08:33	zslayton	bluss: And I'm an error-prone human. :)
2015-05-24 16:08:52	tomaka	zslayton: Rust uses jemalloc, plus all calls to malloc() don't produce a system call
2015-05-24 16:09:19	Morten	Can assert_eq!() include an error message like assert!() can?
2015-05-24 16:09:23	zslayton	tomaka: What is it about the channel send/recv that makes it expensive?
2015-05-24 16:09:27	<--	SkyEye (gaveen@moz-239.4dt.157.175.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 16:10:30	-->	harrisonclarke (harrisoncla@moz-uur7pt.eastlink.ca) has joined #rust
2015-05-24 16:10:33	-->	SkyEye (gaveen@moz-239.4dt.157.175.IP) has joined #rust
2015-05-24 16:10:57	-->	takaci (joe@moz-334jg9.cable.virginm.net) has joined #rust
2015-05-24 16:11:06	tomaka	zslayton: I don't know exactly how channels work, but I guess it lock a mutex, writes the entry in a container, then receiving locks it again and copies the entry
2015-05-24 16:11:13	<--	harrisonclarke (harrisoncla@moz-uur7pt.eastlink.ca) has quit (Connection closed)
2015-05-24 16:11:33	-->	lyc (lyc@moz-jft.nr8.226.207.IP) has joined #rust
2015-05-24 16:11:33	tomaka	hmm
2015-05-24 16:11:33	<--	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has quit (Connection closed)
2015-05-24 16:11:43	tomaka	anyway you'd need to profile to see what's the fastest
2015-05-24 16:11:44	zslayton	tomaka: Ah, I was under the impression that Sender and Receiver worked without mutexes/locks (and hence would be cheap)
2015-05-24 16:11:59	-->	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has joined #rust
2015-05-24 16:11:59	zslayton	tomaka: Thanks, I'll see if I can jimmy up a benchmark
2015-05-24 16:12:14	<--	frogonia (Mibbit@moz-o5eg8b.bredband.comhem.se) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-24 16:12:25	<--	lenstr (lenstr@moz-oaq.vju.25.171.IP) has quit (Connection closed)
2015-05-24 16:12:34	tomaka	the thing is: if your manual implementations is faster than jemalloc, then you should probably file a bug because that's not normal
2015-05-24 16:12:39	-->	harrisonclarke (harrisoncla@moz-uur7pt.eastlink.ca) has joined #rust
2015-05-24 16:12:50	-->	lenstr (lenstr@moz-oaq.vju.25.171.IP) has joined #rust
2015-05-24 16:12:52	bluss	zslayton: http://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#118-148
2015-05-24 16:13:02	<--	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has quit (Connection closed)
2015-05-24 16:13:15	<--	nott (nott@moz-to4.06o.57.86.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 16:13:17	zslayton	bluss: Very helpful, thanks!
2015-05-24 16:14:22	iliekturtles	http://is.gd/2ajDtQ -- Any way to do something like this? Initialize a struct where one field is calculated based on another.
2015-05-24 16:15:31	<--	takaci (joe@moz-334jg9.cable.virginm.net) has quit (Quit: WeeChat 1.1.1)
2015-05-24 16:15:36	<--	lyc (lyc@moz-jft.nr8.226.207.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 16:15:58	<--	panicbit (panicbit@moz-rcvp1e.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2015-05-24 16:16:05	-->	pgonda (peter@moz-s36.0tp.134.75.IP) has joined #rust
2015-05-24 16:17:57	<--	decafbad (decaf@moz-b05.st2.229.88.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 16:18:04	-->	kidto_ (gabriel@moz-72d.fff.84.91.IP) has joined #rust
2015-05-24 16:18:10	-->	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has joined #rust
2015-05-24 16:18:25	exalt	does rust look alot like ruby?
2015-05-24 16:18:26	-->	c_wraith (c_wraith@moz-2e872h.click-network.com) has joined #rust
2015-05-24 16:18:44	exalt	i noticed it also had the pipes
2015-05-24 16:18:44	<--	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has quit (Connection closed)
2015-05-24 16:19:20	<--	Kxepal (Miranda@moz-fqukoc.pppoe.mtu-net.ru) has quit (Ping timeout: 121 seconds)
2015-05-24 16:19:45	@steveklabnik	in some places
2015-05-24 16:19:50	@steveklabnik	ruby puts the pipes elsewehre though
2015-05-24 16:19:56	@steveklabnik	|| { } vs {|| }
2015-05-24 16:20:02	@niconii	exalt: mmm, there's a few similarities, but on the whole, not really, there's a lot of differences
2015-05-24 16:20:03	@steveklabnik	and ruby stole that from smalltalk
2015-05-24 16:20:19	-->	mlafeldt (mlafeldt@moz-r5eets.pools.vodafone-ip.de) has joined #rust
2015-05-24 16:20:26	@steveklabnik	Morten: don't think so
2015-05-24 16:20:27	-->	Rym_ (y@moz-c2u.sd4.38.217.IP) has joined #rust
2015-05-24 16:20:41	@steveklabnik	iliekturtles: not directly no
2015-05-24 16:20:55	-->	turtil (turtil@moz-gfc.es4.23.103.IP) has joined #rust
2015-05-24 16:20:55	@steveklabnik	calcualate the field first and do the assignment at the same time
2015-05-24 16:21:03	-->	eschatite (eschatite@moz-95cjjj.res.rr.com) has joined #rust
2015-05-24 16:21:21	<--	pgonda (peter@moz-s36.0tp.134.75.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 16:21:22	-->	godlikesme_ (godlikesme@moz-2a2.dsd.174.79.IP) has joined #rust
2015-05-24 16:21:25	-->	Kxepal (Miranda@moz-g95ll8.pppoe.mtu-net.ru) has joined #rust
2015-05-24 16:21:31	<--	TheDan64 (TheDan64@moz-6hceng.ma.charter.com) has quit (Quit: Leaving)
2015-05-24 16:21:36	benh	playbot: let f = { |x| x + 1 }; f(5)
2015-05-24 16:21:38	--	Notice(playbot): 6
2015-05-24 16:21:40	@steveklabnik	http://is.gd/2ajDtQ
2015-05-24 16:21:46	benh	ruby style || placement is clearly also supported ;)
2015-05-24 16:21:54	@steveklabnik	oh whaaaaaat
2015-05-24 16:22:08	@steveklabnik	brb switching every closure ever to use ruby style ;)
2015-05-24 16:22:11	<--	kidto_ (gabriel@moz-72d.fff.84.91.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 16:22:14	-->	jbomo (dkd@moz-uol4mm.fios.verizon.net) has joined #rust
2015-05-24 16:22:24	benh	only works for single expression closures :P
2015-05-24 16:22:29	@steveklabnik	ah
2015-05-24 16:22:34	@steveklabnik	i knew there was a catch! :p
2015-05-24 16:22:39	-->	pgonda (peter@moz-s36.0tp.134.75.IP) has joined #rust
2015-05-24 16:23:00	<--	giucam (giucam@moz-iv0nnc.bb.dnainternet.fi) has quit (Ping timeout: 121 seconds)
2015-05-24 16:23:01	<--	xidorn (sid312@moz-rssrut.0j4i.jtu0.0101.2620.IP) has left #rust ("")
2015-05-24 16:23:02	benh	playbot: let f = {{{{{{ |x| x + 6 }}}}}}; f(5)
2015-05-24 16:23:03	--	Notice(playbot): 11
2015-05-24 16:23:10	@niconii	right, closures take the expression after them as their body (which can be a block or just a single expression
2015-05-24 16:23:11	bluss	playbot: let f = |x| x + 1; f(5)
2015-05-24 16:23:12	--	Notice(playbot): 6
2015-05-24 16:23:26	@niconii	so that's just a closure inside a block :)
2015-05-24 16:23:30	<--	godlikesme (godlikesme@moz-2a2.dsd.174.79.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 16:23:48	tomprogrammer	cjwelborn: I have made some changes to your code. Should I open a PR or sent it to you via playpen?
2015-05-24 16:24:02	-->	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has joined #rust
2015-05-24 16:24:14	@steveklabnik	ahhh lol
2015-05-24 16:25:08	-->	aepsil0n (eduard@moz-6491ha.mv2h.pepi.8071.2a02.IP) has joined #rust
2015-05-24 16:25:40	cjwelborn	tomprogrammer: PR please, I have to leave for a bit but I look forward to looking at it when I get back home. Thank you again for looking at this with me.
2015-05-24 16:25:57	tomprogrammer	cjwelborn: Alright!
2015-05-24 16:26:16	KLP	I have a lifetime on an `impl` block of a struct but it says that lifetime is never used. How can I make a specific type to use it?
2015-05-24 16:26:54	<--	godlikesme_ (godlikesme@moz-2a2.dsd.174.79.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 16:26:54	@steveklabnik	KLP: if you can share a snippet, might be helpful
2015-05-24 16:27:09	<--	eschatite (eschatite@moz-95cjjj.res.rr.com) has quit (Ping timeout: 121 seconds)
2015-05-24 16:27:12	<--	rustyrazorblade (rustyrazorb@moz-ehrfqf.fios.verizon.net) has quit (Client exited)
2015-05-24 16:27:27	KLP	@steveklabnik: for sure, messing around with mio here it is:
2015-05-24 16:27:28	KLP	struct MyHandler<'a>;               
2015-05-24 16:27:28	KLP	impl<'a> Handler for MyHandler<'a> {
2015-05-24 16:27:28	KLP	    type Timeout = ();              
2015-05-24 16:27:28	<--	belew.mozilla.org has kicked KLP (Channel flood triggered (limit is 5 lines in 3 secs))
2015-05-24 16:27:32	bluss	KLP: It sounds like a job for PhantomData. This will need that you know what the lifetime represents
2015-05-24 16:27:40	<--	Palmik (palmik@moz-7pku2p.net.upcbroadband.cz) has quit (Ping timeout: 121 seconds)
2015-05-24 16:27:51	-->	tetsuharu (testuharu@moz-fmjbd6.ucom.ne.jp) has joined #rust
2015-05-24 16:28:01	--	zz_NameNotFound is now known as NameNotFound
2015-05-24 16:28:03	-->	KLP (KLP@moz-qdcjho.res.rr.com) has joined #rust
2015-05-24 16:28:14	@steveklabnik	KLP: whoops, play.rust-lang.org or gist is better :)
2015-05-24 16:28:18	<--	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has quit (Connection closed)
2015-05-24 16:28:29	KLP	haha good to know :D
2015-05-24 16:28:31	@steveklabnik	but yeah, bluss is on the right track here, but i'm not sure why your unit-like struct just has a <'a> on it
2015-05-24 16:28:37	<--	munksgaard (munksgaard@moz-urnkl5.u.parknet.dk) has quit (Ping timeout: 121 seconds)
2015-05-24 16:28:39	bluss	what about play.rust-lang.org + gist?  hehe
2015-05-24 16:28:43	c_wraith	is there any tooling to interactively get the type of an expression?
2015-05-24 16:28:44	bluss	KLP: It sounds like a job for PhantomData. This will need that you know what the lifetime represents
2015-05-24 16:28:48	-->	gsingh93 (gulshan@moz-ln1ktu.st3l.iv8o.0004.2601.IP) has joined #rust
2015-05-24 16:29:06	@steveklabnik	c_wraith: you could use rusti, in theory. many people just let x: () = expr
2015-05-24 16:29:29	<--	errordeveloper (ilya@moz-41f.3sd.204.90.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 16:29:33	<--	mlafeldt (mlafeldt@moz-r5eets.pools.vodafone-ip.de) has quit (Connection closed)
2015-05-24 16:29:39	-->	eerie (eerie@moz-i6pant.red.bezeqint.net) has joined #rust
2015-05-24 16:29:58	-->	mlafeldt (mlafeldt@moz-r5eets.pools.vodafone-ip.de) has joined #rust
2015-05-24 16:30:17	<--	aldeka (quassel@moz-qqf.of6.243.162.IP) has quit (Connection closed)
2015-05-24 16:30:18	-->	aldeka (quassel@moz-qqf.of6.243.162.IP) has joined #rust
2015-05-24 16:30:27	<--	Rym_ (y@moz-c2u.sd4.38.217.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 16:30:31	<--	eerie (eerie@moz-i6pant.red.bezeqint.net) has quit (Connection closed)
2015-05-24 16:30:32	<--	tetsuharu (testuharu@moz-fmjbd6.ucom.ne.jp) has left #rust
2015-05-24 16:31:35	bluss	steveklabnik: saw the comment on the security policy. Sounds good to have an RFC to unconfuse us
2015-05-24 16:31:40	KLP	Ok I’m just trying to make a simple sender/reciever in mio. If I want to send str messages compiler tells me I need to use a lifetime. that’s the only reason I wrote what I did. Confused about lifetimes & how they tie into structs, imply, types etc.
2015-05-24 16:31:47	@steveklabnik	bluss: :+1:, cool.
2015-05-24 16:32:12	@steveklabnik	KLP: ahhh yeah. so, all references have a lifetime. lifetimes are basically 'what scope is this reference valid for
2015-05-24 16:32:35	@steveklabnik	so, struct Foo<'a> { x: &'a str } <- this says "x will be valid as long as the struct is valid
2015-05-24 16:32:39	<--	eerie_ (eerie@moz-i6pant.red.bezeqint.net) has quit (Ping timeout: 121 seconds)
2015-05-24 16:32:44	barometz	the missing closing ' there makes it work really well
2015-05-24 16:33:24	@steveklabnik	KLP: have you seen/read http://doc.rust-lang.org/stable/book/ownership.html and the two following chapters?
2015-05-24 16:34:00	<--	mlafeldt (mlafeldt@moz-r5eets.pools.vodafone-ip.de) has quit (Ping timeout: 121 seconds)
2015-05-24 16:34:18	KLP	steveklabnik: Yea read it before taking another look at it now. How does PhantomData tie into this?
2015-05-24 16:34:42	@steveklabnik	so, PhantomData basically lets you say "pretend that this struct has a member with some property, even though it doesn't"
2015-05-24 16:35:08	@steveklabnik	it's useful for things like FFI, where you want to encode Rust's rules, but you're using raw pointers
2015-05-24 16:35:19	-->	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has joined #rust
2015-05-24 16:35:33	-->	mcarton (martin@moz-ag64s6.rev.sfr.net) has joined #rust
2015-05-24 16:35:35	@steveklabnik	http://doc.rust-lang.org/stable/std/marker/struct.PhantomData.html has an example
2015-05-24 16:35:50	-->	errordeveloper (ilya@moz-41f.3sd.204.90.IP) has joined #rust
2015-05-24 16:35:55	@steveklabnik	that page has one of my favorite lines i've ever put in the docs
2015-05-24 16:36:01	@steveklabnik	"Though they both have scary names, PhantomData<T> and "phantom types" are unrelated. 👻👻👻" hehe
2015-05-24 16:36:57	KLP	haha, thanks I’ll take a look at it
2015-05-24 16:37:33	-->	godlikesme_ (godlikesme@moz-2a2.dsd.174.79.IP) has joined #rust
2015-05-24 16:37:33	<--	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has quit (Connection closed)
2015-05-24 16:37:49	<--	mcarton1 (martin@moz-ag64s6.rev.sfr.net) has quit (Ping timeout: 121 seconds)
2015-05-24 16:38:48	-->	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has joined #rust
2015-05-24 16:38:56	-->	mcoffin (mcoffin@moz-hrs.16d.54.128.IP) has joined #rust
2015-05-24 16:39:21	<--	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-24 16:39:24	-->	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has joined #rust
2015-05-24 16:39:46	Twisol	steveklabnik: That threw me a little when I first read it, because you use PhantomData to define a phantom type, no?
2015-05-24 16:40:07	<--	asQuirreL (asQuirreL@moz-ro1qqu.ox.ac.uk) has quit (Connection closed)
2015-05-24 16:40:12	-->	decafbad (decaf@moz-b05.st2.229.88.IP) has joined #rust
2015-05-24 16:40:42	-->	asQuirreL (asQuirreL@moz-ro1qqu.ox.ac.uk) has joined #rust
2015-05-24 16:40:42	-->	gaveen_ (gaveen@moz-shn.hha.157.175.IP) has joined #rust
2015-05-24 16:42:19	<--	dcb (textual@moz-j72nfe.ca.comcast.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-24 16:42:19	<--	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has quit (Connection closed)
2015-05-24 16:42:27	<--	harrisonclarke (harrisoncla@moz-uur7pt.eastlink.ca) has quit (Connection closed)
2015-05-24 16:43:09	-->	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has joined #rust
2015-05-24 16:43:32	<--	SkyEye (gaveen@moz-239.4dt.157.175.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 16:44:28	@steveklabnik	no
2015-05-24 16:45:28	<--	jasonrm (jasonrm@moz-qreh3a.ph.cox.net) has quit (Ping timeout: 121 seconds)
2015-05-24 16:45:30	@steveklabnik	phantom types are a distinct concpet
2015-05-24 16:45:36	<--	jshs (jshs@moz-d0orlj.dip0.t-ipconnect.de) has quit (Client exited)
2015-05-24 16:46:02	Twisol	steveklabnik: How would you translate something like the Haskell phantom type `data Quantity u = Quantity Rational` (where u is the quantity's "unit") to Rust without PhantomData?
2015-05-24 16:46:02	<--	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has quit (Connection closed)
2015-05-24 16:46:30	-->	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has joined #rust
2015-05-24 16:46:41	@steveklabnik	so, my haskell is a bit shaky
2015-05-24 16:46:50	@Havvy	http://is.gd/MDYmre Line 47 - Why does the type need to be `&&`ed?
2015-05-24 16:47:10	-->	findow (Mibbit@moz-fnb.gl9.56.172.IP) has joined #rust
2015-05-24 16:47:14	thelink2012	I think the macro fragment tt needs more explanation on the book? I don't quite understand when to use it opposed to expr
2015-05-24 16:47:43	<--	lenstr (lenstr@moz-oaq.vju.25.171.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-24 16:47:51	-->	GGist (Mibbit@moz-st7v59.wa.comcast.net) has joined #rust
2015-05-24 16:48:09	@steveklabnik	but Twisol , phantomdata only came into existence fairly recently, and people have been using phantom types for longer than that. maybe rust changed or something
2015-05-24 16:48:09	<--	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has quit (Connection closed)
2015-05-24 16:48:10	-->	kidto_ (gabriel@moz-72d.fff.84.91.IP) has joined #rust
2015-05-24 16:48:11	grant	is there something like #[derive(New)] which makes a default ::new method?
2015-05-24 16:48:14	@steveklabnik	but niko tells me they're distinct ;)
2015-05-24 16:48:19	@Havvy	grant:  Nope.
2015-05-24 16:48:20	@steveklabnik	grant: there is not. new() is entirely a convention
2015-05-24 16:48:41	@steveklabnik	Twisol: maybe it's that phantomdata is a broader concept than phantom types
2015-05-24 16:48:51	-->	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has joined #rust
2015-05-24 16:49:29	bluss	grant: Default is something like it
2015-05-24 16:49:30	SpaceManiac	grant: there is a #[derive(Default)]
2015-05-24 16:49:36	grant	SpaceManiac: what’s that do
2015-05-24 16:49:55	bluss	playbot: use std::default::Default; Vec::default()
2015-05-24 16:49:56	--	Notice(playbot): <anon>:9:36: 9:48 error: unable to infer enough type information about `_`; type annotations required [E0282]
2015-05-24 16:49:56	--	Notice(playbot): <anon>:9         use std::default::Default; Vec::default()
2015-05-24 16:49:56	--	Notice(playbot): output truncated; full output at: http://bit.ly/1HECMEE
2015-05-24 16:50:01	@steveklabnik	Twisol: re-reading old articles like http://bluishcoder.co.nz/2013/08/15/phantom_types_in_rust.html, that's my guess
2015-05-24 16:50:17	-->	Rym_ (y@moz-c2u.sd4.38.217.IP) has joined #rust
2015-05-24 16:50:26	Twisol	steveklabnik: I looked at https://blog.mozilla.org/research/2014/06/23/static-checking-of-units-in-servo/ , specifically the code in rust-geom, and they use PhantomData to pull off their phantom types
2015-05-24 16:50:41	bluss	grant: (sorry.)  It creates a default something. For example an empty vec or a zero. Only works to derive it if all struct fields implement it
2015-05-24 16:50:49	grant	gotcha
2015-05-24 16:50:55	Twisol	I think it has something to do with coherence? Requiring all type parameters to be used, that i
2015-05-24 16:50:56	Twisol	s
2015-05-24 16:51:26	bluss	Twisol: and inferring variance of types
2015-05-24 16:51:27	<--	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has quit (Connection closed)
2015-05-24 16:51:49	<--	alister (oink@moz-o17fvt.dip0.t-ipconnect.de) has left #rust
2015-05-24 16:52:00	Twisol	steveklabnik: At any rate, I just wanted to pass along the feedback that the "unrelated" note threw me off a bit while looking into writing my own phantom types.
2015-05-24 16:52:08	<--	godlikesme_ (godlikesme@moz-2a2.dsd.174.79.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 16:52:13	@steveklabnik	Twisol: yeah, fair enough. i'll talk to niko about it again
2015-05-24 16:52:13	Twisol	And I'm terribly sorry to cast a shadow over your favorite doc line. :(
2015-05-24 16:52:14	<--	atomic (atomic@moz-pjn.cru.169.195.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 16:52:17	@steveklabnik	hehe it's all good
2015-05-24 16:52:18	-->	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has joined #rust
2015-05-24 16:52:49	-->	_ixti_ (ixti@moz-i3d.dae.119.188.IP) has joined #rust
2015-05-24 16:53:16	<--	kaeluka (kaeluka@moz-tn3lqd.cust.bredbandsbolaget.se) has quit (Client exited)
2015-05-24 16:53:30	-->	mlafeldt (mlafeldt@moz-r5eets.pools.vodafone-ip.de) has joined #rust
2015-05-24 16:55:36	<--	Stebalien (Stebalien@moz-arevrd.tmodns.net) has quit (Quit: leaving)
2015-05-24 16:56:21	<--	kidto_ (gabriel@moz-72d.fff.84.91.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 16:56:47	-->	ekidd (ekidd@moz-6t81cn.nh.comcast.net) has joined #rust
2015-05-24 16:57:01	<--	findow (Mibbit@moz-fnb.gl9.56.172.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-24 16:57:35	-->	strixbg (strixbg@moz-h16.8ua.123.93.IP) has joined #rust
2015-05-24 16:58:34	-->	rkruppe (chatzilla@moz-2vn41r.diu2.0rth.0908.2a02.IP) has joined #rust
2015-05-24 16:58:36	-->	jasonrm (jasonrm@moz-1a20bn.ph.cox.net) has joined #rust
2015-05-24 16:58:58	<--	mlafeldt (mlafeldt@moz-r5eets.pools.vodafone-ip.de) has quit (Connection closed)
2015-05-24 16:59:17	<--	Rym_ (y@moz-c2u.sd4.38.217.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 16:59:18	-->	dmac_ (dmac@moz-2ig65r.ca.comcast.net) has joined #rust
2015-05-24 16:59:24	-->	mlafeldt (mlafeldt@moz-r5eets.pools.vodafone-ip.de) has joined #rust
2015-05-24 17:00:18	-->	kaeluka (kaeluka@moz-tn3lqd.cust.bredbandsbolaget.se) has joined #rust
2015-05-24 17:00:43	Zidane	noob question.  Given a &str, I can have a function oeprate over it using something like: strArg.split(' ').map(...);  But, if I try to lowercase the string via "strArg.to_ascii_lowercase().split(' ').map(...) I get a "borrow doesn't live long enough" error
2015-05-24 17:00:57	-->	dinfuehr (dinfuehr@moz-sh7u9l.highway.telekom.at) has joined #rust
2015-05-24 17:01:03	-->	joliv (joliv@moz-rqfujf.fios.verizon.net) has joined #rust
2015-05-24 17:01:50	-->	mib_iudkuo (Mibbit@moz-g6k.oht.161.46.IP) has joined #rust
2015-05-24 17:02:41	joliv	Hey, I'm pretty new to macros, and I've gotta admit I have no clue what the error thrown here means: http://is.gd/GMC5m4
2015-05-24 17:02:58	<--	winding-lines (textual@moz-9utvl5.frokca.sbcglobal.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-24 17:03:26	<--	dmac_ (dmac@moz-2ig65r.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-24 17:03:26	<--	mlafeldt (mlafeldt@moz-r5eets.pools.vodafone-ip.de) has quit (Ping timeout: 121 seconds)
2015-05-24 17:03:40	bluss	Zidane: sounds like to_ascii_lowercase() is producing a value you want to hold on to
2015-05-24 17:03:54	Zidane	yeah, I tried doing a separate binding for it, but no different
2015-05-24 17:04:15	<--	Azdle (Azdle@moz-fv6arh.mn.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-24 17:04:15	bluss	joliv: hi, macros are tricky. tt's can't actually be used directly like that, they can only be passed on to other macros
2015-05-24 17:04:52	-->	nodweber (nodweber@moz-knt.fgq.178.5.IP) has joined #rust
2015-05-24 17:04:55	-->	ajhager (aajhager@moz-mcdsgi.iplsin.sbcglobal.net) has joined #rust
2015-05-24 17:04:56	bluss	joliv: with that in mind, http://is.gd/JOv3kK
2015-05-24 17:05:03	<--	dinfuehr (dinfuehr@moz-sh7u9l.highway.telekom.at) has quit (Ping timeout: 121 seconds)
2015-05-24 17:05:19	joliv	bluss: Ah, thanks! I figured there might be something like that, as I couldn't find any documentation where it was used.
2015-05-24 17:05:25	bluss	joliv: (other macros includes the same macro calling itself recursively)
2015-05-24 17:05:41	<--	pgonda (peter@moz-s36.0tp.134.75.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 17:05:50	bluss	joliv: hey I just learned this major trick last week. Well not for expressions but for items, which I had never realized
2015-05-24 17:06:10	joliv	bluss: Oh wow that's actually pretty neat, thanks for linking me back a fix!
2015-05-24 17:06:12	-->	jophish (jophish@moz-fjh8o1.gotadsl.co.uk) has joined #rust
2015-05-24 17:06:22	-->	dcb (textual@moz-j72nfe.ca.comcast.net) has joined #rust
2015-05-24 17:06:22	-->	godlikesme_ (godlikesme@moz-2a2.dsd.174.79.IP) has joined #rust
2015-05-24 17:06:41	-->	A205B064 (A205B064@moz-9s9nhk.nap.wideopenwest.com) has joined #rust
2015-05-24 17:07:27	-->	anthgur (textual@moz-3j5pq7.hfc.comcastbusiness.net) has joined #rust
2015-05-24 17:08:00	-->	JagaJaga (JagaJaga@moz-ua8.hhl.62.178.IP) has joined #rust
2015-05-24 17:08:01	<--	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has quit (Connection closed)
2015-05-24 17:08:05	bluss	joliv: don't know how far this will work, http://is.gd/AtgAxH
2015-05-24 17:08:13	-->	SerialVelocity (SerialVeloc@moz-attia0.cable.virginm.net) has joined #rust
2015-05-24 17:08:20	-->	th4t (toasty@moz-k30in7.dip0.t-ipconnect.de) has joined #rust
2015-05-24 17:08:34	<--	ajhager (aajhager@moz-mcdsgi.iplsin.sbcglobal.net) has quit (Quit: WeeChat 1.1.1)
2015-05-24 17:08:50	-->	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has joined #rust
2015-05-24 17:09:01	-->	fmcauley (fmcauley@moz-n1jjb3.res.rr.com) has joined #rust
2015-05-24 17:09:12	<--	nodweber (nodweber@moz-knt.fgq.178.5.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 17:09:14	<--	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has quit (Connection closed)
2015-05-24 17:09:14	-->	ajhager (aajhager@moz-mcdsgi.iplsin.sbcglobal.net) has joined #rust
2015-05-24 17:10:15	-->	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has joined #rust
2015-05-24 17:10:46	<--	gaveen_ (gaveen@moz-shn.hha.157.175.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-24 17:11:46	<--	mib_j2y590 (Mibbit@moz-8r79fh.as43234.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-24 17:12:01	-->	Wild_Cat (Max@moz-fa8mvt.dsl.teksavvy.com) has joined #rust
2015-05-24 17:12:14	<--	Axord (axo@moz-p6in57.ca.charter.com) has quit (Quit: What's the worst that could ha-)
2015-05-24 17:12:18	-->	lyc (lyc@moz-jft.nr8.226.207.IP) has joined #rust
2015-05-24 17:13:10	<--	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-24 17:13:12	-->	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has joined #rust
2015-05-24 17:14:26	bluss	Zidane: where is the resulting value going? If you return it, that places some expectations that it will live long (which it can't)
2015-05-24 17:14:42	<--	mcoffin (mcoffin@moz-hrs.16d.54.128.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 17:14:58	-->	zzing (textual@moz-jucm1n.cpe.distributel.net) has joined #rust
2015-05-24 17:15:21	-->	nonsensickle (nonsensickl@moz-4v0.gkd.16.182.IP) has joined #rust
2015-05-24 17:15:36	<--	KLP (KLP@moz-qdcjho.res.rr.com) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-05-24 17:16:04	Zidane	yeah, I think that's the problem
2015-05-24 17:16:06	Remram	Is this out of date? http://rustbyexample.com/generics/assoc_items/consts.html
2015-05-24 17:16:20	<--	lyc (lyc@moz-jft.nr8.226.207.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 17:16:37	<--	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has quit (Connection closed)
2015-05-24 17:16:44	<--	Blei (philipp@moz-k6lbjp.dynamic.hispeed.ch) has quit (Quit: WeeChat 1.2)
2015-05-24 17:16:52	bluss	Remram: it looks ok. It's an unstable feature
2015-05-24 17:17:21	<--	godlikesme_ (godlikesme@moz-2a2.dsd.174.79.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 17:17:29	th4t	Hey folks! I could use some advice regarding testing.I have an expensive setup and would like to have something like a pre-test step.
2015-05-24 17:17:49	-->	larhat1 (Adium@moz-vlo5br.cable.virginm.net) has joined #rust
2015-05-24 17:18:01	-->	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has joined #rust
2015-05-24 17:18:48	-->	zrneely (Mibbit@moz-fnb.gl9.56.172.IP) has joined #rust
2015-05-24 17:18:48	<--	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has quit (Connection closed)
2015-05-24 17:18:55	-->	Rym_ (y@moz-c2u.sd4.38.217.IP) has joined #rust
2015-05-24 17:19:13	th4t	What are you favourite ways to make something like this happen? Might I be overseeing something in cargo that I should know about?
2015-05-24 17:19:14	-->	rkruppe_ (chatzilla@moz-83hn7q.diu2.0rth.0908.2a02.IP) has joined #rust
2015-05-24 17:19:20	-->	saneyuki (tetsuharu@moz-fmjbd6.ucom.ne.jp) has joined #rust
2015-05-24 17:19:22	-->	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has joined #rust
2015-05-24 17:20:00	<--	saneyuki (tetsuharu@moz-fmjbd6.ucom.ne.jp) has quit (Quit: )
2015-05-24 17:20:00	<--	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has quit (Connection closed)
2015-05-24 17:20:25	<--	zzing (textual@moz-jucm1n.cpe.distributel.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-24 17:20:43	-->	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has joined #rust
2015-05-24 17:21:04	<--	wipeD (wipeD@moz-egk0dg.dip0.t-ipconnect.de) has quit (Connection closed)
2015-05-24 17:21:50	-->	godlikesme_ (godlikesme@moz-2a2.dsd.174.79.IP) has joined #rust
2015-05-24 17:21:55	-->	cow_2001 (un@moz-pk4.og5.226.188.IP) has joined #rust
2015-05-24 17:21:59	<--	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has quit (Connection closed)
2015-05-24 17:22:03	<--	ZenSword (ZenSword@moz-ivg6ls.pools.vodafone-ip.de) has quit (Quit: quit)
2015-05-24 17:22:25	<--	rkruppe (chatzilla@moz-2vn41r.diu2.0rth.0908.2a02.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 17:22:25	--	rkruppe_ is now known as rkruppe
2015-05-24 17:22:28	@Havvy	Calling `.iter().filter(|&&(ref p, ref m)|)` on a Vec<(PathBuf, Metadata)>, why is it a double reference there?
2015-05-24 17:23:05	bluss	for Vec<T> iter's element type is &T, filter passes reference to iterator's element type
2015-05-24 17:23:07	Dabo	Havvy, I think filter() takes a reference to the items in the iterator
2015-05-24 17:23:13	-->	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has joined #rust
2015-05-24 17:23:38	Dabo	so .iter() gives you an Iterator of &(..), then .filter() takes a reference to the &(PathBuf, Metadata) resulting in a closure which needs to accept &&(PathBuf, Metadata)
2015-05-24 17:23:39	<--	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has quit (Connection closed)
2015-05-24 17:23:43	@niconii	th4t: not sure if i understand what you're going for
2015-05-24 17:23:47	bluss	Havvy: with .map you take the iterator element and transform it, with .filter you get a refrence to just look & decide
2015-05-24 17:23:48	victor	can I build an .so with cargo?
2015-05-24 17:24:29	Dabo	filter() takes a reference so that the iterator remains usable afterwards - all filter is doing is choosing whether elements stay in the iterator, they need to still be accessible after it runs
2015-05-24 17:24:31	@niconii	th4t: when you run tests, you want to run certain tests first?
2015-05-24 17:24:35	@Havvy	Ah.
2015-05-24 17:24:44	-->	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has joined #rust
2015-05-24 17:24:55	@Havvy	Can I get an iterator to T instead of &T from Vec?
2015-05-24 17:25:18	th4t	niconii: thanks for the reply! Imagine I have a huge file which needs to be generated or loaded for each small test. I would prefer to do it once and reuse it (it's immutable)
2015-05-24 17:25:40	Dabo	victor, http://doc.crates.io/manifest.html#building-dynamic-or-static-libraries
2015-05-24 17:26:02	SpaceManiac	Havvy: .into_iter()
2015-05-24 17:26:06	rkruppe	Havvy: .iter().cloned()
2015-05-24 17:26:19	rkruppe	.into_iter() consumes the Vec so you can't use it afterwards
2015-05-24 17:26:20	victor	Dabo: Thanks!
2015-05-24 17:26:25	th4t	niconii: having a dependency graph for tests would be huge as well, but secondary
2015-05-24 17:26:40	@niconii	th4t: oh, i see
2015-05-24 17:26:57	<--	Astrum|Lap (Astrum|Lap@moz-skcefh.co.comcast.net) has quit (Client exited)
2015-05-24 17:26:58	-->	joeyjoejoejr (jbdietrich@moz-l52bm6.wi.charter.com) has joined #rust
2015-05-24 17:27:13	Dabo	.iter().cloned() will only work for things which implement Clone, but will leave the original vector usable - .into_iter() will consume the vector and not have any extra cloning if you don't need to use the vec afterwards
2015-05-24 17:27:15	@Havvy	I don't actually need the Vec afterwards, so that's fine.
2015-05-24 17:27:36	<--	killercu_ (killercup@moz-qj5qhi.dip0.t-ipconnect.de) has quit (Quit: Bye)
2015-05-24 17:27:56	<--	jophish (jophish@moz-fjh8o1.gotadsl.co.uk) has quit (Connection closed)
2015-05-24 17:27:57	-->	jophish (jophish@moz-fjh8o1.gotadsl.co.uk) has joined #rust
2015-05-24 17:28:02	@niconii	th4t: i'm not sure about that, but i think tests can have their own set of dependencies
2015-05-24 17:28:41	Dabo	th4t, It would also be possible to use something like lazy_static to just create it in the first test which runs and then reuse it
2015-05-24 17:28:42	<--	zrneely (Mibbit@moz-fnb.gl9.56.172.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-24 17:28:59	<--	aepsil0n (eduard@moz-6491ha.mv2h.pepi.8071.2a02.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 17:28:59	<--	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has quit (Connection closed)
2015-05-24 17:29:04	@niconii	th4t: yeah, the [dev-dependencies] section of Cargo.toml is for dependencies only used by tests and benchmarks
2015-05-24 17:29:07	<--	silven (quassel@moz-0roor3.priv.bahnhof.se) has quit (Ping timeout: 121 seconds)
2015-05-24 17:29:11	Zidane	I'm mapping over a vector using something like vector.iter().map(|elem| self.someOp(elem)).  Is there any sugar similar to vector.iter().map(self.someOp)?
2015-05-24 17:29:25	-->	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has joined #rust
2015-05-24 17:29:37	-->	rustyrazorblade (rustyrazorb@moz-ehrfqf.fios.verizon.net) has joined #rust
2015-05-24 17:29:38	-->	silven (quassel@moz-0roor3.priv.bahnhof.se) has joined #rust
2015-05-24 17:29:41	th4t	Dabo: that's neat and might work, thanks for the hint
2015-05-24 17:30:17	@niconii	oh, whoops, i think i misunderstood
2015-05-24 17:30:18	<--	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has quit (Connection closed)
2015-05-24 17:30:24	@niconii	as in, tests that depend on each other, i see
2015-05-24 17:30:35	<--	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-24 17:30:46	-->	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has joined #rust
2015-05-24 17:30:59	Dabo	th4t, https://github.com/Kimundi/lazy-static.rs with https://github.com/Stebalien/tempfile or https://github.com/rust-lang/tempdir
2015-05-24 17:31:05	Dabo	that's what I would recommend at least
2015-05-24 17:31:11	<--	asQuirreL (asQuirreL@moz-ro1qqu.ox.ac.uk) has quit (Connection closed)
2015-05-24 17:31:40	<--	gsingh93 (gulshan@moz-ln1ktu.st3l.iv8o.0004.2601.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 17:31:52	-->	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has joined #rust
2015-05-24 17:32:06	@niconii	unfortunately, i don't believe we have something like that... i think tests might be run in order though
2015-05-24 17:32:22	<--	sommoyogurt (sommoyogurt@moz-p79ls2.ip245.fastwebnet.it) has quit (Quit: )
2015-05-24 17:32:23	rumpler	Hello anone knows how I can call a c file from rust
2015-05-24 17:32:30	rumpler	anyone*
2015-05-24 17:32:43	<--	zslayton (Mibbit@moz-0gsjuf.res.rr.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-24 17:33:00	<--	JagaJaga (JagaJaga@moz-ua8.hhl.62.178.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 17:33:04	Dabo	rumpler, yeah, one sec
2015-05-24 17:33:08	th4t	niconii: having a group of parallel tests and some sequential before that would be rad
2015-05-24 17:33:18	-->	asQuirreL (asQuirreL@moz-ro1qqu.ox.ac.uk) has joined #rust
2015-05-24 17:33:18	Dabo	rumpler, check out https://doc.rust-lang.org/book/ffi.html
2015-05-24 17:33:19	th4t	Dabo: thanks! I'll check it out
2015-05-24 17:33:44	-->	jminer (Instantbird@moz-b1u.qch.163.66.IP) has joined #rust
2015-05-24 17:33:52	rumpler	Cool thanks. Ill have a look
2015-05-24 17:34:12	<--	zyphrus (David@moz-1a4.urk.98.101.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 17:34:37	th4t	niconii: from what I'm reading this is a bad idea though. I don't think a test setup step can be replaced by these
2015-05-24 17:35:07	th4t	niconii: I was also considering your dependency suggestion, but that would not quite work as far as I see
2015-05-24 17:35:09	-->	rmr (Mibbit@moz-972.53m.253.117.IP) has joined #rust
2015-05-24 17:35:31	-->	ygrek (user@moz-8j9aeu.org.ua) has joined #rust
2015-05-24 17:35:31	th4t	niconii: I'll give Dabo's links a try, they look quite promising. Thanks again!
2015-05-24 17:35:39	@niconii	th4t: yeah, this isn't something we handle very well, i guess
2015-05-24 17:35:45	@niconii	th4t: anyway, good luck
2015-05-24 17:36:00	<--	fmcauley (fmcauley@moz-n1jjb3.res.rr.com) has quit (Client exited)
2015-05-24 17:36:43	-->	qrlpx_ (smuxi@moz-50cslv.dip0.t-ipconnect.de) has joined #rust
2015-05-24 17:36:51	-->	orangeshark (erik@moz-35tq31.44tj.56ot.0306.2602.IP) has joined #rust
2015-05-24 17:36:54	-->	Hannibal_Smith (nico@moz-7gi1c3.retail.telecomitalia.it) has joined #rust
2015-05-24 17:38:07	-->	shadeslayer (shadeslayer@moz-45vi9r.jefferai.org) has joined #rust
2015-05-24 17:38:51	<--	DemonOne (Avi@moz-16roj4.cablep.bezeqint.net) has quit (Connection closed)
2015-05-24 17:38:55	<--	Rym_ (y@moz-c2u.sd4.38.217.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 17:40:10	@niconii	ah, right, no one ever did change Playpen -> Playground in the chat topic, huh
2015-05-24 17:40:13	<--	decafbad (decaf@moz-b05.st2.229.88.IP) has quit (Quit: Leaving)
2015-05-24 17:40:44	--	niconii has changed topic for #rust from "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playpen http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust" to "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-24 17:41:10	<--	dwrensha (chatzilla@moz-52ciq2.east.verizon.net) has quit (Ping timeout: 121 seconds)
2015-05-24 17:41:10	th4t	Another one: are there some guidelines on what is in good taste when creating a rust library? Stuff like 'functions should not panic', 'have module level documentation'? Alternatively, what are great examples of repos on github that are 'doing it right' and you would recommend?
2015-05-24 17:43:22	<--	Zidane (Zidane@moz-382v9o.ca.comcast.net) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-05-24 17:43:31	Dabo	th4t, Those two things you mentioned are big ones in library development
2015-05-24 17:43:43	Dabo	th4t, I'd recommend looking at the rust libraries in the rust-lang github org
2015-05-24 17:44:03	@niconii	th4t: there's some relevant stuff at http://doc.rust-lang.org/style/ that might be worth looking at
2015-05-24 17:44:13	@niconii	th4t: though keep in mind it's largely unfinished
2015-05-24 17:44:30	<--	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-24 17:44:33	Remram	Where do I find the math functions now?
2015-05-24 17:44:36	Dabo	th4t, https://github.com/rust-lang/ has quite a few libraries which are separate from stdlib - they are good examples of crates.io published libraries following best practices
2015-05-24 17:44:41	Remram	I see that std::f32 & co are unstable
2015-05-24 17:44:57	@niconii	th4t: for instance: http://doc.rust-lang.org/style/errors/signaling.html
2015-05-24 17:45:24	Dabo	Remram, most of the functions should be stable - what are you looking for in particular?
2015-05-24 17:45:29	Remram	tanh()
2015-05-24 17:45:44	Dabo	http://doc.rust-lang.org/std/primitive.f32.html#method.tanh is stable
2015-05-24 17:45:51	-->	tikue (tim@moz-g5n.ha3.38.65.IP) has joined #rust
2015-05-24 17:45:53	-->	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has joined #rust
2015-05-24 17:46:06	Dabo	Remram, the cross-num-type functions aren't stable, but each individual primitive should have all the functions defined on it
2015-05-24 17:46:08	posix4e	Anyway if i have a failing test to always run it but not have it interrupt other tests from being run?
2015-05-24 17:46:09	-->	DemonOne (Avi@moz-lpns68.red.bezeqint.net) has joined #rust
2015-05-24 17:46:18	<--	rootnode (rootnode@moz-go1ut4.ip1.george24.com) has quit (Ping timeout: 121 seconds)
2015-05-24 17:46:22	-->	mlafeldt (mlafeldt@moz-r5eets.pools.vodafone-ip.de) has joined #rust
2015-05-24 17:46:22	-->	john (john@moz-0ir69j.mobility.exede.net) has joined #rust
2015-05-24 17:46:23	Remram	ok then I have some other error somewhere
2015-05-24 17:46:30	Dabo	could you pastebin the error?
2015-05-24 17:46:39	-->	aepsil0n (eduard@moz-sdb63f.mullvad.net) has joined #rust
2015-05-24 17:46:53	-->	JagaJaga (JagaJaga@moz-ua8.hhl.62.178.IP) has joined #rust
2015-05-24 17:47:05	Remram	ok I need to qualify it as f32::tanh
2015-05-24 17:47:15	Dabo	Remram, just calling x.tanh() should work
2015-05-24 17:47:30	Remram	yes but apparently it's getting &f32
2015-05-24 17:47:30	Dabo	if x is an f32 or f64
2015-05-24 17:47:43	Dabo	that shouldn't matter .-. could you pastebin code & error?
2015-05-24 17:47:43	Remram	I guess it's gonna be |&e| tanh(e)
2015-05-24 17:47:46	th4t	niconii Dabo: thank you very much, I'll take a look at those! Appreciate it.
2015-05-24 17:48:02	-->	lenstr (lenstr@moz-oaq.vju.25.171.IP) has joined #rust
2015-05-24 17:48:05	-->	genbattle (genbattle@moz-4v0.gkd.16.182.IP) has joined #rust
2015-05-24 17:48:06	<--	ai (ai@moz-pqofrl.sunline.net.ua) has quit (Quit: Leaving.)
2015-05-24 17:48:06	-->	asQuirre_ (asQuirreL@moz-ro1qqu.ox.ac.uk) has joined #rust
2015-05-24 17:48:50	Dabo	posix4e, would it be a test you would want to mark with #[should_panic]?
2015-05-24 17:48:56	<--	faern (faern@moz-4ef681.jagochmittmoln.se) has quit (Ping timeout: 121 seconds)
2015-05-24 17:49:01	Dabo	or does it sometimes fail and sometimes not, and you just want to ignore it but run it anyways?
2015-05-24 17:49:10	<--	lenstr (lenstr@moz-oaq.vju.25.171.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-24 17:49:13	posix4e	latter
2015-05-24 17:49:20	-->	lenstr (lenstr@moz-oaq.vju.25.171.IP) has joined #rust
2015-05-24 17:49:50	-->	tyler569 (tyler@moz-j21k4h.dyn.optonline.net) has joined #rust
2015-05-24 17:49:55	Dabo	I don't think rust currently has a way of ignoring the result of a test while still running it :/ - you could always have #[should_panic] on it and insert a manual panic!() call at the end of it though .-.
2015-05-24 17:50:28	<--	asQuirreL (asQuirreL@moz-ro1qqu.ox.ac.uk) has quit (Ping timeout: 121 seconds)
2015-05-24 17:50:29	<--	lenstr (lenstr@moz-oaq.vju.25.171.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-24 17:50:45	<--	mlafeldt (mlafeldt@moz-r5eets.pools.vodafone-ip.de) has quit (Connection closed)
2015-05-24 17:51:01	<--	sternmull (kringel@moz-vdai01.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2015-05-24 17:51:16	-->	mlafeldt (mlafeldt@moz-r5eets.pools.vodafone-ip.de) has joined #rust
2015-05-24 17:51:25	@niconii	posix4e: are you talking about a specific test you want to ignore, or do you want it to always run all tests
2015-05-24 17:51:33	<--	anthgur (textual@moz-3j5pq7.hfc.comcastbusiness.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-24 17:51:59	posix4e	Being able to always run all tests is the right behavior
2015-05-24 17:52:06	<--	tikue (tim@moz-g5n.ha3.38.65.IP) has quit (Connection closed)
2015-05-24 17:52:10	-->	jedireza (jedireza@moz-ungcc1.dsl.ovh.fr) has joined #rust
2015-05-24 17:53:05	@niconii	posix4e: unfortunately, it doesn't seem cargo test has a flag for that, but i just wanted to clarify what you want
2015-05-24 17:53:11	<--	kmicu (kmicu@moz-uga.edn.218.91.IP) has quit (Client exited)
2015-05-24 17:53:37	@niconii	posix4e: it's probably something you want to open an issue for, though, adding a "cargo test --run-all" option
2015-05-24 17:53:43	<--	kaeluka (kaeluka@moz-tn3lqd.cust.bredbandsbolaget.se) has quit (Client exited)
2015-05-24 17:54:23	posix4e	coolsville thanks
2015-05-24 17:54:46	-->	faern (faern@moz-4ef681.jagochmittmoln.se) has joined #rust
2015-05-24 17:54:50	@niconii	or --ignore-failures maybe, not sure what's the best thing to call it
2015-05-24 17:54:57	<--	kakefabrikken (Mibbit@moz-9m21i0.studby.ntnu.no) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-24 17:55:18	<--	mlafeldt (mlafeldt@moz-r5eets.pools.vodafone-ip.de) has quit (Ping timeout: 121 seconds)
2015-05-24 17:55:50	--	NameNotFound is now known as zz_NameNotFound
2015-05-24 17:56:46	-->	dwrensha (chatzilla@moz-46o4hi.pa.comcast.net) has joined #rust
2015-05-24 17:58:33	<--	th4t (toasty@moz-k30in7.dip0.t-ipconnect.de) has left #rust
2015-05-24 17:58:43	<--	SneakySnake (nya@moz-i9is4u.pool.telekom.hu) has quit (Connection closed)
2015-05-24 17:58:44	-->	ruukasu (ruukasu@moz-obsv1c.res.rr.com) has joined #rust
2015-05-24 17:59:29	<--	Dekker (Dekker@moz-qc61ff.tbcn.telia.com) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-24 18:00:59	-->	hjr3 (hradtke@moz-rga0be.ca.comcast.net) has joined #rust
2015-05-24 18:01:05	<--	tyler569 (tyler@moz-j21k4h.dyn.optonline.net) has quit (Ping timeout: 121 seconds)
2015-05-24 18:01:32	-->	dinfuehr (dinfuehr@moz-sh7u9l.highway.telekom.at) has joined #rust
2015-05-24 18:01:40	geri	are there plans to target ARM for Rust besides using a cross compiler?!
2015-05-24 18:02:01	<--	Porkepix (Porkepix@moz-g50t2v.abo.wanadoo.fr) has quit (Quit: My laptop has gone to sleep. ZZZzzz…)
2015-05-24 18:02:09	eddyb	geri: what do you mean?
2015-05-24 18:02:15	eddyb	geri: there's ARM rustc builds already
2015-05-24 18:02:23	eddyb	(that you can run on a raspberry pi, for example)
2015-05-24 18:02:33	geri	i have a arm device and currently need to cross compile rust
2015-05-24 18:02:39	eddyb	and the term cross-compiler is misleading for Rust
2015-05-24 18:02:44	<--	john (john@moz-0ir69j.mobility.exede.net) has quit (Ping timeout: 121 seconds)
2015-05-24 18:02:51	geri	https://github.com/japaric/ruststrap/blob/master/1-how-to-cross-compile.md
2015-05-24 18:02:59	eddyb	any rust compiler can cross-compile, it's the libraries that you need
2015-05-24 18:03:06	eddyb	(and a linker, possibly)
2015-05-24 18:03:19	<--	jmbto (jmbto@moz-q4m8bu.hca5.8frp.0e35.2a01.IP) has quit (Quit: WeeChat 1.1.1)
2015-05-24 18:03:25	geri	it uses this linker: target.arm-unknown-linux-gnueabihf
2015-05-24 18:03:53	eddyb	that's a target triple
2015-05-24 18:03:59	<--	asQuirre_ (asQuirreL@moz-ro1qqu.ox.ac.uk) has quit (Connection closed)
2015-05-24 18:04:05	geri	linker = "arm-linux-gnueabihf-gcc-4.8"
2015-05-24 18:04:11	-->	Porkepix (Porkepix@moz-g50t2v.abo.wanadoo.fr) has joined #rust
2015-05-24 18:04:13	geri	so a gcc linker!
2015-05-24 18:04:22	eddyb	what's the issue?
2015-05-24 18:04:45	&mbrubeck	Rust also uses GCC to link for x86/x64
2015-05-24 18:05:13	-->	asQuirreL (asQuirreL@moz-ro1qqu.ox.ac.uk) has joined #rust
2015-05-24 18:05:37	-->	anthgur (textual@moz-3j5pq7.hfc.comcastbusiness.net) has joined #rust
2015-05-24 18:05:42	<--	dinfuehr (dinfuehr@moz-sh7u9l.highway.telekom.at) has quit (Ping timeout: 121 seconds)
2015-05-24 18:05:46	-->	gen_battle (genbattle@moz-4v0.gkd.16.182.IP) has joined #rust
2015-05-24 18:06:03	eddyb	getting rid of the gcc dependency, and going directly to the linker would probably require some extra work for libc
2015-05-24 18:06:09	<--	rmr (Mibbit@moz-972.53m.253.117.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-24 18:06:16	geri	eddyb: is that a lot of work?
2015-05-24 18:06:19	zofrex	geri: do you mean you want to compile rust code on ARM?
2015-05-24 18:06:22	-->	nrc (nrc@moz-14pjgj.xtra.co.nz) has joined #rust
2015-05-24 18:06:23	--	Mode #rust [+o nrc] by ChanServ
2015-05-24 18:06:23	<--	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-24 18:06:31	-->	jophish_ (jophish@moz-fjh8o1.gotadsl.co.uk) has joined #rust
2015-05-24 18:06:33	geri	zofrex: nope... just execute the binary
2015-05-24 18:07:25	thombles	I got an instruction on a pull request "r=me after the nit" - does anyone know what r= does? I can see r? and r+ but = looks like maybe a typo?
2015-05-24 18:07:43	<--	turtil (turtil@moz-gfc.es4.23.103.IP) has quit (Connection closed)
2015-05-24 18:07:50	-->	turtil (turtil@moz-gfc.es4.23.103.IP) has joined #rust
2015-05-24 18:08:04	@nrc	it doesn't *do* anything
2015-05-24 18:08:07	<--	turtil (turtil@moz-gfc.es4.23.103.IP) has quit (Quit: WeeChat 1.1.1)
2015-05-24 18:08:17	-->	turtil (turtil@moz-gfc.es4.23.103.IP) has joined #rust
2015-05-24 18:08:22	@nrc	it's a way to say r+ with the named person
2015-05-24 18:08:31	@nrc	usually r=someone else
2015-05-24 18:08:39	<--	genbattle (genbattle@moz-4v0.gkd.16.182.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 18:08:50	@nrc	but people use r=me instead of r+ sometimes, especially when the r+ is conditional
2015-05-24 18:09:14	<--	jophish (jophish@moz-fjh8o1.gotadsl.co.uk) has quit (Ping timeout: 121 seconds)
2015-05-24 18:09:14	bluss	thombles: It's not an instruction to you unfortunately, just to any other reviewer
2015-05-24 18:09:47	thombles	Aah that makes more sense
2015-05-24 18:09:54	bluss	thombles: so any reviewer can come around and tag your PR as approved, but r=thatperson will just put them in the protocol as reviewers
2015-05-24 18:10:03	-->	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has joined #rust
2015-05-24 18:10:05	geri	thombles: what do you mean?
2015-05-24 18:10:17	thombles	geri: https://github.com/rust-lang/rust/pull/25742#issuecomment-105027045
2015-05-24 18:10:39	thombles	I just wanted to understand the highfive syntax before I did anything
2015-05-24 18:10:51	<--	ajhager (aajhager@moz-mcdsgi.iplsin.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-24 18:10:56	thombles	Thanks all :)
2015-05-24 18:10:57	--	zz_NameNotFound is now known as NameNotFound
2015-05-24 18:10:59	<--	turtil (turtil@moz-gfc.es4.23.103.IP) has quit (Quit: WeeChat 1.1.1)
2015-05-24 18:11:04	<--	blank_name (blank_name@moz-d5sbf3.mi.frontiernet.net) has quit (Quit: leaving)
2015-05-24 18:11:24	geri	thombles: i thought you replied to my ARM stuff...
2015-05-24 18:11:55	thombles	Oh, nope sorry
2015-05-24 18:11:56	--	NameNotFound is now known as zz_NameNotFound
2015-05-24 18:13:08	-->	lyc (lyc@moz-jft.nr8.226.207.IP) has joined #rust
2015-05-24 18:13:10	zofrex	geri: off-topic but what are you using for ARM out of interest?
2015-05-24 18:14:41	-->	Rym_ (y@moz-c2u.sd4.38.217.IP) has joined #rust
2015-05-24 18:14:44	<--	jedireza (jedireza@moz-ungcc1.dsl.ovh.fr) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-24 18:15:21	-->	kidto_ (gabriel@moz-fj4h3j.as13285.net) has joined #rust
2015-05-24 18:16:21	geri	zofrex: arm cortex a9!
2015-05-24 18:16:38	zofrex	cool!
2015-05-24 18:16:43	zofrex	but I meant what toolchain, sorry ;)
2015-05-24 18:16:46	geri	zofrex: you have the same?
2015-05-24 18:17:08	-->	RC9 (RCIX@moz-vnmep7.ph.cox.net) has joined #rust
2015-05-24 18:17:17	<--	lyc (lyc@moz-jft.nr8.226.207.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 18:18:29	zofrex	I have an LP1768 (Cortex M3) and an STM32F407 (I think that's an M4?)
2015-05-24 18:18:40	zofrex	both bought specifically so I could try out zinc.rs :)
2015-05-24 18:18:43	geri	cool, did you try rust?
2015-05-24 18:18:47	mcpherrin	zofrex: yeah, STMFN = Cortex MN
2015-05-24 18:19:03	geri	did zinc work fine?
2015-05-24 18:19:04	-->	Kingsquee (kingsley@moz-3fm07c.bchsia.telus.net) has joined #rust
2015-05-24 18:19:05	mcpherrin	zofrex: yeah, STMF${N} = Cortex M${N} 
2015-05-24 18:19:06	geri	zofrex: 
2015-05-24 18:19:15	<--	Rym_ (y@moz-c2u.sd4.38.217.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 18:19:15	mcpherrin	zofrex: yeah, STM32F${N} = Cortex M${N} 
2015-05-24 18:19:21	 *	mcpherrin stops correcting self now
2015-05-24 18:19:29	geri	zofrex: what your experience with zynq?
2015-05-24 18:19:32	zofrex	yeah I downloaded a GCC toolchain from ARMs website and hooked that up to zinc and it Just Worked which was pretty nice
2015-05-24 18:19:35	geri	i mean zinc.rs :D
2015-05-24 18:19:51	-->	jedireza (jedireza@moz-ungcc1.dsl.ovh.fr) has joined #rust
2015-05-24 18:19:58	zofrex	um... pretty verbose compared to Arduino but the additional safety did prevent a bunch of stupid bugs/mistakes
2015-05-24 18:20:23	geri	zofrex: did you end up in writing a lot of unsafe code??
2015-05-24 18:20:38	-->	idegen (greg@moz-9c4nle.or.frontiernet.net) has joined #rust
2015-05-24 18:21:08	-->	rmr (Mibbit@moz-972.53m.253.117.IP) has joined #rust
2015-05-24 18:21:13	zofrex	no, I don't think I had any unsafe code at all
2015-05-24 18:23:36	--	irc: disconnected from server
2015-05-24 18:23:48	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-24 18:23:48	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-24 18:23:48	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-24 18:23:48	--	Channel #rust: 970 nicks (15 ops, 0 halfops, 2 voices, 953 normals)
2015-05-24 18:23:50	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-24 18:23:59	@steveklabnik	exalt: https://docs.python.org/2/library/struct.html <- this one? (i'm more of a rubyist than a pythonista)
2015-05-24 18:24:22	<--	Wild_Cat (Max@moz-fa8mvt.dsl.teksavvy.com) has quit (Ping timeout: 121 seconds)
2015-05-24 18:24:28	<--	tincan (tincan___@moz-05q.1nm.133.145.IP) has quit (Connection closed)
2015-05-24 18:24:37	exalt	ye
2015-05-24 18:24:50	rumpler	Hello, Im trying to call a c-function from rust. Im using cargo to compile c-file and create a c-library: .a-file. But I get this error here: error: linking with `cc` failed: exit code: 1
2015-05-24 18:24:52	exalt	steveklabnik: yes*
2015-05-24 18:25:06	rumpler	Anyone knows why maybe?
2015-05-24 18:25:19	-->	dmac_ (dmac@moz-jen1k8.ca.comcast.net) has joined #rust
2015-05-24 18:25:26	-->	Tobba (Tobba@moz-o13d22.bredband.telia.com) has joined #rust
2015-05-24 18:25:29	-->	Rym_ (y@moz-c2u.sd4.38.217.IP) has joined #rust
2015-05-24 18:25:31	<--	larhat1 (Adium@moz-vlo5br.cable.virginm.net) has quit (Quit: Leaving.)
2015-05-24 18:25:54	@steveklabnik	exalt: rustc-serialize is the original serialization library, serde is the next-gen one. there's also stuff like capnproto that can serailize things for you too
2015-05-24 18:26:36	<--	kidto_ (gabriel@moz-fj4h3j.as13285.net) has quit (Ping timeout: 121 seconds)
2015-05-24 18:26:38	<--	victor (Mibbit@moz-fgundf.dynamic.ziggo.nl) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-24 18:26:46	<--	RC9 (RCIX@moz-vnmep7.ph.cox.net) has quit (Ping timeout: 121 seconds)
2015-05-24 18:27:01	geri	zofrex: did you see https://github.com/antoinealb/rust-demo-cortex-m4 ?
2015-05-24 18:27:34	geri	rumpler: see: https://github.com/geraldstanje/rust_snippets/tree/master/rust_to_c
2015-05-24 18:27:45	zofrex	I did not
2015-05-24 18:27:58	<--	agjacome (agjacome@moz-acoq63.dynamic.jazztel.es) has quit (Ping timeout: 121 seconds)
2015-05-24 18:27:59	-->	nicholasf2 (nicholasf@moz-5gls9l.internode.on.net) has joined #rust
2015-05-24 18:28:04	-->	nstoddard_ (nstoddard@moz-iu69ov.jcf6.2eo7.0009.2601.IP) has joined #rust
2015-05-24 18:28:19	<--	nicholasf (sid28130@moz-g47rr6.ealing.irccloud.com) has quit (Quit: )
2015-05-24 18:28:48	-->	kidto_ (gabriel@moz-fj4h3j.as13285.net) has joined #rust
2015-05-24 18:28:59	<--	Triton (cindela@moz-dlkpia.bb.dnainternet.fi) has quit (Ping timeout: 121 seconds)
2015-05-24 18:29:12	<--	fkaa (tundmatu@moz-501od2.business.telia.com) has quit (Ping timeout: 121 seconds)
2015-05-24 18:30:17	--	nicholasf2 is now known as nicholasf
2015-05-24 18:30:21	<--	nstoddard (nstoddard@moz-iu69ov.jcf6.2eo7.0009.2601.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 18:30:30	--	nstoddard_ is now known as nstoddard
2015-05-24 18:31:31	rumpler	yayy it worked thanks. dunno understand the magic behind it though:)+
2015-05-24 18:31:34	-->	skeuomorf (skeuomorf@moz-ij1.21q.32.197.IP) has joined #rust
2015-05-24 18:32:48	--	irc: disconnected from server
2015-05-24 18:33:00	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-24 18:33:00	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-24 18:33:00	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-24 18:33:00	--	Channel #rust: 967 nicks (15 ops, 0 halfops, 2 voices, 950 normals)
2015-05-24 18:33:02	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-24 18:33:16	<--	rmr (Mibbit@moz-972.53m.253.117.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-24 18:33:44	-->	arBmind1 (Andreas@moz-258dsr.dyn.telefonica.de) has joined #rust
2015-05-24 18:34:08	<--	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-24 18:34:09	-->	tyler569 (tyler@moz-j21k4h.dyn.optonline.net) has joined #rust
2015-05-24 18:34:45	<--	Kornel (Kornel@moz-l20jk6.81.in-addr.arpa) has quit (Quit: Cmd+Q)
2015-05-24 18:34:56	<--	godlikesme_ (godlikesme@moz-2a2.dsd.174.79.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 18:35:19	<--	dmac_ (dmac@moz-jen1k8.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-24 18:35:21	thirtythreeforty	Could someone explain the difference between moving out of borrowed content and changing the borrowed content?
2015-05-24 18:35:51	<--	jedireza (jedireza@moz-ungcc1.dsl.ovh.fr) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-24 18:35:59	-->	godlikesme_ (godlikesme@moz-2a2.dsd.174.79.IP) has joined #rust
2015-05-24 18:36:07	<--	arBmind (Andreas@moz-5nqjp0.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2015-05-24 18:36:08	thirtythreeforty	I'm trying to implement a linked list (to learn, obv. the standard library has an implementation). http://is.gd/vyIxyV won't build.
2015-05-24 18:37:05	<--	Jesin (Jesin@moz-48mne2.nsvltn.sbcglobal.net) has quit (Connection closed)
2015-05-24 18:37:14	-->	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has joined #rust
2015-05-24 18:37:22	-->	Jesin (Jesin@moz-48mne2.nsvltn.sbcglobal.net) has joined #rust
2015-05-24 18:37:41	Morten	Is there a macro that prints only when running a test?
2015-05-24 18:37:47	thirtythreeforty	The reason is that my Node::insert_after takes `&mut self`.  Saying let x = self.next is disallowed.
2015-05-24 18:38:01	-->	clatour (clatour@moz-2dc34f.hlrn.qwest.net) has joined #rust
2015-05-24 18:38:06	thirtythreeforty	However, saying self.next = Some(new_next) works fine!
2015-05-24 18:38:20	Tari	Morten: not that I know of, but you could make your own easily
2015-05-24 18:39:00	--	ril is now known as ril[away]
2015-05-24 18:39:10	mcpherrin	thirtythreeforty: you're moving out os self.next; leaving it deinitialized.  You put something back in right after that, but the borrow checker doesn't know that
2015-05-24 18:39:12	joliv	Is it possible to get an Option from a Vec at a certain index (returning None if the index is out of bounds)
2015-05-24 18:39:18	joliv	?
2015-05-24 18:39:35	thirtythreeforty	mcpherrin, I see.  Is there a swap() operation?
2015-05-24 18:39:42	-->	yuja (yuja@moz-4hssp3.so-net.ne.jp) has joined #rust
2015-05-24 18:39:49	thirtythreeforty	Alternatively, why can't the borrow checker figure that out?
2015-05-24 18:39:49	@steveklabnik	joliv: http://doc.rust-lang.org/stable/std/vec/struct.Vec.html#method.get
2015-05-24 18:40:02	Tari	Morten: something like macro_rules! print_if_test { ($thing:expr) => (if cfg!(test) { println!($thing) }) }
2015-05-24 18:40:13	<--	gleb (gleb@moz-3u1drv.rusanovka-net.kiev.ua) has quit (Ping timeout: 121 seconds)
2015-05-24 18:40:14	-->	turtil (turtil@moz-gfc.es4.23.103.IP) has joined #rust
2015-05-24 18:40:27	joliv	steveklabnik: Wow, can't believe I skipped over that one in the docs. Thanks a ton!
2015-05-24 18:40:32	-->	mkpankov (user@moz-cv3.n6u.23.84.IP) has joined #rust
2015-05-24 18:40:36	mcpherrin	thirtythreeforty: there's a std::mem::swap and std::mem::replace -- one of those should do it for you
2015-05-24 18:40:42	@steveklabnik	joliv: no worries :)
2015-05-24 18:40:52	Morten	tari: thanks, maybe I'll write one
2015-05-24 18:41:13	mcpherrin	thirtythreeforty: worst-case is you have to do a small unsafe operation there, but that should be avoidable I think
2015-05-24 18:42:17	<--	Hannibal_Smith (nico@moz-7gi1c3.retail.telecomitalia.it) has quit (Quit: Leaving)
2015-05-24 18:42:36	-->	James (quassel@moz-739rgr.range86-148.btcentralplus.com) has joined #rust
2015-05-24 18:43:17	<--	Jesin (Jesin@moz-48mne2.nsvltn.sbcglobal.net) has quit (Connection closed)
2015-05-24 18:43:31	<--	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-24 18:43:37	-->	Jesin (Jesin@moz-48mne2.nsvltn.sbcglobal.net) has joined #rust
2015-05-24 18:43:38	<--	cakecatz (cakecatz@moz-edrvuc.sannet.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-24 18:43:53	thirtythreeforty	mcpherrin, yeah, unsafe should be able to be avoided here.  Is swap using unsafe under the hood?
2015-05-24 18:44:05	<--	kidto_ (gabriel@moz-fj4h3j.as13285.net) has quit (Ping timeout: 121 seconds)
2015-05-24 18:44:22	<--	Jesin (Jesin@moz-48mne2.nsvltn.sbcglobal.net) has quit (Quit: Leaving)
2015-05-24 18:45:28	-->	Romster (Romster@moz-4g83e8.rev.eftel.com) has joined #rust
2015-05-24 18:46:43	-->	daheise (Mibbit@moz-gl1dm6.knvltn.sbcglobal.net) has joined #rust
2015-05-24 18:47:37	mcpherrin	thirtythreeforty: surely it is
2015-05-24 18:47:38	<--	jminer (Instantbird@moz-b1u.qch.163.66.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 18:48:21	mcpherrin	Eventually basically everything is using unsafe under the hood, especially if there are pointery things like std::mem
2015-05-24 18:48:54	-->	Wild_Cat (Max@moz-fa8mvt.dsl.teksavvy.com) has joined #rust
2015-05-24 18:48:57	thirtythreeforty	Makes sense, although it's frustrating how often it seems the answer is to "use unsafe."
2015-05-24 18:48:58	-->	Wilduck (erik@moz-jjuueh.fios.verizon.net) has joined #rust
2015-05-24 18:49:06	thirtythreeforty	Given that we're using Rust after all
2015-05-24 18:49:29	eddyb	well...
2015-05-24 18:49:39	eddyb	swap could be implemented in safe code in the future
2015-05-24 18:50:03	eddyb	(by moving out of &mut T)
2015-05-24 18:50:04	@steveklabnik	unsafe isn't evil, it's just something to be undertaken with care
2015-05-24 18:50:22	eddyb	Pony's assignment operator actually performs replace, which means you can use it for swaps
2015-05-24 18:50:30	Wilduck	Hey all, I’m just getting started with Rust, and I’m trying to use std::io. I’m a bit confused about what std::io::prelude is though. Is there an simple explanation for how I need to interact with std::io/std::io::prelude?
2015-05-24 18:50:48	-->	lenstr (lenstr@moz-oaq.vju.25.171.IP) has joined #rust
2015-05-24 18:50:50	thirtythreeforty	eddyb, I thought moves from &mut T are what's giving me trouble here
2015-05-24 18:51:02	@steveklabnik	Wilduck: it's just a conveninent way to import a lot of things
2015-05-24 18:51:03	eddyb	thirtythreeforty: it's a planned feature
2015-05-24 18:51:03	ChrisMorgan	Wilduck: its purpose is purely `use std::io::prelude::*;` which might be useful.
2015-05-24 18:51:06	<--	fredrik (fredrik@moz-2b08ue.priv.bahnhof.se) has quit (Ping timeout: 121 seconds)
2015-05-24 18:51:33	thirtythreeforty	Oh, OK.  What's blocking the feature?
2015-05-24 18:51:38	mcpherrin	thirtythreeforty: We just need to teach the compiler that it's okay to move from &mut if you put something back in
2015-05-24 18:51:40	-->	bombless (_@moz-uag.piv.41.59.IP) has joined #rust
2015-05-24 18:51:56	thirtythreeforty	Ah, exactly like my brain's borrow checker knows is OK
2015-05-24 18:52:00	<--	lenstr (lenstr@moz-oaq.vju.25.171.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-24 18:52:02	eddyb	and codegen it in an unwind-safe way
2015-05-24 18:52:04	Wilduck	steveklabnik: ChrisMorgan: So, basically it makes it so I don’t have to go through the full namespace of various std::io things? It just pulls a ton of stuff into the current namespace?
2015-05-24 18:52:14	-->	lenstr (lenstr@moz-oaq.vju.25.171.IP) has joined #rust
2015-05-24 18:52:19	rkruppe	thirtythreeforty: Developer time :) It's also something that needs to be done carefully to avoid soundness holes
2015-05-24 18:52:28	ChrisMorgan	Wilduck: https://doc.rust-lang.org/std/io/prelude/ says it all
2015-05-24 18:52:45	@steveklabnik	Wilduck: https://github.com/rust-lang/rust/blob/master/src/libstd/io/prelude.rs
2015-05-24 18:52:53	@steveklabnik	hehe we linked the same thing but in two ways
2015-05-24 18:52:54	-->	Jesin (Jesin@moz-48mne2.nsvltn.sbcglobal.net) has joined #rust
2015-05-24 18:53:05	-->	cakecatz (cakecatz@moz-edrvuc.sannet.ne.jp) has joined #rust
2015-05-24 18:53:25	-->	zzing (textual@moz-jucm1n.cpe.distributel.net) has joined #rust
2015-05-24 18:53:39	thirtythreeforty	rkruppe, ^_^ is there a discussion of all that?
2015-05-24 18:53:45	<--	lenstr (lenstr@moz-oaq.vju.25.171.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-24 18:53:53	<--	mkpankov (user@moz-cv3.n6u.23.84.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-24 18:54:17	Wilduck	ChrisMorgan: I’m afraid that documentation didn’t click with me. Maybe it’s simpler than I think, but like I said, I’m just getting started with Rust and the language there just seemed foreign to me. Maybe I’ll have to just accept it as magic at this point.
2015-05-24 18:55:00	--	irc: disconnected from server
2015-05-24 18:55:12	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-24 18:55:12	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-24 18:55:12	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-24 18:55:12	--	Channel #rust: 967 nicks (15 ops, 0 halfops, 2 voices, 950 normals)
2015-05-24 18:55:14	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-24 18:55:25	Wilduck	I see, I think that helps.
2015-05-24 18:55:42	<--	bombless (_@moz-uag.piv.41.59.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 18:55:43	Wilduck	thanks for the pointers
2015-05-24 18:55:57	thirtythreeforty	OK, I'll look for it rkruppe.  Got it working with std::mem::swap, so thanks all.
2015-05-24 18:56:12	-->	mgottschlag (quassel@moz-8uvcc8.hsi15.kabel-badenwuerttemberg.de) has joined #rust
2015-05-24 18:56:44	<--	Binero (jeroen@moz-91joat.69vi.s4ge.1810.2a02.IP) has quit (Connection closed)
2015-05-24 19:00:17	<--	eddyb (eddyb@moz-ure.pug.25.188.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 19:00:40	_habnabit	so even with `cargo build --manifest-path`, the `target` directory will be created as a sibling to the manifest?
2015-05-24 19:00:48	<--	thirtythreeforty (thirtythree@moz-9hn.f05.170.166.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 19:02:12	--	irc: disconnected from server
2015-05-24 19:02:24	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-24 19:02:24	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-24 19:02:24	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-24 19:02:24	--	Channel #rust: 964 nicks (15 ops, 0 halfops, 2 voices, 947 normals)
2015-05-24 19:02:26	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-24 19:02:28	-->	dinfuehr (dinfuehr@moz-sh7u9l.highway.telekom.at) has joined #rust
2015-05-24 19:02:55	-->	chc4 (chc4@moz-mjph4c.ma.comcast.net) has joined #rust
2015-05-24 19:03:48	<--	aepsil0n (eduard@moz-sdb63f.mullvad.net) has quit (Connection closed)
2015-05-24 19:04:23	<--	yuja (yuja@moz-4hssp3.so-net.ne.jp) has quit (Ping timeout: 121 seconds)
2015-05-24 19:04:35	<--	joliv (joliv@moz-rqfujf.fios.verizon.net) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-05-24 19:04:46	-->	Astrum|Lap (Astrum|Lap@moz-skcefh.co.comcast.net) has joined #rust
2015-05-24 19:06:03	<--	skeuomorf (skeuomorf@moz-ij1.21q.32.197.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 19:06:09	<--	proc (proc@moz-pushtu.dip0.t-ipconnect.de) has quit (Quit: Gotta eat my pizza)
2015-05-24 19:06:34	<--	dinfuehr (dinfuehr@moz-sh7u9l.highway.telekom.at) has quit (Ping timeout: 121 seconds)
2015-05-24 19:07:36	-->	njn (chatzilla@moz-lkkj0s.iinet.net.au) has joined #rust
2015-05-24 19:07:54	<--	joeyjoejoejr (jbdietrich@moz-l52bm6.wi.charter.com) has quit (Ping timeout: 121 seconds)
2015-05-24 19:08:52	-->	winding-lines (textual@moz-9utvl5.frokca.sbcglobal.net) has joined #rust
2015-05-24 19:08:56	<--	areski (areski@moz-2lg0ha.user.ono.com) has quit (Ping timeout: 121 seconds)
2015-05-24 19:09:17	-->	ytain (ytain@moz-07c3h9.dsl.teksavvy.com) has joined #rust
2015-05-24 19:10:28	<--	Rym_ (y@moz-c2u.sd4.38.217.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 19:10:40	<--	swgillespie (swgillespie@moz-rn1.vmq.232.104.IP) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-24 19:11:32	<--	espadrine (tyl@moz-l019mn.fbx.proxad.net) has quit (Ping timeout: 121 seconds)
2015-05-24 19:11:55	--	zz_NameNotFound is now known as NameNotFound
2015-05-24 19:12:18	-->	ptalbot (ptalbot@moz-j4gnuh.fbx.proxad.net) has joined #rust
2015-05-24 19:12:39	-->	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has joined #rust
2015-05-24 19:13:13	--	ril[away] is now known as ril
2015-05-24 19:13:15	-->	mlafeldt (mlafeldt@moz-r5eets.pools.vodafone-ip.de) has joined #rust
2015-05-24 19:13:30	<--	tomaka (Pierre@moz-uolu9e.abo.wanadoo.fr) has quit (Ping timeout: 121 seconds)
2015-05-24 19:13:46	<--	hjr3 (hradtke@moz-rga0be.ca.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2015-05-24 19:13:49	-->	lyc (lyc@moz-jft.nr8.226.207.IP) has joined #rust
2015-05-24 19:15:03	-->	skeuomorf (skeuomorf@moz-ij1.21q.32.197.IP) has joined #rust
2015-05-24 19:15:49	<--	ril (ril@moz-p7jr3k.ca.comcast.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-24 19:15:56	-->	marciocg (Mibbit@moz-0rl.o3f.24.191.IP) has joined #rust
2015-05-24 19:15:59	<--	winding-lines (textual@moz-9utvl5.frokca.sbcglobal.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-24 19:16:10	Soni	does rust have andif and orif? https://gist.github.com/SoniEx2/99882fa8d5a0740339b0
2015-05-24 19:16:34	<--	qrlpx (smuxi@moz-50cslv.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2015-05-24 19:16:34	-->	qrlpx__ (smuxi@moz-2qodpc.dip0.t-ipconnect.de) has joined #rust
2015-05-24 19:16:37	@steveklabnik	it does not
2015-05-24 19:16:45	<--	qrlpx_ (smuxi@moz-50cslv.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2015-05-24 19:16:45	-->	qrlpx (smuxi@moz-2qodpc.dip0.t-ipconnect.de) has joined #rust
2015-05-24 19:16:48	Soni	aw
2015-05-24 19:16:51	Soni	what's the rust way?
2015-05-24 19:17:15	@steveklabnik	does any programming language have this?
2015-05-24 19:17:17	<--	mlafeldt (mlafeldt@moz-r5eets.pools.vodafone-ip.de) has quit (Ping timeout: 121 seconds)
2015-05-24 19:17:21	-->	tyler569 (tyler@moz-j21k4h.dyn.optonline.net) has joined #rust
2015-05-24 19:17:30	Soni	my emoji-only one does
2015-05-24 19:17:38	@steveklabnik	also, you don't awlays need else clauses
2015-05-24 19:17:44	Soni	(sure you might argue there's no compiler or interpreter for it, but still)
2015-05-24 19:17:46	@steveklabnik	andif appears just like a nested if to me?
2015-05-24 19:17:52	<--	lyc (lyc@moz-jft.nr8.226.207.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 19:17:57	geofft	you can basically do this with lambdas and return, right? 
2015-05-24 19:17:58	Soni	and implicit else
2015-05-24 19:18:01	bluss	andif seems tricky
2015-05-24 19:18:12	Soni	bluss, it's just a goto
2015-05-24 19:18:43	Soni	or lack of a goto...
2015-05-24 19:19:16	Soni	instead of jumping into an else then jumping over the other else, you just jump into the outer else
2015-05-24 19:20:52	geofft	Soni: http://is.gd/KuOUBR 
2015-05-24 19:21:00	geofft	I'm not saying this is great style, but you can do it :) 
2015-05-24 19:21:12	pranz	Soni: imo, I would never use such notation as I think it's unclear
2015-05-24 19:21:18	-->	RC9 (RCIX@moz-vnmep7.ph.cox.net) has joined #rust
2015-05-24 19:21:39	geofft	I think the real answer there is "Rust has nested functions, make one if the shared else clause is that complicated" 
2015-05-24 19:22:08	Soni	hmm ok
2015-05-24 19:22:10	Soni	what about orif?
2015-05-24 19:22:10	<--	turtil (turtil@moz-gfc.es4.23.103.IP) has quit (Quit: WeeChat 1.1.1)
2015-05-24 19:22:13	pranz	but wouldn't putting a break; at the end of the "if y" blcok do what you want?
2015-05-24 19:22:54	-->	rootnode (rootnode@moz-oek2hj.vpn.rwth-aachen.de) has joined #rust
2015-05-24 19:23:29	-->	turtil (turtil@moz-gfc.es4.23.103.IP) has joined #rust
2015-05-24 19:23:32	geofft	Soni: Rust has match 
2015-05-24 19:23:50	-->	Rym_ (y@moz-c2u.sd4.38.217.IP) has joined #rust
2015-05-24 19:24:11	pranz	Soni: http://is.gd/mDUCSX
2015-05-24 19:24:31	<--	asQuirreL (asQuirreL@moz-ro1qqu.ox.ac.uk) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-24 19:24:52	pranz	or maybe break; only breaks loops now when I think about it
2015-05-24 19:25:04	Soni	pranz, that's no rust...
2015-05-24 19:25:19	<--	Irrelium (Irrelium@moz-4kl.9ut.19.71.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 19:25:33	pranz	Soni: yeah but I think you get what I mean
2015-05-24 19:25:49	<--	chc4 (chc4@moz-mjph4c.ma.comcast.net) has quit (Connection closed)
2015-05-24 19:26:02	geofft	Soni: oh, `orif` is select with fallthrough? ugh. I did not read that correctly the first time I read your example 
2015-05-24 19:26:04	Soni	pranz, and it doesn't avoid the "put block 3 twice" issue...
2015-05-24 19:26:11	-->	winding-lines (textual@moz-9utvl5.frokca.sbcglobal.net) has joined #rust
2015-05-24 19:26:37	pranz	Soni: well then I'm not really sure what you mean
2015-05-24 19:26:39	Soni	geofft, it's basically an elif/elseif/else if (pick your language/poison) with fallthrough from above
2015-05-24 19:27:01	-->	tomaka (Pierre@moz-r5gldj.abo.wanadoo.fr) has joined #rust
2015-05-24 19:27:02	Soni	pranz, I'll write it in assembly shortly
2015-05-24 19:27:26	-->	chc4 (chc4@moz-mjph4c.ma.comcast.net) has joined #rust
2015-05-24 19:27:38	-->	ril (ril@moz-p7jr3k.ca.comcast.net) has joined #rust
2015-05-24 19:27:43	geofft	yeah, tbh, every time I see someone try something cute with select-with-fallthrough in C, I think it's a readability mistake 
2015-05-24 19:27:46	Soni	grover, hmm wait no that's not quite it...
2015-05-24 19:27:56	-->	Johannes (Johannes@moz-4et8d7.ocn.ne.jp) has joined #rust
2015-05-24 19:27:58	geofft	I do think that "make a tiny function" is the right answer in Rust the way it isn't in, say, C 
2015-05-24 19:28:07	geofft	which definitely doesn't have closures, and doesn't have standardized nested functions 
2015-05-24 19:28:40	Soni	geofft* meh
2015-05-24 19:28:55	<--	vosen (vosen@moz-mtm1g4.dynamic.chello.pl) has quit (Connection closed)
2015-05-24 19:28:56	Soni	sleepy + not looking at what I'm typing :P
2015-05-24 19:29:14	Soni	I'll write some assembly later...
2015-05-24 19:29:36	pranz	Soni: I would however match do a match if I were you
2015-05-24 19:29:45	pranz	closest thing to the "rust way" I feel
2015-05-24 19:29:58	pranz	match (x,y) { ... }
2015-05-24 19:30:14	<--	rkruppe (chatzilla@moz-83hn7q.diu2.0rth.0908.2a02.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 19:30:44	<--	silven (quassel@moz-0roor3.priv.bahnhof.se) has quit (Ping timeout: 121 seconds)
2015-05-24 19:30:54	<--	ril (ril@moz-p7jr3k.ca.comcast.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-24 19:31:13	-->	silven (quassel@moz-0roor3.priv.bahnhof.se) has joined #rust
2015-05-24 19:31:20	-->	eschatite (eschatite@moz-95cjjj.res.rr.com) has joined #rust
2015-05-24 19:31:59	<--	eschatite (eschatite@moz-95cjjj.res.rr.com) has quit (Connection closed)
2015-05-24 19:32:24	--	NameNotFound is now known as zz_NameNotFound
2015-05-24 19:32:35	Soni	if <x> <block 1> andif <y> <block2> else <block3> would run <block3> if one of <x> or <y> is false, but <block1> is always run if <x> is true, and <block2> is always run if <y> is true
2015-05-24 19:33:32	<--	Matthias247 (Miranda@moz-49li60.hsi14.kabel-badenwuerttemberg.de) has quit (Connection closed)
2015-05-24 19:33:53	-->	fabianvf (fabianvf@moz-fjqmui.va.comcast.net) has joined #rust
2015-05-24 19:33:56	-->	rmdashrf (rmdashrf@moz-ecr.kjm.54.128.IP) has joined #rust
2015-05-24 19:34:14	-->	SiegeLord (sl@moz-9jtaei.ca.comcast.net) has joined #rust
2015-05-24 19:34:33	<--	simukis (nagisa@moz-8t068g.static.zebra.lt) has quit (Ping timeout: 121 seconds)
2015-05-24 19:35:25	-->	dmac_ (dmac@moz-jen1k8.ca.comcast.net) has joined #rust
2015-05-24 19:35:28	<--	rmdashrf (rmdashrf@moz-ecr.kjm.54.128.IP) has quit (Quit: WeeChat 0.4.2)
2015-05-24 19:35:35	grant	Is there a do-while in rust?
2015-05-24 19:35:54	-->	fabianvf_ (fabianvf@moz-fjqmui.va.comcast.net) has joined #rust
2015-05-24 19:35:54	<--	fabianvf (fabianvf@moz-fjqmui.va.comcast.net) has quit (Connection closed)
2015-05-24 19:36:25	-->	rmdashrf (rmdashrf@moz-ecr.kjm.54.128.IP) has joined #rust
2015-05-24 19:36:39	grant	as it is, I just use a loop { <code> if condition { break; } }
2015-05-24 19:37:30	<--	rmdashrf (rmdashrf@moz-ecr.kjm.54.128.IP) has quit (Quit: WeeChat 0.4.2)
2015-05-24 19:37:49	<--	ygrek (user@moz-8j9aeu.org.ua) has quit (Ping timeout: 121 seconds)
2015-05-24 19:37:57	<--	fireglow (fireglow@moz-cm2.546.154.195.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-24 19:38:23	bugQ	https://gist.github.com/huonw/8435502
2015-05-24 19:38:32	bugQ	(grant)
2015-05-24 19:38:50	grant	bugQ: That seems… hacky...
2015-05-24 19:39:17	grant	Though hiliarious that it is allowed
2015-05-24 19:39:25	grant	I mean, it makes perfect sense
2015-05-24 19:39:29	grant	But still
2015-05-24 19:40:01	bugQ	yeah also break doesn't work
2015-05-24 19:40:19	bugQ	oh and C can do the same hack.
2015-05-24 19:40:23	Soni	hilariously dangerous
2015-05-24 19:41:11	sully	oh, that's so good.
2015-05-24 19:41:17	-->	eschatite (eschatite@moz-95cjjj.res.rr.com) has joined #rust
2015-05-24 19:41:27	bugQ	loop if is very clear, i'd keep doing that
2015-05-24 19:42:17	-->	fireglow (fireglow@moz-piiqks.firc.de) has joined #rust
2015-05-24 19:42:26	nstoddard	Why doesn't rust have do-while loops anyway?
2015-05-24 19:43:04	<--	skeuomorf (skeuomorf@moz-ij1.21q.32.197.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 19:43:04	grant	Seems to me that do-while would be pretty simple syntactic sugar over the loop-if I just described
2015-05-24 19:43:16	grant	Or something like it
2015-05-24 19:44:01	bugQ	it would be semantically identical yes, it could be reduced to a macro
2015-05-24 19:44:25	<--	dmac_ (dmac@moz-jen1k8.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-24 19:44:26	grant	could one make a do while macro?
2015-05-24 19:44:35	bugQ	maybe not with the while keyword
2015-05-24 19:44:52	<--	cjwelborn (cjwelborn@moz-np6hed.al.charter.com) has quit (Quit: sys.exit(1))
2015-05-24 19:45:28	SpaceManiac	do/while macro: http://is.gd/JvuGs3
2015-05-24 19:45:31	Soni	repeat until?
2015-05-24 19:45:49	bugQ	nevermind
2015-05-24 19:45:54	Soni	do a repeat until
2015-05-24 19:47:00	Soni	it's like a do while but it breaks when the condition is true (so do while !condition)
2015-05-24 19:49:49	Soni	heh this is cool http://is.gd/tkzhgt
2015-05-24 19:49:56	<--	JagaJaga (JagaJaga@moz-ua8.hhl.62.178.IP) has quit (Quit: WeeChat 1.1.1)
2015-05-24 19:50:39	<--	hyunsik (hyunsik@moz-3qgjl9.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-24 19:51:06	Soni	can you make rust look like lua?
2015-05-24 19:52:12	-->	bjz (bjz@moz-puppgq.tpgi.com.au) has joined #rust
2015-05-24 19:52:27	<--	rouma (zack@moz-p8e0re.res.rr.com) has quit (A TLS packet with unexpected length was received.)
2015-05-24 19:52:30	<--	Wild_Cat (Max@moz-fa8mvt.dsl.teksavvy.com) has quit (Ping timeout: 121 seconds)
2015-05-24 19:52:36	&mbrubeck	playbot: let mut i=0; while { i += 1; print!("{}", i); i < 5 } {}
2015-05-24 19:52:37	--	Notice(playbot): 12345()
2015-05-24 19:52:47	&mbrubeck	The secret Rust do/while loop ^
2015-05-24 19:52:49	-->	godlikesme__ (godlikesme@moz-2a2.dsd.174.79.IP) has joined #rust
2015-05-24 19:53:17	&mbrubeck	oh bugQ already did that
2015-05-24 19:54:35	-->	lenstr (lenstr@moz-oaq.vju.25.171.IP) has joined #rust
2015-05-24 19:54:40	<--	mgottschlag (quassel@moz-8uvcc8.hsi15.kabel-badenwuerttemberg.de) has quit (Ping timeout: 121 seconds)
2015-05-24 19:54:54	<--	lenstr (lenstr@moz-oaq.vju.25.171.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-24 19:55:04	-->	lenstr (lenstr@moz-oaq.vju.25.171.IP) has joined #rust
2015-05-24 19:55:10	<--	eat_multi (daniel@moz-j2sp1t.cable.virginm.net) has quit (Quit: leaving)
2015-05-24 19:55:33	<--	eschatite (eschatite@moz-95cjjj.res.rr.com) has quit (Ping timeout: 121 seconds)
2015-05-24 19:56:01	<--	lenstr (lenstr@moz-oaq.vju.25.171.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-24 19:56:05	<--	godlikesme_ (godlikesme@moz-2a2.dsd.174.79.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 19:56:06	<--	Wilduck (erik@moz-jjuueh.fios.verizon.net) has quit (Client exited)
2015-05-24 19:56:17	-->	csherratt (textual@moz-357qdq.cable.teksavvy.com) has joined #rust
2015-05-24 19:56:25	-->	Wild_Cat (Max@moz-fa8mvt.dsl.teksavvy.com) has joined #rust
2015-05-24 19:56:55	-->	wohiler (wohiler@moz-8id.6e1.62.133.IP) has joined #rust
2015-05-24 19:57:28	<--	dcb (textual@moz-j72nfe.ca.comcast.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-24 19:57:55	<--	kazimuth (james@moz-tms.f4o.251.50.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-24 19:58:18	-->	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has joined #rust
2015-05-24 19:58:53	-->	eschatite (eschatite@moz-95cjjj.res.rr.com) has joined #rust
2015-05-24 19:59:00	-->	atomic (atomic@moz-j5rng1.tor-exit.network) has joined #rust
2015-05-24 19:59:01	<--	nickniko_ (nicknikolov@moz-0q4.2rm.211.90.IP) has quit (Connection closed)
2015-05-24 19:59:47	<--	rustyrazorblade (rustyrazorb@moz-ehrfqf.fios.verizon.net) has quit (Client exited)
2015-05-24 20:00:21	-->	swgillespie (swgillespie@moz-rn1.vmq.232.104.IP) has joined #rust
2015-05-24 20:00:45	-->	rouma (zack@moz-p8e0re.res.rr.com) has joined #rust
2015-05-24 20:01:22	<--	JuggleTux (tux@moz-ho0t1f.adslplus.ch) has quit (Connection closed)
2015-05-24 20:02:22	<--	madmalik (uid13697@moz-lfin5p.brockwell.irccloud.com) has quit (Quit: Connection closed for inactivity)
2015-05-24 20:02:29	<--	flugsio (flugsio@moz-283uu4.tbcn.telia.com) has quit (Quit: WeeChat 1.2)
2015-05-24 20:03:04	-->	dinfuehr (dinfuehr@moz-sh7u9l.highway.telekom.at) has joined #rust
2015-05-24 20:03:06	<--	Db (Db@moz-hma9kp.me) has quit (Connection closed)
2015-05-24 20:03:14	-->	KLP (KLP@moz-qdcjho.res.rr.com) has joined #rust
2015-05-24 20:03:17	-->	Db (Db@moz-hma9kp.me) has joined #rust
2015-05-24 20:04:49	<--	geri (Mibbit@moz-1gtkp6.highway.telekom.at) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-24 20:05:50	<--	andreabedini (andreabedin@moz-2lt49q.unimelb.edu.au) has quit (Quit: Textual IRC Client: www.textualapp.com)
2015-05-24 20:07:08	<--	dinfuehr (dinfuehr@moz-sh7u9l.highway.telekom.at) has quit (Ping timeout: 121 seconds)
2015-05-24 20:07:32	<--	lurk_ (chatzilla@moz-qm19cj.in.comcast.net) has quit (Quit: ChatZilla 0.9.91-rdmsoft [XULRunner 32.0.3/20140923175406])
2015-05-24 20:08:05	-->	JagaJaga (JagaJaga@moz-ua8.hhl.62.178.IP) has joined #rust
2015-05-24 20:08:39	<--	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-24 20:08:58	-->	nicknikolov (nicknikolov@moz-0q4.2rm.211.90.IP) has joined #rust
2015-05-24 20:09:00	<--	daheise (Mibbit@moz-gl1dm6.knvltn.sbcglobal.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-24 20:10:00	<--	KLP (KLP@moz-qdcjho.res.rr.com) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-05-24 20:10:02	-->	Axord (axo@moz-p6in57.ca.charter.com) has joined #rust
2015-05-24 20:10:46	<--	marciocg (Mibbit@moz-0rl.o3f.24.191.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-24 20:11:21	-->	james4k (james@moz-1pbfu0.consolidated.net) has joined #rust
2015-05-24 20:11:30	<--	Quanttek (quassel@moz-25k96c.6fkd.dvrb.8108.2a02.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 20:11:47	<--	JagaJaga (JagaJaga@moz-ua8.hhl.62.178.IP) has quit (Quit: WeeChat 1.1.1)
2015-05-24 20:12:35	-->	isomarcte` (isomarcte@moz-0lhngt.albq.qwest.net) has joined #rust
2015-05-24 20:12:59	<--	eschatite (eschatite@moz-95cjjj.res.rr.com) has quit (Ping timeout: 121 seconds)
2015-05-24 20:13:41	-->	JagaJaga (JagaJaga@moz-gd9.blu.205.109.IP) has joined #rust
2015-05-24 20:13:44	-->	nedp (nedp@moz-vg6vvt.bigpond.net.au) has joined #rust
2015-05-24 20:14:14	<--	hroi (hroi@moz-d273ub.static.netgroup.dk) has quit (Ping timeout: 121 seconds)
2015-05-24 20:14:22	<--	tyler569 (tyler@moz-j21k4h.dyn.optonline.net) has quit (Ping timeout: 121 seconds)
2015-05-24 20:14:35	-->	lyc (lyc@moz-jft.nr8.226.207.IP) has joined #rust
2015-05-24 20:15:12	-->	Wilduck (erik@moz-0l3fjb.fios.verizon.net) has joined #rust
2015-05-24 20:15:29	<--	Nextra (Nextra@moz-ghdeuq.ewe-ip-backbone.de) has quit (Connection closed)
2015-05-24 20:15:52	<--	SpaceManiac (Tad@moz-g50q8a.dyn.suddenlink.net) has quit (Ping timeout: 121 seconds)
2015-05-24 20:17:10	-->	tyler569 (tyler@moz-j21k4h.dyn.optonline.net) has joined #rust
2015-05-24 20:17:11	joel	what do I need in order to control a external librarys dependencies?
2015-05-24 20:17:29	joel	I'm trying to use simple-mysql, that pulls time v1.24, 
2015-05-24 20:17:33	<--	willem (willem@moz-facs2s.dynamic.upc.nl) has quit (Quit: leaving)
2015-05-24 20:17:42	<--	JagaJaga (JagaJaga@moz-gd9.blu.205.109.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 20:17:46	joel	the rust version I use needs v1.25 though.
2015-05-24 20:18:38	<--	lyc (lyc@moz-jft.nr8.226.207.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 20:19:00	-->	ajhager (aajhager@moz-mcdsgi.iplsin.sbcglobal.net) has joined #rust
2015-05-24 20:19:34	@steveklabnik	joel: what's in your Cargo.toml?
2015-05-24 20:19:37	joel	I tried adding a [dependencies.time] pointing to git. That pulls v1.25, but does not affect the library (and v1.24 is still pulled by that)
2015-05-24 20:19:41	@steveklabnik	actually
2015-05-24 20:19:45	<--	swgillespie (swgillespie@moz-rn1.vmq.232.104.IP) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-24 20:19:48	@steveklabnik	i guess, you'd need to update simple-mysql's
2015-05-24 20:20:29	<--	isomarcte (isomarcte@moz-vqvrcl.hfc.comcastbusiness.net) has quit (A TLS packet with unexpected length was received.)
2015-05-24 20:20:37	<--	isomarcte` (isomarcte@moz-0lhngt.albq.qwest.net) has quit (A TLS packet with unexpected length was received.)
2015-05-24 20:20:42	-->	eschatite (eschatite@moz-95cjjj.res.rr.com) has joined #rust
2015-05-24 20:21:04	-->	isomarcte (isomarcte@moz-0lhngt.albq.qwest.net) has joined #rust
2015-05-24 20:21:14	joel	Okay. Yeah, I think I can see how to do it. Thanks
2015-05-24 20:22:20	thombles	I wonder how much trouble you cause if you poke about in cargo's downloaded repos... :)
2015-05-24 20:23:08	<--	froglegstew (Mibbit@moz-i7cb3r.fios.verizon.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-24 20:23:18	<--	gandalf (zbraniecki@moz-cp7c4m.ca.comcast.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-24 20:23:46	-->	mcoffin (mcoffin@moz-hrs.16d.54.128.IP) has joined #rust
2015-05-24 20:26:43	-->	kazimuth (james@moz-tms.f4o.251.50.IP) has joined #rust
2015-05-24 20:26:53	@niconii	hmm, why do i keep seeing "1.2.0" in places?
2015-05-24 20:28:02	<--	loyd (loyd@moz-ce6.cua.228.94.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 20:28:08	@niconii	is nightly on 1.2.0 or something? i thought that wasn't supposed to happen until 1.1.0 stable was released, and as far as i know it's not
2015-05-24 20:28:23	@steveklabnik	niconii: master is 1.2
2015-05-24 20:28:33	@steveklabnik	1.1 beta was released at the same time as 1.0
2015-05-24 20:28:42	<--	Astrum|Lap (Astrum|Lap@moz-skcefh.co.comcast.net) has quit (Client exited)
2015-05-24 20:28:44	@steveklabnik	that's how it always works: three at a time
2015-05-24 20:28:44	@niconii	oh, beta
2015-05-24 20:28:46	@niconii	okay
2015-05-24 20:28:46	-->	gregburd (uid85367@moz-513f2i.ealing.irccloud.com) has joined #rust
2015-05-24 20:28:47	@niconii	i see
2015-05-24 20:28:49	@steveklabnik	:)
2015-05-24 20:28:58	-->	Astrum|Lap (Astrum|Lap@moz-skcefh.co.comcast.net) has joined #rust
2015-05-24 20:29:10	-->	hroi (hroi@moz-d273ub.static.netgroup.dk) has joined #rust
2015-05-24 20:29:24	-->	brianloveswords (brianlovesw@moz-8cn.lfu.232.80.IP) has joined #rust
2015-05-24 20:30:12	-->	mlafeldt (mlafeldt@moz-r5eets.pools.vodafone-ip.de) has joined #rust
2015-05-24 20:32:29	-->	SpaceManiac (Tad@moz-g50q8a.dyn.suddenlink.net) has joined #rust
2015-05-24 20:33:17	<--	hroi (hroi@moz-d273ub.static.netgroup.dk) has quit (Ping timeout: 121 seconds)
2015-05-24 20:33:35	<--	jaen (jaen@moz-ifmik2.copit.pl) has quit (Quit: WeeChat 1.1.1)
2015-05-24 20:34:09	<--	esgeh (sg@moz-a7j.cns.76.134.IP) has quit (Quit: Leaving.)
2015-05-24 20:34:14	<--	mlafeldt (mlafeldt@moz-r5eets.pools.vodafone-ip.de) has quit (Ping timeout: 121 seconds)
2015-05-24 20:35:41	<--	tristanseifert (tristanseif@moz-r0t7ns.res.rr.com) has quit (Ping timeout: 121 seconds)
2015-05-24 20:37:36	<--	tomprogrammer (thomas@moz-i2g8m6.tr5r.qept.4dd0.2001.IP) has quit (Quit: WeeChat 1.2)
2015-05-24 20:41:05	<--	mcarton (martin@moz-ag64s6.rev.sfr.net) has quit (Ping timeout: 121 seconds)
2015-05-24 20:41:13	<--	c_wraith (c_wraith@moz-2e872h.click-network.com) has quit (Ping timeout: 121 seconds)
2015-05-24 20:42:03	-->	gsingh93 (gulshan@moz-ln1ktu.st3l.iv8o.0004.2601.IP) has joined #rust
2015-05-24 20:42:05	<--	anthgur (textual@moz-3j5pq7.hfc.comcastbusiness.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-24 20:42:06	_habnabit	when does rustc consider itself '1.0.0-dev' and not '1.0.0'? i'm pretty sure i built from the 1.0.0 stable tarball, but apparently it doesn't consider itself on the stable channel
2015-05-24 20:43:19	Mutabah	_habnabit: Proably becuse you didn't build with whatever flag tells it to remove that -dev
2015-05-24 20:43:24	_habnabit	Mutabah, oh, bah
2015-05-24 20:43:29	_habnabit	Mutabah, i didn't realize it required a flag
2015-05-24 20:43:38	<--	strixbg (strixbg@moz-h16.8ua.123.93.IP) has quit (Quit: This computer has gone to sleep)
2015-05-24 20:43:54	-->	zeebo (zeebo@moz-6rqv1a.ut.comcast.net) has joined #rust
2015-05-24 20:44:17	Mutabah	_habnabit: I'm assuming it does
2015-05-24 20:44:48	-->	nixpulvis (Mibbit@moz-tkv32n.sntcca.sbcglobal.net) has joined #rust
2015-05-24 20:45:22	<--	Altazimuth (Altazimuth@moz-rb7u6p.skybroadband.com) has quit (Ping timeout: 121 seconds)
2015-05-24 20:45:27	-->	aatch (james@moz-is4j4r.cable.telstraclear.net) has joined #rust
2015-05-24 20:46:21	-->	markstory (textual@moz-tb3ghu.cable.rogers.com) has joined #rust
2015-05-24 20:46:35	Johannes	is there any way to store arbitrary data in a struct without unsafe?  for example a struct with two fields. one field which describes the type of data and the other the data (in C it would be a void pointer). Can this be done with Any type? 
2015-05-24 20:46:43	_habnabit	well, it looks like the unstable features i tried to use are std::slice::bytes (specifically set_memory) and http://doc.rust-lang.org/std/primitive.slice.html#method.clone_from_slice
2015-05-24 20:46:53	<--	kngl (Adium@moz-rmgnkh.dynamic.voo.be) has quit (Quit: Leaving.)
2015-05-24 20:47:03	_habnabit	some unstable features are released as crates, aren't they?
2015-05-24 20:47:17	bluss	Johannes: you have raw pointers at your disposal (*mut u8 for example)
2015-05-24 20:47:36	nixpulvis	Can someone help me. I'm trying to compile a simple rust program that links to another rust library, directly copied from https://github.com/rust-lang/log, and I'm getting Undefined symbols for architecture x86_64
2015-05-24 20:48:05	nixpulvis	I think something is wrong with my linker, but I'm not really sure what.
2015-05-24 20:48:07	thelink2012	How do I pass C variadic argument from Rust ffi? e.g. printf(fmt, ...)
2015-05-24 20:48:24	bluss	Johannes: I think I missed the without unsafe part. Ok you could use Any
2015-05-24 20:48:33	<--	eschatite (eschatite@moz-95cjjj.res.rr.com) has quit (Ping timeout: 121 seconds)
2015-05-24 20:48:45	Johannes	bluss: but any is not sized, right? can I box Any?
2015-05-24 20:48:59	-->	gandalf (zbraniecki@moz-cp7c4m.ca.comcast.net) has joined #rust
2015-05-24 20:49:35	bluss	yes. Box<Any> is a fat pointer and basically already like your struct. It has two fields, one vtable pointer and one data pointer
2015-05-24 20:49:39	<--	rumpler (Mibbit@moz-84song.dip0.t-ipconnect.de) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-24 20:49:55	Johannes	bluss: ok thanks! I'll give it a try.
2015-05-24 20:51:01	-->	mdp (mdp@moz-0lr.jqo.236.104.IP) has joined #rust
2015-05-24 20:52:15	<--	JonCarlos (Jon@moz-9svfg3.fios.verizon.net) has quit (Connection closed)
2015-05-24 20:52:18	<--	nicknikolov (nicknikolov@moz-0q4.2rm.211.90.IP) has quit (Connection closed)
2015-05-24 20:52:26	mdp	quick question, is there an easy way to turn a u64 into [u8]? I can do it manually, but there used to be a u64_to_be_bytes it seems
2015-05-24 20:53:02	-->	fyolnish (fyolnish@moz-soopfn.ocn.ne.jp) has joined #rust
2015-05-24 20:53:25	-->	jminer (Instantbird@moz-b1u.qch.163.66.IP) has joined #rust
2015-05-24 20:53:31	<--	mark_edward (mark@moz-dg4mrp.in.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-24 20:53:51	-->	raisin (Mibbit@moz-i7cb3r.fios.verizon.net) has joined #rust
2015-05-24 20:54:55	@niconii	mdp: you might want to look at the byteorder crate
2015-05-24 20:55:16	<--	kazimuth (james@moz-tms.f4o.251.50.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-24 20:55:56	-->	mfranzwa (mike@moz-kjo6bs.ca.comcast.net) has joined #rust
2015-05-24 20:56:08	thelink2012	mdp: maybe transmute might serve you too
2015-05-24 20:56:14	thelink2012	playbot: let y: [u8; 8] = unsafe { transmute(0xFFFFu64) }; y
2015-05-24 20:56:15	--	Notice(playbot): <anon>:9:35: 9:44 error: unresolved name `transmute`
2015-05-24 20:56:15	--	Notice(playbot): <anon>:9         let y: [u8; 8] = unsafe { transmute(0xFFFFu64) }; y
2015-05-24 20:56:15	--	Notice(playbot): output truncated; full output at: http://bit.ly/1eoZnvp
2015-05-24 20:56:21	-->	lenstr (lenstr@moz-oaq.vju.25.171.IP) has joined #rust
2015-05-24 20:57:33	mdp	Yeah, i was trying to avoid unsafe. byteorder looks like what I need. Thanks
2015-05-24 20:57:33	-->	Tiktalik (quassel@moz-j5b0ac.8ou1.oi46.fcd0.2607.IP) has joined #rust
2015-05-24 20:58:24	<--	SiegeLord (sl@moz-9jtaei.ca.comcast.net) has quit (Quit: It's a joke, it's all a joke.)
2015-05-24 20:58:58	<--	lenstr (lenstr@moz-oaq.vju.25.171.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-24 20:59:04	aatch	Question: what should the debug impl for an arbitrary-precision integer (aka bigint) do? Same as Display output?
2015-05-24 20:59:09	-->	Skyler (Skyler@moz-rv949t.sd.cox.net) has joined #rust
2015-05-24 20:59:09	-->	lenstr (lenstr@moz-oaq.vju.25.171.IP) has joined #rust
2015-05-24 21:00:01	aatch	Or should I show a little more detail about the actual data?
2015-05-24 21:00:19	<--	lenstr (lenstr@moz-oaq.vju.25.171.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-24 21:01:22	-->	cjwelborn (cjwelborn@moz-np6hed.al.charter.com) has joined #rust
2015-05-24 21:02:16	@niconii	playbot: let a: [u8; 8] = unsafe { std::mem::transmute(0x0123456789ABCDEFu64.to_be()) };  for b in &a { print!("0x{:x} ", b); } println!("");
2015-05-24 21:02:17	--	Notice(playbot): 0x1 0x23 0x45 0x67 0x89 0xab 0xcd 0xef 
2015-05-24 21:02:17	--	Notice(playbot): ()
2015-05-24 21:02:18	srjek	aatch: I would think anything that could affect the programmer using it.
2015-05-24 21:02:44	@niconii	this'll work on any endian computer because of to_be(), but yeah, byteorder is nicer to use
2015-05-24 21:03:50	-->	dinfuehr (dinfuehr@moz-sh7u9l.highway.telekom.at) has joined #rust
2015-05-24 21:05:05	<--	spider-mario (spidermario@moz-coblcf.fbx.proxad.net) has quit (A TLS packet with unexpected length was received.)
2015-05-24 21:05:06	-->	SiegeLord (sl@moz-9jtaei.ca.comcast.net) has joined #rust
2015-05-24 21:06:26	-->	mark_edward (mark@moz-dg4mrp.in.comcast.net) has joined #rust
2015-05-24 21:06:37	@niconii	compare: let a = [0; u8]; <BigEndian>::write_u64(&mut a, 0x0123456789ABCDEF);
2015-05-24 21:06:42	<--	nixpulvis (Mibbit@moz-tkv32n.sntcca.sbcglobal.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-24 21:06:57	<--	mfranzwa (mike@moz-kjo6bs.ca.comcast.net) has quit (Client exited)
2015-05-24 21:07:53	@niconii	s/[0; u8]/[0u8; 8]/
2015-05-24 21:07:58	<--	dinfuehr (dinfuehr@moz-sh7u9l.highway.telekom.at) has quit (Ping timeout: 121 seconds)
2015-05-24 21:08:10	@niconii	knew something looked off about that
2015-05-24 21:08:38	Johannes	think i found an error on https://doc.rust-lang.org/std/any/trait.Any.html. The explanation for fn is<T>(&self) -> bool 
2015-05-24 21:09:22	<--	DerisiveLogic (smuxi@moz-g93io6.res.rr.com) has quit (Ping timeout: 121 seconds)
2015-05-24 21:09:32	Johannes	or maybe no...
2015-05-24 21:09:43	thelink2012	is there some kind of iterator adaptator that does a additional iteration? for example: let y = [1, 2, 3]; let x: Vec<_> = y.iter().map(|a| a * 2).and(0);  // Vec[2, 4, 6, 0]
2015-05-24 21:10:07	@huon	thelink2012: .chain allows you to append iterators
2015-05-24 21:10:16	<--	delma_ (Mibbit@moz-8ibfpd.bb.dnainternet.fi) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-24 21:10:16	Johannes	ah I see now.. no error.. my mistake.
2015-05-24 21:11:14	srjek	So, I'm trying to impl traits (like Index<usize>) for multiple similar structs.
2015-05-24 21:11:21	srjek	I have come to the conclusion I need a macro, but I can't figure out how to match againt impl_slice_traits!(impl<'a, T : 'a+?Sized> for TraitSlice<'a, T>); (particularly the first part)
2015-05-24 21:11:39	-->	m_kato (m_kato@moz-86b4bs.bitcat.net) has joined #rust
2015-05-24 21:12:05	--	zz_NameNotFound is now known as NameNotFound
2015-05-24 21:13:56	<--	rootnode (rootnode@moz-oek2hj.vpn.rwth-aachen.de) has quit (Ping timeout: 121 seconds)
2015-05-24 21:14:47	<--	lbn (lbn@moz-h4eamh.cable.virginm.net) has quit (Quit: Leaving.)
2015-05-24 21:15:04	-->	KeyboardFire (llama@moz-4s8.jeh.196.98.IP) has joined #rust
2015-05-24 21:15:22	-->	lyc (lyc@moz-jft.nr8.226.207.IP) has joined #rust
2015-05-24 21:15:42	KeyboardFire	what's the easiest way to convert an array of chars to a &str?
2015-05-24 21:15:43	<--	winding-lines (textual@moz-9utvl5.frokca.sbcglobal.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-24 21:16:04	-->	kazimuth (james@moz-tms.f4o.251.50.IP) has joined #rust
2015-05-24 21:16:30	-->	tristanseifert (tristanseif@moz-r0t7ns.res.rr.com) has joined #rust
2015-05-24 21:16:48	-->	Azdle (Azdle@moz-fv6arh.mn.comcast.net) has joined #rust
2015-05-24 21:18:20	Kovensky	KeyboardFire: probably String::from_utf8
2015-05-24 21:18:52	ChrisMorgan	KeyboardFire: &[char], not &[u8]?
2015-05-24 21:19:07	KeyboardFire	yes, char
2015-05-24 21:19:24	<--	lyc (lyc@moz-jft.nr8.226.207.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 21:19:24	<--	rouma (zack@moz-p8e0re.res.rr.com) has quit (Ping timeout: 121 seconds)
2015-05-24 21:19:28	ChrisMorgan	KeyboardFire: slice.iter().cloned().collect::<String>()
2015-05-24 21:19:56	ChrisMorgan	KeyboardFire: char is UTF‐32, String is UTF‐8.
2015-05-24 21:20:10	KeyboardFire	ChrisMorgan: works perfectly, thanks
2015-05-24 21:20:21	KeyboardFire	assuming ASCII only.
2015-05-24 21:20:24	Kovensky	ah
2015-05-24 21:20:25	KeyboardFire	(which is what I have)
2015-05-24 21:20:45	-->	copycat (Thunderbird@moz-dpm.8hc.223.111.IP) has joined #rust
2015-05-24 21:21:07	-->	darius93 (dariusc93@moz-2af.8nc.60.74.IP) has joined #rust
2015-05-24 21:21:13	Kovensky	I'm not sure why it wouldn't work with >0x7f characters
2015-05-24 21:21:25	darius93	was anyone able to make their application crash in rust?
2015-05-24 21:21:32	ChrisMorgan	KeyboardFire: char is UTF‐32, not just ASCII.
2015-05-24 21:21:34	--	NameNotFound is now known as zz_NameNotFound
2015-05-24 21:22:08	Kovensky	playbot: let a: [char] = ['漢', '字']; a.iter().cloned().collect::<String>()
2015-05-24 21:22:09	--	Notice(playbot): <anon>:9:25: 9:35 error: mismatched types:
2015-05-24 21:22:10	--	Notice(playbot):  expected `[char]`,
2015-05-24 21:22:10	--	Notice(playbot): output truncated; full output at: http://bit.ly/1ep1q2H
2015-05-24 21:22:17	Kovensky	er
2015-05-24 21:22:23	Kovensky	playbot: let a = ['漢', '字']; a.iter().cloned().collect::<String>()
2015-05-24 21:22:26	--	Notice(playbot): "\u{6f22}\u{5b57}"
2015-05-24 21:22:27	-->	Irrelium (Irrelium@moz-4kl.9ut.19.71.IP) has joined #rust
2015-05-24 21:22:44	-->	fkaa (tundmatu@moz-501od2.business.telia.com) has joined #rust
2015-05-24 21:23:01	Kovensky	why not print the characters :(
2015-05-24 21:23:02	Kovensky	anyway, it works
2015-05-24 21:23:23	@huon	playbot: let a = ['漢', '字']; println!("{}", a.iter().cloned().collect::<String>())
2015-05-24 21:23:24	--	Notice(playbot): 漢字
2015-05-24 21:23:25	--	Notice(playbot): ()
2015-05-24 21:23:41	@huon	(playbot uses std::fmt::Debug (aka {:?}) by default)
2015-05-24 21:24:01	bluss	huon: debug doesn't have to escape everything
2015-05-24 21:24:11	bluss	I think it would be nicer to display strings better
2015-05-24 21:24:13	@huon	right, but it does :)
2015-05-24 21:24:20	bluss	we can fix it
2015-05-24 21:24:25	@huon	definitely
2015-05-24 21:24:31	@huon	just explaining the current behaviour :)
2015-05-24 21:24:44	@niconii	we can rebuild it
2015-05-24 21:24:48	@niconii	we have the technology
2015-05-24 21:24:54	bluss	ok. you win this time.
2015-05-24 21:24:56	-->	winding-lines (textual@moz-9utvl5.frokca.sbcglobal.net) has joined #rust
2015-05-24 21:25:10	@huon	file a bug (or submit a PR)
2015-05-24 21:25:13	<--	SerialVelocity (SerialVeloc@moz-attia0.cable.virginm.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-24 21:25:45	@huon	hm, actually, I wonder if escaping characters is safer; no risk of peculiar fonts/... making things strange
2015-05-24 21:26:14	@niconii	yeah, i dunno, personally i kinda prefer escaping characters with Debug
2015-05-24 21:26:26	bluss	safe is boring huon :) eh anyway I think it's to hostile to non-english
2015-05-24 21:26:28	Kovensky	escaping characters is guaranteed to display _something_ better than a box to people without the fonts I guess
2015-05-24 21:26:42	@huon	bluss: I agree :(
2015-05-24 21:26:46	@niconii	easier to see if there's nbsps or weird stuff in there too
2015-05-24 21:27:21	-->	vmeson (rmacleod@moz-hs5cri.cable.teksavvy.com) has joined #rust
2015-05-24 21:27:28	@niconii	maybe limit escaping to non-printing codepoints?
2015-05-24 21:27:32	Kovensky	if std is able to classify unicode characters, maybe display anything that's printable and escape anything that's not (besides U+0020 and \t I guess)
2015-05-24 21:27:38	<--	dgrunwald (Daniel@moz-qibrho.hsi4.kabel-badenwuerttemberg.de) has quit (Connection closed)
2015-05-24 21:27:44	bluss	niconii: exactly
2015-05-24 21:28:00	Kovensky	(and \n)
2015-05-24 21:28:20	@niconii	Kovensky, bluss: yeah, i think that's probably the best approach
2015-05-24 21:29:28	zofrex	this sounds good. +1 to being more friendly to other languages
2015-05-24 21:29:29	aatch	Hmm, is there a reason we don't have a trait for `to` conversions? Or should I just use `AsRef`?
2015-05-24 21:29:58	-->	DerisiveLogic (smuxi@moz-g93io6.res.rr.com) has joined #rust
2015-05-24 21:30:15	<--	DerisiveLogic (smuxi@moz-g93io6.res.rr.com) has quit (A TLS packet with unexpected length was received.)
2015-05-24 21:30:20	-->	DerisiveLogic (smuxi@moz-g93io6.res.rr.com) has joined #rust
2015-05-24 21:30:25	@niconii	aatch: `to` conversions? we have From and Into, not sure if i understand what you mean
2015-05-24 21:30:32	aatch	Actually, `AsRef` doesn't work for me.
2015-05-24 21:30:38	aatch	niconii, `into` consumes self though.
2015-05-24 21:31:01	aatch	niconii, and while I could implement it on `&Type` the API would be weird.
2015-05-24 21:31:18	Kovensky	how is From different from Into?
2015-05-24 21:31:19	-->	tetsuharu (tetsuharu@moz-r5j.l6d.168.210.IP) has joined #rust
2015-05-24 21:31:35	Kovensky	ah, Into "consumes self"
2015-05-24 21:32:06	@niconii	aatch: any reason why From doesn't work for you?
2015-05-24 21:32:19	<--	silven (quassel@moz-0roor3.priv.bahnhof.se) has quit (Ping timeout: 121 seconds)
2015-05-24 21:32:37	-->	silven (quassel@moz-0roor3.priv.bahnhof.se) has joined #rust
2015-05-24 21:33:52	aatch	niconii, I guess it would, it just seems odd. Thinking about the API, having a generic `to` method would actually be weird as well.
2015-05-24 21:34:08	<--	James (quassel@moz-739rgr.range86-148.btcentralplus.com) has quit (Ping timeout: 121 seconds)
2015-05-24 21:34:19	aatch	Especially since there's a fixed number of target types.
2015-05-24 21:35:29	mystor	why is `boxed::from_raw()` unsafe? Isn'
2015-05-24 21:35:30	aatch	It'd probably be better to have a to_<type> for each one and a set of From impls that forward to them.
2015-05-24 21:35:45	mystor	isn’t it basically mem::forget() + `as *mut T`?
2015-05-24 21:35:51	<--	qrlpx__ (smuxi@moz-2qodpc.dip0.t-ipconnect.de) has quit (Connection closed)
2015-05-24 21:35:52	<--	qrlpx (smuxi@moz-2qodpc.dip0.t-ipconnect.de) has quit (Connection closed)
2015-05-24 21:35:58	aatch	mystor, **from**_raw
2015-05-24 21:36:05	aatch	mystor, as in creates a new Box.
2015-05-24 21:36:11	mystor	err into_raw
2015-05-24 21:36:16	mystor	into_raw is also unsafe
2015-05-24 21:36:25	mystor	(from_raw is obviously unsafe)
2015-05-24 21:36:25	aatch	mystor, well I don't know for that one.
2015-05-24 21:36:29	mystor	http://doc.rust-lang.org/std/boxed/fn.into_raw.html
2015-05-24 21:36:38	mystor	(It’s also unstable, but)
2015-05-24 21:36:53	-->	lyc (lyc@moz-jft.nr8.226.207.IP) has joined #rust
2015-05-24 21:36:57	aatch	mystor, I'd argue that the reason given isn't valid. Memory leaks aren't unsafe.
2015-05-24 21:37:04	mystor	yeah
2015-05-24 21:37:10	mystor	(that’s why I asked)
2015-05-24 21:37:33	mystor	https://github.com/rust-lang/rust/issues/25755
2015-05-24 21:37:45	aatch	Though being aware of the potential issues from using it might be enough to keep it unsafe.
2015-05-24 21:37:48	mystor	other people have already thought of this :P
2015-05-24 21:37:53	Remram	I can't find the Rand trait in the docs?
2015-05-24 21:37:58	mystor	mem::forget is just as dangerous
2015-05-24 21:38:08	<--	bluss (bluss@moz-ec5o68.cust.bredbandsbolaget.se) has quit (Ping timeout: 121 seconds)
2015-05-24 21:38:08	@niconii	into_raw just flat-out does a mem::transmute
2015-05-24 21:38:22	Remram	there are links to http://doc.rust-lang.org/nightly/rand/trait.Rand.html but 404
2015-05-24 21:38:49	<--	winding-lines (textual@moz-9utvl5.frokca.sbcglobal.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-24 21:38:52	@niconii	Remram: links where?
2015-05-24 21:38:52	mystor	niconii: You can do it in safe code with `let x = &*my_box; mem::forget(my_box);` 
2015-05-24 21:39:08	-->	jawzi (jawzi@moz-0tl5mf.sc.comcast.net) has joined #rust
2015-05-24 21:39:09	Remram	niconii: http://doc.rust-lang.org/nightly/std/primitive.f32.html#method.rand for instance
2015-05-24 21:39:21	mystor	well, I forgot the `as *mut T`
2015-05-24 21:39:29	mystor	but you get the point
2015-05-24 21:39:35	aatch	Remram, http://doc.rust-lang.org/rand/rand/index.html is the actual link.
2015-05-24 21:39:55	@niconii	Remram: that's strange
2015-05-24 21:40:56	<--	copycat (Thunderbird@moz-dpm.8hc.223.111.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 21:41:05	@niconii	Remram: i guess it's just a bug in rustdoc, but i'm not sure why it's pulling traits from rand, which is now an external crate on crates.io
2015-05-24 21:41:05	-->	c_wraith (c_wraith@moz-7i8.v6v.191.131.IP) has joined #rust
2015-05-24 21:41:33	-->	copycat (Thunderbird@moz-dpm.8hc.223.111.IP) has joined #rust
2015-05-24 21:41:39	-->	summerlight_ (summerlight@moz-99k.2mj.130.121.IP) has joined #rust
2015-05-24 21:42:01	<--	markstory (textual@moz-tb3ghu.cable.rogers.com) has quit (Quit: Textual IRC Client: www.textualapp.com)
2015-05-24 21:42:46	-->	winding-lines (textual@moz-9utvl5.frokca.sbcglobal.net) has joined #rust
2015-05-24 21:42:58	-->	nofree (Mibbit@moz-pot.n2t.17.14.IP) has joined #rust
2015-05-24 21:42:59	<--	winding-lines (textual@moz-9utvl5.frokca.sbcglobal.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-24 21:43:54	Remram	apparently it's not actually pulling them :/
2015-05-24 21:44:45	-->	dsantiago (santiago@moz-ro2mm9.res.rr.com) has joined #rust
2015-05-24 21:44:45	<--	santiago (santiago@moz-ro2mm9.res.rr.com) has quit (Connection closed)
2015-05-24 21:44:54	aatch	Remainders are weird, `123 % 6` == `123 % -6`
2015-05-24 21:45:03	@niconii	well, in any case, it shouldn't be showing Rand in std docs at all
2015-05-24 21:45:09	<--	jawzi (jawzi@moz-0tl5mf.sc.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-24 21:45:31	@huon	niconii: there's a secret internal Rand crate
2015-05-24 21:45:41	-->	tilde (namidasshu@moz-t4a73r.retail.telecomitalia.it) has joined #rust
2015-05-24 21:45:43	@huon	(the standard library needs some randomness too)
2015-05-24 21:46:08	@niconii	ahh, so that's where it's coming from, huh
2015-05-24 21:46:19	<--	Jesin (Jesin@moz-48mne2.nsvltn.sbcglobal.net) has quit (Connection closed)
2015-05-24 21:46:22	<--	Morten (Morten@moz-h1823n.bb.online.no) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-05-24 21:46:40	-->	Jesin (Jesin@moz-48mne2.nsvltn.sbcglobal.net) has joined #rust
2015-05-24 21:46:48	<--	godlikesme__ (godlikesme@moz-2a2.dsd.174.79.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 21:48:27	<--	Jesin (Jesin@moz-48mne2.nsvltn.sbcglobal.net) has quit (Connection closed)
2015-05-24 21:48:50	-->	Jesin (Jesin@moz-48mne2.nsvltn.sbcglobal.net) has joined #rust
2015-05-24 21:49:42	FreeFull	aatch: How % works depends entirely on how / works
2015-05-24 21:49:43	<--	gandalf (zbraniecki@moz-cp7c4m.ca.comcast.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-24 21:50:31	aatch	FreeFull, I'm working from the definition that `N/D = (Q, R)` where `N = QD + R`.
2015-05-24 21:51:39	<--	erz (erz@moz-fiq1tl.broadband.corbina.ru) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-24 21:51:54	-->	lurk_ (chatzilla@moz-qm19cj.in.comcast.net) has joined #rust
2015-05-24 21:53:15	-->	mib_7m2bed (Mibbit@moz-c8t.rlc.64.112.IP) has joined #rust
2015-05-24 21:55:01	<--	tilde (namidasshu@moz-t4a73r.retail.telecomitalia.it) has quit (Quit: Leaving)
2015-05-24 21:56:01	<--	lyc (lyc@moz-jft.nr8.226.207.IP) has quit (Connection closed)
2015-05-24 21:57:11	-->	godlikesme__ (godlikesme@moz-2a2.dsd.174.79.IP) has joined #rust
2015-05-24 21:57:45	<--	ytain (ytain@moz-07c3h9.dsl.teksavvy.com) has quit (Quit: Textual IRC Client: www.textualapp.com)
2015-05-24 21:57:46	@niconii	aatch: and it does work according to that definition
2015-05-24 21:58:45	aatch	niconii, yeah, it's just a quirk of the definition that the sign of `D` doesn't affect the sign of `R`.
2015-05-24 22:00:01	@niconii	aatch: right, though the sign of `N` does
2015-05-24 22:00:30	mib_7m2bed	hi, I have trouble with lifetime, can anyone help me ?  http://is.gd/b3gyxd
2015-05-24 22:01:11	-->	lenstr (lenstr@moz-oaq.vju.25.171.IP) has joined #rust
2015-05-24 22:01:25	aatch	niconii, yep. I'm writing an arbitrary-precision number library and all of my low-level routines are for unsigned numbers only. Which is fine, it just means that the higher-level signed wrapper has to manage the signs.
2015-05-24 22:01:45	<--	lenstr (lenstr@moz-oaq.vju.25.171.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-24 22:01:58	-->	lenstr (lenstr@moz-oaq.vju.25.171.IP) has joined #rust
2015-05-24 22:02:48	<--	tetsuharu (tetsuharu@moz-r5j.l6d.168.210.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-24 22:02:51	mib_7m2bed	To a newbee, lifetime is really not that easy to understand.
2015-05-24 22:03:06	<--	gsingh93 (gulshan@moz-ln1ktu.st3l.iv8o.0004.2601.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 22:03:07	<--	lenstr (lenstr@moz-oaq.vju.25.171.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-24 22:04:06	-->	tetsuharu (tetsuharu@moz-r5j.l6d.168.210.IP) has joined #rust
2015-05-24 22:04:36	-->	dinfuehr (dinfuehr@moz-sh7u9l.highway.telekom.at) has joined #rust
2015-05-24 22:05:44	-->	ygrek (user@moz-8j9aeu.org.ua) has joined #rust
2015-05-24 22:06:07	@niconii	mib_7m2bed: why do you have `let list: &mut Vec<&[i32]>` instead of `let mut list: Vec<&[i32]>`?
2015-05-24 22:07:26	-->	copycat1 (Thunderbird@moz-dpm.8hc.223.111.IP) has joined #rust
2015-05-24 22:07:37	mib_7m2bed	niconii: because I'm a newbee  :)
2015-05-24 22:08:43	<--	dinfuehr (dinfuehr@moz-sh7u9l.highway.telekom.at) has quit (Ping timeout: 121 seconds)
2015-05-24 22:09:47	<--	copycat (Thunderbird@moz-dpm.8hc.223.111.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 22:10:10	@niconii	mib_7m2bed: also, keep in mind that Rust does not have guaranteed tail-call optimization, so it's possible for recursion to run out of stack space
2015-05-24 22:10:37	@niconii	...actually these aren't tail-calls anyway
2015-05-24 22:10:52	mib_7m2bed	niconii: see, thanks
2015-05-24 22:13:23	@niconii	anyway, i'm not entirely sure what *exactly* the borrowing issue is here
2015-05-24 22:13:29	<--	copycat1 (Thunderbird@moz-dpm.8hc.223.111.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 22:14:09	<--	lixiaofeng (lixiaofeng@moz-dm7.656.240.220.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 22:14:44	<--	godlikesme__ (godlikesme@moz-2a2.dsd.174.79.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 22:15:19	-->	datalus (datalus@moz-oq4ug8.mycingular.net) has joined #rust
2015-05-24 22:16:32	_habnabit	so, when i build a staticlib with cargo/listc, i get a bunch of `note: link against the following native artifacts ...` and then on successive lines it says `note: library: ...`. is there a way to get those libraries programmatically? parsing the rustc output seems like a bad idea
2015-05-24 22:16:39	_habnabit	er, listc=rustc
2015-05-24 22:20:11	<--	tigrou3tac (fabien@moz-gdonfo.fbx.proxad.net) has quit (Ping timeout: 121 seconds)
2015-05-24 22:20:19	<--	zzing (textual@moz-jucm1n.cpe.distributel.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-24 22:20:26	-->	godlikesme__ (godlikesme@moz-2a2.dsd.174.79.IP) has joined #rust
2015-05-24 22:20:30	-->	lixiaofeng (lixiaofeng@moz-dm7.656.240.220.IP) has joined #rust
2015-05-24 22:22:06	andschwa	I'm trying to implement two point crossover of two vectors. I get two random indices, and need to swap all the elements between the indices of one vector with those at the same location in the other. I'm struggling to find an idiomatic solution.
2015-05-24 22:22:33	andschwa	(noting that the second index could be in front of the first, in which case the rotation should wrap around)
2015-05-24 22:23:24	--	irc: disconnected from server
2015-05-24 22:23:41	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-24 22:23:41	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-24 22:23:41	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-24 22:23:41	--	Channel #rust: 944 nicks (15 ops, 0 halfops, 2 voices, 927 normals)
2015-05-24 22:23:43	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-24 22:23:59	andschwa	but I'm not seeing a rotate
2015-05-24 22:24:04	posix4e	I hate to say it, but I think rust-style is lapping rustfmt
2015-05-24 22:24:11	posix4e	glad for a diversity i suppose
2015-05-24 22:24:19	andschwa	I think split and swap may do
2015-05-24 22:25:24	andschwa	I may be able to do it with mem::swap while iterating over the range between the indices
2015-05-24 22:25:38	ChrisMorgan	mib_7m2bed: your approach cannot work; if it were permitted, you would be having bad aliasing, mutating through a &mut pointer the contents of a & pointer.
2015-05-24 22:26:41	--	irc: disconnected from server
2015-05-24 22:26:53	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-24 22:26:53	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-24 22:26:53	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-24 22:26:53	--	Channel #rust: 944 nicks (15 ops, 0 halfops, 2 voices, 927 normals)
2015-05-24 22:26:55	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-24 22:26:58	<--	fabianvf_ (fabianvf@moz-fjqmui.va.comcast.net) has quit (Connection closed)
2015-05-24 22:27:02	-->	nstoddard_ (nstoddard@moz-iu69ov.jcf6.2eo7.0009.2601.IP) has joined #rust
2015-05-24 22:29:22	<--	nstoddard (nstoddard@moz-iu69ov.jcf6.2eo7.0009.2601.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 22:29:28	--	nstoddard_ is now known as nstoddard
2015-05-24 22:29:44	<--	Astrum|Lap (Astrum|Lap@moz-skcefh.co.comcast.net) has quit (Client exited)
2015-05-24 22:30:03	-->	Astrum|Lap (Astrum|Lap@moz-skcefh.co.comcast.net) has joined #rust
2015-05-24 22:30:32	<--	isomarcte (isomarcte@moz-0lhngt.albq.qwest.net) has quit (A TLS packet with unexpected length was received.)
2015-05-24 22:30:45	-->	forgottenone (forgottenon@moz-h3n.fd4.131.217.IP) has joined #rust
2015-05-24 22:31:24	aatch	playbot: "0123".parse::<i32>()
2015-05-24 22:31:24	<--	turtil (turtil@moz-gfc.es4.23.103.IP) has quit (Quit: WeeChat 1.1.1)
2015-05-24 22:31:25	--	Notice(playbot): Ok(123)
2015-05-24 22:31:31	-->	turtil (turtil@moz-gfc.es4.23.103.IP) has joined #rust
2015-05-24 22:31:34	-->	mlafeldt (mlafeldt@moz-r5eets.pools.vodafone-ip.de) has joined #rust
2015-05-24 22:32:37	-->	indefini (indefini@moz-4p4v25.ucom.ne.jp) has joined #rust
2015-05-24 22:35:32	-->	nodweber (nodweber@moz-knt.fgq.178.5.IP) has joined #rust
2015-05-24 22:35:46	-->	gandalf (zbraniecki@moz-cp7c4m.ca.comcast.net) has joined #rust
2015-05-24 22:37:06	-->	nstoddard_ (nstoddard@moz-iu69ov.jcf6.2eo7.0009.2601.IP) has joined #rust
2015-05-24 22:37:43	<--	mlafeldt (mlafeldt@moz-r5eets.pools.vodafone-ip.de) has quit (Ping timeout: 121 seconds)
2015-05-24 22:38:30	-->	psd (psd@moz-dlnvhl.mtnl.net.in) has joined #rust
2015-05-24 22:38:53	-->	tikue (tim@moz-g5n.ha3.38.65.IP) has joined #rust
2015-05-24 22:39:10	<--	}ls{ (uhelp@moz-n0vlkg.dip0.t-ipconnect.de) has quit (Quit: User terminated by real life interrupt)
2015-05-24 22:39:22	<--	nstoddard (nstoddard@moz-iu69ov.jcf6.2eo7.0009.2601.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 22:39:32	--	nstoddard_ is now known as nstoddard
2015-05-24 22:39:44	<--	nstoddard (nstoddard@moz-iu69ov.jcf6.2eo7.0009.2601.IP) has quit (Quit: ChatZilla 0.9.91.1 [Firefox 38.0.1/20150513174244])
2015-05-24 22:39:56	<--	nodweber (nodweber@moz-knt.fgq.178.5.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 22:40:47	-->	OxMLR (OxMLR@moz-19veku.res.rr.com) has joined #rust
2015-05-24 22:41:08	-->	hroi (hroi@moz-d273ub.static.netgroup.dk) has joined #rust
2015-05-24 22:41:22	<--	gandalf (zbraniecki@moz-cp7c4m.ca.comcast.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-24 22:41:24	<--	OxMLR (OxMLR@moz-19veku.res.rr.com) has left #rust ("Leaving")
2015-05-24 22:41:25	<--	dalarmmst (dalarmmst@moz-mb21j4.bredband.comhem.se) has quit (Ping timeout: 121 seconds)
2015-05-24 22:41:32	<--	capcar (mathieu@moz-mi55kn.mc.videotron.ca) has quit (Ping timeout: 121 seconds)
2015-05-24 22:41:43	-->	harrisonclarke (harrisoncla@moz-uur7pt.eastlink.ca) has joined #rust
2015-05-24 22:45:08	-->	copycat (Thunderbird@moz-mm4e60.singnet.com.sg) has joined #rust
2015-05-24 22:45:15	<--	hroi (hroi@moz-d273ub.static.netgroup.dk) has quit (Ping timeout: 121 seconds)
2015-05-24 22:46:43	<--	GGist (Mibbit@moz-st7v59.wa.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-24 22:46:49	<--	Rym_ (y@moz-c2u.sd4.38.217.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 22:46:51	<--	thelink2012 (Mibbit@moz-gd7.6ju.214.186.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-24 22:47:56	<--	csherratt (textual@moz-357qdq.cable.teksavvy.com) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-24 22:48:21	-->	pgonda (peter@moz-s36.0tp.134.75.IP) has joined #rust
2015-05-24 22:49:04	-->	dmac_ (dmac@moz-jen1k8.ca.comcast.net) has joined #rust
2015-05-24 22:49:26	-->	csherratt (textual@moz-357qdq.cable.teksavvy.com) has joined #rust
2015-05-24 22:49:34	<--	copycat (Thunderbird@moz-mm4e60.singnet.com.sg) has quit (Ping timeout: 121 seconds)
2015-05-24 22:49:52	andschwa	is there *any* way I can collect on pairs of elements?
2015-05-24 22:50:06	andschwa	but have the collection consist of the elements, not of pairs
2015-05-24 22:50:48	@huon	andschwa: i.e. turn Iterator<Item = (T, T)> into a Vec<T>?
2015-05-24 22:50:58	andschwa	yes
2015-05-24 22:51:04	andschwa	I'm thinking unzip
2015-05-24 22:51:23	@huon	oh, so Iterator<Item = (A, B)> into Vec<A>, Vec<B>?
2015-05-24 22:51:32	andschwa	no, I think that's why I can't use unzip
2015-05-24 22:51:35	andschwa	it just looked promising
2015-05-24 22:51:40	andschwa	your original is what I need
2015-05-24 22:52:12	andschwa	like a flatten of some sort
2015-05-24 22:52:14	@huon	you can use .flat_map to get an Iterator<Item = T> and then collect that
2015-05-24 22:52:24	-->	choplin (choplin@moz-qkm9un.ap.nuro.jp) has joined #rust
2015-05-24 22:52:45	andschwa	haha, yay functional programming
2015-05-24 22:52:56	andschwa	now the final problem is that apparently the type must be known
2015-05-24 22:53:01	andschwa	but I'm not sure where to annotate it
2015-05-24 22:53:42	@huon	.collect::<Vec<_>>() is one way
2015-05-24 22:53:57	@huon	or use a variable binding with a type, like `let v: Vec<_> = ...;`
2015-05-24 22:54:17	-->	dalarmmst (dalarmmst@moz-mb21j4.bredband.comhem.se) has joined #rust
2015-05-24 22:54:40	<--	csherratt (textual@moz-357qdq.cable.teksavvy.com) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-24 22:54:48	<--	choplin (choplin@moz-qkm9un.ap.nuro.jp) has quit (Connection closed)
2015-05-24 22:54:48	andschwa	it was previously typed; does a reassignment change types? I don't think so in this case
2015-05-24 22:56:12	-->	frangio (frangio@moz-04sgf8.fibertel.com.ar) has joined #rust
2015-05-24 22:56:22	andschwa	I guess I'm not quite sure how to use flatmap
2015-05-24 22:56:40	-->	lyc (lyc@moz-jft.nr8.226.207.IP) has joined #rust
2015-05-24 22:56:55	<--	zz_kimundi (kimundi@moz-0lp43l.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2015-05-24 22:56:56	<--	mib_7m2bed (Mibbit@moz-c8t.rlc.64.112.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-24 22:57:12	andschwa	this is an excerpt http://pastebin.com/bBFEcbrx
2015-05-24 22:59:28	-->	gandalf (zbraniecki@moz-cp7c4m.ca.comcast.net) has joined #rust
2015-05-24 22:59:54	-->	zz_kimundi (kimundi@moz-qljpe9.dip0.t-ipconnect.de) has joined #rust
2015-05-24 23:00:03	<--	meh (meh@moz-5b2553.42-151.net24.it) has quit (Ping timeout: 121 seconds)
2015-05-24 23:00:11	--	zz_kimundi is now known as kimundi
2015-05-24 23:00:42	<--	lyc (lyc@moz-jft.nr8.226.207.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 23:01:15	@niconii	playbot: let vec = vec![(1, 2), (3, 4), (5, 6)]; vec.into_iter().flat_map(|x| vec![x.0, x.1].into_iter()).collect::<Vec<_>>()
2015-05-24 23:01:17	--	Notice(playbot): [1, 2, 3, 4, 5, 6]
2015-05-24 23:01:22	@niconii	you can do this... i guess
2015-05-24 23:01:26	--	zz_NameNotFound is now known as NameNotFound
2015-05-24 23:01:41	@niconii	the vec! inside the flat_map is kinda gross, but i'm not sure how to fix that
2015-05-24 23:02:04	@huon	playbot: let vec = vec![(1, 2), (3, 4), (5, 6)]; vec.into_iter().flat_map(|x| Some(x.0).into_iter().chain(Some(x.1).into_iter())).collect::<Vec<_>>()
2015-05-24 23:02:06	--	Notice(playbot): [1, 2, 3, 4, 5, 6]
2015-05-24 23:02:16	@niconii	ah, i guess you can do that, yeah
2015-05-24 23:02:46	-->	yeahnoob (Xanadu@moz-ku8.ugi.122.118.IP) has joined #rust
2015-05-24 23:03:01	@niconii	pretty unergonomic, though
2015-05-24 23:03:04	<--	dmac_ (dmac@moz-jen1k8.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-24 23:03:17	andschwa	the real problem is that I want to collect (x, y) into [x, y, x', y', ...] rather than [(x, y), (x', y'), ...]
2015-05-24 23:03:21	-->	HeroesGrave (HeroesGrave@moz-5kkrpk.vf.net.nz) has joined #rust
2015-05-24 23:03:26	<--	nofree (Mibbit@moz-pot.n2t.17.14.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-24 23:03:28	-->	lenstr (lenstr@moz-oaq.vju.25.171.IP) has joined #rust
2015-05-24 23:03:31	@huon	one could define a two! macro that allows .flat_map(|x| two!(x.0, x.1))
2015-05-24 23:03:40	<--	BossKonaSegway1 (Michael@moz-vp8rf7.res.rr.com) has left #rust
2015-05-24 23:03:45	@huon	andschwa: isn't that exactly what niconii's and my codesamples do?
2015-05-24 23:03:49	-->	KLP (KLP@moz-qdcjho.res.rr.com) has joined #rust
2015-05-24 23:03:55	HeroesGrave	Is there a way to specify cargo features that cannot be used together?
2015-05-24 23:04:01	@huon	HeroesGrave: no
2015-05-24 23:04:04	andschwa	huon: yes
2015-05-24 23:04:09	<--	jminer (Instantbird@moz-b1u.qch.163.66.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 23:04:18	<--	lenstr (lenstr@moz-oaq.vju.25.171.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-24 23:04:28	andschwa	huon: but I may be able to rewrite my problem
2015-05-24 23:04:29	-->	lenstr (lenstr@moz-oaq.vju.25.171.IP) has joined #rust
2015-05-24 23:04:41	@huon	HeroesGrave: although would could simulate it like `#[cfg(all(feature = "one", feature = "two"))] static INVALID_FEATURES: () = 1;`
2015-05-24 23:04:52	@huon	HeroesGrave: (i.e. stop the crate compiling if both features are active)
2015-05-24 23:05:02	@huon	HeroesGrave: (is an ugly hack)
2015-05-24 23:05:14	HeroesGrave	Seems good enough for my purpose
2015-05-24 23:05:22	@huon	andschwa: one could also just use a manual loop
2015-05-24 23:05:22	-->	dinfuehr (dinfuehr@moz-81c7pp.highway.telekom.at) has joined #rust
2015-05-24 23:05:23	<--	lenstr (lenstr@moz-oaq.vju.25.171.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-24 23:05:28	HeroesGrave	Anyone who uses the two features together is doing something silly in the first place
2015-05-24 23:05:34	<--	KLP (KLP@moz-qdcjho.res.rr.com) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-05-24 23:05:48	andschwa	huon: and push two at a time; I thought about that but would end up reallocating a lot
2015-05-24 23:06:05	@huon	andschwa: using Vec::with_capacity can avoid that
2015-05-24 23:06:17	andschwa	and I also am drawing from the initial collection to produce my elements for a new collection to replace the individual
2015-05-24 23:06:30	@huon	andschwa: let (low, _) = iterator.size_hint(); let mut v = Vec::with_capacity(2 * low);
2015-05-24 23:06:32	-->	zyphrus (David@moz-1a4.urk.98.101.IP) has joined #rust
2015-05-24 23:06:41	@huon	(this will actually reallocate less than the flat_map version)
2015-05-24 23:07:29	@huon	in any case, the reallocations do only happen logarithmically often
2015-05-24 23:08:23	-->	p1start (p1start@moz-nftjhe.org) has joined #rust
2015-05-24 23:08:34	<--	chowmeined (chowmeined@moz-vqsrfv.wa.comcast.net) has quit (Quit: Leaving)
2015-05-24 23:09:25	<--	dinfuehr (dinfuehr@moz-81c7pp.highway.telekom.at) has quit (Ping timeout: 121 seconds)
2015-05-24 23:09:54	<--	HeroesGrave (HeroesGrave@moz-5kkrpk.vf.net.nz) has left #rust ("Bye")
2015-05-24 23:10:44	<--	Guest (textual@moz-rtn.fg7.77.192.IP) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-24 23:10:54	-->	Guest (textual@moz-rtn.fg7.77.192.IP) has joined #rust
2015-05-24 23:10:56	--	NameNotFound is now known as zz_NameNotFound
2015-05-24 23:11:04	andschwa	I am becoming convinced that a manual loop is the better option
2015-05-24 23:11:12	andschwa	just wrote it; looks cleaner
2015-05-24 23:12:14	<--	idegen (greg@moz-9c4nle.or.frontiernet.net) has quit (Quit: Leaving.)
2015-05-24 23:12:23	<--	raisin (Mibbit@moz-i7cb3r.fios.verizon.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-24 23:12:48	-->	jzhu98 (jzhu98@moz-05cjau.h4qm.blhu.0306.2602.IP) has joined #rust
2015-05-24 23:12:54	<--	jzhu98 (jzhu98@moz-05cjau.h4qm.blhu.0306.2602.IP) has left #rust ("")
2015-05-24 23:12:57	<--	tetsuharu (tetsuharu@moz-r5j.l6d.168.210.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 23:12:58	-->	jzhu98 (jzhu98@moz-05cjau.h4qm.blhu.0306.2602.IP) has joined #rust
2015-05-24 23:13:24	<--	jzhu98 (jzhu98@moz-05cjau.h4qm.blhu.0306.2602.IP) has quit (Client exited)
2015-05-24 23:13:49	<--	KeyboardFire (llama@moz-4s8.jeh.196.98.IP) has quit (Quit: leaving)
2015-05-24 23:14:06	<--	khades1 (Thunderbird@moz-qgd.3vk.74.212.IP) has quit (Client exited)
2015-05-24 23:14:35	-->	c74d3 (c74d3a4ebb6@moz-64n8ol.mggc.hibn.4404.2002.IP) has joined #rust
2015-05-24 23:14:45	<--	clatour (clatour@moz-2dc34f.hlrn.qwest.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2015-05-24 23:15:35	<--	Guest (textual@moz-rtn.fg7.77.192.IP) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-24 23:16:14	<--	c74d (c74d3a4ebb6@moz-0ersgu.oc.cox.net) has quit (Ping timeout: 121 seconds)
2015-05-24 23:16:33	-->	gattscha1do (richard@moz-ees7cq.dyn.telefonica.de) has joined #rust
2015-05-24 23:16:52	-->	copycat (Thunderbird@moz-dpm.8hc.223.111.IP) has joined #rust
2015-05-24 23:17:33	--	c74d3 is now known as c74d
2015-05-24 23:17:47	-->	peferron (peferron@moz-k89vq8.ca.comcast.net) has joined #rust
2015-05-24 23:19:18	<--	c74d (c74d3a4ebb6@moz-64n8ol.mggc.hibn.4404.2002.IP) has quit (Connection closed)
2015-05-24 23:19:31	<--	gattschardo (richard@moz-5p6p1s.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2015-05-24 23:19:39	-->	c74d (c74d3a4ebb6@moz-64n8ol.mggc.hibn.4404.2002.IP) has joined #rust
2015-05-24 23:20:54	--	irc: disconnected from server
2015-05-24 23:21:06	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-24 23:21:06	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-24 23:21:06	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-24 23:21:06	--	Channel #rust: 936 nicks (15 ops, 0 halfops, 2 voices, 919 normals)
2015-05-24 23:21:08	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-24 23:21:45	-->	tikue_ (tim@moz-3h1ag3.hqn5.aap1.1002.2600.IP) has joined #rust
2015-05-24 23:22:13	<--	Wilduck (erik@moz-0l3fjb.fios.verizon.net) has quit (Client exited)
2015-05-24 23:23:52	<--	frangio (frangio@moz-04sgf8.fibertel.com.ar) has quit (Ping timeout: 121 seconds)
2015-05-24 23:24:24	<--	c74d (c74d3a4ebb6@moz-64n8ol.mggc.hibn.4404.2002.IP) has quit (Connection closed)
2015-05-24 23:24:38	<--	callahad (callahad@moz-8u66c8.members.linode.com) has quit (Ping timeout: 121 seconds)
2015-05-24 23:24:58	<--	tikue (tim@moz-g5n.ha3.38.65.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 23:25:20	-->	c74d (c74d3a4ebb6@moz-64n8ol.mggc.hibn.4404.2002.IP) has joined #rust
2015-05-24 23:26:07	<--	gandalf (zbraniecki@moz-cp7c4m.ca.comcast.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-24 23:26:31	-->	nott (nott@moz-to4.06o.57.86.IP) has joined #rust
2015-05-24 23:26:33	-->	frangio (frangio@moz-04sgf8.fibertel.com.ar) has joined #rust
2015-05-24 23:28:38	-->	eddyb (eddyb@moz-ure.pug.25.188.IP) has joined #rust
2015-05-24 23:30:03	<--	c74d (c74d3a4ebb6@moz-64n8ol.mggc.hibn.4404.2002.IP) has quit (Connection closed)
2015-05-24 23:30:08	-->	zucchini (Mibbit@moz-j6l.esl.246.222.IP) has joined #rust
2015-05-24 23:30:22	-->	c74d (c74d3a4ebb6@moz-64n8ol.mggc.hibn.4404.2002.IP) has joined #rust
2015-05-24 23:30:25	<--	peferron (peferron@moz-k89vq8.ca.comcast.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-24 23:30:29	-->	gandalf (zbraniecki@moz-cp7c4m.ca.comcast.net) has joined #rust
2015-05-24 23:30:49	zucchini	rust   time.sub包有吗？
2015-05-24 23:31:00	<--	gandalf (zbraniecki@moz-cp7c4m.ca.comcast.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-24 23:32:02	-->	kgrandon (Adium@moz-0rpllm.dc.cox.net) has joined #rust
2015-05-24 23:32:12	--	irc: disconnected from server
2015-05-24 23:32:24	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-24 23:32:24	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-24 23:32:24	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-24 23:32:24	--	Channel #rust: 936 nicks (15 ops, 0 halfops, 2 voices, 919 normals)
2015-05-24 23:32:26	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-24 23:32:58	<--	zucchini (Mibbit@moz-j6l.esl.246.222.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-24 23:33:38	-->	rphmeier (rphmeier@moz-hp8bv4.fios.verizon.net) has joined #rust
2015-05-24 23:34:00	<--	ajhager (aajhager@moz-mcdsgi.iplsin.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-24 23:34:02	-->	Rym_ (y@moz-c2u.sd4.38.217.IP) has joined #rust
2015-05-24 23:34:34	-->	callahad (callahad@moz-8u66c8.members.linode.com) has joined #rust
2015-05-24 23:35:06	<--	c74d (c74d3a4ebb6@moz-64n8ol.mggc.hibn.4404.2002.IP) has quit (Connection closed)
2015-05-24 23:35:32	-->	c74d (c74d3a4ebb6@moz-64n8ol.mggc.hibn.4404.2002.IP) has joined #rust
2015-05-24 23:36:05	<--	eddyb (eddyb@moz-ure.pug.25.188.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 23:36:08	-->	thelink2012 (Mibbit@moz-gd7.6ju.214.186.IP) has joined #rust
2015-05-24 23:36:21	-->	nodweber (nodweber@moz-knt.fgq.178.5.IP) has joined #rust
2015-05-24 23:38:02	-->	gandalf (zbraniecki@moz-cp7c4m.ca.comcast.net) has joined #rust
2015-05-24 23:38:20	<--	Rym_ (y@moz-c2u.sd4.38.217.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 23:39:06	-->	peferron (peferron@moz-k89vq8.ca.comcast.net) has joined #rust
2015-05-24 23:39:34	<--	peferron (peferron@moz-k89vq8.ca.comcast.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-24 23:39:34	-->	ajhager (aajhager@moz-mcdsgi.iplsin.sbcglobal.net) has joined #rust
2015-05-24 23:40:15	<--	c74d (c74d3a4ebb6@moz-64n8ol.mggc.hibn.4404.2002.IP) has quit (Connection closed)
2015-05-24 23:40:18	<--	gandalf (zbraniecki@moz-cp7c4m.ca.comcast.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-24 23:40:37	-->	c74d (c74d3a4ebb6@moz-64n8ol.mggc.hibn.4404.2002.IP) has joined #rust
2015-05-24 23:40:39	<--	nodweber (nodweber@moz-knt.fgq.178.5.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 23:40:56	-->	NerdTaco (NerdTaco@moz-a4e65f.dsl.bell.ca) has joined #rust
2015-05-24 23:40:58	-->	panicbit (panicbit@moz-rcvp1e.dip0.t-ipconnect.de) has joined #rust
2015-05-24 23:42:16	andschwa	huon: with_capacity() will work properly for a Vec of structs where the struct has a Vec as well, right? I don't know a whole lot about Rust's internal memory practices, but imagine that the struct just holds a ref to its Vec
2015-05-24 23:42:41	Mutabah	andschwa: Vec internally is a pointer (and two sizes)
2015-05-24 23:42:47	andschwa	Mutabah: perfect
2015-05-24 23:43:04	<--	harrisonclarke (harrisoncla@moz-uur7pt.eastlink.ca) has quit (Connection closed)
2015-05-24 23:43:18	rphmeier	http://is.gd/XoXImj
2015-05-24 23:43:19	Mutabah	andschwa: with_capcacity will just allocate the required space for n raw items (i.e. it has no idea if the thing in it has another vec)
2015-05-24 23:43:20	rphmeier	compiler error
2015-05-24 23:43:25	rphmeier	i minified it a lot
2015-05-24 23:43:42	rphmeier	happened when i tried to build in the middle of renaming a member array
2015-05-24 23:43:47	andschwa	Mutabah: but the struct's size is known at compile time, since though it "has" a vec, it only ever stores the pointer
2015-05-24 23:43:53	andschwa	I figured that should be the case
2015-05-24 23:43:56	Mutabah	rphmeier: Umm... I don't see "old_name" defined anywhere
2015-05-24 23:44:38	thelink2012	When I write &2, talking about the binary output, does it store a i32 (or whatever integral type) in the .data segment and gives me a reference to that?
2015-05-24 23:44:39	<--	O01eg (o01eg@moz-squns2.1p9f.4n8f.2698.2a02.IP) has quit (Client exited)
2015-05-24 23:45:10	_habnabit	so, when i build a staticlib with cargo/rustc, i get a bunch of `note: link against the following native artifacts ...` and then on successive lines it says `note: library: ...`. is there a way to get those libraries programmatically? parsing the rustc output seems like a bad idea. i found https://github.com/rust-lang/rust/blob/master/src/librustc_trans/back/link.rs#L770-L784 and it doesn't look like it's 
2015-05-24 23:45:11	_habnabit	programmatically accessible unless i duplicate this whole function...
2015-05-24 23:45:19	<--	c74d (c74d3a4ebb6@moz-64n8ol.mggc.hibn.4404.2002.IP) has quit (Connection closed)
2015-05-24 23:45:33	rphmeier	Mutabah: Yes it was the old name of the things variable
2015-05-24 23:45:40	rphmeier	this is an ICE
2015-05-24 23:45:52	Mutabah	rphmeier: Oh, derp, missed the ICE part
2015-05-24 23:46:13	rphmeier	Mutabah: Yeah, it shouldn't compile since it's invalid code so I can see why you'd get taht
2015-05-24 23:46:16	Mutabah	rphmeier: Look for an existing ticket for this issue, and if you don't find one, open a ticket with it
2015-05-24 23:46:17	-->	c74d (c74d3a4ebb6@moz-64n8ol.mggc.hibn.4404.2002.IP) has joined #rust
2015-05-24 23:47:01	Mutabah	rphmeier: There may already be a closed ticket, nightly doesn't have that ICE
2015-05-24 23:47:14	rphmeier	You're right
2015-05-24 23:47:18	Mutabah	rphmeier: So it just needs to be backported to stable/beta
2015-05-24 23:47:37	<--	psd (psd@moz-dlnvhl.mtnl.net.in) has quit (Ping timeout: 121 seconds)
2015-05-24 23:47:50	Mutabah	(Don't know if bugfixes like this get backported to stable or not)
2015-05-24 23:48:30	<--	pgonda (peter@moz-s36.0tp.134.75.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 23:49:04	<--	Azdle (Azdle@moz-fv6arh.mn.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-24 23:50:57	-->	frogonia (Mibbit@moz-gbj5au.cicril.sbcglobal.net) has joined #rust
2015-05-24 23:51:00	<--	c74d (c74d3a4ebb6@moz-64n8ol.mggc.hibn.4404.2002.IP) has quit (Connection closed)
2015-05-24 23:51:07	<--	nedp (nedp@moz-vg6vvt.bigpond.net.au) has quit (Connection closed)
2015-05-24 23:51:14	<--	nott (nott@moz-to4.06o.57.86.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 23:51:19	-->	c74d (c74d3a4ebb6@moz-64n8ol.mggc.hibn.4404.2002.IP) has joined #rust
2015-05-24 23:52:01	-->	rmdashrf (rmdashrf@moz-ecr.kjm.54.128.IP) has joined #rust
2015-05-24 23:52:08	<--	frogonia (Mibbit@moz-gbj5au.cicril.sbcglobal.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-24 23:52:59	-->	nedp (nedp@moz-vg6vvt.bigpond.net.au) has joined #rust
2015-05-24 23:53:00	<--	c_wraith (c_wraith@moz-7i8.v6v.191.131.IP) has quit (Quit: Leaving)
2015-05-24 23:54:12	-->	c_wraith (c_wraith@moz-7i8.v6v.191.131.IP) has joined #rust
2015-05-24 23:56:01	<--	c74d (c74d3a4ebb6@moz-64n8ol.mggc.hibn.4404.2002.IP) has quit (Connection closed)
2015-05-24 23:56:15	<--	Takronix (Takronix@moz-nm15k0.hr.cox.net) has quit (Quit: Nettalk6 - www.ntalk.de)
2015-05-24 23:56:18	<--	godlikesme__ (godlikesme@moz-2a2.dsd.174.79.IP) has quit (Ping timeout: 121 seconds)
2015-05-24 23:56:59	-->	c74d (c74d3a4ebb6@moz-64n8ol.mggc.hibn.4404.2002.IP) has joined #rust
2015-05-24 23:57:03	-->	andreabedini (andreabedin@moz-2lt49q.unimelb.edu.au) has joined #rust
2015-05-24 23:57:27	-->	lyc (lyc@moz-jft.nr8.226.207.IP) has joined #rust
2015-05-24 23:58:12	<--	Wild_Cat (Max@moz-fa8mvt.dsl.teksavvy.com) has quit (Ping timeout: 121 seconds)
2015-05-24 23:59:32	thelink2012	impl<T> Hash for Option<T> where T: Hash + Hash why this Hash + Hash?
2015-05-24 23:59:43	SpaceManiac	thelink2012: re &2: looks like yes
2015-05-24 23:59:55	@huon	thelink2012: probably a rustdoc bug
2015-05-25 00:00:13	-->	oberstet_ (quassel@moz-gbrouf.dynamic.mnet-online.de) has joined #rust
2015-05-25 00:00:24	@huon	thelink2012: ah, no, maybe just an artifact of how #[derive] works.
2015-05-25 00:01:31	<--	lyc (lyc@moz-jft.nr8.226.207.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 00:01:43	<--	c74d (c74d3a4ebb6@moz-64n8ol.mggc.hibn.4404.2002.IP) has quit (Connection closed)
2015-05-25 00:02:02	-->	c74d (c74d3a4ebb6@moz-64n8ol.mggc.hibn.4404.2002.IP) has joined #rust
2015-05-25 00:03:43	<--	oberstet (quassel@moz-49d2md.dynamic.mnet-online.de) has quit (Ping timeout: 121 seconds)
2015-05-25 00:03:50	-->	kimwonyong (kimwonyong@moz-e4i.1i3.111.117.IP) has joined #rust
2015-05-25 00:03:57	<--	panicbit (panicbit@moz-rcvp1e.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2015-05-25 00:04:42	-->	KLP (KLP@moz-qdcjho.res.rr.com) has joined #rust
2015-05-25 00:05:02	Mutabah	huon: Well, the lack of dedup is probably a rustdoc issue
2015-05-25 00:05:10	Mutabah	(but not a major one)
2015-05-25 00:05:26	@huon	true
2015-05-25 00:06:06	<--	KLP (KLP@moz-qdcjho.res.rr.com) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-05-25 00:06:17	-->	dinfuehr (dinfuehr@moz-81c7pp.highway.telekom.at) has joined #rust
2015-05-25 00:06:45	-->	lenstr (lenstr@moz-oaq.vju.25.171.IP) has joined #rust
2015-05-25 00:06:46	<--	c74d (c74d3a4ebb6@moz-64n8ol.mggc.hibn.4404.2002.IP) has quit (Connection closed)
2015-05-25 00:06:59	-->	colinsurprenant (colin@moz-q9ee1n.74.electronicbox.net) has joined #rust
2015-05-25 00:07:07	-->	acgtyrant (acgtyrant@moz-0gl.4sk.186.39.IP) has joined #rust
2015-05-25 00:07:18	<--	colinsurprenant (colin@moz-q9ee1n.74.electronicbox.net) has quit (Client exited)
2015-05-25 00:07:46	<--	lenstr (lenstr@moz-oaq.vju.25.171.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-25 00:08:14	-->	c74d (c74d3a4ebb6@moz-64n8ol.mggc.hibn.4404.2002.IP) has joined #rust
2015-05-25 00:09:02	-->	gandalf (zbraniecki@moz-cp7c4m.ca.comcast.net) has joined #rust
2015-05-25 00:10:23	<--	dinfuehr (dinfuehr@moz-81c7pp.highway.telekom.at) has quit (Ping timeout: 121 seconds)
2015-05-25 00:11:03	-->	psd (psd@moz-0ojjll.mtnl.net.in) has joined #rust
2015-05-25 00:11:20	<--	NerdTaco (NerdTaco@moz-a4e65f.dsl.bell.ca) has quit (Quit: Leaving)
2015-05-25 00:12:20	_habnabit	urrrgh i guess i'll pipe rustc through tee and then parse the output
2015-05-25 00:12:57	<--	c74d (c74d3a4ebb6@moz-64n8ol.mggc.hibn.4404.2002.IP) has quit (Connection closed)
2015-05-25 00:13:19	-->	c74d (c74d3a4ebb6@moz-64n8ol.mggc.hibn.4404.2002.IP) has joined #rust
2015-05-25 00:13:50	-->	zyphrus_ (David@moz-1a4.urk.98.101.IP) has joined #rust
2015-05-25 00:14:26	-->	leaper (Mibbit@moz-vgq.84q.13.210.IP) has joined #rust
2015-05-25 00:14:30	--	bentley|away is now known as bentley
2015-05-25 00:14:32	<--	Shackra (Jorge@moz-7bh.ng6.177.186.IP) has quit (Connection closed)
2015-05-25 00:14:45	Mutabah	_habnabit: Why?
2015-05-25 00:14:47	<--	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-25 00:15:05	thelink2012	if I want to get the &str slice of a String without using the deref operator but a method instead, should I use .borrow(), .as_ref() or .deref()?
2015-05-25 00:15:16	<--	ELD (textual@moz-tbcsac.co.comcast.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2015-05-25 00:15:18	chc4	Is there a way to do a glob import for everything *except* for imports that would conflict
2015-05-25 00:15:31	_habnabit	Mutabah, see above; i'm not sure how else to get the list of libraries i need to link when linking my staticlib output
2015-05-25 00:15:34	<--	zyphrus (David@moz-1a4.urk.98.101.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 00:15:44	aatch	It's ALIVE!!! https://github.com/Aatch/ramp
2015-05-25 00:15:48	-->	clatour (clatour@moz-2dc34f.hlrn.qwest.net) has joined #rust
2015-05-25 00:15:50	_habnabit	Mutabah, it appears to be just dumped to stdout and not programmatically accessible
2015-05-25 00:16:25	<--	leaper (Mibbit@moz-vgq.84q.13.210.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-25 00:16:51	@niconii	aatch: nice!
2015-05-25 00:17:02	aatch	I finally released something!
2015-05-25 00:17:06	aatch	I never do that!
2015-05-25 00:17:09	@niconii	\o/
2015-05-25 00:17:18	@niconii	...now i just need to release something.
2015-05-25 00:17:24	Mutabah	chc4: I think that's what happenes
2015-05-25 00:17:29	chc4	Someone updated rust-xlib and now it's conflicting in my code :/
2015-05-25 00:17:40	Mutabah	chc4: glob imported items can be overridden by local definitions
2015-05-25 00:17:53	Mutabah	(Well, I know that defining a local version of Result doesn't error)
2015-05-25 00:17:54	aatch	Mutabah, but not other imports.
2015-05-25 00:17:55	chc4	Mutabah: It's giving me errors though?
2015-05-25 00:17:59	Mutabah	aatch: Ah
2015-05-25 00:18:02	<--	c74d (c74d3a4ebb6@moz-64n8ol.mggc.hibn.4404.2002.IP) has quit (Connection closed)
2015-05-25 00:18:04	chc4	aatch: no, it's not other imports
2015-05-25 00:18:11	chc4	it's a local const variable
2015-05-25 00:18:14	aatch	Mutabah, it might also only apply to prelude stuff.
2015-05-25 00:18:27	<--	summerlight_ (summerlight@moz-99k.2mj.130.121.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 00:18:27	Mutabah	aatch: This is my own prelude
2015-05-25 00:18:55	Mutabah	(I.e. 'use prelude::*;' manually inserted at the top of every file, working in #![no_std])
2015-05-25 00:18:59	-->	c74d (c74d3a4ebb6@moz-64n8ol.mggc.hibn.4404.2002.IP) has joined #rust
2015-05-25 00:19:22	aatch	Mutabah, there's a prelude attribute or something, isn't there?
2015-05-25 00:19:26	chc4	"import `DestroyNotify` conflicts with value in this module"
2015-05-25 00:19:36	Mutabah	aatch: Hasn't hit yet
2015-05-25 00:19:48	chc4	that sounds pretty explicit that it cant be overridden by local
2015-05-25 00:19:49	aatch	Then I've got no idea.
2015-05-25 00:20:26	chc4	:/
2015-05-25 00:20:41	chc4	I really don't want to have to explicitly list all of the imports I need from this
2015-05-25 00:20:45	<--	c74d (c74d3a4ebb6@moz-64n8ol.mggc.hibn.4404.2002.IP) has quit (Connection closed)
2015-05-25 00:21:44	-->	c74d (c74d3a4ebb6@moz-64n8ol.mggc.hibn.4404.2002.IP) has joined #rust
2015-05-25 00:22:11	Mutabah	chc4: tbqh, glob imports shoudl really not be used for anything BUT the prelude, or importing enum variants
2015-05-25 00:22:16	<--	gandalf (zbraniecki@moz-cp7c4m.ca.comcast.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-25 00:22:22	andschwa	what's it called when you use a (0..n)? it is a ___?
2015-05-25 00:22:26	Mutabah	range
2015-05-25 00:22:31	andschwa	thanks!
2015-05-25 00:22:49	_habnabit	oh, cargo really enforces semver, eh? :/
2015-05-25 00:22:55	_habnabit	i.e. nothing beyond major.minor.patch
2015-05-25 00:23:09	-->	Palmik (palmik@moz-7pku2p.net.upcbroadband.cz) has joined #rust
2015-05-25 00:23:15	-->	gandalf (zbraniecki@moz-cp7c4m.ca.comcast.net) has joined #rust
2015-05-25 00:23:54	<--	tikue_ (tim@moz-3h1ag3.hqn5.aap1.1002.2600.IP) has quit (Connection closed)
2015-05-25 00:24:43	-->	tikue (tim@moz-crkv3m.hqn5.aap1.1002.2600.IP) has joined #rust
2015-05-25 00:26:28	<--	c74d (c74d3a4ebb6@moz-64n8ol.mggc.hibn.4404.2002.IP) has quit (Connection closed)
2015-05-25 00:26:50	-->	c74d (c74d3a4ebb6@moz-64n8ol.mggc.hibn.4404.2002.IP) has joined #rust
2015-05-25 00:26:57	@niconii	cargo needs to be able to tell if any given version is older or newer than another to resolve dependencies for things that depend on it
2015-05-25 00:27:11	<--	frangio (frangio@moz-04sgf8.fibertel.com.ar) has quit (Client exited)
2015-05-25 00:27:45	@niconii	it's easier for cargo to stick with semver than try to make guesses about an assortment of ad hoc version schemes
2015-05-25 00:27:55	-->	Rym_ (y@moz-c2u.sd4.38.217.IP) has joined #rust
2015-05-25 00:28:03	_habnabit	in the python world, at least, there's https://www.python.org/dev/peps/pep-0440/
2015-05-25 00:28:12	<--	orangeshark (erik@moz-35tq31.44tj.56ot.0306.2602.IP) has quit (Quit: Leaving)
2015-05-25 00:28:35	_habnabit	semver doesn't have postrelease versions :(
2015-05-25 00:28:42	-->	frangio (frangio@moz-04sgf8.fibertel.com.ar) has joined #rust
2015-05-25 00:28:46	<--	tikue (tim@moz-crkv3m.hqn5.aap1.1002.2600.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 00:28:54	<--	frangio (frangio@moz-04sgf8.fibertel.com.ar) has quit (Client exited)
2015-05-25 00:29:49	-->	dassio (mac@moz-ppr.foo.205.218.IP) has joined #rust
2015-05-25 00:30:05	-->	lurk__ (chatzilla@moz-qm19cj.in.comcast.net) has joined #rust
2015-05-25 00:30:44	-->	playjax (chatzilla@moz-ek1732.optusnet.com.au) has joined #rust
2015-05-25 00:30:48	-->	tetsuharu (tetsuharu@moz-r5j.l6d.168.210.IP) has joined #rust
2015-05-25 00:31:00	-->	irobevjodu (ident@moz-5bq.k90.254.5.IP) has joined #rust
2015-05-25 00:31:07	rphmeier	what's the best way to iterate through a mutable fixed-length array?
2015-05-25 00:31:13	rphmeier	and alter values
2015-05-25 00:31:14	<--	lurk_ (chatzilla@moz-qm19cj.in.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-25 00:31:16	--	lurk__ is now known as lurk_
2015-05-25 00:31:35	<--	c74d (c74d3a4ebb6@moz-64n8ol.mggc.hibn.4404.2002.IP) has quit (Connection closed)
2015-05-25 00:31:35	Mutabah	.iter_mut()
2015-05-25 00:31:57	-->	c74d (c74d3a4ebb6@moz-64n8ol.mggc.hibn.4404.2002.IP) has joined #rust
2015-05-25 00:32:29	<--	Rym_ (y@moz-c2u.sd4.38.217.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 00:32:45	<--	Jesin (Jesin@moz-48mne2.nsvltn.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-25 00:33:08	<--	kimwonyong (kimwonyong@moz-e4i.1i3.111.117.IP) has quit (Connection closed)
2015-05-25 00:33:36	<--	kgrandon (Adium@moz-0rpllm.dc.cox.net) has quit (Quit: Leaving.)
2015-05-25 00:33:41	-->	john (john@moz-3qeeob.static.qwest.net) has joined #rust
2015-05-25 00:34:25	-->	adu (ajr@moz-0foa9t.md.comcast.net) has joined #rust
2015-05-25 00:34:54	-->	mlafeldt (mlafeldt@moz-r5eets.pools.vodafone-ip.de) has joined #rust
2015-05-25 00:36:39	&Manishearth	niconii: note that "s/he" is also quite common (I use it over "he or she" but they is better) so the point about it never being "she/he" is not entirely accurate
2015-05-25 00:36:46	<--	c74d (c74d3a4ebb6@moz-64n8ol.mggc.hibn.4404.2002.IP) has quit (Connection closed)
2015-05-25 00:36:46	Dabo	Does anyone know if something's up with rust-ci.org?
2015-05-25 00:36:52	&Manishearth	buuuuuut  no point derailing that thread with this, so just letting you know :)
2015-05-25 00:36:56	&Manishearth	awesome post otherwise
2015-05-25 00:37:07	-->	nodweber (nodweber@moz-knt.fgq.178.5.IP) has joined #rust
2015-05-25 00:37:09	-->	c74d (c74d3a4ebb6@moz-64n8ol.mggc.hibn.4404.2002.IP) has joined #rust
2015-05-25 00:37:24	@niconii	Manishearth: oh, that is true
2015-05-25 10:41:27	--	irc: disconnected from server
2015-05-25 10:42:38	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-25 10:42:38	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-25 10:42:38	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-25 10:42:39	--	Channel #rust: 986 nicks (13 ops, 0 halfops, 1 voice, 972 normals)
2015-05-25 10:42:40	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-25 10:42:44	rovar	bluss, erg, then it wouldn't be object safe.  I guess I need to cast the result of get_evented back into a sized object
2015-05-25 10:43:38	--	irc: disconnected from server
2015-05-25 10:43:49	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-25 10:43:49	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-25 10:43:49	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-25 10:43:50	--	Channel #rust: 986 nicks (13 ops, 0 halfops, 1 voice, 972 normals)
2015-05-25 10:43:51	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-25 10:43:59	bluss	shep-home: the deallocate call needs correct capacity
2015-05-25 10:44:49	--	irc: disconnected from server
2015-05-25 10:45:01	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-25 10:45:01	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-25 10:45:01	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-25 10:45:01	--	Channel #rust: 986 nicks (13 ops, 0 halfops, 1 voice, 972 normals)
2015-05-25 10:45:03	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-25 10:45:15	Hildar	Urgh, lifetimes are so infectious still, even with all the elision going on nowadays...
2015-05-25 10:45:15	-->	kimwonyong (kimwonyong@moz-gfp.vhi.163.221.IP) has joined #rust
2015-05-25 10:46:01	--	irc: disconnected from server
2015-05-25 10:46:12	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-25 10:46:12	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-25 10:46:12	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-25 10:46:12	--	Channel #rust: 987 nicks (13 ops, 0 halfops, 1 voice, 973 normals)
2015-05-25 10:46:14	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-25 10:46:19	bluss	shep-home: (for example always using .shrink_to_fit beforing sending off that String, so you know len == capacity)
2015-05-25 10:46:40	<--	yuja (yuja@moz-m62een.so-net.ne.jp) has quit (Ping timeout: 121 seconds)
2015-05-25 10:46:55	shep-home	bluss: really? What's the capacity used for at destruction time? I can see calling destructors on allocated items
2015-05-25 10:47:14	shep-home	I guess jemalloc takes the size of memory chunk, doesn't it
2015-05-25 10:47:28	shep-home	yeah, shrink was my idea too...
2015-05-25 10:47:45	shep-home	I think that the story for returning strings to C is a bit hairy now :-)
2015-05-25 10:47:49	<--	kidto_ (gabriel@moz-fj4h3j.as13285.net) has quit (Ping timeout: 121 seconds)
2015-05-25 10:47:54	-->	kidto_ (gabriel@moz-fj4h3j.as13285.net) has joined #rust
2015-05-25 10:47:59	shep-home	like CString doesn't support all this, easily
2015-05-25 10:48:59	-->	alonlevy (alon@moz-4jqdpb.telavivmakers.org) has joined #rust
2015-05-25 10:49:23	<--	grodan (Mibbit@moz-o5eg8b.bredband.comhem.se) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-25 10:49:24	<--	mlafeldt_ (mlafeldt@moz-r5eets.pools.vodafone-ip.de) has quit (Connection closed)
2015-05-25 10:49:32	Hildar	So this fails to compile ('a is not contrained): http://pastebin.com/XEEeBMWg I understand what is wrong with it, but can't think of a way to fix it without changing input::InputProvider.
2015-05-25 10:49:45	-->	mlafeldt (mlafeldt@moz-r5eets.pools.vodafone-ip.de) has joined #rust
2015-05-25 10:50:07	-->	desophos (desophos@moz-nu24v1.98ku.27p0.6000.2606.IP) has joined #rust
2015-05-25 10:50:26	<--	mlafeldt (mlafeldt@moz-r5eets.pools.vodafone-ip.de) has quit (Connection closed)
2015-05-25 10:50:28	-->	mlafeldt (mlafeldt@moz-r5eets.pools.vodafone-ip.de) has joined #rust
2015-05-25 10:50:30	bluss	shep-home: I guess it's performance reasons. Size is already available for everything so it's fine anyway
2015-05-25 10:50:54	rovar	bluss, thanks a lot for your help, by the way.   This is perhaps the simplest implementation I've come up with, but I don't like the fact that the fn must take two params:  http://is.gd/oppmI3
2015-05-25 10:50:57	xificurC	mkn8rd1: https://github.com/murarth/rusti
2015-05-25 10:51:03	aochagavia	are the slides of aturons's talk in Stanford available somewhere?
2015-05-25 10:52:41	<--	rkruppe (chatzilla@moz-olc3ok.unity-media.net) has quit (Ping timeout: 121 seconds)
2015-05-25 10:53:25	<--	nodweber (nodweber@moz-knt.fgq.178.5.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-25 10:53:37	-->	envi_u (envi@moz-ih5.olo.169.121.IP) has joined #rust
2015-05-25 10:54:52	-->	strixbg (strixbg@moz-h16.8ua.123.93.IP) has joined #rust
2015-05-25 10:55:25	<--	kimwonyong (kimwonyong@moz-gfp.vhi.163.221.IP) has quit (Connection closed)
2015-05-25 10:55:47	<--	kaeluka (kaeluka@moz-rqrjp8.eduroam.uu.se) has quit (Client exited)
2015-05-25 10:55:54	<--	huufabrosmeli (Mibbit@moz-9e3hci.cable.virginm.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-25 10:56:07	-->	gsingh93 (gulshan@moz-ln1ktu.st3l.iv8o.0004.2601.IP) has joined #rust
2015-05-25 10:56:19	<--	giucam (giucam@moz-u9jnsc.c665.0nib.2060.2001.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 10:56:36	-->	roblabla (roblabla@moz-4vu.red.62.178.IP) has joined #rust
2015-05-25 10:57:29	<--	jml (jml@moz-mqpurn.178.in-addr.arpa) has quit (Ping timeout: 121 seconds)
2015-05-25 10:57:31	roblabla	Hello. I was wondering if it was possible to tell cargo from a build script to link a .o file ?
2015-05-25 10:58:37	-->	jml (jml@moz-mqpurn.178.in-addr.arpa) has joined #rust
2015-05-25 10:59:10	<--	c63 (Mibbit@moz-pk84bq.nsc.FH-Kiel.de) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-25 10:59:39	<--	mujou (mujou@moz-rko6lo.ocn.ne.jp) has quit (Quit: Leaving...)
2015-05-25 11:00:18	-->	noodle (chatzilla@moz-goiu7s.ftth.telfortglasvezel.nl) has joined #rust
2015-05-25 11:00:43	-->	espadrine (tyl@moz-l019mn.fbx.proxad.net) has joined #rust
2015-05-25 11:01:32	gsingh93	in this example, how can i make sure bar doesn't live longer than foo: http://is.gd/yxzUy2
2015-05-25 11:01:42	gsingh93	i think it might be related to phantomdata
2015-05-25 11:02:19	-->	Wilduck (erik@moz-0l3fjb.fios.verizon.net) has joined #rust
2015-05-25 11:02:57	-->	kingmahl (kingmahl@moz-6j6.jfn.79.172.IP) has joined #rust
2015-05-25 11:02:58	<--	silven (quassel@moz-0roor3.priv.bahnhof.se) has quit (Ping timeout: 121 seconds)
2015-05-25 11:03:01	-->	silven (quassel@moz-0roor3.priv.bahnhof.se) has joined #rust
2015-05-25 11:03:09	-->	dstrbad_ (dstrbad@moz-cf4857.xnet.hr) has joined #rust
2015-05-25 11:03:14	-->	Nashenas88 (Nashenas88@moz-of81j9.miamfl.sbcglobal.net) has joined #rust
2015-05-25 11:03:42	-->	mukilan (mukilan@moz-p1l.3lb.164.122.IP) has joined #rust
2015-05-25 11:03:49	<--	copycat (Thunderbird@moz-mm4e60.singnet.com.sg) has quit (Ping timeout: 121 seconds)
2015-05-25 11:03:54	Nashenas88	Has anyone gotten rust-gdb or rust-lldb to work with with emacs? 
2015-05-25 11:04:00	bluss	rovar: ok I'm happy it helped in some way :)
2015-05-25 11:04:17	desophos	what does it mean that into_iter "consumes" elements?
2015-05-25 11:05:08	-->	Tyde (yttyd_000@moz-t5glkn.pools.vodafone-ip.de) has joined #rust
2015-05-25 11:05:43	<--	dstrbad (dstrbad@moz-4325jm.cable.xnet.hr) has quit (Ping timeout: 121 seconds)
2015-05-25 11:06:41	-->	kimwonyong (kimwonyong@moz-gfp.vhi.163.221.IP) has joined #rust
2015-05-25 11:06:42	<--	flavius (flavius@moz-pik2l3.tmpp.le52.8388.2a02.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 11:06:54	<--	strixbg (strixbg@moz-h16.8ua.123.93.IP) has quit (Quit: This computer has gone to sleep)
2015-05-25 11:06:57	<--	Guest46 (textual@moz-gu2.c8p.157.183.IP) has quit (Quit: Textual IRC Client: www.textualapp.com)
2015-05-25 11:07:20	-->	flavius (flavius@moz-pik2l3.tmpp.le52.8388.2a02.IP) has joined #rust
2015-05-25 11:07:38	-->	Guest46 (textual@moz-vmb6mb.b2gd.h79t.0256.2001.IP) has joined #rust
2015-05-25 11:07:47	<--	JagaJaga (JagaJaga@moz-ua8.hhl.62.178.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 11:07:52	<--	ekidd (ekidd@moz-6t81cn.nh.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-25 11:08:39	-->	_Vi (vi@moz-bbs.vhj.131.104.IP) has joined #rust
2015-05-25 11:08:51	-->	Tyde1 (yttyd_000@moz-t5glkn.pools.vodafone-ip.de) has joined #rust
2015-05-25 11:09:18	<--	Tyde (yttyd_000@moz-t5glkn.pools.vodafone-ip.de) has quit (Ping timeout: 121 seconds)
2015-05-25 11:09:23	bluss	its method parameter is just `self` so that self is moved into the method
2015-05-25 11:09:44	bluss	for example  vec![1,2,3].into_iter()  the vector is consumed because it is owned by the iterator now
2015-05-25 11:10:02	-->	dinfuehr (dinfuehr@moz-81c7pp.highway.telekom.at) has joined #rust
2015-05-25 11:10:21	<--	mkn8rd1 (mkn8rd@moz-h88eaf.dynamic.avangarddsl.ru) has left #rust
2015-05-25 11:10:28	bluss	or a loop:  let vector = vec![1, 2, 3]; for element in vector {  ... }     the for loop will consume the vector.
2015-05-25 11:10:41	bluss	so it will be marked moved and you can't use it after it was consumed
2015-05-25 11:10:50	<--	JanC (janc@moz-1ibeqa.dsl.scarlet.be) has quit (A TLS packet with unexpected length was received.)
2015-05-25 11:11:05	bluss	playbot: let mut vector = vec![1, 2, 3]; for _ in vector { }   vector.push(2);
2015-05-25 11:11:06	--	Notice(playbot): <anon>:9:63: 9:69 error: use of moved value: `vector`
2015-05-25 11:11:06	--	Notice(playbot): <anon>:9         let mut vector = vec![1, 2, 3]; for _ in vector { }   vector.push(2);
2015-05-25 11:11:06	--	Notice(playbot): output truncated; full output at: http://bit.ly/1Q6q7MN
2015-05-25 11:11:34	noodle	bluss: But only for boxed memory, right? Calling `into_iter` onto a normal array would mean that the array does *not* move, right?
2015-05-25 11:11:46	bluss	boxing is not a factor really
2015-05-25 11:11:55	-->	bfops (uid58242@moz-e5u6m0.charlton.irccloud.com) has joined #rust
2015-05-25 11:11:58	bluss	it's about ownership, something relevant to all values in rust
2015-05-25 11:12:03	<--	jophish (jophish@moz-fjh8o1.gotadsl.co.uk) has quit (Connection closed)
2015-05-25 11:12:12	noodle	Ah, I see what you mean
2015-05-25 11:12:24	bluss	now the array is a special case because it doesn't impl .into_iter()
2015-05-25 11:12:35	noodle	A normal array would be copied, right?
2015-05-25 11:12:38	bluss	but the slice does. So the array dereferences to a slice, and the slice is consumed
2015-05-25 11:12:46	bluss	(if you call .into_iter())
2015-05-25 11:13:11	bluss	noodle: anything that can be copied (with the Copy trait) would be copied yeah
2015-05-25 11:13:14	&mbrubeck	gsingh93: http://is.gd/SXH8p0
2015-05-25 11:13:17	<--	mlafeldt (mlafeldt@moz-r5eets.pools.vodafone-ip.de) has quit (Connection closed)
2015-05-25 11:13:18	bluss	arrays are Copy if their elements are.
2015-05-25 11:13:35	<--	lenstr (lenstr@moz-s25.vju.25.171.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-25 11:13:38	-->	mlafeldt (mlafeldt@moz-r5eets.pools.vodafone-ip.de) has joined #rust
2015-05-25 11:13:53	bfops	Did the syntax crate move? The docs aren't there anymore :(
2015-05-25 11:14:12	--	irc: disconnected from server
2015-05-25 11:14:23	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-25 11:14:23	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-25 11:14:23	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-25 11:14:24	--	Channel #rust: 984 nicks (13 ops, 0 halfops, 1 voice, 970 normals)
2015-05-25 11:14:25	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-25 11:14:26	-->	lenstr (lenstr@moz-s25.vju.25.171.IP) has joined #rust
2015-05-25 11:14:28	&mbrubeck	bfops: No, but the internal crates no longer have docs published in nightly, apparently.
2015-05-25 11:15:03	<--	noodle (chatzilla@moz-goiu7s.ftth.telfortglasvezel.nl) has quit (Quit: ChatZilla 0.9.91.1 [Firefox 38.0.1/20150513174244])
2015-05-25 11:15:14	bfops	Oh weird. `core` seems to work even though I feel like I could never find its docs before.
2015-05-25 11:15:50	-->	flavius (flavius@moz-pik2l3.tmpp.le52.8388.2a02.IP) has joined #rust
2015-05-25 11:15:53	bfops	So.. should I just fork rust to figure out the API changes?
2015-05-25 11:16:27	shep-home	bluss: "but the allocator may still inform the vector that there is space for a few more elements."
2015-05-25 11:16:38	shep-home	shrink_to_fit wont work either....
2015-05-25 11:16:40	-->	mlafeldt_ (mlafeldt@moz-r5eets.pools.vodafone-ip.de) has joined #rust
2015-05-25 11:16:51	gsingh93	mbrubeck: thanks! can you explain how the compiler knows which lifetime to use?
2015-05-25 11:16:58	bluss	shep-home: yes it will work
2015-05-25 11:17:23	--	irc: disconnected from server
2015-05-25 11:17:34	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-25 11:17:34	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-25 11:17:34	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-25 11:17:35	--	Channel #rust: 985 nicks (13 ops, 0 halfops, 1 voice, 971 normals)
2015-05-25 11:17:36	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-25 11:17:39	<--	mlafeldt (mlafeldt@moz-r5eets.pools.vodafone-ip.de) has quit (Ping timeout: 121 seconds)
2015-05-25 11:17:40	bluss	shep-home: shrink_to_fit uses capacity == length so you have the same information as the vector internals
2015-05-25 11:17:54	-->	xcombelle (xcombelle@moz-1frl96.abo.wanadoo.fr) has joined #rust
2015-05-25 11:18:08	-->	kushal (kdas@moz-6o0e5k.202.sitibroadband.in) has joined #rust
2015-05-25 11:18:11	bluss	shep-home: hm well maybe it's not forward compatible given the docs.. But in practice at least.
2015-05-25 11:18:30	bluss	shep-home: I think it's intended to be ok
2015-05-25 11:18:34	gsingh93	mbrubeck: it feels strange not explicitly saying to use the lifetime of &self
2015-05-25 11:19:12	-->	dmac_ (dmac@moz-2ig65r.ca.comcast.net) has joined #rust
2015-05-25 11:19:13	-->	munksgaard (munksgaard@moz-478pev.u.parknet.dk) has joined #rust
2015-05-25 11:19:18	&mbrubeck	gsingh93: https://github.com/rust-lang/rfcs/blob/master/text/0141-lifetime-elision.md
2015-05-25 11:19:27	-->	dalarmmst (dalarmmst@moz-mb21j4.bredband.comhem.se) has joined #rust
2015-05-25 11:19:41	&mbrubeck	gsingh93: In particular https://github.com/rust-lang/rfcs/blob/master/text/0141-lifetime-elision.md#the-rules
2015-05-25 11:20:13	<--	nedp (nedp@moz-vg6vvt.bigpond.net.au) has quit (Connection closed)
2015-05-25 11:20:14	&mbrubeck	If you don't write explicit lifetimes, everything gets the lifetime of the input argument. Or &self if there's more than one argument.
2015-05-25 11:20:26	gsingh93	got it, thanks
2015-05-25 11:21:04	<--	colinsurprenant (colin@moz-q9ee1n.74.electronicbox.net) has quit (Client exited)
2015-05-25 11:21:26	-->	hjr3 (hradtke@moz-rga0be.ca.comcast.net) has joined #rust
2015-05-25 11:21:37	-->	fyolnish (fyolnish@moz-ehtogo.so-net.ne.jp) has joined #rust
2015-05-25 11:21:46	<--	jjthrash (jjthrash@moz-la0q45.res.rr.com) has quit (Quit: Leaving...)
2015-05-25 11:21:50	-->	JanC (janc@moz-1ibeqa.dsl.scarlet.be) has joined #rust
2015-05-25 11:22:31	<--	AndChat-17289 (mkpankov@moz-8ng.dee.149.83.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 11:23:20	<--	dmac_ (dmac@moz-2ig65r.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-25 11:23:26	<--	munksgaard (munksgaard@moz-478pev.u.parknet.dk) has quit (Ping timeout: 121 seconds)
2015-05-25 11:23:41	-->	kaeluka (kaeluka@moz-tn3lqd.cust.bredbandsbolaget.se) has joined #rust
2015-05-25 11:23:57	-->	Guest63 (textual@moz-6gq.t8s.78.166.IP) has joined #rust
2015-05-25 11:25:11	-->	DerisiveLogic (smuxi@moz-g93io6.res.rr.com) has joined #rust
2015-05-25 11:25:19	<--	_ixti_ (ixti@moz-i3d.dae.119.188.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 11:25:29	<--	DerisiveLogic (smuxi@moz-g93io6.res.rr.com) has quit (A TLS packet with unexpected length was received.)
2015-05-25 11:25:30	jnvsor	Is it possible to make a single iterator that iterates over vecs of vecs?
2015-05-25 11:26:04	-->	mkoskar (mkoskar@moz-80l.568.77.185.IP) has joined #rust
2015-05-25 11:26:12	-->	ekidd (ekidd@moz-6t81cn.nh.comcast.net) has joined #rust
2015-05-25 11:26:23	<--	kushal (kdas@moz-6o0e5k.202.sitibroadband.in) has quit (Ping timeout: 121 seconds)
2015-05-25 11:26:42	-->	SplashGord (Mibbit@moz-tmdk1k.res.rr.com) has joined #rust
2015-05-25 11:27:18	-->	grodan (Mibbit@moz-o5eg8b.bredband.comhem.se) has joined #rust
2015-05-25 11:27:22	<--	saml_ (saml@moz-rkfmct.res.rr.com) has quit (Quit: Leaving)
2015-05-25 11:27:36	<--	SplashGord (Mibbit@moz-tmdk1k.res.rr.com) has left #rust
2015-05-25 11:27:48	jwilm_	jnvsor: the iterator trait just requires that you implement next. You can make that method do whatever you want.
2015-05-25 11:28:15	jnvsor	I was actually hoping to chain a bunch of them so I didn't have to make up my own
2015-05-25 11:28:30	-->	rkruppe (chatzilla@moz-498i4m.diu2.0rth.0908.2a02.IP) has joined #rust
2015-05-25 11:28:31	<--	pgonda (peter@moz-s36.0tp.134.75.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 11:28:45	jnvsor	So is there an iterator I can use to "Collapse" a vec into multiple things to iterate?
2015-05-25 11:29:16	bluss	jnvsor: possibly you can use flat_map
2015-05-25 11:29:21	killercup	jnvsor: like flat_map? http://doc.rust-lang.org/std/iter/trait.Iterator.html#method.flat_map
2015-05-25 11:29:37	jnvsor	That's perfect thanks!
2015-05-25 11:29:39	<--	Astrum|Lap (Astrum|Lap@moz-skcefh.co.comcast.net) has quit (Client exited)
2015-05-25 11:30:25	-->	anthgur (textual@moz-k1i.0v9.249.50.IP) has joined #rust
2015-05-25 11:31:00	-->	rudolph (rudolph@moz-q5b.rfa.152.37.IP) has joined #rust
2015-05-25 11:31:39	-->	qwerty_nor (Thunderbird@moz-mmjb8o.uq66.lk4q.0006.2601.IP) has joined #rust
2015-05-25 11:31:46	<--	Guest63 (textual@moz-6gq.t8s.78.166.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-25 11:31:59	-->	jviereck (Adium@moz-jh8j4p.dynamic.hispeed.ch) has joined #rust
2015-05-25 11:32:04	-->	JosiahOne (Instantbird@moz-i8huts.l2d1.q8mm.0306.2602.IP) has joined #rust
2015-05-25 11:32:32	<--	Boscop (me@moz-kb6.b2o.126.98.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 11:32:33	<--	kimwonyong (kimwonyong@moz-gfp.vhi.163.221.IP) has quit (Connection closed)
2015-05-25 11:32:46	mkpankov	hm, looks like I can't break a raw string literal with line break
2015-05-25 11:32:50	mkpankov	is it expected?
2015-05-25 11:34:09	-->	coryforsyth (coryforsyth@moz-hpsim2.fios.verizon.net) has joined #rust
2015-05-25 11:35:17	-->	kamilc__ (kamil@moz-k976eq.play-internet.pl) has joined #rust
2015-05-25 11:35:31	<--	egrep (egrep@moz-vqao7u.org) has quit (Quit: Restarting...)
2015-05-25 11:36:14	-->	goyox86 (textual@moz-qfs.570.70.83.IP) has joined #rust
2015-05-25 11:36:46	tomprogrammer	mkpankov: I guess it is, but you can use the concat! macro to split them.
2015-05-25 11:37:09	mkpankov	I found I actually can do that
2015-05-25 11:37:17	jnvsor	Can you make an iterator over a Vec with indices?
2015-05-25 11:37:20	mkpankov	it's \ that was messing things up
2015-05-25 11:37:33	<--	__mark__ (mark@moz-udut16.dynamic.chello.pl) has quit (Client exited)
2015-05-25 11:37:35	mkpankov	but the problem is, my RE no longer matches
2015-05-25 11:37:44	<--	vmeson (rmacleod@moz-hq5.1km.224.128.IP) has quit (Quit: Konversation terminated!)
2015-05-25 11:37:46	&mbrubeck	jnvsor: vec.iter().enumerate()
2015-05-25 11:38:00	-->	skade (skade@moz-h4isef.web.vodafone.de) has joined #rust
2015-05-25 11:38:21	-->	__mark__ (mark@moz-udut16.dynamic.chello.pl) has joined #rust
2015-05-25 11:38:59	-->	giucam (giucam@moz-iv0nnc.bb.dnainternet.fi) has joined #rust
2015-05-25 11:39:08	Hildar	So, I want to get rid of this <'a> off this trait if possible http://is.gd/wiKN9Y. I can't get rid of the 'a from my custom iterator, and it infects everything and forces my to change my trait, is there a way around this?
2015-05-25 11:39:26	tomprogrammer	mkpankov: Are you sure that the newline is not included in the raw string?
2015-05-25 11:40:04	-->	brson (brson@moz-h99.hai.100.94.IP) has joined #rust
2015-05-25 11:40:04	--	Mode #rust [+ao brson brson] by ChanServ
2015-05-25 11:40:58	mkpankov	not sure actually
2015-05-25 11:41:06	mkpankov	going to check it tomprogrammer 
2015-05-25 11:41:06	-->	egrep (egrep@moz-vqao7u.org) has joined #rust
2015-05-25 11:42:04	talchas	Hildar: the simplest thing would be to instead impl IntoIterator on &mut ConcreteType
2015-05-25 11:42:10	-->	_ixti_ (ixti@moz-i3d.dae.119.188.IP) has joined #rust
2015-05-25 11:42:17	-->	kimwonyong (kimwonyong@moz-gfp.vhi.163.221.IP) has joined #rust
2015-05-25 11:42:56	<--	giucam (giucam@moz-iv0nnc.bb.dnainternet.fi) has quit (Connection closed)
2015-05-25 11:43:16	<--	mindtree (Mitch@moz-2tvto2.iprimus.net.au) has quit (Ping timeout: 121 seconds)
2015-05-25 11:43:35	-->	giucam (giucam@moz-iv0nnc.bb.dnainternet.fi) has joined #rust
2015-05-25 11:43:38	<--	kmicu (kmicu@moz-uga.edn.218.91.IP) has quit (Connection closed)
2015-05-25 11:43:53	-->	kmicu (kmicu@moz-uga.edn.218.91.IP) has joined #rust
2015-05-25 11:44:20	-->	mindtree (Mitch@moz-rpnggp.iprimus.net.au) has joined #rust
2015-05-25 11:44:35	<--	fyolnish (fyolnish@moz-ehtogo.so-net.ne.jp) has quit (Connection closed)
2015-05-25 11:44:48	mkpankov	tomprogrammer: yep, \n is in the string when using raw strings
2015-05-25 11:45:34	--	irc: disconnected from server
2015-05-25 11:45:45	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-25 11:45:45	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-25 11:45:45	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-25 11:45:45	--	Channel #rust: 995 nicks (14 ops, 0 halfops, 1 voice, 980 normals)
2015-05-25 11:45:47	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-25 11:45:47	tomprogrammer	mkpankov: That should do it.
2015-05-25 11:45:52	<--	Guest46 (textual@moz-vmb6mb.b2gd.h79t.0256.2001.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-25 11:46:09	<--	skade (skade@moz-h4isef.web.vodafone.de) has quit (Ping timeout: 121 seconds)
2015-05-25 11:46:10	-->	KLP (KLP@moz-qdcjho.res.rr.com) has joined #rust
2015-05-25 11:47:45	--	irc: disconnected from server
2015-05-25 11:47:56	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-25 11:47:56	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-25 11:47:56	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-25 11:47:57	--	Channel #rust: 994 nicks (14 ops, 0 halfops, 1 voice, 979 normals)
2015-05-25 11:47:58	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-25 11:48:14	-->	Guest46 (textual@moz-vmb6mb.b2gd.h79t.0256.2001.IP) has joined #rust
2015-05-25 11:48:27	tomprogrammer	mkpankov: No: http://doc.rust-lang.org/stable/reference.html#raw-string-literals
2015-05-25 11:48:53	Hildar	tachas: Well, that seems to work. No idea why it didn't work before, thanks!
2015-05-25 11:49:01	mkpankov	tomprogrammer: damn, I read it, and still missed that part :D
2015-05-25 11:49:18	mkpankov	tomprogrammer: well, at least you can insert as many '#' as you'd like
2015-05-25 11:49:42	-->	colinsurprenant (colin@moz-rmn4e2.169.electronicbox.net) has joined #rust
2015-05-25 11:50:00	-->	jdm (jdm@moz-ilbt2e.cable.teksavvy.com) has joined #rust
2015-05-25 11:50:01	--	Mode #rust [+o jdm] by ChanServ
2015-05-25 11:50:02	<--	wei2912 (wei2912@moz-cj5.kpr.156.175.IP) has quit (Connection closed)
2015-05-25 11:50:37	tomprogrammer	mkpankov: That should cover the most scenarios
2015-05-25 11:50:39	<--	mlafeldt_ (mlafeldt@moz-r5eets.pools.vodafone-ip.de) has quit (Connection closed)
2015-05-25 11:51:10	-->	mlafeldt (mlafeldt@moz-r5eets.pools.vodafone-ip.de) has joined #rust
2015-05-25 11:52:19	-->	Altazimuth_ (Altazimuth@moz-rb7u6p.skybroadband.com) has joined #rust
2015-05-25 11:52:19	<--	kmicu (kmicu@moz-uga.edn.218.91.IP) has quit (Connection closed)
2015-05-25 11:52:36	<--	kimwonyong (kimwonyong@moz-gfp.vhi.163.221.IP) has quit (Connection closed)
2015-05-25 11:52:42	-->	kmicu (kmicu@moz-uga.edn.218.91.IP) has joined #rust
2015-05-25 11:52:51	<--	Altazimuth (Altazimuth@moz-rb7u6p.skybroadband.com) has quit (Ping timeout: 121 seconds)
2015-05-25 11:53:13	-->	vmeson (rmacleod@moz-hq5.1km.224.128.IP) has joined #rust
2015-05-25 11:53:59	-->	exadeci (uid35778@moz-l8iij7.ealing.irccloud.com) has joined #rust
2015-05-25 11:54:41	<--	Guest46 (textual@moz-vmb6mb.b2gd.h79t.0256.2001.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-25 11:54:46	exadeci	Hello, how is writing to stderr suposed to be done now ?     writeln!(&mut io::stderr(), "Hello stderr"); used to work 
2015-05-25 11:55:08	-->	Azdle (Azdle@moz-fv6arh.mn.comcast.net) has joined #rust
2015-05-25 11:55:11	<--	mlafeldt (mlafeldt@moz-r5eets.pools.vodafone-ip.de) has quit (Ping timeout: 121 seconds)
2015-05-25 11:55:24	-->	loyd (loyd@moz-jsb.32f.108.213.IP) has joined #rust
2015-05-25 11:55:34	-->	jbomo (dkd@moz-uol4mm.fios.verizon.net) has joined #rust
2015-05-25 11:55:49	-->	hugomg (hugo@moz-um6.h06.218.179.IP) has joined #rust
2015-05-25 11:56:13	&mbrubeck	playbot: use std::io::prelude::*; writeln!(std::io::stderr(), "Hello");
2015-05-25 11:56:14	--	Notice(playbot): <std macros>:2:1: 2:54 warning: unused result which must be used, #[warn(unused_must_use)] on by default
2015-05-25 11:56:14	--	Notice(playbot): <std macros>:2 $ dst . write_fmt ( format_args ! ( $ ( $ arg ) * ) ) )
2015-05-25 11:56:14	--	Notice(playbot): output truncated; full output at: http://bit.ly/1SyLhHB
2015-05-25 11:56:37	&mbrubeck	exadeci: That should work, though I don't think you need the &mut
2015-05-25 11:56:50	<--	cjwelborn (cjwelborn@moz-np6hed.al.charter.com) has quit (Quit: sys.exit(1))
2015-05-25 11:56:58	&mbrubeck	and you may need to `use` the Write trait, which you can do through io::prelude as above.
2015-05-25 11:57:06	Hildar	tachas: Ah, there was a problem somewhere else in my code to where I was looking (I had &mut T where I should just have T and let the caller spcify T = &mut Concrete type). Welp, wish I'd spotted that an hour ago.
2015-05-25 11:57:16	-->	mayeko (mayeko@moz-ishpc0.ovr0.0mfe.0e35.2a01.IP) has joined #rust
2015-05-25 11:57:34	hugomg	Hi there, what is the equivalent of "for(i=0; i<N; i+=2)" in rust? I only know the "1..N" syntax
2015-05-25 11:58:46	&mbrubeck	hugomg: From the itertools crate, you can use http://bluss.github.io/rust-itertools/doc/itertools/trait.Itertools.html#method.step
2015-05-25 11:59:03	&mbrubeck	for i in (0..n).step(2)
2015-05-25 11:59:22	&mbrubeck	hugomg: I believe something like this will end up in the standard library eventually, but it's not there yet.
2015-05-25 11:59:35	&mbrubeck	There used to be range_step, before the new Range type was introduced.
2015-05-25 11:59:54	hugomg	aww :/  If only they let you do 1..N..2 like other languages
2015-05-25 12:00:20	hugomg	i guess I might just use a while loop like a caveman :)
2015-05-25 12:00:35	<--	aochagavia (aochagavia@moz-jgp6eg.static.ziggozakelijk.nl) has quit (Quit: Leaving)
2015-05-25 12:00:59	exadeci	mbrubeck: #![allow(unused_must_use)] is what I was missing it seems (and I removed the mut) thanks
2015-05-25 12:01:22	<--	mayeko (mayeko@moz-ishpc0.ovr0.0mfe.0e35.2a01.IP) has quit (Quit: Leaving)
2015-05-25 12:01:23	&mbrubeck	exadeci: You can also do `let _ = write!(f, "hello")` to silence that warning for just one line.
2015-05-25 12:01:28	-->	mayeko (mayeko@moz-ishpc0.ovr0.0mfe.0e35.2a01.IP) has joined #rust
2015-05-25 12:02:30	exadeci	mbrubeck: Well there is just one line in the file so that's ok but I'll keep that in mind thanks
2015-05-25 12:02:59	rovar	I have a set of functions which take a trait object of a trait called Evented&,  when I try to pass a reference to Evented in, it tells me that Sized is not implemented for that type
2015-05-25 12:03:20	<--	rudolph (rudolph@moz-q5b.rfa.152.37.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-25 12:03:21	rovar	why does it want Sized when I want it to specifically be unsized?
2015-05-25 12:03:29	-->	dcb (textual@moz-j72nfe.ca.comcast.net) has joined #rust
2015-05-25 12:03:35	&mbrubeck	rovar: Can you show the code?
2015-05-25 12:03:51	<--	c_wraith (c_wraith@moz-7i8.v6v.191.131.IP) has quit (Quit: Leaving)
2015-05-25 12:04:03	&mbrubeck	Normally that error means you tried to do something that dereferences the &Evented
2015-05-25 12:04:13	<--	acgtyrant (acgtyrant@moz-3kd.b79.160.124.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 12:04:25	<--	minot2 (kkus@moz-baj4jj.74.srtnet.com) has quit (Connection closed)
2015-05-25 12:04:29	-->	rudolph (rudolph@moz-q5b.rfa.152.37.IP) has joined #rust
2015-05-25 12:04:59	-->	c_wraith (c_wraith@moz-7i8.v6v.191.131.IP) has joined #rust
2015-05-25 12:05:31	mkpankov	building regexps at compile time is damn cool
2015-05-25 12:05:43	<--	laparca (laparca@moz-rgcs06.mgob.kh00.0488.2a01.IP) has quit (Quit: Leaving.)
2015-05-25 12:05:48	<--	Altazimuth_ (Altazimuth@moz-rb7u6p.skybroadband.com) has quit (Ping timeout: 121 seconds)
2015-05-25 12:05:52	-->	Anup (chatzilla@moz-64f.aom.245.43.IP) has joined #rust
2015-05-25 12:06:02	-->	Altazimuth_ (Altazimuth@moz-rb7u6p.skybroadband.com) has joined #rust
2015-05-25 12:06:12	mkpankov	at my stupid benchmark I already have 2 seconds vs C++'s 6.7. non-compile-time RE in Rust was 4 secs
2015-05-25 12:06:25	-->	SiegeLord (sl@moz-9jtaei.ca.comcast.net) has joined #rust
2015-05-25 12:06:29	mkpankov	Perl beats them all, of course, with 1.2 :D
2015-05-25 12:06:37	-->	O01eg (o01eg@moz-i6idov.6kf4.3egh.2698.2a02.IP) has joined #rust
2015-05-25 12:06:54	rovar	mbrubeck, http://is.gd/wVonrW
2015-05-25 12:07:00	<--	hjr3 (hradtke@moz-rga0be.ca.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2015-05-25 12:07:06	jnvsor	I want to create an iterator chain with some complex logic, but I just don't know how. Can anyone take a look? https://gist.github.com/jnvsor/1755cbee7994ef62a625
2015-05-25 12:07:31	rovar	mbrubeck, line 36 is where it complains, at the ctx.get_evented()
2015-05-25 12:07:52	rovar	evented is a basic trait with three methods
2015-05-25 12:08:01	rovar	Evented, that is
2015-05-25 12:08:23	-->	laparca (laparca@moz-rgcs06.mgob.kh00.0488.2a01.IP) has joined #rust
2015-05-25 12:08:52	-->	moa (Cedric@moz-37609i.abo.wanadoo.fr) has joined #rust
2015-05-25 12:09:44	<--	mac__ (mac@moz-f5s.cn2.191.60.IP) has quit (Quit: This computer has gone to sleep)
2015-05-25 12:09:53	-->	mlafeldt (mlafeldt@moz-r5eets.pools.vodafone-ip.de) has joined #rust
2015-05-25 12:10:03	-->	v21 (vee@moz-j8a.qrj.48.49.IP) has joined #rust
2015-05-25 12:10:06	-->	ytain_ (ytain@moz-ffpck2.dsl.teksavvy.com) has joined #rust
2015-05-25 12:10:38	&mbrubeck	rovar: What's the error text?
2015-05-25 12:10:43	-->	daschl (Adium@moz-e2dvap.public.telering.at) has joined #rust
2015-05-25 12:10:49	-->	dinfuehr (dinfuehr@moz-81c7pp.highway.telekom.at) has joined #rust
2015-05-25 12:11:16	rovar	src/reactor_ctrl.rs:156:47: 156:60 error: the trait `core::marker::Sized` is not implemented for the type `mio::io::Evented` [E0277]
2015-05-25 12:11:16	rovar	src/reactor_ctrl.rs:156         try!(self.event_loop.register_opt(foo.get_evented() as &Evented, token, ctx.get_interest(), PollOpt::edge()));
2015-05-25 12:11:34	<--	S1mplebrain (Simplebrain@moz-6h4u6b.skybroadband.com) has quit (Quit: Leaving)
2015-05-25 12:11:49	rovar	(with the arrow pointing at get_evented())
2015-05-25 12:11:50	<--	Hildar (Mibbit@moz-04vi1v.cable.virginm.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-25 12:12:00	-->	villev_ (chatzilla@moz-lemqa0.elisa-laajakaista.fi) has joined #rust
2015-05-25 12:13:01	<--	ytain (ytain@moz-07c3h9.dsl.teksavvy.com) has quit (Ping timeout: 121 seconds)
2015-05-25 12:13:04	&mbrubeck	rovar: Maybe `Context<Socket=Evented>` is the problem?
2015-05-25 12:13:08	-->	nodweber_ (nodweber@moz-knt.fgq.178.5.IP) has joined #rust
2015-05-25 12:13:20	-->	strixbg (strixbg@moz-h16.8ua.123.93.IP) has joined #rust
2015-05-25 12:13:44	rovar	mbrubeck, I'm not sure, at one point I tried passing in &Evented as a separate param and got the same result
2015-05-25 12:13:54	&mbrubeck	Maybe you need to specify ?Sized in the bounds of `type Socket`
2015-05-25 12:14:02	-->	Simplebrain (Simplebrain@moz-6h4u6b.skybroadband.com) has joined #rust
2015-05-25 12:14:02	-->	Hannibal_Smith (nico@moz-7gi1c3.retail.telecomitalia.it) has joined #rust
2015-05-25 12:14:04	&mbrubeck	hmm.
2015-05-25 12:14:07	&mbrubeck	Well, I have to run, sorry...
2015-05-25 12:14:13	rovar	mbrubeck, no worries. thanks
2015-05-25 12:14:54	-->	Guest46 (textual@moz-gu2.c8p.157.183.IP) has joined #rust
2015-05-25 12:14:55	<--	dinfuehr (dinfuehr@moz-81c7pp.highway.telekom.at) has quit (Ping timeout: 121 seconds)
2015-05-25 12:15:17	<--	villev (chatzilla@moz-u38.eub.15.185.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 12:15:21	-->	geri (Mibbit@moz-vgfplj.highway.telekom.at) has joined #rust
2015-05-25 12:15:24	geri	hi
2015-05-25 12:15:26	--	villev_ is now known as villev
2015-05-25 12:16:20	-->	zrneely (Mibbit@moz-a2i.gl9.56.172.IP) has joined #rust
2015-05-25 12:16:22	-->	fredrik (fredrik@moz-2b08ue.priv.bahnhof.se) has joined #rust
2015-05-25 12:16:39	<--	mbudde (mbudde@moz-v8g.lim.109.2.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 12:16:44	<--	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-25 12:16:56	-->	tabo (tabo@moz-21j.gsu.42.190.IP) has joined #rust
2015-05-25 12:16:58	zrneely	Has anyone been able to use the conrod crate recently? It's github page says it builds but adding it as a dependency breaks my project...
2015-05-25 12:17:11	<--	nodweber_ (nodweber@moz-knt.fgq.178.5.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 12:17:33	gsingh93	how can i fix this lifetime error: http://is.gd/pRV3W8
2015-05-25 12:17:48	<--	rudolph (rudolph@moz-q5b.rfa.152.37.IP) has quit (Connection closed)
2015-05-25 12:18:13	-->	rudolph (rudolph@moz-9c0052.o3k5.dsq9.010d.2620.IP) has joined #rust
2015-05-25 12:18:39	<--	tadh (quassel@moz-iq6hhs.biz.rr.com) has quit (Connection closed)
2015-05-25 12:18:52	-->	nham (nham@moz-lglsfe.il.comcast.net) has joined #rust
2015-05-25 12:18:56	gsingh93	zrneely: it works for me
2015-05-25 12:19:08	gsingh93	zrneely: oh, i'm using the github version
2015-05-25 12:19:13	gsingh93	not crates.io
2015-05-25 12:19:27	zrneely	ok, I'll try that, thanks
2015-05-25 12:19:40	-->	tadh (quassel@moz-iq6hhs.biz.rr.com) has joined #rust
2015-05-25 12:19:50	<--	summerlight_ (summerlight@moz-99k.2mj.130.121.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 12:19:57	-->	dmac_ (dmac@moz-2ig65r.ca.comcast.net) has joined #rust
2015-05-25 12:20:11	<--	spider-mario (spidermario@moz-coblcf.fbx.proxad.net) has quit (A TLS packet with unexpected length was received.)
2015-05-25 12:20:14	--	ytain_ is now known as ytain
2015-05-25 12:21:09	rkruppe	gsingh93: Lifetime elision is such that Foo::make_bar's signature is make_bar<'a>(&'a self) -> Bar<'a>
2015-05-25 12:21:11	rkruppe	Is that what you want?
2015-05-25 12:21:12	<--	rudolph (rudolph@moz-9c0052.o3k5.dsq9.010d.2620.IP) has quit (Connection closed)
2015-05-25 12:21:33	-->	rudolph (rudolph@moz-q5b.rfa.152.37.IP) has joined #rust
2015-05-25 12:21:44	-->	Tyde (yttyd_000@moz-cfu.rkq.238.104.IP) has joined #rust
2015-05-25 12:21:55	gsingh93	rkruppe: so what i want is in general to be able to make a Foo, and then make a Bar with a Foo, but i never want Bar to live longer than the Foo I've made
2015-05-25 12:22:06	gsingh93	I also want to store both of these structs in another struct
2015-05-25 12:22:38	gsingh93	this is for the purpose of wrapping raw pointers
2015-05-25 12:22:42	rkruppe	gsingh93: The first thing your code accomplishes, the second is generally impossible
2015-05-25 12:22:45	rkruppe	I think
2015-05-25 12:22:58	rkruppe	At least it can't work with a Foo fields in the Baz struct
2015-05-25 12:23:05	rkruppe	With &'a Foo it would work
2015-05-25 12:23:21	rkruppe	Except you can't write Baz::new() like that
2015-05-25 12:23:22	<--	jeffasinger (jeff@moz-u5nog7.res.rr.com) has quit (Client exited)
2015-05-25 12:23:32	rkruppe	The Foo would have to be passed in as parameter
2015-05-25 12:23:56	gsingh93	hmm, maybe i'll specify my full problem with raw pointers and there might be a better solution
2015-05-25 12:24:18	rkruppe	Sure
2015-05-25 12:24:22	gsingh93	I have a Context struct and a Module struct, both wrap their own ContextRef and ModuleRef raw pointer
2015-05-25 12:24:49	-->	dstrbad (dstrbad@moz-cf4857.xnet.hr) has joined #rust
2015-05-25 12:25:12	gsingh93	the only way to create a ModuleRef is by calling context.create_module(), and the returned Module contains a ModuleRef that is free'd when the Context is dropped
2015-05-25 12:25:14	<--	Tyde1 (yttyd_000@moz-t5glkn.pools.vodafone-ip.de) has quit (Ping timeout: 121 seconds)
2015-05-25 12:25:22	zrneely	hmm, it fails to compile vecmath, even from github.
2015-05-25 12:25:22	<--	dstrbad_ (dstrbad@moz-cf4857.xnet.hr) has quit (Connection closed)
2015-05-25 12:25:27	-->	dassio (mac@moz-f5s.cn2.191.60.IP) has joined #rust
2015-05-25 12:25:33	<--	dmac_ (dmac@moz-2ig65r.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-25 12:25:36	gsingh93	so from this i need to make sure that the Module never outlives the context
2015-05-25 12:25:48	gsingh93	otherwise the contained ModuleRef is free'd memory
2015-05-25 12:26:02	gsingh93	however, i want other objects to be able to conveniently store these wrapper structs
2015-05-25 12:26:07	-->	nyx_ (nyx@moz-ivelpd.res.rr.com) has joined #rust
2015-05-25 12:26:12	gsingh93	does that make sense rkruppe?
2015-05-25 12:26:15	rkruppe	gsingh93: Makes sense, but doesn't really change anything
2015-05-25 12:26:48	gsingh93	there should be a safe way to do this though
2015-05-25 12:27:23	rkruppe	The safe way is to have the (owning) Context in a local variable somewhere high up the call stack and pass borrows of it everywhere
2015-05-25 12:27:36	rkruppe	Well, no, the Context can be wrapped in any number of types
2015-05-25 12:27:36	<--	nicoch (nicoch@moz-g02d7k.be) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-25 12:28:01	rkruppe	But lifetimes can only reason about stack frames, at some point it has to come down to "this stuff is valid exactly for the execution of this block"
2015-05-25 12:30:49	<--	tadh (quassel@moz-iq6hhs.biz.rr.com) has quit (Ping timeout: 121 seconds)
2015-05-25 12:31:19	gsingh93	rkruppe: so essentially i can't store them in a struct and pass them around together, i need to create them separately at the top level and pass them around like that?
2015-05-25 12:31:49	-->	tadh (quassel@moz-iq6hhs.biz.rr.com) has joined #rust
2015-05-25 12:32:03	<--	RC9 (RCIX@moz-vnmep7.ph.cox.net) has quit (Ping timeout: 121 seconds)
2015-05-25 12:32:41	<--	mlafeldt (mlafeldt@moz-r5eets.pools.vodafone-ip.de) has quit (Quit: )
2015-05-25 12:33:20	<--	dstrbad (dstrbad@moz-cf4857.xnet.hr) has quit (A TLS packet with unexpected length was received.)
2015-05-25 12:33:33	gsingh93	zrneely: when i build it downloads vecmath v0.0.23 and it builds fine
2015-05-25 12:33:49	rkruppe	gsingh93: If you want the borrow checker to connect the dots and prevent the problem you described above, I don't see another way. There _may_ be one, but it will be complicated and I don't know it.
2015-05-25 12:33:57	-->	harrisonclarke (harrisoncla@moz-6v8.jf9.227.142.IP) has joined #rust
2015-05-25 12:34:16	-->	tikue (tim@moz-g5n.ha3.38.65.IP) has joined #rust
2015-05-25 12:34:28	-->	lenstr (lenstr@moz-s25.vju.25.171.IP) has joined #rust
2015-05-25 12:34:34	<--	lenstr (lenstr@moz-s25.vju.25.171.IP) has quit (Quit: Leaving...)
2015-05-25 12:34:43	rkruppe	gsingh93: Of course you could use reference counting for everything, but that comes at a cost (and easier to mess up because you'll write more unsafe code)
2015-05-25 12:34:47	-->	minot2 (kkus@moz-baj4jj.74.srtnet.com) has joined #rust
2015-05-25 12:34:48	<--	rudolph (rudolph@moz-q5b.rfa.152.37.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-25 12:34:58	gsingh93	rkruppe: ok, thanks. i'll keep searching around for a better way
2015-05-25 12:35:17	grodan	I just found out by chance that it's possible to match on "MyEnum::X { ref mymember } instead of "MyEnum::X { my_member : ref my_member }. Being able to avoid the repetition is nice. I couldn't find this in the rust book. Is it documented anywhere?
2015-05-25 12:35:25	-->	Jesin (Jesin@moz-a3uhsd.fios.verizon.net) has joined #rust
2015-05-25 12:35:33	-->	NerdTaco (NerdTaco@moz-a4e65f.dsl.bell.ca) has joined #rust
2015-05-25 12:35:51	<--	zrneely (Mibbit@moz-a2i.gl9.56.172.IP) has left #rust
2015-05-25 12:35:51	gsingh93	zrneely: this is how my dependencies look: http://pastebin.com/qmFVK41n
2015-05-25 12:36:04	<--	ekidd (ekidd@moz-6t81cn.nh.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-25 12:36:08	-->	Triton (cindela@moz-dlkpia.bb.dnainternet.fi) has joined #rust
2015-05-25 12:36:50	betawaffle	can I not implement FnOnce in stable rust?
2015-05-25 12:37:12	-->	rudolph (rudolph@moz-q5b.rfa.152.37.IP) has joined #rust
2015-05-25 12:37:13	<--	JosiahOne (Instantbird@moz-i8huts.l2d1.q8mm.0306.2602.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 12:37:48	<--	skeuomorf (skeuomorf@moz-ij1.21q.32.197.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 12:37:49	-->	munksgaard (munksgaard@moz-478pev.u.parknet.dk) has joined #rust
2015-05-25 12:38:00	<--	hugomg (hugo@moz-um6.h06.218.179.IP) has quit (Quit: Leaving)
2015-05-25 12:38:18	<--	tikue (tim@moz-g5n.ha3.38.65.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 12:38:30	nyx_	Could anyone provide guidance re a Rust / Raspberry Pi cross compiler build error?  https://gist.github.com/nyx/acbf32ed3d68c42d293c  
2015-05-25 12:39:44	--	nyx is now known as jmesmon
2015-05-25 12:41:31	<--	Guest46 (textual@moz-gu2.c8p.157.183.IP) has quit (Quit: Textual IRC Client: www.textualapp.com)
2015-05-25 12:41:42	FreeFull	betawaffle: Implementing the Fn* traits does require a feature gate
2015-05-25 12:41:47	jmesmon	nyx_: it looks like the linker is unset. What ./configure are you using?
2015-05-25 12:41:52	FreeFull	betawaffle: Which means you'll need nightly rust
2015-05-25 12:41:56	<--	rudolph (rudolph@moz-q5b.rfa.152.37.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-25 12:41:57	<--	strixbg (strixbg@moz-h16.8ua.123.93.IP) has quit (Quit: This computer has gone to sleep)
2015-05-25 12:42:00	betawaffle	:(
2015-05-25 12:42:08	-->	rudolph (rudolph@moz-q5b.rfa.152.37.IP) has joined #rust
2015-05-25 12:42:22	nyx_	jmesmon: the configure incantation i'm using is in the first comment if that's what you are looking for
2015-05-25 12:44:06	-->	findow (Mibbit@moz-1072lv.dsl.as9105.com) has joined #rust
2015-05-25 12:44:46	-->	Binero (jeroen@moz-91joat.69vi.s4ge.1810.2a02.IP) has joined #rust
2015-05-25 12:45:01	<--	krig (krig@moz-nf73fa.acc.umu.se) has quit (Connection closed)
2015-05-25 12:45:10	findow	How can I get my function to return nothing if it succeds and an error if it doesn't?
2015-05-25 12:45:31	companion_cube	return Result<(), SomeError>
2015-05-25 12:45:35	findow	ahh
2015-05-25 12:45:36	geri	hi how changed the install script here? http://www.rust-lang.org/install.html
2015-05-25 12:45:39	geri	who
2015-05-25 12:45:47	findow	thanks companion_cube 
2015-05-25 12:46:43	<--	DanC (connolly@moz-gvkafp.dyn.everestkc.net) has quit (Quit: So long and thanks...)
2015-05-25 12:46:50	<--	rudolph (rudolph@moz-q5b.rfa.152.37.IP) has quit (Connection closed)
2015-05-25 12:46:53	<--	dassio (mac@moz-f5s.cn2.191.60.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 12:46:53	<--	Funkill[wrk] (Funkill@moz-pmt.89o.175.79.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 12:46:54	betawaffle	and I can't make a boxed function either?
2015-05-25 12:47:13	-->	rudolph (rudolph@moz-8k19pr.o3k5.dsq9.010d.2620.IP) has joined #rust
2015-05-25 12:47:54	-->	dassio (mac@moz-4gr.37l.160.167.IP) has joined #rust
2015-05-25 12:47:55	<--	daschl (Adium@moz-e2dvap.public.telering.at) has quit (Connection closed)
2015-05-25 12:47:59	findow	How do I represent that in a match statement companion_cube ?
2015-05-25 12:48:04	-->	mib_xy3kec (Mibbit@moz-l6bg33.res.rr.com) has joined #rust
2015-05-25 12:48:13	geri	curl -sSf https://static.rust-lang.org/rustup.sh | sh -s ... what does -s mean here?
2015-05-25 12:48:21	<--	mib_xy3kec (Mibbit@moz-l6bg33.res.rr.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-25 12:48:31	-->	figaro (Mibbit@moz-l6bg33.res.rr.com) has joined #rust
2015-05-25 12:49:06	-->	rudolph_ (rudolph@moz-q5b.rfa.152.37.IP) has joined #rust
2015-05-25 12:49:06	<--	rudolph (rudolph@moz-8k19pr.o3k5.dsq9.010d.2620.IP) has quit (Connection closed)
2015-05-25 12:49:23	-->	daschl (Adium@moz-e2dvap.public.telering.at) has joined #rust
2015-05-25 12:49:35	-->	kimwonyong (kimwonyong@moz-gfp.vhi.163.221.IP) has joined #rust
2015-05-25 12:50:02	-->	sw17ch (sw17ch@moz-h64l8d.wa.comcast.net) has joined #rust
2015-05-25 12:51:00	-->	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has joined #rust
2015-05-25 12:51:11	-->	ygrek (user@moz-8j9aeu.org.ua) has joined #rust
2015-05-25 12:51:23	iliekturtles	geri: -s is silent, and -S is show error. See `man curl`.
2015-05-25 12:51:54	-->	bur_sangjun (bur_sangjun@moz-elcrk7.range165-120.btcentralplus.com) has joined #rust
2015-05-25 12:51:57	geri	sh -s ... read from pipe?
2015-05-25 12:52:07	-->	strixbg (strixbg@moz-h16.8ua.123.93.IP) has joined #rust
2015-05-25 12:52:38	-->	mbudde (mbudde@moz-v8g.lim.109.2.IP) has joined #rust
2015-05-25 12:52:53	-->	fkaa_ (tundmatu@moz-501od2.business.telia.com) has joined #rust
2015-05-25 12:52:53	iliekturtles	geri: Read from standard input. See `man sh`.
2015-05-25 12:53:08	geri	okk
2015-05-25 12:53:36	<--	kimwonyong (kimwonyong@moz-gfp.vhi.163.221.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 12:53:38	-->	tyrion-mx (tyrion@moz-kvs6fc.torservers.net) has joined #rust
2015-05-25 12:55:13	jwilm_	Is anyone here familiar with the rustc_serialize::json::Decoder? I am trying to handle a missing field error within the decode function, but an EOF error is being returned immediately and my match doesn't get a chance to handle it: https://github.com/jwilm/chatbot/blob/slack-adapter-cleanup/src/adapter/slack.rs#L81-L84
2015-05-25 12:55:19	<--	fkaa (tundmatu@moz-501od2.business.telia.com) has quit (Ping timeout: 121 seconds)
2015-05-25 12:56:10	-->	meh (meh@moz-5b2553.42-151.net24.it) has joined #rust
2015-05-25 12:56:25	<--	js (js@moz-uf0ejo.dclient.hispeed.ch) has quit (Quit: Quit)
2015-05-25 12:57:03	<--	kidto_ (gabriel@moz-fj4h3j.as13285.net) has quit (Ping timeout: 121 seconds)
2015-05-25 12:57:09	--	zz_NameNotFound is now known as NameNotFound
2015-05-25 12:57:23	jmesmon	nyx_: I took a quick look at src/librustc_back/target/*, but nothing stands out as a cause of your issue. That said, I'm not even seeing where it sets the linker to something other than "cc" for your target.
2015-05-25 12:58:33	-->	Kxepal (Miranda@moz-g95ll8.pppoe.mtu-net.ru) has joined #rust
2015-05-25 12:59:06	-->	mstevens (mstevens@moz-itk2jg.etla.org) has joined #rust
2015-05-25 12:59:07	nyx_	jmesmon: thanks, I didn't know where to even start looking really
2015-05-25 13:00:03	-->	Porkepix (Porkepix@moz-g50t2v.abo.wanadoo.fr) has joined #rust
2015-05-25 13:01:08	jmesmon	nyx_: also try running `make VERBOSE=1`, this will tell us the actual command that is failing. It might be passing the linker in with -C linker=.
2015-05-25 13:01:10	-->	djhworld (djhworld@moz-uag.hpf.10.94.IP) has joined #rust
2015-05-25 13:01:31	-->	krig (krig@moz-nf73fa.acc.umu.se) has joined #rust
2015-05-25 13:01:34	jmesmon	at which point we'll just need to look at the build time target config under mk/cfg/*
2015-05-25 13:03:19	mstevens	I was about to ask if I there's an easy way to download the docs, then I realised it's part of the main download
2015-05-25 13:03:49	<--	jviereck (Adium@moz-jh8j4p.dynamic.hispeed.ch) has quit (Ping timeout: 121 seconds)
2015-05-25 13:04:01	<--	silven (quassel@moz-0roor3.priv.bahnhof.se) has quit (Ping timeout: 121 seconds)
2015-05-25 13:04:21	<--	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-25 13:04:29	-->	jviereck (Adium@moz-jh8j4p.dynamic.hispeed.ch) has joined #rust
2015-05-25 13:04:29	-->	foodoo (foodoo@moz-i75c75.dyn.telefonica.de) has joined #rust
2015-05-25 13:04:36	-->	silven (quassel@moz-0roor3.priv.bahnhof.se) has joined #rust
2015-05-25 13:04:52	-->	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has joined #rust
2015-05-25 13:05:26	-->	grant (grant@moz-jfh.0nq.187.64.IP) has joined #rust
2015-05-25 13:06:00	mkpankov	are there any guides on profiling Rust?
2015-05-25 13:06:36	--	NameNotFound is now known as zz_NameNotFound
2015-05-25 13:06:54	<--	rudolph_ (rudolph@moz-q5b.rfa.152.37.IP) has quit (Connection closed)
2015-05-25 13:07:07	-->	dstrbad (dstrbad@moz-5hmabb.dsl.iskon.hr) has joined #rust
2015-05-25 13:07:08	nyx_	jmesmon: It's passing in the linker as you said, but the filename looks truncated as in the previous output:  -C linker=arm-linux-gnueabihf-
2015-05-25 13:08:08	-->	Zidane (Zidane@moz-382v9o.ca.comcast.net) has joined #rust
2015-05-25 13:08:59	<--	anthgur (textual@moz-k1i.0v9.249.50.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-25 13:09:05	-->	irobevjodu (ident@moz-mikldi.static-ro.twistednetworks.net) has joined #rust
2015-05-25 13:09:11	<--	Murarth (Murarth@moz-mpmr8r.phnx.qwest.net) has quit (Quit: Screw you guys. I'm going home.)
2015-05-25 13:09:59	<--	ptalbot (ptalbot@moz-j4gnuh.fbx.proxad.net) has quit (Ping timeout: 121 seconds)
2015-05-25 13:10:30	-->	Murarth (Murarth@moz-39uhke.dyn.nltelcom.net) has joined #rust
2015-05-25 13:10:36	<--	gsingh93 (gulshan@moz-ln1ktu.st3l.iv8o.0004.2601.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 13:11:06	@steveklabnik	mkpankov: not specifically. you just use perf or instruments or whatever
2015-05-25 13:11:33	-->	dinfuehr (dinfuehr@moz-81c7pp.highway.telekom.at) has joined #rust
2015-05-25 13:12:10	mkpankov	steveklabnik: is 'instruments' a name of a tool? can't find it
2015-05-25 13:12:12	-->	dmac_ (dmac@moz-2ig65r.ca.comcast.net) has joined #rust
2015-05-25 13:12:41	@steveklabnik	yeah on osx
2015-05-25 13:12:58	mkpankov	ah, so I'll stick with perf
2015-05-25 13:13:34	-->	nodweber (nodweber@moz-knt.fgq.178.5.IP) has joined #rust
2015-05-25 13:13:45	<--	mkpankov (user@moz-nleeis.partnertech.ru) has quit (A TLS packet with unexpected length was received.)
2015-05-25 13:13:47	-->	FrozenCow (FrozenCow@moz-i2tvv4.chello.nl) has joined #rust
2015-05-25 13:14:46	<--	SneakySnake (nya@moz-i9is4u.pool.telekom.hu) has quit (Connection closed)
2015-05-25 13:15:26	-->	frozenfiggers (Mibbit@moz-tpjl46.co.comcast.net) has joined #rust
2015-05-25 13:15:33	<--	NerdTaco (NerdTaco@moz-a4e65f.dsl.bell.ca) has quit (A TLS packet with unexpected length was received.)
2015-05-25 13:15:37	<--	dinfuehr (dinfuehr@moz-81c7pp.highway.telekom.at) has quit (Ping timeout: 121 seconds)
2015-05-25 13:15:44	-->	mkpankov (user@moz-nleeis.partnertech.ru) has joined #rust
2015-05-25 13:16:08	-->	xeoskr (Mibbit@moz-814029.fbx.proxad.net) has joined #rust
2015-05-25 13:16:26	<--	xeoskr (Mibbit@moz-814029.fbx.proxad.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-25 13:16:36	<--	jviereck (Adium@moz-jh8j4p.dynamic.hispeed.ch) has quit (Quit: Leaving.)
2015-05-25 13:16:48	mkpankov	steveklabnik: hm, 'perf test' fails for me. did you observe that?
2015-05-25 13:17:03	@steveklabnik	i am only repeating what others have told me, i haven't done much myself :)
2015-05-25 13:17:53	<--	nodweber (nodweber@moz-knt.fgq.178.5.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 13:17:56	<--	john (john@moz-3qeeob.static.qwest.net) has quit (Ping timeout: 121 seconds)
2015-05-25 13:17:59	mkpankov	oh, it's some weird stuff about stripped kernel
2015-05-25 13:18:10	mkpankov	steveklabnik: ok, guess I'll try anyway
2015-05-25 13:18:23	-->	stephanbuys (Adium@moz-u4soen.voxdsl.co.za) has joined #rust
2015-05-25 13:18:41	-->	Tyde1 (yttyd_000@moz-t5glkn.pools.vodafone-ip.de) has joined #rust
2015-05-25 13:18:51	<--	Tyde (yttyd_000@moz-cfu.rkq.238.104.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 13:19:11	-->	Tyde (yttyd_000@moz-1tp.rkq.238.104.IP) has joined #rust
2015-05-25 13:20:17	<--	areski (areski@moz-erfa2b.dynamicIP.rima-tde.net) has quit (Ping timeout: 121 seconds)
2015-05-25 13:21:26	iliekturtles	Is there any solution to pass `-C link-args=-mwindows` using Cargo currently?
2015-05-25 13:22:41	grodan	this match arm found in the Rust Book renders a warning "Message::Move { x: x, y: y } =>" (source: https://doc.rust-lang.org/book/match.html). Is this a mistake you think?
2015-05-25 13:22:42	<--	Tyde1 (yttyd_000@moz-t5glkn.pools.vodafone-ip.de) has quit (Ping timeout: 121 seconds)
2015-05-25 13:23:04	grodan	"warning: the `x:` in this pattern is redundant and can be removed"
2015-05-25 13:24:56	@steveklabnik	grodan: it's not a mistake exactly, but it would be nice to cover that
2015-05-25 13:25:03	@steveklabnik	open an issue or PR?
2015-05-25 13:25:27	<--	goyox86 (textual@moz-qfs.570.70.83.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 13:25:47	<--	willem (willem@moz-facs2s.dynamic.upc.nl) has quit (Quit: leaving)
2015-05-25 13:25:57	-->	AndroUser2 (androirc@moz-heal6h.skybroadband.com) has joined #rust
2015-05-25 13:26:03	-->	Astrum|Lap (Astrum|Lap@moz-skcefh.co.comcast.net) has joined #rust
2015-05-25 13:26:04	<--	AndroUser2 (androirc@moz-heal6h.skybroadband.com) has quit (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
2015-05-25 13:26:10	-->	AndroUser2 (androirc@moz-heal6h.skybroadband.com) has joined #rust
2015-05-25 13:26:18	<--	colinsurprenant (colin@moz-rmn4e2.169.electronicbox.net) has quit (Client exited)
2015-05-25 13:26:20	<--	AndroUser2 (androirc@moz-heal6h.skybroadband.com) has quit (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
2015-05-25 13:27:18	mkpankov	happens perf is just syscall-level profiling
2015-05-25 13:27:21	grodan	steveklabnik: ok. As much as I'd like to help out I'm quite new to Rust, so I think I'll open an issue then.
2015-05-25 13:27:29	mkpankov	and I'd like Rust-source-level profiling
2015-05-25 13:27:40	mkpankov	any way to use gprof for Rust?
2015-05-25 13:28:09	<--	nickniko_ (nicknikolov@moz-0q4.2rm.211.90.IP) has quit (Connection closed)
2015-05-25 13:28:30	SiegeLord	You can use perf to profile applications too
2015-05-25 13:28:31	@steveklabnik	grodan: yeah, no worries :)
2015-05-25 13:28:46	SiegeLord	And it'll give you line numbers etc
2015-05-25 13:28:46	-->	__mark___ (mark@moz-udut16.dynamic.chello.pl) has joined #rust
2015-05-25 13:29:03	<--	bfops (uid58242@moz-e5u6m0.charlton.irccloud.com) has quit (Quit: Connection closed for inactivity)
2015-05-25 13:29:05	mkpankov	SiegeLord: how?
2015-05-25 13:29:11	<--	__mark___ (mark@moz-udut16.dynamic.chello.pl) has quit (Client exited)
2015-05-25 13:29:16	-->	__mark___ (mark@moz-udut16.dynamic.chello.pl) has joined #rust
2015-05-25 13:29:16	<--	__mark__ (mark@moz-udut16.dynamic.chello.pl) has quit (Ping timeout: 121 seconds)
2015-05-25 13:29:17	--	__mark___ is now known as __mark__
2015-05-25 13:29:19	SiegeLord	Although I don't really like perf, it's usable for coarse level profiling
2015-05-25 13:29:33	SiegeLord	One sec, let me refamiliarize myself
2015-05-25 13:29:38	-->	nicknikolov (nicknikolov@moz-0q4.2rm.211.90.IP) has joined #rust
2015-05-25 13:30:13	<--	Astrum|Lap (Astrum|Lap@moz-skcefh.co.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-25 13:30:54	SiegeLord	lol, I don't even have it installed... shows how useful it its ;P
2015-05-25 13:30:56	SiegeLord	*it is
2015-05-25 13:30:58	-->	kidto_ (gabriel@moz-fj4h3j.as13285.net) has joined #rust
2015-05-25 13:33:08	findow	Is there such a thing as native registers in rust?
2015-05-25 13:34:11	bluss	mkpankov: the basics of perf are:  perf record <command> ; perf report; (compile with debug symbols)
2015-05-25 13:34:17	SiegeLord	Well anyway...
2015-05-25 13:34:36	SiegeLord	mkpankov: You just do perf record app followed by perf report
2015-05-25 13:34:38	<--	asQuirreL (asQuirreL@moz-ro1qqu.ox.ac.uk) has quit (Ping timeout: 121 seconds)
2015-05-25 13:34:42	<--	JanC (janc@moz-1ibeqa.dsl.scarlet.be) has quit (Ping timeout: 121 seconds)
2015-05-25 13:34:42	-->	tikue (tim@moz-g5n.ha3.38.65.IP) has joined #rust
2015-05-25 13:34:49	<--	nstoddard (nstoddard@moz-iu69ov.jcf6.2eo7.0009.2601.IP) has quit (Connection closed)
2015-05-25 13:34:53	SiegeLord	There are some... command line switches to actually get it to display source, but I forget them
2015-05-25 13:35:11	<--	dmac_ (dmac@moz-2ig65r.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-25 13:35:12	-->	nstoddard (nstoddard@moz-iu69ov.jcf6.2eo7.0009.2601.IP) has joined #rust
2015-05-25 13:35:15	bluss	I think it does that already in the interactive perf report interface
2015-05-25 13:35:16	<--	djhworld (djhworld@moz-uag.hpf.10.94.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-25 13:35:23	bluss	but you also have perf annotate --stdio
2015-05-25 13:37:59	Tari	I like kcachegrind for profiling, just because I don't need to learn how to use another tool
2015-05-25 13:38:03	<--	alonlevy (alon@moz-4jqdpb.telavivmakers.org) has quit (Ping timeout: 121 seconds)
2015-05-25 13:38:44	<--	tikue (tim@moz-g5n.ha3.38.65.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 13:38:47	-->	pgonda (peter@moz-s36.0tp.134.75.IP) has joined #rust
2015-05-25 13:38:53	<--	tamird (textual@moz-gg3hct.res.rr.com) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-25 13:40:23	findow	I'm writing a vm. Should I store my registers in an enum or array?
2015-05-25 13:41:16	-->	colinsurprenant (colin@moz-rmn4e2.169.electronicbox.net) has joined #rust
2015-05-25 13:41:25	--	godlikesme__ is now known as godlikesme
2015-05-25 13:41:55	mkpankov	bluss SiegeLord figured that part. but I have empty window in perf report
2015-05-25 13:42:13	mkpankov	perf.data is 17M though
2015-05-25 13:42:28	-->	ai (ai@moz-pqofrl.sunline.net.ua) has joined #rust
2015-05-25 13:42:28	findow	Anybody?
2015-05-25 13:43:38	-->	Pavel (Pavel@moz-a8qgi0.lidos.cz) has joined #rust
2015-05-25 13:43:44	<--	Pavel (Pavel@moz-a8qgi0.lidos.cz) has quit (Quit: Leaving)
2015-05-25 13:43:47	-->	Pavel (Pavel@moz-a8qgi0.lidos.cz) has joined #rust
2015-05-25 13:44:03	-->	jincreator (Thunderbird@moz-d7i.i1g.195.175.IP) has joined #rust
2015-05-25 13:44:09	<--	ai (ai@moz-pqofrl.sunline.net.ua) has quit (Quit: Leaving.)
2015-05-25 13:44:13	-->	ai (ai@moz-pqofrl.sunline.net.ua) has joined #rust
2015-05-25 13:44:17	bluss	mkpankov: I haven't seen that. What does perf annotate do?
2015-05-25 13:44:22	-->	JagaJaga (JagaJaga@moz-ua8.hhl.62.178.IP) has joined #rust
2015-05-25 13:44:30	bluss	mkpankov: with --stdio flag
2015-05-25 13:44:41	<--	Pavel (Pavel@moz-a8qgi0.lidos.cz) has quit (Quit: Leaving)
2015-05-25 13:45:00	<--	pgonda (peter@moz-s36.0tp.134.75.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 13:46:09	-->	Astrum|Lap (Astrum|Lap@moz-skcefh.co.comcast.net) has joined #rust
2015-05-25 13:46:20	<--	kaeluka (kaeluka@moz-tn3lqd.cust.bredbandsbolaget.se) has quit (Client exited)
2015-05-25 13:46:44	<--	_Vi (vi@moz-bbs.vhj.131.104.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 13:46:52	<--	psd (psd@moz-j83a4s.mtnl.net.in) has quit (Ping timeout: 121 seconds)
2015-05-25 13:47:03	-->	dallbee (dallbee@moz-6lfam3.ch) has joined #rust
2015-05-25 13:47:38	<--	cakecatz (cakecatz@moz-edrvuc.sannet.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-25 13:47:42	<--	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-25 13:47:48	@Havvy	Why isn't there a `impl<T, E, F> From<Result<T, F>> for Result<T, E> { ... }`?
2015-05-25 13:47:50	mkpankov	bluss: oh, perf annotate --stdio indeed shows *something*
2015-05-25 13:48:03	-->	dmac_ (dmac@moz-2ig65r.ca.comcast.net) has joined #rust
2015-05-25 13:48:16	mkpankov	I guess it's disassembly overlayed with times in some units
2015-05-25 13:48:28	mkpankov	ah, it's even percents
2015-05-25 13:48:53	-->	JanC (janc@moz-1ibeqa.dsl.scarlet.be) has joined #rust
2015-05-25 13:49:22	bluss	mkpankov: need debug info to show code there
2015-05-25 13:49:26	<--	p32blo (p32blo@moz-fhmueq.1oel.r662.0690.2001.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 13:49:38	mkpankov	bluss: I profile the debug version
2015-05-25 13:50:11	mkpankov	it actually shows me *some* names
2015-05-25 13:50:18	mkpankov	seems like names of functions
2015-05-25 13:50:29	mkpankov	I'd just like a call graph 
2015-05-25 13:50:42	<--	stephanbuys (Adium@moz-u4soen.voxdsl.co.za) has quit (Quit: Leaving.)
2015-05-25 13:51:03	tomprogrammer	mkpankov: For callgraphs there is also valgrind / kcachegrind
2015-05-25 13:51:08	<--	Zidane (Zidane@moz-382v9o.ca.comcast.net) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-05-25 13:51:34	tomprogrammer	mkpankov: But I don't know how to use them..
2015-05-25 13:52:29	dallbee	Is this the right rust channel to ask for help with rust? I've been getting stuck on a few things.
2015-05-25 13:52:50	<--	spastorino (sid27384@moz-i6sgse.brockwell.irccloud.com) has quit (Quit: )
2015-05-25 13:52:55	mkpankov	tomprogrammer: looks like perf should be able to do them
2015-05-25 13:53:01	mkpankov	I just didn't figure out, how
2015-05-25 13:53:03	<--	Altazimuth_ (Altazimuth@moz-rb7u6p.skybroadband.com) has quit (Ping timeout: 121 seconds)
2015-05-25 13:53:04	<--	Murarth (Murarth@moz-39uhke.dyn.nltelcom.net) has quit (Quit: Screw you guys. I'm going home.)
2015-05-25 13:53:14	-->	spastorino (sid27384@moz-i6sgse.brockwell.irccloud.com) has joined #rust
2015-05-25 13:53:16	-->	sigma1 (sigma@moz-k1ghg8.range109-153.btcentralplus.com) has joined #rust
2015-05-25 13:53:17	-->	Murarth (Murarth@moz-mpmr8r.phnx.qwest.net) has joined #rust
2015-05-25 13:53:19	<--	sigma (sigma@moz-k1ghg8.range109-153.btcentralplus.com) has quit (Connection closed)
2015-05-25 13:53:29	mkpankov	oh. after doing perf annotate, perf report started showing proper report
2015-05-25 13:53:57	-->	gopar (gopar@moz-5039uj.ca.comcast.net) has joined #rust
2015-05-25 13:53:58	--	fkaa_ is now known as fkaa
2015-05-25 13:54:09	<--	rkruppe (chatzilla@moz-498i4m.diu2.0rth.0908.2a02.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 13:54:31	-->	pyon (pyon@moz-b0l.mdl.7.179.IP) has joined #rust
2015-05-25 13:54:51	Wilduck	Does anyone know why this line would throw a mismatched types error: `let mut f = try!(File::open("/Users/erik/Sandbox/test.txt”));` it seems something in the `try!` macro expansion is expecting a type of the return value for whatever function I’m calling `try!` in. Am I missunderstanding how `try!` works?
2015-05-25 13:55:03	-->	Altazimuth (Altazimuth@moz-rb7u6p.skybroadband.com) has joined #rust
2015-05-25 13:55:25	jnvsor	If I want to add a method to a Vec just for one file, how do I do it? `impl Vec {}`?
2015-05-25 13:55:44	Wilduck	I’ll try to replicate it in the playground and post a gist
2015-05-25 13:55:49	bluss	jnvsor: make a trait with that method, impl<T> FooTrait for Vec<T> { }
2015-05-25 13:56:00	-->	cakecatz (cakecatz@moz-edrvuc.sannet.ne.jp) has joined #rust
2015-05-25 13:56:04	mkpankov	bluss tomprogrammer SiegeLord thanks for helping me out <3
2015-05-25 13:56:23	bluss	mkpankov: try perf --call-graph=dwarf
2015-05-25 13:56:33	jnvsor	bluss: It's a very specific method, I don't need generics
2015-05-25 13:56:42	-->	Altazimuth_ (Altazimuth@moz-rb7u6p.skybroadband.com) has joined #rust
2015-05-25 13:57:01	<--	flavius (flavius@moz-pik2l3.tmpp.le52.8388.2a02.IP) has quit (Connection closed)
2015-05-25 13:57:20	<--	desophos (desophos@moz-nu24v1.98ku.27p0.6000.2606.IP) has quit (Connection closed)
2015-05-25 13:57:37	-->	desophos (desophos@moz-nu24v1.98ku.27p0.6000.2606.IP) has joined #rust
2015-05-25 13:57:45	<--	dcb (textual@moz-j72nfe.ca.comcast.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-25 13:57:55	bluss	jnvsor: ok. that doesn't change that implementing traits is the only way you can add methods
2015-05-25 13:57:58	-->	rkruppe (chatzilla@moz-olc3ok.unity-media.net) has joined #rust
2015-05-25 13:58:13	jnvsor	Ok, thanks
2015-05-25 13:58:21	<--	Altazimuth_ (Altazimuth@moz-rb7u6p.skybroadband.com) has quit (Quit: I'm off)
2015-05-25 13:58:25	Wilduck	I don’t understand the error this is giving at all (playground link): http://is.gd/h3fEFH I think I’m following the docs for std::fs::File
2015-05-25 13:58:32	<--	kidto_ (gabriel@moz-fj4h3j.as13285.net) has quit (Ping timeout: 121 seconds)
2015-05-25 13:59:08	<--	Altazimuth (Altazimuth@moz-rb7u6p.skybroadband.com) has quit (Ping timeout: 121 seconds)
2015-05-25 13:59:37	<--	qwerty_nor (Thunderbird@moz-mmjb8o.uq66.lk4q.0006.2601.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 14:00:10	<--	csoriano (csoriano@moz-vs8vb1.redhat.com) has quit (Client exited)
2015-05-25 14:01:20	<--	sigma1 (sigma@moz-k1ghg8.range109-153.btcentralplus.com) has quit (Ping timeout: 121 seconds)
2015-05-25 14:01:23	-->	__ixti__ (ixti@moz-i3d.dae.119.188.IP) has joined #rust
2015-05-25 14:01:27	XMPPwocky	Wilduck: try! is a macro that expands into match foo { Ok(x) => x, Err(e) => return e; }
2015-05-25 14:01:45	XMPPwocky	Wilduck: (with a little bit more complexity to deal with converting between error types, but still)
2015-05-25 14:02:14	FreeFull	Wilduck: Which means that the function you use try! in has to return some sort of Result<T,E>
2015-05-25 14:02:32	-->	avikpal (avikpal@moz-4pq.bal.232.117.IP) has joined #rust
2015-05-25 14:02:40	mkpankov	seems perf even works with release build 
2015-05-25 14:02:45	mkpankov	in some way, at least
2015-05-25 14:02:59	mkpankov	well, gtg, will report on my findings later
2015-05-25 14:03:01	-->	hjr3 (hradtke@moz-rga0be.ca.comcast.net) has joined #rust
2015-05-25 14:03:03	<--	mkpankov (user@moz-nleeis.partnertech.ru) has quit (Quit: ERC Version 5.3 (IRC client for Emacs))
2015-05-25 14:03:08	FreeFull	Wilduck: You could try using .unwrap(), which will crash the program if there is any error
2015-05-25 14:03:13	Wilduck	FreeFull: Ahhhh, that’s the part I was missing.
2015-05-25 14:03:15	-->	flavius (flavius@moz-pik2l3.tmpp.le52.8388.2a02.IP) has joined #rust
2015-05-25 14:03:53	<--	dstrbad (dstrbad@moz-5hmabb.dsl.iskon.hr) has quit (A TLS packet with unexpected length was received.)
2015-05-25 14:04:00	-->	dstrbad (dstrbad@moz-5hmabb.dsl.iskon.hr) has joined #rust
2015-05-25 14:04:02	Wilduck	The `return e;` clause was causing a type missmatch with the rest of my function.
2015-05-25 14:04:09	FreeFull	Yep
2015-05-25 14:04:11	Wilduck	Thanks XMPPwocky and FreeFull.
2015-05-25 14:04:12	<--	_ixti_ (ixti@moz-i3d.dae.119.188.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 14:05:09	<--	tyrion-mx (tyrion@moz-kvs6fc.torservers.net) has quit (Quit: Leaving)
2015-05-25 14:05:37	FreeFull	Wilduck: http://is.gd/G4uyUg Here is an example where try! does work
2015-05-25 14:05:38	-->	mkpankov (mkpankov@moz-lbi.k4a.16.195.IP) has joined #rust
2015-05-25 14:06:13	Wilduck	FreeFull: That’s extremely helpful.
2015-05-25 14:06:15	-->	jminer (Instantbird@moz-b1u.qch.163.66.IP) has joined #rust
2015-05-25 14:06:16	<--	mindtree (Mitch@moz-rpnggp.iprimus.net.au) has quit (Quit: leaving)
2015-05-25 14:06:44	<--	jdm (jdm@moz-ilbt2e.cable.teksavvy.com) has quit (Quit: )
2015-05-25 14:07:12	<--	dassio (mac@moz-4gr.37l.160.167.IP) has quit (Quit: This computer has gone to sleep)
2015-05-25 14:07:18	<--	dstrbad (dstrbad@moz-5hmabb.dsl.iskon.hr) has quit (A TLS packet with unexpected length was received.)
2015-05-25 14:07:22	-->	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has joined #rust
2015-05-25 14:08:07	-->	skeuomorf (skeuomorf@moz-ij1.21q.32.197.IP) has joined #rust
2015-05-25 14:08:44	srjek	welp, I broke the compiler.
2015-05-25 14:08:56	 *	srjek downloads latest nightly
2015-05-25 14:09:18	-->	dcb (textual@moz-j72nfe.ca.comcast.net) has joined #rust
2015-05-25 14:10:03	-->	UberLambda (uber@moz-24qg64.clienti.tiscali.it) has joined #rust
2015-05-25 14:10:08	<--	dcb (textual@moz-j72nfe.ca.comcast.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-25 14:10:11	-->	dcb (textual@moz-j72nfe.ca.comcast.net) has joined #rust
2015-05-25 14:10:36	<--	silven (quassel@moz-0roor3.priv.bahnhof.se) has quit (Ping timeout: 121 seconds)
2015-05-25 14:10:41	<--	fredrik (fredrik@moz-2b08ue.priv.bahnhof.se) has quit (Ping timeout: 121 seconds)
2015-05-25 14:10:50	-->	silven (quassel@moz-0roor3.priv.bahnhof.se) has joined #rust
2015-05-25 14:11:59	<--	daschl (Adium@moz-e2dvap.public.telering.at) has quit (Quit: Leaving.)
2015-05-25 14:12:18	-->	dinfuehr (dinfuehr@moz-81c7pp.highway.telekom.at) has joined #rust
2015-05-25 14:13:11	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Connection closed)
2015-05-25 14:14:22	-->	nodweber (nodweber@moz-knt.fgq.178.5.IP) has joined #rust
2015-05-25 14:15:07	<--	Anup (chatzilla@moz-64f.aom.245.43.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 14:15:08	-->	john (john@moz-3qeeob.static.qwest.net) has joined #rust
2015-05-25 14:15:15	-->	NerdTaco (NerdTaco@moz-a4e65f.dsl.bell.ca) has joined #rust
2015-05-25 14:16:08	-->	FlyingFoX (quassel@moz-g3oab3.unity-media.net) has joined #rust
2015-05-25 14:16:24	<--	dinfuehr (dinfuehr@moz-81c7pp.highway.telekom.at) has quit (Ping timeout: 121 seconds)
2015-05-25 14:16:41	<--	Quanttek (quassel@moz-25k96c.6fkd.dvrb.8108.2a02.IP) has quit (Connection closed)
2015-05-25 14:16:48	-->	jviereck (Adium@moz-jh8j4p.dynamic.hispeed.ch) has joined #rust
2015-05-25 14:17:06	-->	sigma (sigma@moz-a5u.m43.48.37.IP) has joined #rust
2015-05-25 14:17:06	-->	chc4 (chc4@moz-pdo0at.ma.comcast.net) has joined #rust
2015-05-25 14:17:19	-->	pgonda (peter@moz-s36.0tp.134.75.IP) has joined #rust
2015-05-25 14:17:29	--	zz_NameNotFound is now known as NameNotFound
2015-05-25 14:17:39	-->	Chef (Chef@moz-svthjj.dsl.teksavvy.com) has joined #rust
2015-05-25 14:18:35	<--	FlyingFoX (quassel@moz-g3oab3.unity-media.net) has quit (Connection closed)
2015-05-25 14:18:44	<--	nodweber (nodweber@moz-knt.fgq.178.5.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 14:18:55	-->	onix (Mibbit@moz-i7cb3r.fios.verizon.net) has joined #rust
2015-05-25 14:19:23	-->	mkpankov` (mkpankov@moz-mbl.u5t.23.84.IP) has joined #rust
2015-05-25 14:19:33	--	NameNotFound is now known as zz_NameNotFound
2015-05-25 14:20:32	<--	vodik (simon@moz-86ind4.dedicated.allstream.net) has quit (Quit: WeeChat 1.2)
2015-05-25 14:20:34	-->	bellows (Mibbit@moz-fgundf.dynamic.ziggo.nl) has joined #rust
2015-05-25 14:20:37	<--	rkruppe (chatzilla@moz-olc3ok.unity-media.net) has quit (Ping timeout: 121 seconds)
2015-05-25 14:20:51	--	zz_NameNotFound is now known as NameNotFound
2015-05-25 14:20:59	<--	v21 (vee@moz-j8a.qrj.48.49.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 14:21:14	-->	colinsurprenant_ (colin@moz-rmn4e2.169.electronicbox.net) has joined #rust
2015-05-25 14:21:34	-->	rkruppe (chatzilla@moz-olc3ok.unity-media.net) has joined #rust
2015-05-25 14:21:38	bellows	Is there a way to make smaller shared objects (.so) with rust? I just created a really small test library and it eats up about 2.7MB.
2015-05-25 14:21:41	<--	colinsurprenant (colin@moz-rmn4e2.169.electronicbox.net) has quit (Ping timeout: 121 seconds)
2015-05-25 14:21:41	--	colinsurprenant_ is now known as colinsurprenant
2015-05-25 14:22:26	<--	mkpankov (mkpankov@moz-lbi.k4a.16.195.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 14:23:32	<--	pgonda (peter@moz-s36.0tp.134.75.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 14:23:45	-->	Quanttek (quassel@moz-25k96c.6fkd.dvrb.8108.2a02.IP) has joined #rust
2015-05-25 14:24:09	-->	stjahns (stjahns@moz-b5l.7m7.108.38.IP) has joined #rust
2015-05-25 14:24:33	Dabo	bellows, what does the library do?
2015-05-25 14:25:41	-->	SpaceManiac (Tad@moz-g50q8a.dyn.suddenlink.net) has joined #rust
2015-05-25 14:26:39	-->	stjahns_ (stjahns@moz-mae.ab9.108.38.IP) has joined #rust
2015-05-25 14:26:45	-->	maximih (maximih@moz-0r2bjb.bredband.telia.com) has joined #rust
2015-05-25 14:27:42	maximih	hi everyone. I am looking for an xml lib as close as possible to lxml. I am only interested in parsing xml files. Which one do you recommend?
2015-05-25 14:28:32	--	NameNotFound is now known as zz_NameNotFound
2015-05-25 14:29:10	<--	stjahns (stjahns@moz-b5l.7m7.108.38.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 14:29:53	<--	gonzaloserrano1 (Adium@moz-1nv.3t7.97.62.IP) has quit (Quit: Leaving.)
2015-05-25 14:29:56	<--	hjr3 (hradtke@moz-rga0be.ca.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2015-05-25 14:30:07	<--	mukilan (mukilan@moz-p1l.3lb.164.122.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-25 14:30:32	<--	hyPiRion (jeannikl@moz-e7l.qoh.21.178.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 14:31:04	-->	asQuirreL (asQuirreL@moz-ro1qqu.ox.ac.uk) has joined #rust
2015-05-25 14:32:41	<--	tmtwd (tmtwd@moz-0kkm5n.cable.rogers.com) has quit (Connection closed)
2015-05-25 14:32:50	-->	kaeluka (kaeluka@moz-tn3lqd.cust.bredbandsbolaget.se) has joined #rust
2015-05-25 14:33:07	-->	hyPiRion (jeannikl@moz-e7l.qoh.21.178.IP) has joined #rust
2015-05-25 14:33:33	Dabo	maximih, I'm not sure there's anything akin to lxml in rust currently - there's `xml-rs` which seems effective at reading xml, and `serde` is working on xml support currently, though it isn't finished
2015-05-25 14:33:34	-->	maikklein (Mibbit@moz-tlsnvi.dip0.t-ipconnect.de) has joined #rust
2015-05-25 14:33:39	-->	vodik (simon@moz-86ind4.dedicated.allstream.net) has joined #rust
2015-05-25 14:33:50	Dabo	serde will probably be the best when it's finished, but it isn't finished now
2015-05-25 14:33:53	<--	dcb (textual@moz-j72nfe.ca.comcast.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-25 14:33:55	-->	tmtwd (tmtwd@moz-0kkm5n.cable.rogers.com) has joined #rust
2015-05-25 14:34:04	-->	pancake (pancake@moz-30m5j6.dynamicIP.rima-tde.net) has joined #rust
2015-05-25 14:34:13	pancake	is there a way to get the string representation of an enum?
2015-05-25 14:34:23	maximih	Dabo: thanks
2015-05-25 14:34:32	maikklein	How do I get a generic -1? I tried 'let one : T = T::one().neg();' which results in ''expected `T`,     found `<T as core::ops::Neg>::Output''
2015-05-25 14:34:52	--	zz_NameNotFound is now known as NameNotFound
2015-05-25 14:34:56	Dabo	maikklein, require that `T: Neg<Output=T>`
2015-05-25 14:34:57	maikklein	oh boy the smilies
2015-05-25 14:35:17	filsmick	not all IRC clients show smilies
2015-05-25 14:35:26	dallbee	can confirm - no smiles here
2015-05-25 14:35:26	Dabo	^ no slimes shown here
2015-05-25 14:35:28	<--	bellows (Mibbit@moz-fgundf.dynamic.ziggo.nl) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-25 14:35:43	-->	tikue (tim@moz-g5n.ha3.38.65.IP) has joined #rust
2015-05-25 14:35:57	jcd	Anybody have any advice on getting rust-bindgen working on a debian/testing system (I have rust 1.0 and llvm 3.5) When I compile I get an "Illegal Instruction" error.  This is after setting LD_PRELOAD=/usr/lib/llvm-3.5/lib/libclang.so.
2015-05-25 14:36:08	maikklein	Dabo: thanks, that was the problem
2015-05-25 14:36:13	Dtgr	seems that serde_codegen doesn't compile on latest nightly and I don't know how to fix it :(
2015-05-25 14:36:16	jshs	pancake: what is "the" string representation? you can automatically derive the Debug trait which gives you ... well, a debug print
2015-05-25 14:36:18	<--	nicknikolov (nicknikolov@moz-0q4.2rm.211.90.IP) has quit (Connection closed)
2015-05-25 14:36:21	Dtgr	the error message is quite massive
2015-05-25 14:36:38	Dabo	maikklein, no problem - what that's doing is just requiring that .neg() give an output of the same exact type - which something like `u64` might not do
2015-05-25 14:36:42	pancake	jshs: yeah, its for debugging purposes, so i guess that would be enough
2015-05-25 14:36:43	-->	andresv (textual@moz-cmffkg.cable.starman.ee) has joined #rust
2015-05-25 14:37:18	maikklein	Dabo: yeah I just saw that it defaults to output=Self
2015-05-25 14:37:30	<--	lambdahands (sid65387@moz-hup6d3.irccloud.com) has quit (Ping timeout: 121 seconds)
2015-05-25 14:37:44	jshs	pancake: okay, then put `#[derive(Debug)]` before the enum declaration
2015-05-25 14:37:53	<--	folz (sid78692@moz-hup6d3.irccloud.com) has quit (Connection closed)
2015-05-25 14:37:57	<--	jzelinskie (sid17772@moz-hup6d3.irccloud.com) has quit (Ping timeout: 121 seconds)
2015-05-25 14:38:19	pancake	jshs: and then how can i get the string from it? is there any kind of "sprintf"?
2015-05-25 14:38:22	jshs	pancake: you'll get the debug repr with the `{:?}` format specifier
2015-05-25 14:38:34	<--	janx (sid16602@moz-hup6d3.irccloud.com) has quit (Ping timeout: 121 seconds)
2015-05-25 14:39:02	-->	dcb (textual@moz-j72nfe.ca.comcast.net) has joined #rust
2015-05-25 14:39:09	Dabo	maikklein, true, but it also *could* be something else :P
2015-05-25 14:39:29	jshs	pancake: these docs might be helpful: http://doc.rust-lang.org/stable/std/fmt/index.html
2015-05-25 14:39:44	<--	tikue (tim@moz-g5n.ha3.38.65.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 14:39:45	-->	jdm (jdm@moz-ilbt2e.cable.teksavvy.com) has joined #rust
2015-05-25 14:39:45	--	Mode #rust [+o jdm] by ChanServ
2015-05-25 14:39:49	VShell	playbot: format!("{:?}", "foobar")
2015-05-25 14:39:51	--	Notice(playbot): "\"foobar\""
2015-05-25 14:40:01	-->	folz (sid78692@moz-lnnnqh.highgate.irccloud.com) has joined #rust
2015-05-25 14:40:12	-->	jmbto (jmbto@moz-rsj2ca.hca5.8frp.0e35.2a01.IP) has joined #rust
2015-05-25 14:40:16	-->	brendan (brendaneich@moz-d24.tdl.56.172.IP) has joined #rust
2015-05-25 14:40:19	<--	vodik (simon@moz-86ind4.dedicated.allstream.net) has quit (Connection closed)
2015-05-25 14:40:21	-->	Tyde1 (yttyd_000@moz-t5glkn.pools.vodafone-ip.de) has joined #rust
2015-05-25 14:40:23	Dabo	playbot: println!("{:?}", "foobar")
2015-05-25 14:40:24	--	Notice(playbot): "foobar"
2015-05-25 14:40:25	--	Notice(playbot): ()
2015-05-25 14:40:25	-->	areski (areski@moz-2lg0ha.user.ono.com) has joined #rust
2015-05-25 14:40:29	pancake	let eval_str = format!("{:?}", Enum.Type) ?
2015-05-25 14:40:44	<--	Tyde (yttyd_000@moz-1tp.rkq.238.104.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 14:40:48	jshs	if you want a String, yes
2015-05-25 14:40:58	jnvsor	I'm still not quite grasping what's wrong with my iterator implementation. It's complaining about lifetimes and I'm stumbling around blind: https://gist.github.com/jnvsor/564191bd701dd2d56283
2015-05-25 14:41:05	<--	brendan (brendaneich@moz-d24.tdl.56.172.IP) has quit (Client exited)
2015-05-25 14:41:05	<--	xij0 (Mibbit@moz-u9tatv.dyn.telefonica.de) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-25 14:41:09	pancake	ok cool :)
2015-05-25 14:41:29	-->	lambdahands (sid65387@moz-5fs6kb.highgate.irccloud.com) has joined #rust
2015-05-25 14:41:33	-->	janx (sid16602@moz-rjpkcj.highgate.irccloud.com) has joined #rust
2015-05-25 14:41:34	-->	jzelinskie (sid17772@moz-rgt344.highgate.irccloud.com) has joined #rust
2015-05-25 14:41:53	-->	Guest_ (textual@moz-lvlhs7.east.myfairpoint.net) has joined #rust
2015-05-25 14:41:55	<--	xcombelle (xcombelle@moz-1frl96.abo.wanadoo.fr) has quit (Connection closed)
2015-05-25 14:42:14	-->	vodik (simon@moz-86ind4.dedicated.allstream.net) has joined #rust
2015-05-25 14:43:12	bluss	jnvsor: I'll look at it, I think it touches upon a FAQ -- how to return &mut T from an iterator
2015-05-25 14:43:30	jnvsor	Thanks!
2015-05-25 14:43:55	-->	brendan (brendaneich@moz-d24.tdl.56.172.IP) has joined #rust
2015-05-25 14:43:58	-->	DerisiveLogic (smuxi@moz-1jqqlg.biz.rr.com) has joined #rust
2015-05-25 14:44:29	-->	nicknikolov (nicknikolov@moz-0q4.2rm.211.90.IP) has joined #rust
2015-05-25 14:44:35	bltavares	hi there folks. I'm giving a try on rust and I'm facing an error that I'm not understanding the meaning https://gist.github.com/bltavares/30d3960b131fbf8415eb
2015-05-25 14:44:47	bluss	jnvsor: to start with you need a lifetime parameter on the struct, right? (I'm sure rustc told you :)
2015-05-25 14:45:00	maikklein	how can I declare a generic constant? For example instead of T::one I need 255
2015-05-25 14:45:02	-->	fyolnish (fyolnish@moz-ehtogo.so-net.ne.jp) has joined #rust
2015-05-25 14:45:08	bltavares	I would like to convert a structure into another using the Into trait, but it says the implementation is conflicting
2015-05-25 14:45:09	bluss	jnvsor: struct SurroundingSquaresIter<'a> { squares: &'a mut Vec<Vec<.. 
2015-05-25 14:45:10	jnvsor	Yes, but when I do that (Let's see what's next)
2015-05-25 14:45:23	-->	anthgur (textual@moz-3j5pq7.hfc.comcastbusiness.net) has joined #rust
2015-05-25 14:45:29	-->	mcc (mcc@moz-mm4t3p.dynamic.fusionbroadband.com) has joined #rust
2015-05-25 14:45:48	bluss	jnvsor: ok so you use that for SurroundingSquaresIter everywhere and also on &mut FieldSquare
2015-05-25 14:46:19	mcc	Hello! I'm wanting to set up Rust on a kubuntu machine. What method of installing would you suggest? The options appear to be debian.org unstable, an unofficial PPA and the horrifying rustup.sh thing on the website
2015-05-25 14:46:31	bluss	jnvsor: so that's standard so far, but then we end up with the problem of fn next(&mut self) -> Option<&'a mut FieldSquare>
2015-05-25 14:46:31	jnvsor	Yeah, when I do that I get a lof of "use of undeclared lifetime" errors :(
2015-05-25 14:46:33	mcc	somebody i spoke to this weekend recommended a "multirust", i don't know if you get that from elsewhere or what
2015-05-25 14:46:35	-->	orangeshark (erik@moz-ev9qo1.44tj.56ot.0306.2602.IP) has joined #rust
2015-05-25 14:46:40	@steveklabnik	mcc: multirust is nice
2015-05-25 14:46:42	-->	djhworld (djhworld@moz-uag.hpf.10.94.IP) has joined #rust
2015-05-25 14:46:43	<--	Tyde1 (yttyd_000@moz-t5glkn.pools.vodafone-ip.de) has quit (Quit: Leaving.)
2015-05-25 14:46:46	@steveklabnik	github/brson/multirust
2015-05-25 14:46:48	maikklein	I always use rustup
2015-05-25 14:46:51	bluss	jnvsor: then you didn't finish setting up all the lifetim parameters
2015-05-25 14:46:53	<--	Guest_ (textual@moz-lvlhs7.east.myfairpoint.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-25 14:46:55	@steveklabnik	i'm on standard debian
2015-05-25 14:46:57	bluss	jnvsor: we need to do that
2015-05-25 14:47:56	--	irc: disconnected from server
2015-05-25 14:48:07	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-25 14:48:07	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-25 14:48:07	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-25 14:48:07	--	Channel #rust: 1015 nicks (15 ops, 0 halfops, 1 voice, 999 normals)
2015-05-25 14:48:09	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-25 14:48:12	bluss	jnvsor: yes it should be fine
2015-05-25 14:48:17	bluss	jnvsor: -> Option<&'a mut FieldSquare>
2015-05-25 14:48:18	mcc	do you think multirust will still be needed now the mythical "1.0" has been reached?
2015-05-25 14:48:30	-->	bla (Mibbit@moz-fb1t3i.mensrea.org) has joined #rust
2015-05-25 14:48:33	maikklein	for nightly rust probably
2015-05-25 14:48:38	-->	futile (felix@moz-cmcd12.unity-media.net) has joined #rust
2015-05-25 14:48:38	@steveklabnik	mcc: oh yeah, for sure. it lets you have all three channels available and switch between them easily
2015-05-25 14:48:39	<--	khades1 (Thunderbird@moz-qgd.3vk.74.212.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 14:48:49	@steveklabnik	and use nightly for this project and stable for that project
2015-05-25 14:48:52	bluss	jnvsor: introduce the lifetime parameter with impl<'a>   instead of just impl that you had
2015-05-25 14:49:03	<--	fyolnish (fyolnish@moz-ehtogo.so-net.ne.jp) has quit (Ping timeout: 121 seconds)
2015-05-25 14:49:11	mcc	ok
2015-05-25 14:49:14	-->	Guest_ (textual@moz-lvlhs7.east.myfairpoint.net) has joined #rust
2015-05-25 14:49:26	<--	anthgur (textual@moz-3j5pq7.hfc.comcastbusiness.net) has quit (Ping timeout: 121 seconds)
2015-05-25 14:49:46	mcc	i guess my question is, is nightly still an active construction area, or can i assume i'd be happy with 1.0 for a while? :O
2015-05-25 14:49:57	jnvsor	bluss: That last one looks like it was it!
2015-05-25 14:49:58	@steveklabnik	nightly is always an active construction area :)
2015-05-25 14:50:07	jnvsor	Guess I was sticking the generic in the wrong place
2015-05-25 14:50:07	@steveklabnik	but it depends on your needs
2015-05-25 14:50:14	-->	Zidane (Zidane@moz-382v9o.ca.comcast.net) has joined #rust
2015-05-25 14:50:14	mcc	that makes sense
2015-05-25 14:50:18	@steveklabnik	if you're already happy with the features in 1.0, and you dont hit any particular bugs?
2015-05-25 14:50:21	bluss	jnvsor: and then, Iterator trait changed, so it uses type Item = &'a mut FieldSquare;  and no type parameter.
2015-05-25 14:50:23	@steveklabnik	then staying with 1.0 for a while might be fine
2015-05-25 14:50:25	mcc	thanks
2015-05-25 14:50:37	<--	ajhager (aajhager@moz-mcdsgi.iplsin.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-25 14:50:38	@steveklabnik	any time
2015-05-25 14:51:11	jnvsor	That's an interesting syntactic change - why'd they move it there?
2015-05-25 14:51:14	@steveklabnik	also, remember 1.1 is six weeks after 1.0 too, and since it should be a drop-in upgrade, staying with the latest stable is still nice too, and multirust helps with that
2015-05-25 14:51:17	jnvsor	Generics got too cluttered?
2015-05-25 14:51:59	<--	Zidane (Zidane@moz-382v9o.ca.comcast.net) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-05-25 14:52:18	bluss	jnvsor: traits have associated types now and it's another feature in the generics toolbox
2015-05-25 14:52:30	jshs	Havvy: Path::join creates a new PathBuf, you probably want to use PathBuf::push?
2015-05-25 14:52:34	FreeFull	I wonder what 1.1 will bring
2015-05-25 14:52:40	geri	what is a drop-in upgrade?
2015-05-25 14:52:48	@steveklabnik	FreeFull: you can check it out right now, as it's in beta already :p
2015-05-25 14:52:52	bla	[Macros] can I use both expression :expr and name :ident of a "variable" inside the same macro? In https://play.rust-lang.org/?gist=02c3171472567656e995&version=beta the second $e should give me the identifier.
2015-05-25 14:52:52	@Havvy	jshs:  Oh, is that really what I'm doing? Derp.
2015-05-25 14:53:03	@steveklabnik	geri: you can take rust code you wrote with 1.0 and compile it on 1.1 with no or maybe very very minimal modificactions
2015-05-25 14:53:06	geofft	FreeFull: it'll spit out any laundry that had previously been eaten by Rust 0.x :) 
2015-05-25 14:53:12	FreeFull	steveklabnik: Yeah, but can I read about the differences between current beta and current stable anywhere? =P
2015-05-25 14:53:16	@steveklabnik	geri: and that's true for any 1.x and 1.x+1
2015-05-25 14:53:30	@steveklabnik	FreeFull: hehe not yet. hopefully for 1.2 we'll write release notes BEFORE beta
2015-05-25 14:53:31	bluss	bla: well maybe with some indirection 
2015-05-25 14:53:43	bla	bluss: what do you mean?
2015-05-25 14:53:46	vmx	anyone using compiletest_rs? i wondered if there's any way to get `cargo test my-filter` work. i currently hack around it with `cargo test compile_test my-filter`
2015-05-25 14:53:55	<--	Hannibal_Smith (nico@moz-7gi1c3.retail.telecomitalia.it) has quit (Quit: Leaving)
2015-05-25 14:53:58	<--	bur_sangjun (bur_sangjun@moz-elcrk7.range165-120.btcentralplus.com) has quit (Quit: Leaving)
2015-05-25 14:54:17	<--	KLP (KLP@moz-qdcjho.res.rr.com) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-05-25 14:55:27	<--	avikpal (avikpal@moz-4pq.bal.232.117.IP) has quit (Connection closed)
2015-05-25 14:55:36	bluss	bla: you can pass a macro argument to another macro to reinterpret it. Not sure if it works in this situation
2015-05-25 14:55:39	-->	fredrik (fredrik@moz-2b08ue.priv.bahnhof.se) has joined #rust
2015-05-25 14:56:04	bluss	jnvsor: have you managed to get most of the lifetime parameters down?
2015-05-25 14:57:01	jnvsor	Yeah
2015-05-25 14:57:14	jnvsor	Now I'm getting an odd "incompatible type for trait: expected bound lifetime parameter , found concrete lifetime" on next()
2015-05-25 14:57:19	<--	silven (quassel@moz-0roor3.priv.bahnhof.se) has quit (Ping timeout: 121 seconds)
2015-05-25 14:57:27	-->	silven (quassel@moz-0roor3.priv.bahnhof.se) has joined #rust
2015-05-25 14:57:49	<--	fredrik (fredrik@moz-2b08ue.priv.bahnhof.se) has quit (Connection closed)
2015-05-25 14:57:51	<--	UberLambda (uber@moz-24qg64.clienti.tiscali.it) has quit (Quit: Leaving)
2015-05-25 14:57:54	-->	stephanbuys (Adium@moz-u4soen.voxdsl.co.za) has joined #rust
2015-05-25 14:58:33	jnvsor	bluss: Here's the version I've got so far: https://gist.github.com/jnvsor/564191bd701dd2d56283
2015-05-25 14:58:36	bluss	an yeah no lifetime parameter on &'a mut self in next <- not compat with the itrator trait
2015-05-25 14:58:42	-->	Guest__ (textual@moz-rtn.fg7.77.192.IP) has joined #rust
2015-05-25 14:58:45	jnvsor	Oh, ok
2015-05-25 14:59:56	bluss	jnvsor: ok great. Now we've got that down, now we get to the real problem which is fn next(&mut self) -> Option<&'a mut FieldSquare>
2015-05-25 15:00:10	<--	Rym (y@moz-c2u.sd4.38.217.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 15:00:31	jnvsor	"cannot infer an appropriate lifetime for lifetime parameter 'a in function call due to conflicting requirements"
2015-05-25 15:00:46	jnvsor	Which I'm guessing is the problem you were expecting
2015-05-25 15:00:56	bluss	rust plainly does not allow us to do this. 'a is always a longer (or equal) lifetime to the borrow of self
2015-05-25 15:01:00	<--	jviereck (Adium@moz-jh8j4p.dynamic.hispeed.ch) has quit (Quit: Leaving.)
2015-05-25 15:01:02	-->	Nate_ (Nate@moz-1vecat.clv.wideopenwest.com) has joined #rust
2015-05-25 15:01:05	bluss	this is a must for soundness
2015-05-25 15:01:09	-->	Rym (y@moz-c2u.sd4.38.217.IP) has joined #rust
2015-05-25 15:01:25	jnvsor	Ah yes that makes sense since the vec outlives the iterator
2015-05-25 15:01:29	bluss	so.. &mut-returning iterators must either reuse another existing such (slice::IterMut) for example
2015-05-25 15:01:33	--	Nate_ is now known as scoobycoder
2015-05-25 15:02:13	--	irc: disconnected from server
2015-05-25 15:02:29	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-25 15:02:29	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-25 15:02:29	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-25 15:02:30	--	Channel #rust: 1011 nicks (15 ops, 0 halfops, 1 voice, 995 normals)
2015-05-25 15:02:31	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-25 15:02:36	bla	[Macros] How can I use the name of a variable and e.g. print in with print!() inside of a macro?
2015-05-25 15:02:37	bluss	it knows it's only giving out each pointer once
2015-05-25 15:02:51	-->	james4k (james@moz-1pbfu0.consolidated.net) has joined #rust
2015-05-25 15:02:54	chc4	What should I be using to convert String -> &str? String.as_str() is unstable, and String.as_slice() doesn't appear to exist anymore
2015-05-25 15:03:16	jnvsor	Well I'm pretty sure that's the case
2015-05-25 15:03:29	@jdm	chc4: &string_variable
2015-05-25 15:03:38	betawaffle	can i mark my struct as not Send on stable?
2015-05-25 15:04:06	chc4	jdm: Is there no actual method for it? I need a &&str, so it's either "*&*string" which is ugly as hell, or I use a method
2015-05-25 15:04:15	<--	NerdTaco (NerdTaco@moz-a4e65f.dsl.bell.ca) has quit (Ping timeout: 121 seconds)
2015-05-25 15:04:41	chc4	Err, &&*string
2015-05-25 15:05:32	-->	jawzi (jawzi@moz-0tl5mf.sc.comcast.net) has joined #rust
2015-05-25 15:05:32	-->	veqz (veqz@moz-rr3tu7.60.getinternet.no) has joined #rust
2015-05-25 15:05:43	<--	nyx_ (nyx@moz-ivelpd.res.rr.com) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-25 15:05:53	<--	cakecatz (cakecatz@moz-edrvuc.sannet.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-25 15:06:06	kimundi	chc4: there is also the slicing operator &string[..]
2015-05-25 15:06:18	-->	cakecatz (cakecatz@moz-edrvuc.sannet.ne.jp) has joined #rust
2015-05-25 15:06:35	<--	andresv (textual@moz-cmffkg.cable.starman.ee) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-25 15:06:49	bluss	jnvsor: you can maybe base it on slice::IterMut if you really want to avoid unsafe code
2015-05-25 15:06:50	-->	andresv (textual@moz-cmffkg.cable.starman.ee) has joined #rust
2015-05-25 15:06:55	chc4	Oh, that's a little bit better. "&&full[..]"
2015-05-25 15:07:03	-->	datalus (datalus@moz-imb174.mycingular.net) has joined #rust
2015-05-25 15:07:06	bluss	jnvsor: but it looks simple enough to be confident anyway
2015-05-25 15:07:46	-->	hyunsik (hyunsik@moz-3qgjl9.ca.comcast.net) has joined #rust
2015-05-25 15:07:57	-->	spider-mario (spidermario@moz-meu9c6.wb.wifirst.net) has joined #rust
2015-05-25 15:08:04	jnvsor	Yeah, the main thing I'm worried about is having code besides the iterator alias pointers, but since the iterator borrowed the vector it's most likely fine
2015-05-25 15:08:05	-->	ajhager (aajhager@moz-mcdsgi.iplsin.sbcglobal.net) has joined #rust
2015-05-25 15:08:48	<--	flavius (flavius@moz-pik2l3.tmpp.le52.8388.2a02.IP) has quit (Connection closed)
2015-05-25 15:09:04	<--	stjahns_ (stjahns@moz-mae.ab9.108.38.IP) has quit (Connection closed)
2015-05-25 15:10:35	-->	turtil (turtil@moz-gfc.es4.23.103.IP) has joined #rust
2015-05-25 15:11:40	bluss	jnvsor: I think you can write this with some convoluted safe code. It's just four slices. [x x x] [x] Z [x] [x x x]  eight elements surround, right? Z is the center
2015-05-25 15:12:17	<--	forgottenone (forgottenon@moz-j95.1v3.131.217.IP) has quit (Quit: Konversation terminated!)
2015-05-25 15:12:35	<--	strixbg (strixbg@moz-h16.8ua.123.93.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 15:13:04	-->	dinfuehr (dinfuehr@moz-81c7pp.highway.telekom.at) has joined #rust
2015-05-25 15:13:15	jnvsor	bluss: Yeah
2015-05-25 15:13:39	jnvsor	I was thinking of a massive adaptor chain but it didn't work and I figured I'd have an easier time making my own hah
2015-05-25 15:14:28	bluss	either way you'd learn something new
2015-05-25 15:14:44	-->	pohl (textual@moz-0a4vld.res.rr.com) has joined #rust
2015-05-25 15:15:02	<--	maximih (maximih@moz-0r2bjb.bredband.telia.com) has quit (A TLS packet with unexpected length was received.)
2015-05-25 15:16:37	-->	khades (Thunderbird@moz-qgd.3vk.74.212.IP) has joined #rust
2015-05-25 15:17:11	<--	dinfuehr (dinfuehr@moz-81c7pp.highway.telekom.at) has quit (Ping timeout: 121 seconds)
2015-05-25 15:17:13	-->	nstoddard_ (nstoddard@moz-iu69ov.jcf6.2eo7.0009.2601.IP) has joined #rust
2015-05-25 15:17:32	<--	meh (meh@moz-5b2553.42-151.net24.it) has quit (Ping timeout: 121 seconds)
2015-05-25 15:17:33	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-25 15:18:03	jnvsor	If you're interested, here's what I came up with before I gave up: https://gist.github.com/jnvsor/3624b56a390149defd01
2015-05-25 15:18:33	<--	nstoddard (nstoddard@moz-iu69ov.jcf6.2eo7.0009.2601.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 15:18:34	<--	bla (Mibbit@moz-fb1t3i.mensrea.org) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-25 15:18:39	--	nstoddard_ is now known as nstoddard
2015-05-25 15:18:42	-->	Hannibal_Smith (nico@moz-7gi1c3.retail.telecomitalia.it) has joined #rust
2015-05-25 15:20:43	-->	strixbg (strixbg@moz-h16.8ua.123.93.IP) has joined #rust
2015-05-25 15:20:49	<--	datalus (datalus@moz-imb174.mycingular.net) has quit (Connection closed)
2015-05-25 15:21:19	-->	NerdTaco (NerdTaco@moz-a4e65f.dsl.bell.ca) has joined #rust
2015-05-25 15:22:11	<--	SpaceManiac (Tad@moz-g50q8a.dyn.suddenlink.net) has quit (Quit: Leaving)
2015-05-25 15:22:16	jnvsor	bluss: I've never used unsafe before and I don't know how to make it ignore lifetimes :/
2015-05-25 15:22:25	-->	James (quassel@moz-739rgr.range86-148.btcentralplus.com) has joined #rust
2015-05-25 15:22:30	<--	zmack (zmack@moz-htpein.home.aster.pl) has quit (Connection closed)
2015-05-25 15:22:31	<--	maikklein (Mibbit@moz-tlsnvi.dip0.t-ipconnect.de) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-25 15:23:23	<--	whipsch (whipsch@moz-bl4i0b.from.irc.camp) has quit (Ping timeout: 121 seconds)
2015-05-25 15:23:50	sam113101	is there an online doc for rust-crypto?
2015-05-25 15:23:52	bluss	ah you cast a &mut _ to *mut _ and then deref it again as &mut *
2015-05-25 15:24:09	bluss	jnvsor: unsafe {   &mut *(&mut thing as *mut _) }   should work
2015-05-25 15:24:11	<--	colinsurprenant (colin@moz-rmn4e2.169.electronicbox.net) has quit (Ping timeout: 121 seconds)
2015-05-25 15:24:16	jnvsor	Ah thanks
2015-05-25 15:24:23	sam113101	would be cool if crates.io had the generated html doc for every library
2015-05-25 15:24:45	bluss	jnvsor: I think it's good to use both safe rust and unsafe blocks. It's one of the abstraction tools in rust basically
2015-05-25 15:26:02	jnvsor	I agree, I just try to stay away from it as much as possible - C has taught me to be paranoid :P
2015-05-25 15:26:16	<--	killercup (killercup@moz-qj5qhi.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2015-05-25 15:26:58	<--	jcd (cliff@moz-ni2o02.9jms.dcv8.0006.2601.IP) has left #rust
2015-05-25 15:27:08	<--	foodoo (foodoo@moz-i75c75.dyn.telefonica.de) has quit (Connection closed)
2015-05-25 15:27:17	-->	Guest8119 (Jorge@moz-7bh.ng6.177.186.IP) has joined #rust
2015-05-25 15:28:39	-->	joeyjoejoejr (jbdietrich@moz-l52bm6.wi.charter.com) has joined #rust
2015-05-25 15:28:54	-->	swgillespie (swgillespie@moz-rn1.vmq.232.104.IP) has joined #rust
2015-05-25 15:30:50	-->	lbn (lbn@moz-h4eamh.cable.virginm.net) has joined #rust
2015-05-25 15:30:58	<--	NerdTaco (NerdTaco@moz-a4e65f.dsl.bell.ca) has quit (A TLS packet with unexpected length was received.)
2015-05-25 15:31:00	<--	lbn (lbn@moz-h4eamh.cable.virginm.net) has quit (Quit: Leaving.)
2015-05-25 15:31:02	<--	Lee1092 (uid13277@moz-p2e1ii.brockwell.irccloud.com) has quit (Quit: Connection closed for inactivity)
2015-05-25 15:31:50	andschwa	is there any way to make sin more efficient? I have to call it a *lot*
2015-05-25 15:32:03	<--	jdm (jdm@moz-ilbt2e.cable.teksavvy.com) has quit (Quit: )
2015-05-25 15:32:47	<--	c_wraith (c_wraith@moz-7i8.v6v.191.131.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 15:32:49	-->	jdm (jdm@moz-ilbt2e.cable.teksavvy.com) has joined #rust
2015-05-25 15:32:49	--	Mode #rust [+o jdm] by ChanServ
2015-05-25 15:33:13	-->	tetsuharu (testuharu@moz-fmjbd6.ucom.ne.jp) has joined #rust
2015-05-25 15:33:16	FreeFull	andschwa: Maybe you could use an approximation instead
2015-05-25 15:33:36	<--	danyel (danyel@moz-t4sg1v.dip0.t-ipconnect.de) has quit (Client exited)
2015-05-25 15:33:50	andschwa	that's what I'm thinking; know of any built-in?
2015-05-25 15:33:51	-->	krax (archlap@moz-hff.m76.69.68.IP) has joined #rust
2015-05-25 15:34:21	-->	peferron (peferron@moz-k89vq8.ca.comcast.net) has joined #rust
2015-05-25 15:34:34	Dabo	andschwa, it seems that sin just literally calls llvm's sin thing, I don't think there's anything else in stdlib
2015-05-25 15:34:59	<--	areski (areski@moz-2lg0ha.user.ono.com) has quit (Ping timeout: 121 seconds)
2015-05-25 15:35:06	andschwa	ah well; it was the bottleneck in C++ too, so there's probably no way around it
2015-05-25 15:35:14	bluss	jnvsor: by the way, I forgot to link to the canonical answer to this problem http://stackoverflow.com/a/25748645 (&mut in iterators)
2015-05-25 15:35:27	bluss	jnvsor: I wrote it in safe code now and it was terrible :X
2015-05-25 15:36:00	<--	johnsoft (johnsoft@moz-69mrig.res.rr.com) has quit (Ping timeout: 121 seconds)
2015-05-25 15:36:12	-->	tikue (tim@moz-g5n.ha3.38.65.IP) has joined #rust
2015-05-25 15:36:12	-->	kidto_ (gabriel@moz-72d.fff.84.91.IP) has joined #rust
2015-05-25 15:36:17	-->	johnsoft (johnsoft@moz-69mrig.res.rr.com) has joined #rust
2015-05-25 15:36:46	-->	goyox86 (textual@moz-rvv.00r.255.109.IP) has joined #rust
2015-05-25 15:36:47	-->	brianloveswords (brianlovesw@moz-tq78gs.fios.verizon.net) has joined #rust
2015-05-25 15:37:03	posix4e	Sooo... I got a compiler crash, should i just file a github issue?
2015-05-25 15:37:24	<--	JagaJaga (JagaJaga@moz-ua8.hhl.62.178.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 15:37:33	-->	Boscop (me@moz-7fq.k98.111.114.IP) has joined #rust
2015-05-25 15:37:39	-->	flavius (flavius@moz-pik2l3.tmpp.le52.8388.2a02.IP) has joined #rust
2015-05-25 15:38:04	<--	jshs (jshs@moz-miel0j.dip0.t-ipconnect.de) has quit (Client exited)
2015-05-25 15:38:19	-->	mcoffin (mcoffin@moz-kh6.ab9.110.137.IP) has joined #rust
2015-05-25 15:38:20	<--	dwrensha (chatzilla@moz-46o4hi.pa.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-25 15:38:47	-->	danyel (danyel@moz-t4sg1v.dip0.t-ipconnect.de) has joined #rust
2015-05-25 15:39:08	<--	danyel (danyel@moz-t4sg1v.dip0.t-ipconnect.de) has quit (Client exited)
2015-05-25 15:39:08	-->	Nafai (nafai@moz-unh8p1.cpe.cableone.net) has joined #rust
2015-05-25 15:39:16	fitzgen	Manishearth: are you around? I'd like to discuss https://github.com/Manishearth/rust-gc/ with you
2015-05-25 15:39:39	<--	Halamix2 (Halamix2@moz-evi.orr.30.81.IP) has quit (Quit: Generic goodbye message)
2015-05-25 15:40:00	<--	harrisonclarke (harrisoncla@moz-6v8.jf9.227.142.IP) has quit (Connection closed)
2015-05-25 15:40:13	<--	tikue (tim@moz-g5n.ha3.38.65.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 15:40:18	<--	kidto_ (gabriel@moz-72d.fff.84.91.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 15:40:20	-->	danyel (danyel@moz-t4sg1v.dip0.t-ipconnect.de) has joined #rust
2015-05-25 15:40:57	-->	p32blo (p32blo@moz-fhmueq.1oel.r662.0690.2001.IP) has joined #rust
2015-05-25 15:41:06	<--	jdm (jdm@moz-ilbt2e.cable.teksavvy.com) has quit (Quit: )
2015-05-25 15:41:12	<--	danyel (danyel@moz-t4sg1v.dip0.t-ipconnect.de) has quit (Client exited)
2015-05-25 15:41:37	<--	Boscop (me@moz-7fq.k98.111.114.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 15:41:54	<--	joeyjoejoejr (jbdietrich@moz-l52bm6.wi.charter.com) has quit (Ping timeout: 121 seconds)
2015-05-25 15:42:45	-->	whipsch (whipsch@moz-bl4i0b.from.irc.camp) has joined #rust
2015-05-25 15:43:41	<--	rootnode (rootnode@moz-go1ut4.ip1.george24.com) has quit (Quit: WeeChat 1.2)
2015-05-25 15:44:36	-->	lenstr (lenstr@moz-s25.vju.25.171.IP) has joined #rust
2015-05-25 15:45:03	-->	colinsurprenant (colin@moz-rmn4e2.169.electronicbox.net) has joined #rust
2015-05-25 15:45:04	<--	asQuirreL (asQuirreL@moz-ro1qqu.ox.ac.uk) has quit (Connection closed)
2015-05-25 15:45:07	-->	nodweber (nodweber@moz-knt.fgq.178.5.IP) has joined #rust
2015-05-25 15:45:33	-->	asQuirreL (asQuirreL@moz-ro1qqu.ox.ac.uk) has joined #rust
2015-05-25 15:45:35	&Manishearth	fitzgen: o/
2015-05-25 15:45:49	fitzgen	Manishearth: hey!
2015-05-25 15:46:26	<--	mcc (mcc@moz-mm4t3p.dynamic.fusionbroadband.com) has quit (Quit: Konversation terminated!)
2015-05-25 15:46:29	fitzgen	Manishearth: so as you know, I'm implementing a Cc type, which has many overlapping things with a Gc type
2015-05-25 15:46:46	&Manishearth	yeah
2015-05-25 15:46:47	<--	tetsuharu (testuharu@moz-fmjbd6.ucom.ne.jp) has quit (Quit: Bye!)
2015-05-25 15:46:51	&Manishearth	what does Cc do exactly?
2015-05-25 15:47:02	&Manishearth	quick rundown of it?
2015-05-25 15:47:05	<--	stephanbuys (Adium@moz-u4soen.voxdsl.co.za) has quit (Quit: Leaving.)
2015-05-25 15:47:16	fitzgen	Manishearth: well, I've been working on plugins for auto-tracing, so it doesn't actually do anything that Rc doesn't do yet
2015-05-25 15:47:28	&Manishearth	(Gc is mark and sweep, rooting/tracing, with refcounted roots and interior mutability, but no lints)
2015-05-25 15:47:31	&Manishearth	ah oaky
2015-05-25 15:47:34	&Manishearth	 feel free to steal ours
2015-05-25 15:48:04	<--	dmac_ (dmac@moz-2ig65r.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-25 15:48:09	fitzgen	Manishearth: but, it is going to just be a cycle collected Rc; I'm planning on impl'ing the same algo Gecko uses for cycle collection, to get a better understanding of it
2015-05-25 15:48:53	mystor	fitzgen: I’m here too (though Manishearth knows everything)
2015-05-25 15:49:04	-->	molokdotc (molokdotc@moz-kjf.mdl.255.187.IP) has joined #rust
2015-05-25 15:49:06	fitzgen	Manishearth: so one thing I've been frustrated with is how to trace std:: types
2015-05-25 15:49:26	&Manishearth	fitzgen: in most cases the trace impl will be empty
2015-05-25 15:49:29	<--	nodweber (nodweber@moz-knt.fgq.178.5.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 15:49:29	fitzgen	I don't want to have to impl Trace for all of them myself, but third party users won't be able to do it themselves
2015-05-25 15:49:33	fitzgen	Manishearth: yes
2015-05-25 15:49:34	&Manishearth	use a macro
2015-05-25 15:49:38	<--	giucam (giucam@moz-iv0nnc.bb.dnainternet.fi) has quit (Ping timeout: 121 seconds)
2015-05-25 15:49:49	mystor	We have some macros for making empty impls easily
2015-05-25 15:49:56	&Manishearth	check out components/script/dom/bindings/trace.rs in Servo too
2015-05-25 15:49:59	fitzgen	yeah, I found https://github.com/Manishearth/rust-gc/blob/master/gc/src/trace.rs#L66, but that is still :(
2015-05-25 15:50:00	mystor	(not sure if our macros are the most elegant way they could work)
2015-05-25 15:50:04	&Manishearth	and macros.rs somewhere in script
2015-05-25 15:50:14	fitzgen	Manishearth: did you read my blog post, btw?
2015-05-25 15:50:19	&Manishearth	Also, need reviews on a new blog post!
2015-05-25 15:50:20	&Manishearth	https://github.com/Manishearth/manishearth.github.io/blob/source/source/_posts/2015-05-23-container-types-in-rust-choosing-your-guarantees.markdown
2015-05-25 15:50:23	&Manishearth	fitzgen: yes
2015-05-25 15:50:24	--	Guest_ is now known as crash_ep
2015-05-25 15:50:25	&Manishearth	ish
2015-05-25 15:50:27	&Manishearth	but yes
2015-05-25 15:50:30	&Manishearth	mostly yes
2015-05-25 15:50:49	fitzgen	ok, I will read this soon
2015-05-25 15:50:54	mitsuhiko	has anyone built a library for python/rust interoperability?
2015-05-25 15:50:55	&Manishearth	thanks
2015-05-25 15:51:08	mitsuhiko	(other than using cffi/ctypes manually)
2015-05-25 15:51:12	molokdotc	hey, what is an indentifier in Rust? i was getting this error: " error: expected identifier, found keyword `mod`" whan i try to do this command.. "use crypto::aes::{mod, Keysize};"
2015-05-25 15:51:14	&Manishearth	mitsuhiko: someone gave a talk on it and iirc there was a github repo attached (pycon)
2015-05-25 15:51:18	&Manishearth	i think they used ctypes
2015-05-25 15:51:28	mystor	molokdotc: It’s `self` now, not `mod`
2015-05-25 15:51:31	&Manishearth	molokdotc: you want to use `self` not `mod`
2015-05-25 15:51:34	molokdotc	hm
2015-05-25 15:51:36	molokdotc	 thanks!
2015-05-25 15:51:41	&Manishearth	identifier is stuff like variable names and all
2015-05-25 15:51:53	&Manishearth	fitzgen: so how does CC work?
2015-05-25 15:51:58	&Manishearth	as in how is it intended to work?
2015-05-25 15:52:05	&Manishearth	mystor: want your feedback on that post too :)
2015-05-25 15:52:10	<--	jminer (Instantbird@moz-b1u.qch.163.66.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 15:52:20	mystor	Manishearth: I know - just probably shouldn’t be reading your blog posts at work :P
2015-05-25 15:52:44	&Manishearth	the concepts are tricky at places, and I'm not sure if that entire Send/Sync portion should be in the same post
2015-05-25 15:52:50	fitzgen	Manishearth: when you decrement refcounts, you trace a small part of the heap graph to check if the thing is part of a cycle
2015-05-25 15:52:53	-->	ekidd (ekidd@moz-6t81cn.nh.comcast.net) has joined #rust
2015-05-25 15:53:14	fitzgen	Manishearth: so you don't have the cycles-cant-be-freed problem of naive refcounting
2015-05-25 15:53:16	-->	munksgaa1d (munksgaard@moz-urnkl5.u.parknet.dk) has joined #rust
2015-05-25 15:53:16	<--	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-25 15:53:23	-->	csoriano_ (csoriano@moz-g6rkdc.net.upcbroadband.cz) has joined #rust
2015-05-25 15:53:39	&Manishearth	mystor: mumble something about rust-in-gecko and read to your heart's content :p
2015-05-25 15:53:52	mystor	Manishearth: brilliant
2015-05-25 15:53:59	<--	James (quassel@moz-739rgr.range86-148.btcentralplus.com) has quit (A TLS packet with unexpected length was received.)
2015-05-25 15:54:31	&Manishearth	I spend half my day at *Microsoft* reading Rust posts (to be fair, I spend twice as much time as I should there just because internet is good, food is cheap/good, and there's table tennis)
2015-05-25 15:54:51	molokdotc	what can i use instead of std::rand::Rng ?
2015-05-25 15:54:58	fitzgen	Manishearth: http://r.duckduckgo.com/l/?kh=-1&uddg=http%3A%2F%2Fresearcher.watson.ibm.com%2Fresearcher%2Ffiles%2Fus-bacon%2FPaz05EfficientSlides.pdf
2015-05-25 15:54:59	vmx	what am i missing? why can't `syntax::parse::new_parse_sess` be imported? https://friendpaste.com/5qS76XGWdBcCPihbXT82fN
2015-05-25 15:55:03	&Manishearth	surely you can waste your whole day with Rust at Mozilla :p
2015-05-25 15:55:11	mystor	molokdotc: https://crates.io/crates/rand?
2015-05-25 15:55:12	-->	Boscop (me@moz-kb6.b2o.126.98.IP) has joined #rust
2015-05-25 15:55:17	&Manishearth	fitzgen: ah, a cycle collector.
2015-05-25 15:55:22	&Manishearth	this would be interesting
2015-05-25 15:55:26	<--	REMqb (REMqb@moz-atvqum.abo.wanadoo.fr) has quit (Client exited)
2015-05-25 15:55:31	&Manishearth	fitzgen: how does this work with interior mutability? Or does it?
2015-05-25 15:55:41	mystor	Manishearth: Yeah, it may fit better with rust’s semantics than our GC
2015-05-25 15:55:49	&Manishearth	(is there a problem cased by it? I assume not)
2015-05-25 15:55:51	mystor	It doesn’t have to deal with the rooting stuff
2015-05-25 15:55:51	&Manishearth	mystor: yeah
2015-05-25 15:56:06	-->	pgonda (peter@moz-s36.0tp.134.75.IP) has joined #rust
2015-05-25 15:56:11	mystor	I’m really worried about the overhead of our root management stuff
2015-05-25 15:56:15	<--	munksgaard (munksgaard@moz-478pev.u.parknet.dk) has quit (Ping timeout: 121 seconds)
2015-05-25 15:56:34	fitzgen	Manishearth: maybe I don't understand your wuestion, but you would just use a refcell like ppl often do with Rc
2015-05-25 15:56:39	&Manishearth	mystor: not so sure actually -- fitzgen, how do you keep track of stuff on the stack? refcounts?
2015-05-25 15:56:50	&Manishearth	fitzgen: no in our situation interior mutability needs to be controlled
2015-05-25 15:57:03	mystor	 Well, it’s literally Rc with special code run when the destructor is run
2015-05-25 15:57:09	<--	untitaker (untitaker@moz-1ut3mh.highway.telekom.at) has quit (Ping timeout: 121 seconds)
2015-05-25 15:57:10	&Manishearth	yeah
2015-05-25 15:57:12	mystor	which then traces through the graph and checks if it’s part of a cycle
2015-05-25 15:57:25	mystor	if it’s part of a cycle, and there are no incoming references, then it can all be freed
2015-05-25 15:57:27	<--	Porkepix (Porkepix@moz-g50t2v.abo.wanadoo.fr) has quit (Quit: My laptop has gone to sleep. ZZZzzz…)
2015-05-25 15:57:30	&Manishearth	I guess if it's in a cycle you just decrement the refcount by one for each element in the cycle
2015-05-25 15:57:33	<--	whipsch (whipsch@moz-bl4i0b.from.irc.camp) has quit (Ping timeout: 121 seconds)
2015-05-25 15:57:40	mystor	You just break it at one point
2015-05-25 15:58:07	-->	Porkepix (Porkepix@moz-g50t2v.abo.wanadoo.fr) has joined #rust
2015-05-25 15:58:14	<--	Porkepix (Porkepix@moz-g50t2v.abo.wanadoo.fr) has quit (Connection closed)
2015-05-25 15:58:49	-->	genbattle (genbattle@moz-4v0.gkd.16.182.IP) has joined #rust
2015-05-25 15:58:50	-->	veqz_ (veqz@moz-rr3tu7.60.getinternet.no) has joined #rust
2015-05-25 15:58:54	&Manishearth	yeah
2015-05-25 15:58:59	<--	veqz (veqz@moz-rr3tu7.60.getinternet.no) has quit (Quit: Konversation terminated!)
2015-05-25 15:59:02	&Manishearth	mystor: "break it"?
2015-05-25 15:59:10	mystor	Manishearth: The cycle
2015-05-25 15:59:16	&Manishearth	how?
2015-05-25 15:59:22	mystor	in gecko for example, I believe the cycle is broken by nulling out a pointer
2015-05-25 15:59:26	&Manishearth	reduce one refcount somewhere?
2015-05-25 15:59:26	&Manishearth	ah
2015-05-25 15:59:28	fitzgen	I'm not really following the whole interiror mutability convo
2015-05-25 15:59:35	&Manishearth	I think we can just -1 the refcount
2015-05-25 15:59:44	&Manishearth	fitzgen: it's not a problem for you. I thought about it
2015-05-25 15:59:52	-->	Sergant-xt (sergant-xt@moz-h5o.png.153.95.IP) has joined #rust
2015-05-25 15:59:53	&Manishearth	fitzgen: in our case we keep track of what's on the stack
2015-05-25 15:59:53	mystor	fitzgen: It’s not relevant to cc - in rust-gc, we have to handle interior mutability differently
2015-05-25 16:00:01	fitzgen	why?
2015-05-25 16:00:08	mystor	Because we have to keep track of what’s on the stack
2015-05-25 16:00:18	mystor	and if we allow arbitrary interior mutability, that could be broken
2015-05-25 16:00:26	mystor	so we have to provide our own version of RefCell (GcCell)
2015-05-25 16:00:32	fitzgen	you just always root whatever is on the stack
2015-05-25 16:00:42	fitzgen	I don't see what the issue is?
2015-05-25 16:00:51	fitzgen	Manishearth: like oxischeme's Rooted<T>
2015-05-25 16:00:52	mystor	yeah - but how do you keep track of what is on the stack without stack tracing?
2015-05-25 16:00:56	<--	Sergant-xt (sergant-xt@moz-h5o.png.153.95.IP) has quit (Quit: Bye)
2015-05-25 16:01:08	-->	maximih (maximih@moz-0r2bjb.bredband.telia.com) has joined #rust
2015-05-25 16:01:11	-->	lotia (lotia@moz-tht24n.monkey.org) has joined #rust
2015-05-25 16:01:14	mystor	(and without lints)
2015-05-25 16:01:16	fitzgen	mystor: http://fitzgeraldnick.com/weblog/60/ see Rooted
2015-05-25 16:01:30	<--	annodomini (lambda@moz-qgii5v.ma.comcast.net) has quit (Client exited)
2015-05-25 16:01:31	-->	untitaker (untitaker@moz-5h34av.highway.telekom.at) has joined #rust
2015-05-25 16:01:38	fitzgen	mystor: https://fitzgen.github.io/oxischeme/oxischeme/heap/struct.Rooted.html
2015-05-25 16:01:38	<--	minot2 (kkus@moz-baj4jj.74.srtnet.com) has quit (Connection closed)
2015-05-25 16:01:52	-->	NerdTaco (NerdTaco@moz-a4e65f.dsl.bell.ca) has joined #rust
2015-05-25 16:02:05	mystor	The special GcCell type allows us to automatically manage rootedness
2015-05-25 16:02:21	geofft	mitsuhiko: there was a post-PyCon BOF where people were talking about how that still required you to write a C header (I think the talk used cffi + a C header) 
2015-05-25 16:02:51	&Manishearth	  fitzgen without allowing for people to forget something and footgun
2015-05-25 16:02:58	&Manishearth	CC looks very promising though
2015-05-25 16:02:59	geofft	mitsuhiko: someone pointed out that acrichton wrote a tool forever ago. I _mostly_ got it compiling on current Rust (well, as of PyCon) 
2015-05-25 16:03:16	geofft	https://gist.github.com/geofft/6cd0a0b1d03ada394c80 
2015-05-25 16:03:26	<--	m-r-r (mrr@moz-uvfnet.abo.wanadoo.fr) has quit (Ping timeout: 121 seconds)
2015-05-25 16:03:30	mitsuhiko	does that spit out a header?
2015-05-25 16:03:30	fitzgen	Manishearth: https://github.com/fitzgen/oxischeme/issues/13 <-- ideas on how to avoid footguns
2015-05-25 16:03:31	geofft	yeah 
2015-05-25 16:03:32	-->	annodomini (lambda@moz-qgii5v.ma.comcast.net) has joined #rust
2015-05-25 16:03:41	-->	willem (willem@moz-facs2s.dynamic.upc.nl) has joined #rust
2015-05-25 16:03:50	geofft	or at least, it did, I think that still doesn't 100% work on current Rust but it's closer now :) 
2015-05-25 16:03:53	&Manishearth	fitzgen: what we do in servo is lints
2015-05-25 16:04:14	<--	grodan (Mibbit@moz-o5eg8b.bredband.comhem.se) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-25 16:04:26	<--	aepsil0n (eduard@moz-gtoi2p.hsi8.kabel-badenwuerttemberg.de) has quit (Connection closed)
2015-05-25 16:05:03	<--	crash_ep (textual@moz-lvlhs7.east.myfairpoint.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-25 16:05:03	fitzgen	Manishearth: mystor: can you explain GcCell? in order to actually get at the thing, you have to use GcCell RAII type?
2015-05-25 16:05:14	 *	Manishearth sleepy
2015-05-25 16:05:32	-->	m-r-r (mrr@moz-77f8as.rev.sfr.net) has joined #rust
2015-05-25 16:05:38	mystor	fitzgen: GcCell is RefCell which runs custom code when the object is mutably borrowed and when that mutable borrow finishes
2015-05-25 16:05:38	<--	brianloveswords (brianlovesw@moz-tq78gs.fios.verizon.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-25 16:05:40	mystor	that’s pretty much it
2015-05-25 16:06:05	mystor	Namely, if you mutably borrow something, all Gc<T> pointers inside the cell are temporarially rooted
2015-05-25 16:06:40	vmx	oh the syntax::parser api changed, but somehow my local docs didn't update properly. it's ParseSess::new() now
2015-05-25 16:07:01	-->	bombela (bombela@moz-mu0.s74.170.68.IP) has joined #rust
2015-05-25 16:07:01	fitzgen	f
2015-05-25 16:07:55	fitzgen	mystor: Manishearth: to root and unroot the type? that doesn't ensure that you never have unrooted gc things on the stack
2015-05-25 16:08:03	<--	andresv (textual@moz-cmffkg.cable.starman.ee) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-25 16:08:19	fitzgen	mystor: Manishearth: which I thought was the point?
2015-05-25 16:08:19	<--	Guest__ (textual@moz-rtn.fg7.77.192.IP) has quit (Connection closed)
2015-05-25 16:08:26	mystor	All Gc<T> pointers are rooted by default. When they are placed inside of another GC<T> with Gc::new() they are unrooted
2015-05-25 16:08:33	-->	Guest_ (textual@moz-rtn.fg7.77.192.IP) has joined #rust
2015-05-25 16:08:36	fitzgen	ah ok
2015-05-25 16:08:38	mystor	When you copy a Gc<T> you get a rooted pointer
2015-05-25 16:08:56	mystor	You can’t move a pointer when it is unrooted, because it will only be avaliable for an immutable borrow
2015-05-25 16:09:07	mystor	Thus, you can’t move an unrooted pointer onto the stack
2015-05-25 16:09:39	fitzgen	mystor: are we talking about rust moves or a moving gc?
2015-05-25 16:09:50	mystor	rust moves - our Gc is non-moving
2015-05-25 16:10:14	<--	rkruppe (chatzilla@moz-olc3ok.unity-media.net) has quit (Ping timeout: 121 seconds)
2015-05-25 16:10:26	posix4e	So it Gc coming back?
2015-05-25 16:10:35	fitzgen	posix4e: this is a third party lib
2015-05-25 16:10:40	posix4e	kk
2015-05-25 16:11:29	--	irc: disconnected from server
2015-05-25 16:12:00	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-25 16:12:00	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-25 16:12:00	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-25 16:12:01	--	Channel #rust: 1002 nicks (14 ops, 0 halfops, 1 voice, 987 normals)
2015-05-25 16:12:02	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-25 16:12:05	<--	swgillespie (swgillespie@moz-rn1.vmq.232.104.IP) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-25 16:12:16	mystor	posix4e: Potentially some garbage too
2015-05-25 16:12:23	mystor	fitzgen: Internal state
2015-05-25 16:12:33	-->	kidto_ (gabriel@moz-72d.fff.84.91.IP) has joined #rust
2015-05-25 16:13:21	<--	DerisiveLogic (smuxi@moz-1jqqlg.biz.rr.com) has quit (Ping timeout: 121 seconds)
2015-05-25 16:13:33	mystor	fitzgen: https://github.com/Manishearth/rust-gc/blob/master/gc/src/lib.rs#L22
2015-05-25 16:13:37	<--	turtil (turtil@moz-gfc.es4.23.103.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 16:13:50	-->	dinfuehr (dinfuehr@moz-81c7pp.highway.telekom.at) has joined #rust
2015-05-25 16:13:53	posix4e	I feel like I can never easily pattern match off of any of struct's members unless they are clonable I always have to wrap them in some weird reference magic, it's annoying because i usually wanna match on some enum as a member. Am I structuring my rust like a fool?
2015-05-25 16:13:56	mystor	It’s pretty sketchy, but it exists
2015-05-25 16:14:04	<--	brendan (brendaneich@moz-d24.tdl.56.172.IP) has quit (Client exited)
2015-05-25 16:15:16	<--	brson (brson@moz-h99.hai.100.94.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 16:15:23	-->	DerisiveLogic (smuxi@moz-1jqqlg.biz.rr.com) has joined #rust
2015-05-25 16:15:34	fitzgen	mystor: I need to read this more, but my gut reaction is that it would be better to have different types so as to better leverage Rust's type system
2015-05-25 16:16:21	-->	GGist (Mibbit@moz-st7v59.wa.comcast.net) has joined #rust
2015-05-25 16:16:27	-->	jophish (jophish@moz-fjh8o1.gotadsl.co.uk) has joined #rust
2015-05-25 16:16:28	mystor	fitzgen: This system allows us to promote a `Vec<Gc<T>>` on the stack to a `Gc<Vec<Gc<T>>>` on the heap without any real effort
2015-05-25 16:16:39	<--	kidto_ (gabriel@moz-72d.fff.84.91.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 16:16:41	mystor	It’s kinda nice to not have to worry about whether the struct will live on the stack or the heap
2015-05-25 16:17:03	fitzgen	hm
2015-05-25 16:17:19	fitzgen	mystor: what are the plans for this repo? where is it going?
2015-05-25 16:17:42	mystor	I’m hoping to get some time to polish up the code & implement Trace on more things.
2015-05-25 16:17:42	<--	annodomini (lambda@moz-qgii5v.ma.comcast.net) has quit (Client exited)
2015-05-25 16:17:53	<--	dinfuehr (dinfuehr@moz-81c7pp.highway.telekom.at) has quit (Ping timeout: 121 seconds)
2015-05-25 16:17:53	<--	munksgaa1d (munksgaard@moz-urnkl5.u.parknet.dk) has quit (Ping timeout: 121 seconds)
2015-05-25 16:18:00	mystor	We’re hoping to get a concurrent Gc too
2015-05-25 16:18:11	mystor	and then mostly work on making sure it’s actually sound
2015-05-25 16:18:11	-->	trigen (MSX@moz-sgda69.static.versatel.nl) has joined #rust
2015-05-25 16:18:25	fitzgen	mystor: it would be nice to have a macro to automatically define tracing for structs containing Gc thigns
2015-05-25 16:18:36	<--	pgonda (peter@moz-s36.0tp.134.75.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 16:18:40	@Havvy	How might I use `std::slice::SliceConcatExt` in safe Rust?
2015-05-25 16:18:40	mystor	#[derive(Trace)] works if you use gc_plugin
2015-05-25 16:18:48	fitzgen	mystor: ah I missed that
2015-05-25 16:18:50	-->	brendan (brendaneich@moz-d24.tdl.56.172.IP) has joined #rust
2015-05-25 16:18:56	@Havvy	(The equivalent of that trait I mean -- specifically, the connect method)
2015-05-25 16:19:36	<--	Kxepal (Miranda@moz-g95ll8.pppoe.mtu-net.ru) has quit (Ping timeout: 121 seconds)
2015-05-25 16:19:55	-->	munksgaard (munksgaard@moz-478pev.u.parknet.dk) has joined #rust
2015-05-25 16:20:01	mystor	Havvy: You want to concatenate strings?
2015-05-25 16:20:04	sam113101	why am I getting "error: type `crypto::md5::Md5` does not implement any method in scope named `input_str`"?
2015-05-25 16:20:13	-->	whipsch (whipsch@moz-bl4i0b.from.irc.camp) has joined #rust
2015-05-25 16:20:22	@Havvy	mystor:  Yes.
2015-05-25 16:20:40	@Havvy	Should I just reduce?
2015-05-25 16:20:43	-->	pgonda (peter@moz-s36.0tp.134.75.IP) has joined #rust
2015-05-25 16:20:54	--	bentley|away is now known as bentley
2015-05-25 16:21:02	<--	flavius (flavius@moz-pik2l3.tmpp.le52.8388.2a02.IP) has quit (Quit: WeeChat 1.2)
2015-05-25 16:21:16	mystor	playbot: [“Hello”, “World”].iter().fold(|x, a| format!(“{} {}”, x, a))
2015-05-25 16:21:16	--	Notice(playbot): <anon>:9:10: 9:11 error: unknown start of token: \u{201c}
2015-05-25 16:21:16	--	Notice(playbot): <anon>:9         [“Hello”, “World”].iter().fold(|x, a| format!(“{} {}”, x, a))
2015-05-25 16:21:16	--	Notice(playbot): output truncated; full output at: http://bit.ly/1Ri7bNC
2015-05-25 16:21:27	mystor	nyeh - I hate IRCCloud
2015-05-25 16:21:31	mystor	Havvy: Probably
2015-05-25 16:21:36	-->	annodomini (lambda@moz-qgii5v.ma.comcast.net) has joined #rust
2015-05-25 16:21:39	-->	Kxepal (Miranda@moz-1omrva.pppoe.mtu-net.ru) has joined #rust
2015-05-25 16:22:21	fitzgen	mystor: any plans to use more efficient allocation than Box::new?
2015-05-25 16:22:30	fitzgen	free lists?
2015-05-25 16:22:46	<--	vmeson (rmacleod@moz-hq5.1km.224.128.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 16:22:55	mystor	fitzgen: No plans, but the current allocation is definitely really bad (probably unacceptable)
2015-05-25 16:23:04	mystor	Right now our focus is on ensuring that it’s correct, not that it’s fast
2015-05-25 16:23:11	fitzgen	ok
2015-05-25 16:23:47	fitzgen	mystor: I might hack around a bit, perhaps send some PRs
2015-05-25 16:24:02	mystor	fitzgen: Sounds good :)
2015-05-25 16:24:40	fitzgen	mystor: is this always going to be mark-sweep? open to eventually being moving/generational?
2015-05-25 16:24:49	fitzgen	incremental?
2015-05-25 16:24:57	fitzgen	(you already mentioned concurrent)
2015-05-25 16:25:13	mystor	fitzgen: I’d love it if we could have all of those things
2015-05-25 16:25:23	mystor	but I’m worried that moving could introduce a lot of correctness problems
2015-05-25 16:25:24	<--	pohl (textual@moz-0a4vld.res.rr.com) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-25 16:25:30	<--	clatour (clatour@moz-2dc34f.hlrn.qwest.net) has quit (Connection closed)
2015-05-25 16:25:32	mystor	because references may exist on the stack which we can’t detect
2015-05-25 16:25:40	mystor	and thus can’t update
2015-05-25 16:25:48	mystor	(or even on the heap)
2015-05-25 16:26:32	-->	nodweber (nodweber@moz-knt.fgq.178.5.IP) has joined #rust
2015-05-25 16:26:35	fitzgen	mystor: what SpiderMonkey does is have an intrusive list of all rooted things on the stack
2015-05-25 16:26:37	-->	kingmahl_ (kingmahl@moz-i3i.pkn.79.172.IP) has joined #rust
2015-05-25 16:26:59	mystor	We just have no way of ensuring that it is a complete list
2015-05-25 16:27:02	--	bentley is now known as bentley|away
2015-05-25 16:27:02	-->	turtil (turtil@moz-gfc.es4.23.103.IP) has joined #rust
2015-05-25 16:27:03	fitzgen	but yes, it does create new problems
2015-05-25 16:27:16	mystor	Someone can move stuff, and we can’t detect that they moved it as you can’t run code when something moves
2015-05-25 16:27:26	mystor	Someone can take a reference, and then put it somewhere
2015-05-25 16:27:32	mystor	and then copy it all over the place
2015-05-25 16:27:37	mystor	throw it into structs on the heap
2015-05-25 16:27:37	<--	nicknikolov (nicknikolov@moz-0q4.2rm.211.90.IP) has quit (Connection closed)
2015-05-25 16:27:58	mystor	Updating all of those feels impossible
2015-05-25 16:28:11	buhman	kernel code can do it
2015-05-25 16:28:41	mystor	buhman: ?
2015-05-25 16:28:42	fitzgen	mystor: yes, you have to add traits for ppl to implement so their HashMap<Gc<T>> can iupdate its references, etc
2015-05-25 16:29:29	<--	kingmahl (kingmahl@moz-6j6.jfn.79.172.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 16:29:31	mystor	fitzgen: If we add a moving Gc, it may add some annoying stuff like that, so we’d probably want to have a non-moving Gc which is less invasive as an option
2015-05-25 16:29:38	<--	annodomini (lambda@moz-qgii5v.ma.comcast.net) has quit (Client exited)
2015-05-25 16:29:58	fitzgen	mystor: yeah, it would be cool to have pluggable backends, but again more trouble
2015-05-25 16:30:11	 *	fitzgen will think about it
2015-05-25 16:30:26	mystor	awesome :) If you have ideas, ping Manishearth or I
2015-05-25 16:30:43	fitzgen	ok :)
2015-05-25 16:31:06	fitzgen	mystor: are there 0 tests right now?
2015-05-25 16:31:10	 *	fitzgen sees none in lib
2015-05-25 16:31:22	mystor	https://github.com/Manishearth/rust-gc/tree/master/gc/tests
2015-05-25 16:31:28	<--	ygrek (user@moz-8j9aeu.org.ua) has quit (Ping timeout: 121 seconds)
2015-05-25 16:31:32	fitzgen	oh theres a whole dir
2015-05-25 16:31:33	fitzgen	doh
2015-05-25 16:31:35	mystor	gc_semantics.rs is our only set of tests for the actual gc
2015-05-25 16:31:44	mystor	it’s kinda crappy tests though
2015-05-25 16:31:47	mystor	we could definitely use more
2015-05-25 16:31:56	fitzgen	ok
2015-05-25 16:32:07	-->	kidto_ (gabriel@moz-72d.fff.84.91.IP) has joined #rust
2015-05-25 16:32:29	--	NameNotFound is now known as zz_NameNotFound
2015-05-25 16:32:40	fitzgen	mystor: what timezone are you
2015-05-25 16:32:45	-->	harrisonclarke (harrisoncla@moz-4lq79j.eastlink.ca) has joined #rust
2015-05-25 16:32:48	-->	SneakySnake (nya@moz-i9is4u.pool.telekom.hu) has joined #rust
2015-05-25 16:32:52	mystor	EDT
2015-05-25 16:33:00	<--	det (chris@moz-9klsea.lv.cox.net) has quit (Connection closed)
2015-05-25 16:33:00	mystor	(GMT-4)
2015-05-25 16:33:01	&Manishearth	I'm IST
2015-05-25 16:33:13	&Manishearth	fitzgen: I'll try to contribute to yours too
2015-05-25 16:33:22	&Manishearth	I've been interested in GCs fow a while now
2015-05-25 16:33:25	fitzgen	Manishearth: mine == oxischeme or Cc?
2015-05-25 16:33:37	<--	harrisonclarke (harrisoncla@moz-4lq79j.eastlink.ca) has quit (Connection closed)
2015-05-25 16:33:41	&Manishearth	had a bunch of designes floating around, finally mystor got me to really sit down and think about it :)
2015-05-25 16:33:44	&Manishearth	fitzgen: Cc
2015-05-25 16:33:50	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Connection closed)
2015-05-25 16:33:52	fitzgen	oxischeme hasn't been updated since forever, def wont compile
2015-05-25 16:33:57	fitzgen	Manishearth: ah ok
2015-05-25 16:34:09	fitzgen	Manishearth: will let you know once I get the basics going
2015-05-25 16:34:14	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-25 16:34:16	&Manishearth	fitzgen: btw, regarding plugins for external crate derivings, I suspect it won't be possible, but if it is, it will invovle creader/csearch
2015-05-25 16:34:24	<--	Astrum|Lap (Astrum|Lap@moz-skcefh.co.comcast.net) has quit (Client exited)
2015-05-25 16:34:25	<--	maximih (maximih@moz-0r2bjb.bredband.telia.com) has quit (A TLS packet with unexpected length was received.)
2015-05-25 16:34:34	fitzgen	Manishearth: creader/csearch?
2015-05-25 16:34:35	&Manishearth	fitzgen: If there's work to be done I can help (not now though, zzzz)
2015-05-25 16:34:45	&Manishearth	fitzgen: things that let us access the metadata of compiled deps
2015-05-25 16:34:50	fitzgen	ah ko
2015-05-25 16:34:52	fitzgen	ok
2015-05-25 16:34:55	-->	zyphrus (David@moz-1a4.urk.98.101.IP) has joined #rust
2015-05-25 16:34:56	-->	joeyjoejoejr (jbdietrich@moz-l52bm6.wi.charter.com) has joined #rust
2015-05-25 16:34:58	&Manishearth	Not sure if they're available at expansion time
2015-05-25 16:35:00	&Manishearth	rustc is hard
2015-05-25 16:35:03	<--	brendan (brendaneich@moz-d24.tdl.56.172.IP) has quit (Client exited)
2015-05-25 16:35:08	mystor	Manishearth: woo rustc!
2015-05-25 16:35:13	&Manishearth	heh
2015-05-25 16:35:16	 *	Manishearth zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
2015-05-25 16:35:29	fitzgen	Manishearth: mystor: anyways, I highly recommend http://gchandbook.org/
2015-05-25 16:35:39	&Manishearth	thx
2015-05-25 16:35:42	fitzgen	if you don't have a copy, I'd recommend picking on up
2015-05-25 16:36:57	-->	tikue (tim@moz-g5n.ha3.38.65.IP) has joined #rust
2015-05-25 16:36:59	-->	iu (iu@moz-6263qv.cc.cmu.edu) has joined #rust
2015-05-25 16:37:04	krax	anyone have the patience to help me cross compile libstd?
2015-05-25 16:37:18	<--	trigen (MSX@moz-sgda69.static.versatel.nl) has quit (Ping timeout: 121 seconds)
2015-05-25 16:37:18	<--	villev (chatzilla@moz-lemqa0.elisa-laajakaista.fi) has quit (Ping timeout: 121 seconds)
2015-05-25 16:37:34	fitzgen	mystor: I suspect we can't get really nice allocation properties (like a bump gc) without a moving gc
2015-05-25 16:37:47	fitzgen	so it is worth thinking hard about how to do it in a safe way
2015-05-25 16:37:48	mystor	fitzgen: That’s my understanding as well
2015-05-25 16:37:52	<--	veqz_ (veqz@moz-rr3tu7.60.getinternet.no) has quit (Ping timeout: 121 seconds)
2015-05-25 16:38:01	fitzgen	er, bump allocator
2015-05-25 16:38:08	fitzgen	anyways, I gotta run
2015-05-25 16:38:10	mystor	I knew what you meant :)
2015-05-25 16:38:12	mystor	kk, sounds good
2015-05-25 16:38:13	mystor	ttyl
2015-05-25 16:38:15	molokdotc	Hey, another version problem here... Vec::from_elem was replaced by what? where i can see this changes? Is there any "document" or something like?
2015-05-25 16:38:16	<--	kidto_ (gabriel@moz-72d.fff.84.91.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 16:38:16	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Ping timeout: 121 seconds)
2015-05-25 16:38:17	<--	__mark__ (mark@moz-udut16.dynamic.chello.pl) has quit (Client exited)
2015-05-25 16:38:19	fitzgen	later
2015-05-25 16:38:41	iu	Hi! I have struct Foo defined in mod a and mod b. Is it possible to tell `rustdoc` to prefix the names of the structs with the corresponding modules’ names?
2015-05-25 16:38:46	futile	vec![elem; count] ?
2015-05-25 16:39:16	-->	Zidane (Zidane@moz-382v9o.ca.comcast.net) has joined #rust
2015-05-25 16:39:20	iu	The docs right now are a bit confusing.
2015-05-25 16:39:22	futile	playbot: vec![5, 10]
2015-05-25 16:39:23	--	Notice(playbot): [5, 10]
2015-05-25 16:39:29	futile	playbot: vec![5; 10]
2015-05-25 16:39:31	--	Notice(playbot): [5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
2015-05-25 16:39:36	futile	there you go molokdotc 
2015-05-25 16:39:50	-->	maximih (maximih@moz-0r2bjb.bredband.telia.com) has joined #rust
2015-05-25 16:40:06	<--	kamilc__ (kamil@moz-k976eq.play-internet.pl) has quit (Quit: Linkinus - http://linkinus.com)
2015-05-25 16:40:14	molokdotc	cool, thanks
2015-05-25 16:40:28	futile	as for how to find it in the docs, I'm not sure
2015-05-25 16:40:30	-->	kidto_ (gabriel@moz-72d.fff.84.91.IP) has joined #rust
2015-05-25 16:40:35	-->	brendan (brendaneich@moz-d24.tdl.56.172.IP) has joined #rust
2015-05-25 16:40:42	<--	sternmull (kringel@moz-o3jrpd.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2015-05-25 16:40:57	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-25 16:40:59	<--	tikue (tim@moz-g5n.ha3.38.65.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 16:41:00	<--	Zidane (Zidane@moz-382v9o.ca.comcast.net) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-05-25 16:42:06	Azdle	Is it possible to search the rust std lib by type signature similar to hoogle?
2015-05-25 16:42:24	<--	hyunsik (hyunsik@moz-3qgjl9.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-25 16:42:24	<--	tristanseifert (tristanseif@moz-r0t7ns.res.rr.com) has quit (Ping timeout: 121 seconds)
2015-05-25 16:42:27	-->	datalus (datalus@moz-vlqtbb.mycingular.net) has joined #rust
2015-05-25 16:42:30	<--	jnvsor (j@moz-1o1jrn.dynamic.ziggo.nl) has quit (Ping timeout: 121 seconds)
2015-05-25 16:42:47	-->	huddler (Mibbit@moz-udaqc5.wa.comcast.net) has joined #rust
2015-05-25 16:42:51	<--	huddler (Mibbit@moz-udaqc5.wa.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-25 16:44:33	bluss	Azdle: not really. it's welcome if you can improve it
2015-05-25 16:44:39	futile	somebody implemented it
2015-05-25 16:44:45	futile	but I think it isn't merged yet
2015-05-25 16:45:01	bluss	it's rudimentary http://doc.rust-lang.org/nightly/std/index.html?search=Vec%20-%3E%20usize
2015-05-25 16:45:05	Azdle	okay, sweet
2015-05-25 16:45:06	bluss	so it needs help
2015-05-25 16:45:15	futile	ahh, so it _is_ merged, nice
2015-05-25 16:45:35	-->	jviereck (Adium@moz-jh8j4p.dynamic.hispeed.ch) has joined #rust
2015-05-25 16:45:36	-->	jdm (jdm@moz-ilbt2e.cable.teksavvy.com) has joined #rust
2015-05-25 16:45:37	--	Mode #rust [+o jdm] by ChanServ
2015-05-25 16:46:06	-->	veqz_ (veqz@moz-rr3tu7.60.getinternet.no) has joined #rust
2015-05-25 16:46:16	-->	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has joined #rust
2015-05-25 16:46:38	<--	futile (felix@moz-cmcd12.unity-media.net) has quit (Quit: WeeChat 1.2-rc1)
2015-05-25 16:46:52	-->	DemonOne (Avi@moz-jll8n2.red.bezeqint.net) has joined #rust
2015-05-25 16:47:02	-->	nott (nott@moz-to4.06o.57.86.IP) has joined #rust
2015-05-25 16:47:21	<--	m-r-r (mrr@moz-77f8as.rev.sfr.net) has quit (Ping timeout: 121 seconds)
2015-05-25 16:47:31	<--	wipeD (wipeD@moz-7d5r5l.dip0.t-ipconnect.de) has quit (Connection closed)
2015-05-25 16:47:55	-->	tristanseifert (tristanseif@moz-r0t7ns.res.rr.com) has joined #rust
2015-05-25 16:48:16	bluss	Azdle: for example vec, usize -> t  will match an indexing function
2015-05-25 16:48:23	<--	peferron (peferron@moz-k89vq8.ca.comcast.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-25 16:48:30	bluss	it uses the literal name of the generic parameter
2015-05-25 16:48:32	-->	m-r-r (mrr@moz-uvfnet.abo.wanadoo.fr) has joined #rust
2015-05-25 16:48:36	-->	RC9 (RCIX@moz-vnmep7.ph.cox.net) has joined #rust
2015-05-25 16:48:53	-->	det (chris@moz-9klsea.lv.cox.net) has joined #rust
2015-05-25 16:49:48	<--	bkoropoff (bkoropoff@moz-kthi5c.wa.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-25 16:50:19	-->	chc4 (chc4@moz-pdo0at.ma.comcast.net) has joined #rust
2015-05-25 16:51:38	Azdle	So it's not smart enough to understand things that are built on traits unless you specifically search for something that uses a trait?
2015-05-25 16:52:30	patrickod	anyone know of CI services that support rust that host FOSS projects for free?
2015-05-25 16:52:34	-->	nicknikolov (nicknikolov@moz-0q4.2rm.211.90.IP) has joined #rust
2015-05-25 16:52:54	-->	harrisonclarke (harrisoncla@moz-4lq79j.eastlink.ca) has joined #rust
2015-05-25 16:52:54	Azdle	TravisCI?
2015-05-25 16:53:23	krax	anyone have the patience to help me cross compile libstd?
2015-05-25 16:53:41	Azdle	patrickod: https://github.com/Azdle/dolos/blob/master/.travis.yml
2015-05-25 16:54:05	patrickod	awesome! thanks :)
2015-05-25 16:54:17	Azdle	patrickod: Or maybe more helpfully: http://docs.travis-ci.com/user/languages/rust/
2015-05-25 16:55:57	<--	krax (archlap@moz-hff.m76.69.68.IP) has quit (Quit: leaving)
2015-05-25 16:56:51	<--	m-r-r (mrr@moz-uvfnet.abo.wanadoo.fr) has quit (Ping timeout: 121 seconds)
2015-05-25 16:57:07	<--	GGist (Mibbit@moz-st7v59.wa.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-25 16:57:11	<--	andre_ (andre@moz-rnd.3qv.76.201.IP) has quit (Quit: leaving)
2015-05-25 16:57:36	-->	rustyrazorblade (rustyrazorb@moz-ehrfqf.fios.verizon.net) has joined #rust
2015-05-25 16:57:56	<--	jophish (jophish@moz-fjh8o1.gotadsl.co.uk) has quit (Connection closed)
2015-05-25 16:58:18	bluss	travis is great
2015-05-25 16:59:15	-->	tamird (textual@moz-gg3hct.res.rr.com) has joined #rust
2015-05-25 16:59:18	<--	DemonOne (Avi@moz-jll8n2.red.bezeqint.net) has quit (Ping timeout: 121 seconds)
2015-05-25 16:59:20	<--	Rym (y@moz-c2u.sd4.38.217.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 16:59:43	-->	hyunsik (hyunsik@moz-3qgjl9.ca.comcast.net) has joined #rust
2015-05-25 16:59:59	--	bentley|away is now known as bentley
2015-05-25 17:00:03	-->	niconii (nicole@moz-hnv1fo.frgo.qwest.net) has joined #rust
2015-05-25 17:00:03	--	Mode #rust [+o niconii] by ChanServ
2015-05-25 17:01:15	-->	nrc (nrc@moz-14pjgj.xtra.co.nz) has joined #rust
2015-05-25 17:01:15	--	Mode #rust [+o nrc] by ChanServ
2015-05-25 17:01:38	-->	IAmRasputin (rmg@moz-iq67ru.j2vq.lfvf.0006.2601.IP) has joined #rust
2015-05-25 17:02:54	<--	jgallagher (john@moz-d5e8oc.hfc.comcastbusiness.net) has quit (Client exited)
2015-05-25 17:02:58	<--	doener (doener@moz-929cn9.unity-media.net) has quit (Quit: leaving)
2015-05-25 17:03:11	-->	trigen (MSX@moz-sgda69.static.versatel.nl) has joined #rust
2015-05-25 17:03:54	-->	tetsuharu (testuharu@moz-fmjbd6.ucom.ne.jp) has joined #rust
2015-05-25 17:05:46	-->	DemonOne (Avi@moz-k095gd.cablep.bezeqint.net) has joined #rust
2015-05-25 17:06:04	-->	m-r-r (mrr@moz-77f8as.rev.sfr.net) has joined #rust
2015-05-25 17:06:05	-->	lov2cod (Adium@moz-9utvl5.frokca.sbcglobal.net) has joined #rust
2015-05-25 17:07:05	<--	lov2cod (Adium@moz-9utvl5.frokca.sbcglobal.net) has quit (Quit: Leaving.)
2015-05-25 17:07:23	<--	trigen (MSX@moz-sgda69.static.versatel.nl) has quit (Ping timeout: 121 seconds)
2015-05-25 17:07:36	<--	datalus (datalus@moz-vlqtbb.mycingular.net) has quit (Quit: WeeChat 1.2)
2015-05-25 17:07:50	<--	nott (nott@moz-to4.06o.57.86.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 17:08:32	<--	jawzi (jawzi@moz-0tl5mf.sc.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-25 17:08:38	<--	pgonda (peter@moz-s36.0tp.134.75.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 17:08:58	-->	pgonda (peter@moz-s36.0tp.134.75.IP) has joined #rust
2015-05-25 17:09:00	mdup	any reddit mod around?
2015-05-25 17:09:25	<--	NerdTaco (NerdTaco@moz-a4e65f.dsl.bell.ca) has quit (Quit: Leaving)
2015-05-25 17:09:31	<--	kmicu (kmicu@moz-uga.edn.218.91.IP) has quit (Client exited)
2015-05-25 17:10:19	<--	cakecatz (cakecatz@moz-edrvuc.sannet.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-25 17:11:15	<--	dalarmmst (dalarmmst@moz-mb21j4.bredband.comhem.se) has quit (Ping timeout: 121 seconds)
2015-05-25 17:11:18	<--	lenstr (lenstr@moz-s25.vju.25.171.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-25 17:11:25	-->	c_wraith (c_wraith@moz-2e872h.click-network.com) has joined #rust
2015-05-25 17:11:34	-->	jawzi (jawzi@moz-0tl5mf.sc.comcast.net) has joined #rust
2015-05-25 17:12:15	<--	brendan (brendaneich@moz-d24.tdl.56.172.IP) has quit (Client exited)
2015-05-25 17:12:23	<--	WindowsBunny (Peter@moz-vlal7g.east.verizon.net) has quit (Ping timeout: 121 seconds)
2015-05-25 17:12:54	<--	Chef (Chef@moz-svthjj.dsl.teksavvy.com) has quit (Quit: Quit)
2015-05-25 17:12:58	<--	c0170 (c0170@moz-4stj9o.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2015-05-25 17:14:19	<--	goyox86 (textual@moz-rvv.00r.255.109.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-25 17:14:36	-->	dinfuehr (dinfuehr@moz-81c7pp.highway.telekom.at) has joined #rust
2015-05-25 17:14:55	<--	ai (ai@moz-pqofrl.sunline.net.ua) has quit (Quit: Leaving.)
2015-05-25 17:15:07	@niconii	mdup: i'm not one, but mind explaining your issue?
2015-05-25 17:15:12	-->	ygrek (user@moz-8j9aeu.org.ua) has joined #rust
2015-05-25 17:15:15	<--	Binero (jeroen@moz-91joat.69vi.s4ge.1810.2a02.IP) has quit (Client exited)
2015-05-25 17:15:36	<--	jawzi (jawzi@moz-0tl5mf.sc.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-25 17:15:44	-->	JosiahOne (Instantbird@moz-it5kta.l2d1.q8mm.0306.2602.IP) has joined #rust
2015-05-25 17:16:00	mdup	I've made my first Rust crate, and posted a link to it on /r/rust, however I just subscribed to reddit and I believe my post was caught by the spam filter
2015-05-25 17:16:12	--	bentley is now known as bentley|away
2015-05-25 17:16:46	-->	maraoz (maraoz@moz-9agosh.telecom.net.ar) has joined #rust
2015-05-25 17:16:54	<--	zyphrus (David@moz-1a4.urk.98.101.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 17:16:58	<--	silven (quassel@moz-0roor3.priv.bahnhof.se) has quit (Ping timeout: 121 seconds)
2015-05-25 17:17:07	<--	scoobycoder (Nate@moz-1vecat.clv.wideopenwest.com) has quit (Connection closed)
2015-05-25 17:17:25	-->	silven (quassel@moz-0roor3.priv.bahnhof.se) has joined #rust
2015-05-25 17:18:05	<--	irobevjodu (ident@moz-mikldi.static-ro.twistednetworks.net) has quit (Connection closed)
2015-05-25 17:18:15	-->	irobevjodu (ident@moz-mikldi.static-ro.twistednetworks.net) has joined #rust
2015-05-25 17:18:20	-->	Morten (Morten@moz-h1823n.bb.online.no) has joined #rust
2015-05-25 17:18:22	<--	slomo (slomo@moz-p8m0g2.net) has quit (Quit: Ex-Chat)
2015-05-25 17:18:28	<--	ZenSword (ZenSword@moz-ivg6ls.pools.vodafone-ip.de) has quit (Quit: quit)
2015-05-25 17:18:39	-->	danyel (danyel@moz-t4sg1v.dip0.t-ipconnect.de) has joined #rust
2015-05-25 17:18:41	<--	rustyrazorblade (rustyrazorb@moz-ehrfqf.fios.verizon.net) has quit (Client exited)
2015-05-25 17:18:43	<--	dinfuehr (dinfuehr@moz-81c7pp.highway.telekom.at) has quit (Ping timeout: 121 seconds)
2015-05-25 17:18:55	<--	IAmRasputin (rmg@moz-iq67ru.j2vq.lfvf.0006.2601.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 17:19:25	<--	kidto_ (gabriel@moz-72d.fff.84.91.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 17:20:24	<--	ahal (ahal@moz-b8e0a0.cpe.pppoe.ca) has quit (A TLS packet with unexpected length was received.)
2015-05-25 17:20:41	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Connection closed)
2015-05-25 17:20:44	Morten	Are closures the only way to define local functions?
2015-05-25 17:20:54	<--	kaeluka (kaeluka@moz-tn3lqd.cust.bredbandsbolaget.se) has quit (Client exited)
2015-05-25 17:21:06	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-25 17:21:30	-->	Rym (y@moz-c2u.sd4.38.217.IP) has joined #rust
2015-05-25 17:21:56	@niconii	playbot: fn hello() { fn hi() { println!("Hi!"); }  hi() }  hello()
2015-05-25 17:21:57	--	Notice(playbot): Hi!
2015-05-25 17:21:58	--	Notice(playbot): ()
2015-05-25 17:21:58	bluss	no since you can declare regular functions and methods inside other functions
2015-05-25 17:22:04	-->	swgillespie (swgillespie@moz-k4gejd.hfc.comcastbusiness.net) has joined #rust
2015-05-25 17:22:15	<--	orangeshark (erik@moz-ev9qo1.44tj.56ot.0306.2602.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 17:22:24	Morten	Oh, thanks guys
2015-05-25 17:22:26	@niconii	you can even put modules in functions
2015-05-25 17:22:35	-->	kaeluka (kaeluka@moz-tn3lqd.cust.bredbandsbolaget.se) has joined #rust
2015-05-25 17:22:37	@niconii	structs, you name it
2015-05-25 17:22:45	bluss	modules, now you're crazy
2015-05-25 17:22:59	bluss	or rust is
2015-05-25 17:23:21	@niconii	also, use lines, if you only want to import something in a specific part of code
2015-05-25 17:23:25	-->	IAmRasputin (rmg@moz-iq67ru.j2vq.lfvf.0006.2601.IP) has joined #rust
2015-05-25 17:23:34	<--	iu (iu@moz-6263qv.cc.cmu.edu) has quit (Quit: )
2015-05-25 17:23:36	-->	umbridge (Mibbit@moz-a2i.gl9.56.172.IP) has joined #rust
2015-05-25 17:23:56	@niconii	and you can do that within all blocks
2015-05-25 17:24:02	<--	IAmRasputin (rmg@moz-iq67ru.j2vq.lfvf.0006.2601.IP) has quit (Quit: WeeChat 1.0.1)
2015-05-25 17:24:13	<--	m-r-r (mrr@moz-77f8as.rev.sfr.net) has quit (Connection closed)
2015-05-25 17:24:39	--	kimundi is now known as zz_kimundi
2015-05-25 17:24:57	umbridge	Could someone take a look at this? http://is.gd/1K0EHm My thought was that since Box<T> is sized, this should work. I do want HasFoo to be sized, but I don't want it to care about the implementation of Foo.
2015-05-25 17:25:09	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Ping timeout: 121 seconds)
2015-05-25 17:25:25	-->	orangeshark (erik@moz-jh8jsp.44tj.56ot.0306.2602.IP) has joined #rust
2015-05-25 17:25:32	<--	tadh (quassel@moz-iq6hhs.biz.rr.com) has quit (Connection closed)
2015-05-25 17:26:13	<--	robojeb (Jeb@moz-su0f9k.fios.verizon.net) has quit (Quit: Leaving)
2015-05-25 17:27:03	<--	mcarton (martin@moz-ag64s6.rev.sfr.net) has quit (Ping timeout: 121 seconds)
2015-05-25 17:27:11	<--	maximih (maximih@moz-0r2bjb.bredband.telia.com) has quit (A TLS packet with unexpected length was received.)
2015-05-25 17:27:31	<--	swgillespie (swgillespie@moz-k4gejd.hfc.comcastbusiness.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-25 17:28:05	umbridge	I've had more problems with arguments being sized than with lifetimes in my short time with rust so far...
2015-05-25 17:28:16	<--	mdup (cc@moz-6fgo9p.abo.wanadoo.fr) has quit (Ping timeout: 121 seconds)
2015-05-25 17:28:16	bluss	umbridge: for some reason this cast is not possible in generic code. I think a solution is being sought
2015-05-25 17:28:26	bluss	umbridge: it looks like you can accept a Box<Foo> though?
2015-05-25 17:28:28	bluss	directly
2015-05-25 17:28:34	@niconii	umbridge: the issue is that new is generic over types that *implement* Foo, rather than accepting the actual trait object Foo
2015-05-25 17:28:56	betawaffle	where is the best place to find upcoming changes to the language, like new things going into beta, new things going into nightly, etc?
2015-05-25 17:29:23	<--	sigma (sigma@moz-a5u.m43.48.37.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 17:29:37	Tari	betawaffle: big changes will come from RFCs
2015-05-25 17:29:39	@niconii	umbridge: so http://is.gd/9ZUW1U works, as bluss said
2015-05-25 17:29:44	<--	colinsurprenant (colin@moz-rmn4e2.169.electronicbox.net) has quit (Client exited)
2015-05-25 17:29:45	bluss	betawaffle: rust on github, internals forum, rfcs repo too yeah
2015-05-25 17:29:54	<--	AopicieR (AopicieR@moz-nv5074.dip0.t-ipconnect.de) has quit (Quit: leaving)
2015-05-25 17:30:08	-->	lenstr (lenstr@moz-s25.vju.25.171.IP) has joined #rust
2015-05-25 17:30:37	betawaffle	bluss: and is there a way to see progress on RFCs? like, which ones are on target to be added sooner?
2015-05-25 17:30:51	@niconii	umbridge: (to clarify, as originally written, it would accept Box<FooBar> but not Box<Foo>)
2015-05-25 17:31:04	-->	Gabriel_7 (Gabriel@moz-fn9av0.mtgr.92aj.0e35.2a01.IP) has joined #rust
2015-05-25 17:31:29	bluss	betawaffle: well if you organize an overview? :)
2015-05-25 17:31:42	umbridge	bluss, niconii, thanks! I didn't catch the distinction between the two kinds of generecism
2015-05-25 17:32:01	@niconii	umbridge: at least, the function would, you wouldn't be able to actually store in the struct
2015-05-25 17:32:06	betawaffle	that would be a good idea, but it would need to stay in sync somehow
2015-05-25 17:32:13	-->	leaper (Mibbit@moz-d01.2r8.123.189.IP) has joined #rust
2015-05-25 17:32:23	<--	mou (donwilliam@moz-lq9kg8.cpe.webspeed.dk) has quit (Connection closed)
2015-05-25 17:32:24	-->	swgillespie (swgillespie@moz-rn1.vmq.232.104.IP) has joined #rust
2015-05-25 17:32:39	leaper	how can I cast a Box<queue::QueueFile>` to `*mut queue::QueueFile`
2015-05-25 17:32:44	leaper	?
2015-05-25 17:32:46	<--	jviereck (Adium@moz-jh8j4p.dynamic.hispeed.ch) has quit (Quit: Leaving.)
2015-05-25 17:33:15	-->	trigen (MSX@moz-sgda69.static.versatel.nl) has joined #rust
2015-05-25 17:33:16	bluss	betawaffle: this week in rust is a weekly blog
2015-05-25 17:33:29	betawaffle	yea, i know about that one
2015-05-25 17:33:33	<--	umbridge (Mibbit@moz-a2i.gl9.56.172.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-25 17:33:36	<--	DerisiveLogic (smuxi@moz-1jqqlg.biz.rr.com) has quit (Ping timeout: 121 seconds)
2015-05-25 17:33:50	swgillespie	leaper: let ptr : *mut queue::QueueFile = &mut *qf;
2015-05-25 17:33:54	swgillespie	where qf is Box<queue::QueueFile>
2015-05-25 17:34:10	swgillespie	qf has to be mut, too
2015-05-25 17:35:03	-->	zyphrus (David@moz-1a4.urk.98.101.IP) has joined #rust
2015-05-25 17:35:08	-->	areski (areski@moz-7o8r19.user.ono.com) has joined #rust
2015-05-25 17:37:21	<--	leaper (Mibbit@moz-d01.2r8.123.189.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-25 17:37:22	bluss	yup, a &mut Box<T> coerces into a &mut T coerces into a *mut T
2015-05-25 17:37:41	-->	tikue (tim@moz-g5n.ha3.38.65.IP) has joined #rust
2015-05-25 17:38:03	-->	_Vi (vi@moz-bbs.vhj.131.104.IP) has joined #rust
2015-05-25 17:39:21	<--	Guest_ (textual@moz-rtn.fg7.77.192.IP) has quit (Connection closed)
2015-05-25 17:39:34	<--	trigen (MSX@moz-sgda69.static.versatel.nl) has quit (Ping timeout: 121 seconds)
2015-05-25 17:39:37	-->	DerisiveLogic (smuxi@moz-1jqqlg.biz.rr.com) has joined #rust
2015-05-25 17:39:41	-->	Guest_ (textual@moz-rtn.fg7.77.192.IP) has joined #rust
2015-05-25 17:40:20	betawaffle	where can I find what the different github label prefixes mean? like A-* I-* etc?
2015-05-25 17:40:47	<--	pgonda (peter@moz-s36.0tp.134.75.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 17:41:26	<--	asQuirreL (asQuirreL@moz-ro1qqu.ox.ac.uk) has quit (Connection closed)
2015-05-25 17:41:44	<--	tikue (tim@moz-g5n.ha3.38.65.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 17:42:12	-->	grindhold (quassel@moz-6k8ctl.cyan.servdiscount-customer.com) has joined #rust
2015-05-25 17:42:52	-->	asQuirreL (asQuirreL@moz-ro1qqu.ox.ac.uk) has joined #rust
2015-05-25 17:45:07	@niconii	betawaffle: not sure if the meanings are listed anywhere
2015-05-25 17:45:18	<--	findow (Mibbit@moz-1072lv.dsl.as9105.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-25 17:46:40	-->	mcarton (martin@moz-ag64s6.rev.sfr.net) has joined #rust
2015-05-25 17:46:59	@niconii	betawaffle: though there's a list of all of them here: https://github.com/rust-lang/rust/labels
2015-05-25 17:47:46	<--	harrisonclarke (harrisoncla@moz-4lq79j.eastlink.ca) has quit (Connection closed)
2015-05-25 17:48:12	-->	harrisonclarke (harrisoncla@moz-4lq79j.eastlink.ca) has joined #rust
2015-05-25 17:49:34	<--	mbudde (mbudde@moz-v8g.lim.109.2.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 17:49:50	-->	kidto_ (gabriel@moz-72d.fff.84.91.IP) has joined #rust
2015-05-25 17:51:10	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-25 17:52:13	<--	harrisonclarke (harrisoncla@moz-4lq79j.eastlink.ca) has quit (Ping timeout: 121 seconds)
2015-05-25 17:52:44	-->	harrisonclarke (harrisoncla@moz-4lq79j.eastlink.ca) has joined #rust
2015-05-25 17:53:22	-->	jminer (Instantbird@moz-b1u.qch.163.66.IP) has joined #rust
2015-05-25 17:53:52	<--	csoriano_ (csoriano@moz-g6rkdc.net.upcbroadband.cz) has quit (Ping timeout: 121 seconds)
2015-05-25 17:54:01	-->	ptalbot (ptalbot@moz-j4gnuh.fbx.proxad.net) has joined #rust
2015-05-25 17:54:15	figaro	hello all, I was wondering - is there a reason that every Struct gets it's own Into for free?
2015-05-25 17:55:12	reem	there’s an impl of Into<T> for T in std
2015-05-25 17:55:41	<--	jws (jsalter@moz-q98cl6.cable.virginm.net) has quit (Client exited)
2015-05-25 17:55:46	FreeFull	The impl involves From
2015-05-25 17:55:51	FreeFull	So it's From that you really want to implement
2015-05-25 17:56:07	-->	pgonda (peter@moz-s36.0tp.134.75.IP) has joined #rust
2015-05-25 17:56:17	<--	djhworld (djhworld@moz-uag.hpf.10.94.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-25 17:56:52	figaro	oh okay, thank you
2015-05-25 17:57:15	figaro	I get how to implement From (but it's not in the docs very well!), I just didn't realize that there was a concept of traits implement on all types
2015-05-25 17:57:49	<--	nicknikolov (nicknikolov@moz-0q4.2rm.211.90.IP) has quit (Connection closed)
2015-05-25 17:57:52	<--	mgottschlag (quassel@moz-8uvcc8.hsi15.kabel-badenwuerttemberg.de) has quit (Ping timeout: 121 seconds)
2015-05-25 17:57:57	Morten	Oh boy, you can have impl blocks inside functions
2015-05-25 17:58:33	-->	jophish (jophish@moz-fjh8o1.gotadsl.co.uk) has joined #rust
2015-05-25 17:58:45	FreeFull	Morten: Does that change scoping at all?
2015-05-25 17:58:50	Morten	Does that mean it's possible to override operators to behave differently based on runtime information?
2015-05-25 17:59:11	FreeFull	Probably not
2015-05-25 17:59:15	Morten	FreeFull: what do you mean?
2015-05-25 17:59:52	figaro	is there any reason (at least for sufficiently complicated parameters) not to use T: Into<ActualParameterType> in general?
2015-05-25 18:00:23	FreeFull	Morten: It seems having an impl inside a function doesn't act differently from having it outside
2015-05-25 18:00:31	<--	dcb (textual@moz-j72nfe.ca.comcast.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-25 18:01:14	<--	mkpankov` (mkpankov@moz-mbl.u5t.23.84.IP) has quit (Quit: Bye)
2015-05-25 18:01:16	<--	Douman (Douman@moz-8rcdtd.dynamic.mts-nn.ru) has quit (Quit: )
2015-05-25 18:01:24	Morten	FreeFull: I assumed the impl block would only have an effect for the rest of the scope?
2015-05-25 18:01:30	-->	mkpankov (user@moz-mbl.u5t.23.84.IP) has joined #rust
2015-05-25 18:01:32	-->	jedireza (jedireza@moz-ungcc1.dsl.ovh.fr) has joined #rust
2015-05-25 18:01:34	-->	fengshaun (fengshaun@moz-oagll1.cpe.pppoe.ca) has joined #rust
2015-05-25 18:02:00	FreeFull	Morten: My experiments show otherwise
2015-05-25 18:02:18	FreeFull	Morten: http://is.gd/zXx722
2015-05-25 18:02:37	<--	Rym (y@moz-c2u.sd4.38.217.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 18:03:18	Morten	FreeFull: Ah. Well, I guess letting everyone define function-local operator overrides might not be a good idea
2015-05-25 18:03:22	<--	asQuirreL (asQuirreL@moz-ro1qqu.ox.ac.uk) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-25 18:04:04	FreeFull	If the impl was only scoped to the function, then that wouldn't compile
2015-05-25 18:04:26	-->	llogiq (andre@moz-ebe0kb.unity-media.net) has joined #rust
2015-05-25 18:04:34	FreeFull	Morten: It's just a quirk that it happens to compile
2015-05-25 18:05:03	<--	hyunsik (hyunsik@moz-3qgjl9.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-25 18:05:15	-->	A205B064 (A205B064@moz-9s9nhk.nap.wideopenwest.com) has joined #rust
2015-05-25 18:05:21	-->	asQuirreL (asQuirreL@moz-ro1qqu.ox.ac.uk) has joined #rust
2015-05-25 18:06:04	<--	ajhager (aajhager@moz-mcdsgi.iplsin.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-25 18:06:24	<--	ptalbot (ptalbot@moz-j4gnuh.fbx.proxad.net) has quit (Ping timeout: 121 seconds)
2015-05-25 18:06:39	<--	ekidd (ekidd@moz-6t81cn.nh.comcast.net) has quit (Connection closed)
2015-05-25 18:06:59	-->	goyox86 (textual@moz-rvv.00r.255.109.IP) has joined #rust
2015-05-25 18:07:11	vmx	is there an alternative to `tts_to_string`? it adds some not really expected spaces
2015-05-25 18:07:25	llogiq	Hi folks. I'm just trying to test something using regex_macros. I have added regex_macros = "*" to the dev-dependencies and #![plugin(regex_macros)] to the test case.  However, I get an error message " can't find crate for `regex_macros`".
2015-05-25 18:08:22	<--	Guest_ (textual@moz-rtn.fg7.77.192.IP) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-25 18:08:41	<--	goyox86 (textual@moz-rvv.00r.255.109.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-25 18:08:52	<--	Sho (sho@moz-83s.6h6.28.5.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 18:09:11	FreeFull	llogiq: You'll probably need cfg_attr
2015-05-25 18:09:14	scp	Is there a way to have an optional item in a rust macro?
2015-05-25 18:09:21	scp	I know I can do repetition, but what if I just want 1 or 0?
2015-05-25 18:09:54	<--	munksgaard (munksgaard@moz-478pev.u.parknet.dk) has quit (Ping timeout: 121 seconds)
2015-05-25 18:10:12	llogiq	FreeFull, what for? I'm on current nightly, btw.
2015-05-25 18:10:28	llogiq	Just updated half an hour ago.
2015-05-25 18:10:35	@niconii	llogiq: #![plugin(regex_macros)] has to be defined on the crate level
2015-05-25 18:12:00	--	irc: disconnected from server
2015-05-25 18:12:12	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-25 18:12:12	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-25 18:12:12	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-25 18:12:12	--	Channel #rust: 970 nicks (16 ops, 0 halfops, 1 voice, 953 normals)
2015-05-25 18:12:13	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-25 18:12:45	-->	jophish (jophish@moz-fjh8o1.gotadsl.co.uk) has joined #rust
2015-05-25 18:12:49	<--	F1skr (moscar@moz-e9439o.cpe.webspeed.dk) has quit (Quit: WeeChat 1.2)
2015-05-25 18:13:17	--	irc: disconnected from server
2015-05-25 18:13:29	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-25 18:13:29	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-25 18:13:29	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-25 18:13:29	--	Channel #rust: 970 nicks (16 ops, 0 halfops, 1 voice, 953 normals)
2015-05-25 18:13:31	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-25 18:13:31	llogiq	This is in a compiletest, btw.
2015-05-25 18:13:36	<--	goyox86 (textual@moz-rvv.00r.255.109.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-25 18:13:53	<--	willem (willem@moz-facs2s.dynamic.upc.nl) has quit (Quit: leaving)
2015-05-25 18:13:58	<--	kingmahl_ (kingmahl@moz-i3i.pkn.79.172.IP) has quit (Quit: Konversation terminated!)
2015-05-25 18:14:16	llogiq	And adding -Z extra_plugins=regex_macros to the target_rustcflags produces the same error.
2015-05-25 18:14:18	-->	goyox86 (textual@moz-rvv.00r.255.109.IP) has joined #rust
2015-05-25 18:14:20	-->	alonlevy (alon@moz-p48.q13.159.94.IP) has joined #rust
2015-05-25 18:14:47	-->	KLP (KLP@moz-qdcjho.res.rr.com) has joined #rust
2015-05-25 18:15:22	-->	dinfuehr (dinfuehr@moz-81c7pp.highway.telekom.at) has joined #rust
2015-05-25 18:15:22	@niconii	as in, an integration test in the tests/ directory?
2015-05-25 18:16:29	--	irc: disconnected from server
2015-05-25 18:16:45	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-25 18:16:45	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-25 18:16:45	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-25 18:16:46	--	Channel #rust: 970 nicks (16 ops, 0 halfops, 1 voice, 953 normals)
2015-05-25 18:16:47	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-25 18:16:48	llogiq	The test resides in tests/compile-fail and is expected to fail at certain points.
2015-05-25 18:16:50	<--	lenstr (lenstr@moz-s25.vju.25.171.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-25 18:17:01	llogiq	However not at the plugin loading phase.
2015-05-25 18:17:06	-->	goyox86 (textual@moz-rvv.00r.255.109.IP) has joined #rust
2015-05-25 18:18:10	<--	FrozenCow (FrozenCow@moz-i2tvv4.chello.nl) has quit (Quit: Leaving)
2015-05-25 18:18:35	<--	goyox86 (textual@moz-rvv.00r.255.109.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-25 18:18:43	molokdotc	 is the "anything.to_base64() " depreciated?
2015-05-25 18:19:23	sam113101	is it possible to "collect" inside a String that already exists instead of creating a new one?
2015-05-25 18:19:30	<--	dinfuehr (dinfuehr@moz-81c7pp.highway.telekom.at) has quit (Ping timeout: 121 seconds)
2015-05-25 18:19:48	<--	coryforsyth (coryforsyth@moz-hpsim2.fios.verizon.net) has quit (Client exited)
2015-05-25 18:19:50	@niconii	llogiq: well, i can't offer any input about this since i have no idea how compiletest works internally
2015-05-25 18:20:10	-->	summerlight_ (summerlight@moz-99k.2mj.130.121.IP) has joined #rust
2015-05-25 18:20:21	<--	harrisonclarke (harrisoncla@moz-4lq79j.eastlink.ca) has quit (Ping timeout: 121 seconds)
2015-05-25 18:20:48	jn	sam113101: i think it's existing_string.expand(iterator)
2015-05-25 18:20:58	@niconii	molokdotc: take a look at the rustc_serialize crate
2015-05-25 18:21:07	llogiq	niconii, thank you anyway. I'll ask the author on how to add external plugins.
2015-05-25 18:21:29	-->	hyunsik (hyunsik@moz-3qgjl9.ca.comcast.net) has joined #rust
2015-05-25 18:21:30	<--	pgonda (peter@moz-s36.0tp.134.75.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 18:21:47	<--	Triton (cindela@moz-dlkpia.bb.dnainternet.fi) has quit (Ping timeout: 121 seconds)
2015-05-25 18:22:04	-->	dmac_ (dmac@moz-moa.puk.8.50.IP) has joined #rust
2015-05-25 18:22:38	@niconii	!crate rustc-serialize @ molokdotc 
2015-05-25 18:22:39	+rustbot	rustc-serialize (0.3.14) - Generic serialization/deserialization support corresponding to the`derive(RustcEncodable, RustcDecodable)` mode in the compiler. Also includessupport for hex, base64, and json encoding and decoding. -> https://crates.io/crates/rustc-serialize
2015-05-25 18:23:23	-->	dcb (textual@moz-j72nfe.ca.comcast.net) has joined #rust
2015-05-25 18:23:26	@niconii	...oh, it just ignores the @ part with !crate, huh
2015-05-25 18:23:52	<--	alonlevy (alon@moz-p48.q13.159.94.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 18:23:56	llogiq	Ah, I think I see the problem, I'll have to specify where regex_macros is using -L, right?
2015-05-25 18:23:59	@Havvy	niconii:  Yeah...the `@` behavior is for the factoids, not the other commands.
2015-05-25 18:24:09	@niconii	Havvy: gotcha
2015-05-25 18:24:27	jn	is rustbot written in rust?
2015-05-25 18:24:40	-->	Wild_Cat (Max@moz-fa8mvt.dsl.teksavvy.com) has joined #rust
2015-05-25 18:24:47	-->	Rym (y@moz-c2u.sd4.38.217.IP) has joined #rust
2015-05-25 18:24:48	-->	BossKonaSegway (Michael@moz-vp8rf7.res.rr.com) has joined #rust
2015-05-25 18:24:50	rillian	oh right, traits are added, not listed.
2015-05-25 18:24:51	@niconii	jn: nope
2015-05-25 18:25:08	-->	nicknikolov (nicknikolov@moz-0q4.2rm.211.90.IP) has joined #rust
2015-05-25 18:25:09	@niconii	jn: javascript iirc? i don't remember
2015-05-25 18:25:09	 *	rillian mumbles something about meaningless operator overloads
2015-05-25 18:26:02	-->	nyx (nyx@moz-ivelpd.res.rr.com) has joined #rust
2015-05-25 18:26:03	-->	IPoAC (franklin@moz-6f23n2.rev.numericable.fr) has joined #rust
2015-05-25 18:26:26	<--	gleb (gleb@moz-3u1drv.rusanovka-net.kiev.ua) has quit (Ping timeout: 121 seconds)
2015-05-25 18:26:38	-->	GGist (Mibbit@moz-st7v59.wa.comcast.net) has joined #rust
2015-05-25 18:26:45	IPoAC	Hi!
2015-05-25 18:27:19	IPoAC	Is there a zipWith-like operations on iterators in Rust ?
2015-05-25 18:27:20	-->	colinsurprenant (colin@moz-q9ee1n.74.electronicbox.net) has joined #rust
2015-05-25 18:28:00	IPoAC	I found this (https://libraries.io/cargo/zipWith) but I wondered if something like it had been add in the stdlib?
2015-05-25 18:28:07	-->	Zidane (Zidane@moz-382v9o.ca.comcast.net) has joined #rust
2015-05-25 18:28:21	@niconii	IPoAC: don't think so
2015-05-25 18:28:49	IPoAC	niconii: ok, thanks!
2015-05-25 18:28:57	<--	fkaa (tundmatu@moz-501od2.business.telia.com) has quit (Ping timeout: 121 seconds)
2015-05-25 18:29:13	@niconii	IPoAC: you could probably replicate it with zip followed by map, i guess
2015-05-25 18:29:26	IPoAC	Yep, that's what I saw on the link
2015-05-25 18:29:46	IPoAC	But it seemed "cleaner" for me if it was in the stdlib
2015-05-25 18:29:47	-->	hjr3 (hradtke@moz-rga0be.ca.comcast.net) has joined #rust
2015-05-25 18:29:49	jn	IPoAC: maybe itertools has a zip_with or zip_map
2015-05-25 18:29:50	<--	kaeluka (kaeluka@moz-tn3lqd.cust.bredbandsbolaget.se) has quit (Client exited)
2015-05-25 18:29:51	<--	Zidane (Zidane@moz-382v9o.ca.comcast.net) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-05-25 18:30:22	chc4	Is there any reason why "let ref mut w = wind[m]" wouldn't actually use IndexMut instead of Index? It errors about " cannot borrow immutable indexed content as mutable"...but works perfectly fine if I replace wind[m] with wind.index_mut(m). I also didn't change anything about wind before I started getting this error.
2015-05-25 18:30:38	jn	!crate itertools
2015-05-25 18:30:39	+rustbot	itertools (0.3.10) - Extra iterator adaptors, iterator methods and macros. -> https://crates.io/crates/itertools
2015-05-25 18:30:50	jn	^ IPoAC 
2015-05-25 18:30:58	<--	filsmick (filsmick@moz-0svev4.abo.wanadoo.fr) has quit (Quit: )
2015-05-25 18:31:02	IPoAC	Thank you
2015-05-25 18:31:06	<--	kidto_ (gabriel@moz-72d.fff.84.91.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 18:33:03	<--	maraoz (maraoz@moz-9agosh.telecom.net.ar) has quit (Quit: Leaving)
2015-05-25 18:33:08	-->	maraoz (maraoz@moz-9agosh.telecom.net.ar) has joined #rust
2015-05-25 18:33:48	_habnabit	so, is kcov the only code coverage tool that produces results for rust code right now? it looks like gcov is wishlist (https://github.com/rust-lang/rfcs/issues/646) and that's what i was using before. kcov looks neat, but my project calls into a rust staticlib from python, and kcov in its python mode seems to not measure coverage for .rs files
2015-05-25 18:34:14	-->	zhoeon (fc@moz-cuhqb2.cable.teksavvy.com) has joined #rust
2015-05-25 18:34:44	<--	ytain (ytain@moz-ffpck2.dsl.teksavvy.com) has quit (Quit: Textual IRC Client: www.textualapp.com)
2015-05-25 18:35:21	-->	arBmind1 (Andreas@moz-09uqff.dyn.telefonica.de) has joined #rust
2015-05-25 18:35:41	-->	Porkepix (Porkepix@moz-e1bv2v.rev.sfr.net) has joined #rust
2015-05-25 18:35:45	llogiq	Oh, btw. the docs no longer list the syntax crate.
2015-05-25 18:36:19	<--	arBmind (Andreas@moz-258dsr.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2015-05-25 18:36:45	Tari	_habnabit: cachegrind does the job
2015-05-25 18:36:54	<--	turtil (turtil@moz-gfc.es4.23.103.IP) has quit (Quit: WeeChat 1.1.1)
2015-05-25 18:37:12	_habnabit	Tari, oh, yeah, i forgot about cachegrind. it's hella slow last i checked though :(
2015-05-25 18:37:47	eddyb	cachegrind, or callgrind?
2015-05-25 18:37:57	eddyb	and I haven't seen coverage from those
2015-05-25 18:38:27	<--	bluss (bluss@moz-ec5o68.cust.bredbandsbolaget.se) has quit (Ping timeout: 121 seconds)
2015-05-25 18:38:30	<--	loyd (loyd@moz-jsb.32f.108.213.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 18:38:37	<--	fengshaun (fengshaun@moz-oagll1.cpe.pppoe.ca) has quit (Ping timeout: 121 seconds)
2015-05-25 18:38:49	_habnabit	i can't remember which is the tool and which is the valgrind mode
2015-05-25 18:38:58	-->	fengshaun (fengshaun@moz-oagll1.cpe.pppoe.ca) has joined #rust
2015-05-25 18:39:11	eddyb	aren't they both valgrind tools?
2015-05-25 18:40:09	figaro	@scp you can do the following for a macro with 0 or 1 parameters
2015-05-25 18:40:12	figaro	macro_rules! bar {   (    ) => {     println!("no params";   };   ($e:expr) => {     println!("one param");   } }
2015-05-25 18:40:23	@niconii	yeah, they're both valgrind
2015-05-25 18:41:18	-->	yuja (yuja@moz-m62een.so-net.ne.jp) has joined #rust
2015-05-25 18:41:35	<--	Tobba (Tobba@moz-o13d22.bredband.telia.com) has quit (Ping timeout: 121 seconds)
2015-05-25 18:41:44	-->	turtil (turtil@moz-gfc.es4.23.103.IP) has joined #rust
2015-05-25 18:41:46	<--	summerlight_ (summerlight@moz-99k.2mj.130.121.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 18:41:46	-->	rughuth (Mibbit@moz-gj5mk6.mi.comcast.net) has joined #rust
2015-05-25 18:42:45	--	irc: disconnected from server
2015-05-25 18:43:02	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-25 18:43:02	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-25 18:43:02	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-25 18:43:02	--	Channel #rust: 969 nicks (16 ops, 0 halfops, 1 voice, 952 normals)
2015-05-25 18:43:04	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-25 18:43:43	@Havvy	Woo, I broke the compiler.
2015-05-25 18:44:12	jn	ICE?
2015-05-25 18:44:37	-->	turtil (turtil@moz-gfc.es4.23.103.IP) has joined #rust
2015-05-25 18:45:09	<--	joeyjoejoejr (jbdietrich@moz-l52bm6.wi.charter.com) has quit (Ping timeout: 121 seconds)
2015-05-25 18:45:30	<--	jdm (jdm@moz-ilbt2e.cable.teksavvy.com) has quit (Quit: )
2015-05-25 18:45:33	@steveklabnik	!ice
2015-05-25 18:45:33	+rustbot	The solid form of water, and also the Internal Compiler Error. EVERY ICE IS A BUG (even with an incorrect code). Please report any ICE according to: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports
2015-05-25 18:45:39	@steveklabnik	jn: ^ :)
2015-05-25 18:45:41	<--	colinsurprenant (colin@moz-q9ee1n.74.electronicbox.net) has quit (Client exited)
2015-05-25 18:46:11	-->	bluss (bluss@moz-ec5o68.cust.bredbandsbolaget.se) has joined #rust
2015-05-25 18:48:02	--	irc: disconnected from server
2015-05-25 18:48:13	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-25 18:48:13	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-25 18:48:13	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-25 18:48:14	--	Channel #rust: 967 nicks (15 ops, 0 halfops, 1 voice, 951 normals)
2015-05-25 18:48:15	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-25 18:48:38	<--	kngl (Adium@moz-rmgnkh.dynamic.voo.be) has quit (Quit: Leaving.)
2015-05-25 18:49:21	-->	boblehest (jlode@moz-mquaka.customer.lyse.net) has joined #rust
2015-05-25 18:50:12	-->	fleabay (Mibbit@moz-3v9r7r.ip.windstream.net) has joined #rust
2015-05-25 18:51:18	<--	jophish (jophish@moz-fjh8o1.gotadsl.co.uk) has quit (Connection closed)
2015-05-25 18:51:34	<--	zhoeon (fc@moz-cuhqb2.cable.teksavvy.com) has quit (Ping timeout: 121 seconds)
2015-05-25 18:52:01	zofrex	has anyone tried running AFL on rustc yet
2015-05-25 18:52:08	<--	tomprogrammer (thomas@moz-0m5ri3.tr5r.qept.4dd0.2001.IP) has quit (Quit: WeeChat 1.2)
2015-05-25 18:52:20	-->	brson (brson@moz-f0v.335.39.84.IP) has joined #rust
2015-05-25 18:52:20	--	Mode #rust [+ao brson brson] by ChanServ
2015-05-25 18:52:23	jn	zofrex: yes
2015-05-25 18:52:30	<--	laumann (thomas@moz-n9e72h.0.fullrate.dk) has quit (Ping timeout: 121 seconds)
2015-05-25 18:52:32	zofrex	well there goes my best idea, lol
2015-05-25 18:52:43	jn	keegan mcallister has
2015-05-25 18:52:54	jn	https://github.com/kmcallister/afl.rs
2015-05-25 18:53:17	XMPPwocky	hasn't been run on rustc though, afaik
2015-05-25 18:53:31	@steveklabnik	it was
2015-05-25 18:53:33	jn	and he keeps a trophy case just like lcamtuf  ♥
2015-05-25 18:53:36	@steveklabnik	it found two bugs in the parser, which was fixed
2015-05-25 18:53:40	@steveklabnik	were
2015-05-25 18:54:00	<--	bananagram (.@moz-3ge.jr1.52.198.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-25 18:54:01	<--	eibwen (eibwen@moz-gt3bpv.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2015-05-25 18:54:29	<--	boblehest (jlode@moz-mquaka.customer.lyse.net) has quit (Ping timeout: 121 seconds)
2015-05-25 18:54:33	-->	laumann (thomas@moz-n9e72h.0.fullrate.dk) has joined #rust
2015-05-25 18:57:03	<--	dmac_ (dmac@moz-moa.puk.8.50.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 18:58:39	<--	p32blo (p32blo@moz-fhmueq.1oel.r662.0690.2001.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 18:59:27	<--	Matthias247 (Miranda@moz-49li60.hsi14.kabel-badenwuerttemberg.de) has quit (Connection closed)
2015-05-25 19:00:08	<--	fleabay (Mibbit@moz-3v9r7r.ip.windstream.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-25 19:00:29	<--	Hannibal_Smith (nico@moz-7gi1c3.retail.telecomitalia.it) has quit (Quit: Leaving)
2015-05-25 19:00:43	-->	zhoeon (fc@moz-cuhqb2.cable.teksavvy.com) has joined #rust
2015-05-25 19:01:07	<--	Tobba (Tobba@moz-o13d22.bredband.telia.com) has quit (Ping timeout: 121 seconds)
2015-05-25 19:01:41	-->	boblehest (jlode@moz-c7qhnf.customer.lyse.net) has joined #rust
2015-05-25 19:02:09	<--	errordeveloper (ilya@moz-41f.3sd.204.90.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 19:02:38	<--	Nextra (Nextra@moz-ileh1t.ewe-ip-backbone.de) has quit (Quit: Leaving)
2015-05-25 19:02:50	-->	larhat1 (Adium@moz-vlo5br.cable.virginm.net) has joined #rust
2015-05-25 19:02:54	-->	JagaJaga (JagaJaga@moz-ua8.hhl.62.178.IP) has joined #rust
2015-05-25 19:02:55	-->	errordeveloper (ilya@moz-41f.3sd.204.90.IP) has joined #rust
2015-05-25 19:03:08	-->	ajhager (aajhager@moz-mcdsgi.iplsin.sbcglobal.net) has joined #rust
2015-05-25 19:03:45	-->	dmac_ (dmac@moz-moa.puk.8.50.IP) has joined #rust
2015-05-25 19:03:53	-->	Tobba (Tobba@moz-o13d22.bredband.telia.com) has joined #rust
2015-05-25 19:04:54	<--	rughuth (Mibbit@moz-gj5mk6.mi.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-25 19:05:31	-->	mib_nio7qe (Mibbit@moz-ti5.kgs.90.95.IP) has joined #rust
2015-05-25 19:05:53	<--	yuja (yuja@moz-m62een.so-net.ne.jp) has quit (Ping timeout: 121 seconds)
2015-05-25 19:05:56	mib_nio7qe	Hi
2015-05-25 19:06:00	mib_nio7qe	I need help guys
2015-05-25 19:06:03	mib_nio7qe	http://is.gd/c8yTFl
2015-05-25 19:06:14	<--	mcarton (martin@moz-ag64s6.rev.sfr.net) has quit (Ping timeout: 121 seconds)
2015-05-25 19:06:24	mib_nio7qe	I've spend lots of hours on this already and I'm no closer to figuring it out
2015-05-25 19:06:57	mib_nio7qe	Error I get is: 'select' does not live long enough
2015-05-25 19:06:59	<--	jaen (jaen@moz-ifmik2.copit.pl) has quit (Connection closed)
2015-05-25 19:07:12	<--	ajhager (aajhager@moz-mcdsgi.iplsin.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-25 19:07:27	<--	burntsushi (burntsushi@moz-t92kn9.ma.charter.com) has quit (Connection closed)
2015-05-25 19:07:44	-->	burntsushi (burntsushi@moz-t92kn9.ma.charter.com) has joined #rust
2015-05-25 19:08:48	-->	wohiler (wohiler@moz-8id.6e1.62.133.IP) has joined #rust
2015-05-25 19:09:17	<--	mib_nio7qe (Mibbit@moz-ti5.kgs.90.95.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-25 19:09:24	-->	jtdowney (jtdowney@moz-obnifk.il.comcast.net) has joined #rust
2015-05-25 19:12:14	<--	geri (Mibbit@moz-vgfplj.highway.telekom.at) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-25 19:12:59	<--	brson (brson@moz-f0v.335.39.84.IP) has quit (Quit: leaving)
2015-05-25 19:13:43	<--	jmbto (jmbto@moz-rsj2ca.hca5.8frp.0e35.2a01.IP) has quit (Quit: WeeChat 1.1.1)
2015-05-25 19:14:06	<--	asQuirreL (asQuirreL@moz-ro1qqu.ox.ac.uk) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-25 19:14:23	-->	nedp (nedp@moz-vg6vvt.bigpond.net.au) has joined #rust
2015-05-25 19:14:43	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Connection closed)
2015-05-25 19:14:59	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-25 19:16:01	genbattle	hmmm, didn't even stay long enough for an answer
2015-05-25 19:16:07	-->	dinfuehr (dinfuehr@moz-81c7pp.highway.telekom.at) has joined #rust
2015-05-25 19:16:52	-->	js (js@moz-uf0ejo.dclient.hispeed.ch) has joined #rust
2015-05-25 19:17:11	-->	p32blo (p32blo@moz-59o.cni.180.89.IP) has joined #rust
2015-05-25 19:17:15	-->	lenstr (lenstr@moz-s25.vju.25.171.IP) has joined #rust
2015-05-25 19:19:25	<--	silven (quassel@moz-0roor3.priv.bahnhof.se) has quit (Ping timeout: 121 seconds)
2015-05-25 19:19:35	-->	silven (quassel@moz-0roor3.priv.bahnhof.se) has joined #rust
2015-05-25 19:19:45	sam113101	borrowing mib for an answer but mib does not live long enough
2015-05-25 19:20:10	-->	etenil (etenil@moz-kvinmd.skybroadband.com) has joined #rust
2015-05-25 19:20:11	<--	dinfuehr (dinfuehr@moz-81c7pp.highway.telekom.at) has quit (Ping timeout: 121 seconds)
2015-05-25 19:20:13	&mbrubeck	sam113101++
2015-05-25 19:21:18	XMPPwocky	error: unexpected token +
2015-05-25 19:21:22	XMPPwocky	did you mean sam113101 += 1
2015-05-25 19:21:23	<--	lenstr (lenstr@moz-s25.vju.25.171.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 19:21:23	<--	jtdowney (jtdowney@moz-obnifk.il.comcast.net) has quit (Quit: )
2015-05-25 19:21:54	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Connection closed)
2015-05-25 19:22:25	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-25 19:22:28	<--	tetsuharu (testuharu@moz-fmjbd6.ucom.ne.jp) has quit (Quit: Bye!)
2015-05-25 19:22:57	<--	jedireza (jedireza@moz-ungcc1.dsl.ovh.fr) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-25 19:23:54	<--	larhat1 (Adium@moz-vlo5br.cable.virginm.net) has quit (Quit: Leaving.)
2015-05-25 19:24:03	-->	Layl (Layl@moz-65hqmf.direct-adsl.nl) has joined #rust
2015-05-25 19:24:16	-->	ktt3ja (ktt3ja@moz-6uc24k.rkvm.0c6k.0008.2601.IP) has joined #rust
2015-05-25 19:25:00	-->	mdup (cc@moz-6fgo9p.abo.wanadoo.fr) has joined #rust
2015-05-25 19:26:26	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Ping timeout: 121 seconds)
2015-05-25 19:26:58	skeuomorf	Is there a better way to write this abomination? 
2015-05-25 19:27:03	Dabo	probably
2015-05-25 19:27:42	<--	maraoz (maraoz@moz-9agosh.telecom.net.ar) has quit (Ping timeout: 121 seconds)
2015-05-25 19:28:24	skeuomorf	ugh, clipboards and linux :(
2015-05-25 19:28:32	Dabo	if mib_nio7qe is still here as someone else, just replace `&'rx self` with `&self` - self shouldn't have to live as long as 'rx
2015-05-25 19:28:36	skeuomorf	ICCCM is horrible
2015-05-25 19:28:56	skeuomorf	>> let key = hash::<_, SipHasher>(&((node.to_string()) + &(i.to_string())));
2015-05-25 19:29:06	skeuomorf	^ The abomination I was referring to earlier
2015-05-25 19:29:07	<--	mdup (cc@moz-6fgo9p.abo.wanadoo.fr) has quit (Ping timeout: 121 seconds)
2015-05-25 19:29:25	-->	dwrensha (chatzilla@moz-46o4hi.pa.comcast.net) has joined #rust
2015-05-25 19:30:10	<--	Wild_Cat (Max@moz-fa8mvt.dsl.teksavvy.com) has quit (Ping timeout: 121 seconds)
2015-05-25 19:30:11	&mbrubeck	Dabo: I tried that too but it still doesn't compile...
2015-05-25 19:30:18	Dabo	mbrubeck, true, yeah
2015-05-25 19:30:31	&mbrubeck	Dabo: I think the problem is that Selector is trying to store references borrowed from itself
2015-05-25 19:30:52	&mbrubeck	(indirectly, through Select::handle
2015-05-25 19:31:02	&mbrubeck	)
2015-05-25 19:31:04	FreeFull	skeuomorf: I don't see why there are so many parentheses
2015-05-25 19:31:11	-->	mkpankov` (user@moz-mbl.u5t.23.84.IP) has joined #rust
2015-05-25 19:31:16	Dabo	mbrubeck, hm, yeah
2015-05-25 19:31:17	-->	aatch (james@moz-8r6eer.orns.ubhm.e000.2406.IP) has joined #rust
2015-05-25 19:31:41	&mbrubeck	which is generally a no-no in Rust if you don't want to end up with weird immovable values
2015-05-25 19:31:55	skeuomorf	FreeFull: Well, because the `&` operator has higher precedence than `.`,... mostly
2015-05-25 19:31:59	Dabo	mbrubeck, yeah, exactly that
2015-05-25 19:32:10	IPoAC	skeuomorf: but around the X.to_string()?
2015-05-25 19:32:32	<--	mkpankov (user@moz-mbl.u5t.23.84.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 19:32:50	<--	etenil (etenil@moz-kvinmd.skybroadband.com) has quit (Quit: Leaving)
2015-05-25 19:33:17	skeuomorf	FreeFull: It would be awesome if there were a function to get a reference i.e. emulate the `&` operator's operation
2015-05-25 19:33:25	skeuomorf	IPoAC: What do you mean?
2015-05-25 19:33:36	Dabo	hash::<_, SipHasher>(&(node.to_string() + &i.to_string())); 
2015-05-25 19:33:38	Dabo	should at least work
2015-05-25 19:33:46	skeuomorf	IPoAC: You mean why there isn't a `&` in front of one of them?
2015-05-25 19:34:17	Dabo	hash::<_, SipHasher>(&format!("{}{}", node, i)); << skeuomorf depending on the type of i and node, that may work
2015-05-25 19:34:21	-->	njn (chatzilla@moz-e6r6of.iinet.net.au) has joined #rust
2015-05-25 19:34:24	skeuomorf	Dabo: doesn't `.` have lower precedence than `&`?
2015-05-25 19:34:30	&mbrubeck	skeuomorf: I don't think so.
2015-05-25 19:34:47	&mbrubeck	playbot: let x: &u32 = &12.count_zeros()
2015-05-25 19:34:48	--	Notice(playbot): <anon>:10:5: 10:6 error: expected one of `.`, `;`, or an operator, found `}`
2015-05-25 19:34:48	--	Notice(playbot): <anon>:10     });
2015-05-25 19:34:48	--	Notice(playbot): output truncated; full output at: http://bit.ly/1HHmuLw
2015-05-25 19:34:50	&mbrubeck	playbot: let x: &u32 = &12.count_zeros();
2015-05-25 19:34:52	--	Notice(playbot): <anon>:9:27: 9:40 error: type `_` does not implement any method in scope named `count_zeros`
2015-05-25 19:34:52	--	Notice(playbot): <anon>:9         let x: &u32 = &12.count_zeros();
2015-05-25 19:34:52	--	Notice(playbot): output truncated; full output at: http://bit.ly/1KvUvC3
2015-05-25 19:34:54	&mbrubeck	sigh
2015-05-25 19:35:14	&mbrubeck	Stupid generic int method resolution...
2015-05-25 19:35:18	<--	veqz_ (veqz@moz-rr3tu7.60.getinternet.no) has quit (Ping timeout: 121 seconds)
2015-05-25 19:35:29	&mbrubeck	playbot: let x: &u32 = &12i32.count_zeros();
2015-05-25 19:35:30	--	Notice(playbot): ()
2015-05-25 19:36:18	IPoAC	skeuomorf: I meant what Dabo said, i.e. you could write `(node.to_string())` as `node.to_string()`
2015-05-25 19:36:39	<--	laumann (thomas@moz-n9e72h.0.fullrate.dk) has quit (Ping timeout: 121 seconds)
2015-05-25 19:36:41	-->	Wild_Cat (Max@moz-fa8mvt.dsl.teksavvy.com) has joined #rust
2015-05-25 19:37:20	Dabo	skeuomorf, `&a.b()` is the same as `&(a.b())` if that's what you are asking
2015-05-25 19:37:32	aatch	unary operators always have higher precedence than binary ones.
2015-05-25 19:37:46	Dabo	skeuomorf, the second example I posted should work and look nicer though: `hash::<_, SipHasher>(&format!("{}{}", node, i));`
2015-05-25 19:37:48	aatch	Well, sort of, anyway.
2015-05-25 19:37:55	sam113101	can I return a reference to the field of a struct, from a function?
2015-05-25 19:38:03	skeuomorf	Dabo: i is a usize and node is a custom trait that inherits other traits FWIW
2015-05-25 19:38:04	aatch	No, wait, yes always
2015-05-25 19:38:19	Dabo	skeuomorf, if one of those traits is Display than that would work
2015-05-25 19:38:21	skeuomorf	mbrubeck: hmm
2015-05-25 19:38:23	<--	areski (areski@moz-7o8r19.user.ono.com) has quit (Ping timeout: 121 seconds)
2015-05-25 19:38:25	 *	aatch confused self about what precedence means
2015-05-25 19:38:27	skeuomorf	IPoAC: Ah, I see
2015-05-25 19:38:28	vmx	is there a way to get a string back from `tts` that looks like the original input string? let tts = ecx.parse_tts("self.abc()".to_string())
2015-05-25 19:38:44	skeuomorf	Dabo: Yeah, the format looks nicer
2015-05-25 19:38:54	Dabo	otherwise hash::<_, SipHasher>(&format!("{}{}", node, i.to_string()));
2015-05-25 19:38:59	Dabo	if it isn't Display
2015-05-25 19:39:01	skeuomorf	Dabo: hmmm, I don't think it does
2015-05-25 19:39:09	<--	Quanttek (quassel@moz-25k96c.6fkd.dvrb.8108.2a02.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 19:39:22	skeuomorf	>> pub trait Node: Hash + Clone + ToString + Debug{}
2015-05-25 19:39:23	&mbrubeck	`.` is not considered an "operator" by the Rust grammar.
2015-05-25 19:39:30	skeuomorf	^ The trait in question
2015-05-25 19:39:31	aatch	Isn't `ToString` just a wrapper for `Display`?
2015-05-25 19:39:43	skeuomorf	Dabo: Great, thanks! :)
2015-05-25 19:40:01	skeuomorf	mbrubeck: ah, awesome. Thanks :)
2015-05-25 19:41:22	aatch	skeuomorf, you should just require `Display` instead of `ToString`.
2015-05-25 19:41:40	aatch	skeuomorf, since `ToString` is implemented for all types implementing `Display` anyway.
2015-05-25 19:41:59	<--	llogiq (andre@moz-ebe0kb.unity-media.net) has quit (Quit: Verlassend)
2015-05-25 19:42:13	-->	scape (chris@moz-ci61eb.nj.comcast.net) has joined #rust
2015-05-25 19:42:17	Dabo	that is true
2015-05-25 19:42:30	 *	skeuomorf looks at the Display trait
2015-05-25 19:42:54	<--	dmac_ (dmac@moz-moa.puk.8.50.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 19:43:01	scape	what happened to Int trait? from core::num
2015-05-25 19:43:07	-->	frewsxcv (uid86219@moz-dneii9.brockwell.irccloud.com) has joined #rust
2015-05-25 19:43:12	@steveklabnik	!crate num
2015-05-25 19:43:13	+rustbot	num (0.1.24) - Simple numerics. This crate contains basic arbitrary-sized integer,rational, and complex types. -> https://crates.io/crates/num
2015-05-25 19:43:17	@steveklabnik	scape: ^
2015-05-25 19:43:31	aatch	hmm...
2015-05-25 19:43:35	scape	ah ok thx steveklabnik 
2015-05-25 19:43:37	aatch	!crate num @ scape
2015-05-25 19:43:37	+rustbot	num (0.1.24) - Simple numerics. This crate contains basic arbitrary-sized integer,rational, and complex types. -> https://crates.io/crates/num
2015-05-25 19:43:49	&mbrubeck	scape: Also, a lot of the methods of the old std::num traits are now intrinsic methods on the primitive types.
2015-05-25 19:43:54	aatch	Ah, doesn't work for !crate
2015-05-25 19:44:05	ChrisMorgan	aatch: … but at least it ignores anything after the first word.
2015-05-25 19:44:26	ChrisMorgan	Havvy: it’d be nice to have !crate use the @ syntax like factoids
2015-05-25 19:44:29	frewsxcv	suppose i have a rust crate A that generates a binary in target/*/binary-here. if i have a crate B that depends on crate A, how do i get the A binary generated when i build B?
2015-05-25 19:46:14	<--	simukis (nagisa@moz-8t068g.static.zebra.lt) has quit (Ping timeout: 121 seconds)
2015-05-25 19:47:16	<--	figaro (Mibbit@moz-l6bg33.res.rr.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-25 19:48:06	<--	scape (chris@moz-ci61eb.nj.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-25 19:48:45	&mbrubeck	frewsxcv: From https://github.com/rust-lang/cargo/issues/748 it sounds like for now your best-supported option is to use a build script that links to your dependency's lib,rather than running your binary.
2015-05-25 19:49:08	frewsxcv	mbrubeck: hm alright, thanks
2015-05-25 19:49:12	<--	vmx (vmx@moz-ckcvco.pools.vodafone-ip.de) has quit (Quit: Leaving)
2015-05-25 19:50:06	-->	Kingsquee (kingsley@moz-3fm07c.bchsia.telus.net) has joined #rust
2015-05-25 19:50:40	<--	mkpankov` (user@moz-mbl.u5t.23.84.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 19:50:54	-->	qwerty_nor (Thunderbird@moz-mmjb8o.uq66.lk4q.0006.2601.IP) has joined #rust
2015-05-25 19:51:42	FreeFull	skeuomorf: &((node.to_string()) + &(i.to_string())) should be the same as &(node.to_string() + &i.to_string())
2015-05-25 19:51:52	Wilduck	I just started refactoring my first bit of rust code into a couple libraries. When I’m writing code in a library (which includes a `use std::io`), why is it nessecary throughout the code to specify `::std::io::Error` instead of `std::io::Error` to get my code to compile? In main.rs, I could simply use `std::io::Error`.
2015-05-25 19:52:07	FreeFull	skeuomorf: Although others have already answered
2015-05-25 19:52:31	skeuomorf	FreeFull: Ah, yes, Dabo has clarified that, I mistakengly assumed that `.` was an operator in Rust and had lower precedence than `&`
2015-05-25 19:52:33	FreeFull	Wilduck: It's because paths are relative unless you have the ::
2015-05-25 19:52:43	-->	jtdowney (jtdowney@moz-obnifk.il.comcast.net) has joined #rust
2015-05-25 19:53:09	-->	maxadjsky (max@moz-nek.ngq.59.218.IP) has joined #rust
2015-05-25 19:53:24	&mbrubeck	Wilduck: If you have `use std::io;` then you can just say `io::Error`
2015-05-25 19:53:32	Wilduck	FreeFull: So if I’m writing in a library, I’m always going to have to use the first ::? A use declaration at the top of the file doesn’t bring that library into the current namespace?
2015-05-25 19:53:40	skeuomorf	What's the cleanest way to get rid of the unused variable warning that occurs because of this snippet? https://gist.github.com/anonymous/c3b8fa083d25e9511e8f I have no use for the `x` in `Some(x)`
2015-05-25 19:53:54	Wilduck	mbrubeck: Ahhh, that makes a lot of sense
2015-05-25 19:54:01	&mbrubeck	Wilduck: `use std::io;` binds `io` in the current namespace to the path `::std::io`
2015-05-25 19:54:22	Wilduck	Awesome. That’s very clear. Thank you.
2015-05-25 19:54:23	aatch	skeuomorf, if you don't care about the value in a pattern, you can use `_`
2015-05-25 19:54:27	 *	skeuomorf should probably rename the lambda parameters
2015-05-25 19:54:46	Dabo	skeuomorf, probably _
2015-05-25 19:54:52	skeuomorf	aatch: Ah, nice :)
2015-05-25 19:55:02	skeuomorf	I thought it was just an idiom
2015-05-25 19:55:03	<--	jminer (Instantbird@moz-b1u.qch.163.66.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 19:55:04	Dabo	like Some(_)
2015-05-25 19:55:14	skeuomorf	err, s/idiom/convention
2015-05-25 19:55:21	&mbrubeck	Any name starting with _ will silence unused variable warnings.
2015-05-25 19:55:21	skeuomorf	Dabo: Yeah, works!
2015-05-25 19:55:23	Dabo	nah, _ actually discards the value
2015-05-25 19:55:28	&mbrubeck	But `_` alone is special because it doesn't even create a binding.
2015-05-25 19:55:29	frewsxcv	or if there are multiple parameters you don't care about: Something(..)
2015-05-25 19:55:29	Dabo	_x would keep the value but remove warnings
2015-05-25 19:55:50	aatch	skeuomorf, `_` is a special identifier (you can't actually use just `_` like you can with, say, `_foo`.
2015-05-25 19:55:56	aatch	)
2015-05-25 19:56:10	FreeFull	Wilduck: It's more to do with submodules than libraries
2015-05-25 19:56:18	-->	hstefan (quassel@moz-hnlou0.yuriks.net) has joined #rust
2015-05-25 19:56:38	FreeFull	Wilduck: You can also do  use std; at the top of the file and then you can write std::io::etc()
2015-05-25 19:56:46	aatch	Dabo, with optimisation, it doesn't really make a difference, if you don't use the value, you don't use it. `_` vs `_x` doesn't really matter.
2015-05-25 19:57:00	Dabo	aatch, it matters for running destructors
2015-05-25 19:57:04	skeuomorf	mbrubeck: Where can I find this in the docs? (if at all).
2015-05-25 19:57:19	<--	flugsio (flugsio@moz-283uu4.tbcn.telia.com) has quit (Quit: WeeChat 1.2)
2015-05-25 19:57:22	Wilduck	FreeFull: Yeah, I’m clearly still getting used to that distinction, but you and mbrubeck definitely cleared some things up for me.
2015-05-25 19:57:33	Dabo	like if you use _, the value is destroyed immediately, but if it is some kind of lock guard, you'll need _x to keep it around in the current scope
2015-05-25 19:57:41	Dabo	as far as I know at least
2015-05-25 19:57:52	aatch	Dabo, I'm not sure that's true.
2015-05-25 19:59:32	<--	nicknikolov (nicknikolov@moz-0q4.2rm.211.90.IP) has quit (Connection closed)
2015-05-25 19:59:33	<--	jtdowney (jtdowney@moz-obnifk.il.comcast.net) has quit (Connection closed)
2015-05-25 19:59:54	-->	nicknikolov (nicknikolov@moz-0q4.2rm.211.90.IP) has joined #rust
2015-05-25 20:01:31	aatch	Dabo, doesn't look like using `_` changes the clean-up order.
2015-05-25 20:01:49	@steveklabnik	rust at least _used_ to behave like this
2015-05-25 20:01:56	@steveklabnik	there was a difference between _ and _x
2015-05-25 20:02:02	-->	tomleb (tomleb@moz-kvukkm.dsl.bell.ca) has joined #rust
2015-05-25 20:02:29	<--	Tobba (Tobba@moz-o13d22.bredband.telia.com) has quit (Ping timeout: 121 seconds)
2015-05-25 20:02:29	<--	espadrine (tyl@moz-l019mn.fbx.proxad.net) has quit (Ping timeout: 121 seconds)
2015-05-25 20:02:35	Dabo	aatch, ah, ok 
2015-05-25 20:02:54	<--	JagaJaga (JagaJaga@moz-ua8.hhl.62.178.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 20:03:17	tomleb	What are the rust_try_inner, rust_try and rs::lang something stack frames? 
2015-05-25 20:03:21	<--	envi_u (envi@moz-ih5.olo.169.121.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 20:03:25	&mbrubeck	aatch: http://is.gd/gpAzVQ
2015-05-25 20:03:27	-->	brianloveswords (brianlovesw@moz-tq78gs.fios.verizon.net) has joined #rust
2015-05-25 20:03:29	&mbrubeck	Looks to me like it does.
2015-05-25 20:03:31	tomleb	That I can see while debugging with gdb
2015-05-25 20:03:32	-->	nickniko_ (nicknikolov@moz-0q4.2rm.211.90.IP) has joined #rust
2015-05-25 20:03:34	<--	nicknikolov (nicknikolov@moz-0q4.2rm.211.90.IP) has quit (Connection closed)
2015-05-25 20:04:20	aatch	steveklabnik, well there still is, technically `_` isn't an identifier, it's a pattern (or a "type"), hence why `let _ = foo` works, but `_ + 1` is a syntax error.
2015-05-25 20:04:43	aatch	mbrubeck, that seems to be the only case it does that though: http://is.gd/4CYJfF
2015-05-25 20:04:45	-->	ComfortablyNull (Mibbit@moz-6u3r3d.biz.rr.com) has joined #rust
2015-05-25 20:04:50	&mbrubeck	skeuomorf: The reference doesn't seem to document the exact difference between _ (which it calls a "placeholder") and variable bindings; it only mentions it very briefly.
2015-05-25 20:04:57	@steveklabnik	aatch: right, but not the part we're talking about :)
2015-05-25 20:05:04	swgillespie	tomleb: https://github.com/rust-lang/rust/blob/43cf733bfa5affc74485daeae179cc2f855b5512/src/rt/rust_try.ll#L17
2015-05-25 20:05:21	Dabo	aatch, ok yeah, I hadn't tested/worked with that in a while I guess
2015-05-25 20:05:45	-->	peferron (peferron@moz-k89vq8.ca.comcast.net) has joined #rust
2015-05-25 20:05:45	swgillespie	tomleb: it's a function that the runtime uses to catch exceptions
2015-05-25 20:05:56	@Havvy	ChrisMorgan:  Yeah...it's asked often (including myself...)
2015-05-25 20:06:06	skeuomorf	mbrubeck: Hmm, I was actually asking cause I thought it was highly unlikely that I would stumble upon this on my own i.e. without asking here
2015-05-25 20:06:12	hstefan	hmm, is any of the docs from http://www.rust-lang.org/ working for you? I'm trying to grab the book for rust stable but I'm getting a "Secure Connection Failed" on firefox
2015-05-25 20:06:16	aatch	Dabo, mbrubeck, `let _ = expr;` is identical to just having `expr;`
2015-05-25 20:06:35	&mbrubeck	skeuomorf: Yeah, I agree.
2015-05-25 20:06:49	tomleb	swgillespie: Thanks
2015-05-25 20:06:56	 *	skeuomorf should probably open an issue
2015-05-25 20:07:12	ChrisMorgan	Havvy: is rustbot’s code public?
2015-05-25 20:07:26	@Havvy	Yeah.
2015-05-25 20:07:27	-->	zzing (textual@moz-jucm1n.cpe.distributel.net) has joined #rust
2015-05-25 20:07:32	@Havvy	https://github.com/tennu/tennu
2015-05-25 20:07:44	aatch	The reason being that we have slightly different codegen for when the result of an expression is ignored.
2015-05-25 20:08:20	ChrisMorgan	Havvy: but things like !crate that you have added?
2015-05-25 20:08:24	<--	nyx (nyx@moz-ivelpd.res.rr.com) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-25 20:08:36	@Havvy	That's located at https://github.com/havvy/tennu-rust-help
2015-05-25 20:09:00	zofrex	WFM, hstefan 
2015-05-25 20:09:06	@Havvy	Adding the `@ nickname` to !crate would be easy, but it'd be the wrong thing to do.
2015-05-25 20:09:32	skeuomorf	There https://github.com/rust-lang/rust/issues/25786
2015-05-25 20:09:35	@Havvy	Adding a middleware stack to the commands plugin would probably be more proper.
2015-05-25 20:09:46	Dabo	aatch, seems `let _ = expr;` is like `expr;`, but `let _x = expr;` isn't the same as those two .-.
2015-05-25 20:09:47	skeuomorf	I struggled with wording it, so feel free to comment
2015-05-25 20:09:51	-->	Tobba (Tobba@moz-o13d22.bredband.telia.com) has joined #rust
2015-05-25 20:09:52	hstefan	zofrex: thanks apparently it's just me then
2015-05-25 20:10:13	Dabo	also there is a slight difference in `Some(_)` and `Some(_x)`, as Some(_x) does move the value into the match statement, instead of leaving it untouched
2015-05-25 20:10:15	Dabo	http://is.gd/sYLokO
2015-05-25 20:10:22	zofrex	what version of firefox are you using hstefan 
2015-05-25 20:10:40	hstefan	38.0.1
2015-05-25 20:10:42	-->	copycat (Thunderbird@moz-dpm.8hc.223.111.IP) has joined #rust
2015-05-25 20:10:53	zofrex	hm same. and it only happens in firefox?
2015-05-25 20:10:54	<--	Skyler (Skyler@moz-rv949t.sd.cox.net) has quit (Client exited)
2015-05-25 20:11:02	<--	tigrou3tac (fabien@moz-gdonfo.fbx.proxad.net) has quit (Ping timeout: 121 seconds)
2015-05-25 20:11:04	<--	qwerty_nor (Thunderbird@moz-mmjb8o.uq66.lk4q.0006.2601.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 20:11:18	Dabo	hstefan, zofrex https://www.rust-lang.org/ doesn't work at all, but http:// does
2015-05-25 20:11:46	&mbrubeck	Dabo: Same is true for all custom domains hosted on GitHub pages...
2015-05-25 20:11:51	Dabo	the https:// one seems to just have github certificates, so if you're using something which forces https it won't work
2015-05-25 20:11:59	Dabo	mbrubeck, yeah, just pointing that out
2015-05-25 20:12:43	&mbrubeck	and https://rust-lang.github.io/rust-www/ doesn't work because of absulute URIs in the source...
2015-05-25 20:13:56	hstefan	indeed, something is forcing https in my browser, I thought it was meant to be used with https so I didn't consider that possibility
2015-05-25 20:14:02	hstefan	but yeah, http works just fine
2015-05-25 20:14:09	hstefan	thanks
2015-05-25 20:15:43	swgillespie	so it turns out you can define a #[no_mangle]'d function called rust_try
2015-05-25 20:15:49	swgillespie	:(
2015-05-25 20:16:05	<--	tomleb (tomleb@moz-kvukkm.dsl.bell.ca) has quit (Quit: leaving)
2015-05-25 20:16:42	swgillespie	http://is.gd/m3RbpR
2015-05-25 20:16:52	-->	dinfuehr (dinfuehr@moz-81c7pp.highway.telekom.at) has joined #rust
2015-05-25 20:17:02	-->	Zidane (Zidane@moz-382v9o.ca.comcast.net) has joined #rust
2015-05-25 20:17:08	@steveklabnik	bummer
2015-05-25 20:17:12	-->	efindlay (Mibbit@moz-ftcd1s.tachikawa.mopera.net) has joined #rust
2015-05-25 20:17:33	-->	xificurC_ (xificurC@moz-3u7gmd.chello.sk) has joined #rust
2015-05-25 20:17:48	<--	xificurC (xificurC@moz-3u7gmd.chello.sk) has quit (Connection closed)
2015-05-25 20:17:50	swgillespie	i wonder if that's worth a lint
2015-05-25 20:17:53	swgillespie	lol
2015-05-25 20:17:57	aatch	Man the Rust community is awesome, I put code up and less than a day later I get a pull request.
2015-05-25 20:18:12	@steveklabnik	:)
2015-05-25 20:18:33	<--	Zidane (Zidane@moz-382v9o.ca.comcast.net) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-05-25 20:18:36	XMPPwocky	swgillespie: wha's that supposed to do?
2015-05-25 20:18:42	<--	hjr3 (hradtke@moz-rga0be.ca.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2015-05-25 20:18:44	swgillespie	XMPPwocky: bad things
2015-05-25 20:19:00	 *	swgillespie shrug
2015-05-25 20:19:24	-->	Skyler (Skyler@moz-rv949t.sd.cox.net) has joined #rust
2015-05-25 20:19:31	<--	Skyler (Skyler@moz-rv949t.sd.cox.net) has quit (Client exited)
2015-05-25 20:20:56	<--	dinfuehr (dinfuehr@moz-81c7pp.highway.telekom.at) has quit (Ping timeout: 121 seconds)
2015-05-25 20:21:14	<--	p32blo (p32blo@moz-59o.cni.180.89.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 20:21:51	-->	Racquetball (namestolenw@moz-1ltgc0.res.rr.com) has joined #rust
2015-05-25 20:22:11	-->	plumshark (pat@moz-p569rf.35n5.ltgp.0306.2602.IP) has joined #rust
2015-05-25 20:22:53	<--	brianloveswords (brianlovesw@moz-tq78gs.fios.verizon.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-25 20:22:59	-->	brianloveswords (brianlovesw@moz-tq78gs.fios.verizon.net) has joined #rust
2015-05-25 20:23:09	<--	}ls{ (uhelp@moz-oe0goo.dip0.t-ipconnect.de) has quit (Quit: User terminated by real life interrupt)
2015-05-25 20:23:25	<--	Gabriel_7 (Gabriel@moz-fn9av0.mtgr.92aj.0e35.2a01.IP) has quit (Connection closed)
2015-05-25 20:24:35	<--	efindlay (Mibbit@moz-ftcd1s.tachikawa.mopera.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-25 20:24:52	-->	pgonda (peter@moz-s36.0tp.134.75.IP) has joined #rust
2015-05-25 20:27:11	<--	danyel (danyel@moz-t4sg1v.dip0.t-ipconnect.de) has quit (Client exited)
2015-05-25 20:27:32	<--	ComfortablyNull (Mibbit@moz-6u3r3d.biz.rr.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-25 20:27:35	-->	Brochacho (alberto@moz-b2ovno.cable.rcn.com) has joined #rust
2015-05-25 20:27:44	molokdotc	how can i read an input from the user? i use io::stdin().read_line(&mut var).ok().expect();
2015-05-25 20:27:49	molokdotc	is there any other way?
2015-05-25 20:28:32	<--	Tobba (Tobba@moz-o13d22.bredband.telia.com) has quit (Ping timeout: 121 seconds)
2015-05-25 20:29:57	@steveklabnik	molokdotc: you might like
2015-05-25 20:30:01	@steveklabnik	!crate text_io
2015-05-25 20:30:03	+rustbot	text_io (0.1.0) - really simple to use panicking input functions -> https://crates.io/crates/text_io
2015-05-25 20:30:20	<--	johnsoft (johnsoft@moz-69mrig.res.rr.com) has quit (Ping timeout: 121 seconds)
2015-05-25 20:30:30	<--	nickniko_ (nicknikolov@moz-0q4.2rm.211.90.IP) has quit (Connection closed)
2015-05-25 20:30:31	-->	johnsoft (johnsoft@moz-69mrig.res.rr.com) has joined #rust
2015-05-25 20:30:48	molokdotc	:)
2015-05-25 20:30:51	molokdotc	thanks
2015-05-25 20:31:02	ubeatlenine	is there any way to work around an unstable feature error?
2015-05-25 20:31:09	@steveklabnik	ubeatlenine: use a nightly compiler
2015-05-25 20:31:33	ubeatlenine	ok, thanks
2015-05-25 20:31:58	-->	ytain (ytain@moz-ffpck2.dsl.teksavvy.com) has joined #rust
2015-05-25 20:32:56	-->	Tobba (Tobba@moz-o13d22.bredband.telia.com) has joined #rust
2015-05-25 20:33:32	@Havvy	https://gist.github.com/Havvy/bf8483b17d74de8076db Is this https://github.com/rust-lang/rust/issues/23437 or a new bug?
2015-05-25 20:33:40	-->	lenstr (lenstr@moz-s25.vju.25.171.IP) has joined #rust
2015-05-25 20:34:13	@Havvy	Also, somebody on nightly want to test if this still happens?
2015-05-25 20:34:29	@steveklabnik	Havvy: hmmm interesting
2015-05-25 20:34:32	<--	brianloveswords (brianlovesw@moz-tq78gs.fios.verizon.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-25 20:35:58	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-25 20:36:48	<--	AWAW (DoubleAW@moz-6vkhi6.irvnca.sbcglobal.net) has quit (Connection closed)
2015-05-25 20:37:09	<--	Tobba (Tobba@moz-o13d22.bredband.telia.com) has quit (Ping timeout: 121 seconds)
2015-05-25 20:37:34	-->	tadh (quassel@moz-88tk3f.res.rr.com) has joined #rust
2015-05-25 20:37:42	<--	lenstr (lenstr@moz-s25.vju.25.171.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 20:37:50	-->	Tobba (Tobba@moz-o13d22.bredband.telia.com) has joined #rust
2015-05-25 20:39:52	-->	vmeson (rmacleod@moz-hs5cri.cable.teksavvy.com) has joined #rust
2015-05-25 20:40:22	-->	ComfortablyNull (Mibbit@moz-6u3r3d.biz.rr.com) has joined #rust
2015-05-25 20:40:38	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Connection closed)
2015-05-25 20:40:54	GGist	Havvy: http://is.gd/39xo1T
2015-05-25 20:41:40	@Havvy	GGist:  Well, that explains my derp, but not the compiler's.
2015-05-25 20:42:39	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-25 20:43:04	-->	jminer (Instantbird@moz-b1u.qch.163.66.IP) has joined #rust
2015-05-25 20:43:11	@Havvy	It's fixed on nightly anyways.
2015-05-25 20:43:21	@Havvy	At least, playbot's nightly.
2015-05-25 20:45:21	<--	pgonda (peter@moz-s36.0tp.134.75.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 20:47:43	IPoAC	Just to see if I understood correctly: `for X in Y` moves the Xs out of the Y, whereas `for X in Y.iter()` is like a for(const auto& x: y) in C++?
2015-05-25 20:48:02	IPoAC	I.e. just get a reference on Y content without moving anything out?
2015-05-25 20:48:07	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Connection closed)
2015-05-25 20:48:38	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-25 20:50:08	-->	jensnockert (jensnockert@moz-c4k.8b6.219.84.IP) has joined #rust
2015-05-25 20:50:22	-->	pgonda (peter@moz-s36.0tp.134.75.IP) has joined #rust
2015-05-25 20:50:46	aatch	IPoAC, it's a little more complex than that.
2015-05-25 20:50:52	aatch	IPoAC, it depends on the type of Y
2015-05-25 20:51:26	-->	jgallagher (john@moz-6ge.dhn.131.24.IP) has joined #rust
2015-05-25 20:51:31	aatch	IPoAC, for `Vec`, yes, it moves the elements out. For `&[T]` however, it iterates over references.
2015-05-25 20:51:49	IPoAC	Ah
2015-05-25 20:52:19	IPoAC	aatch: And the other containers (HashSet for instance), it's the same as for Vec?
2015-05-25 20:52:25	IPoAC	+for
2015-05-25 20:52:40	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Ping timeout: 121 seconds)
2015-05-25 20:53:04	<--	arBmind1 (Andreas@moz-09uqff.dyn.telefonica.de) has quit (Quit: Leaving.)
2015-05-25 20:53:04	aatch	IPoAC, not sure. You'd have to check the appropriate `IntoIterator` impl
2015-05-25 20:53:04	bluss	IPoAC: yes
2015-05-25 20:53:32	IPoAC	Ok, thanks!
2015-05-25 20:53:37	bluss	scroll down the implementor list here http://doc.rust-lang.org/nightly/std/iter/trait.IntoIterator.html
2015-05-25 20:54:05	bluss	IPoAC: well a &HashMap<K, V> will iterate to (&K, &V) pairs for example
2015-05-25 20:54:11	bluss	so it's not exactly the same
2015-05-25 20:55:32	<--	nodweber (nodweber@moz-knt.fgq.178.5.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-25 20:55:42	<--	wohiler (wohiler@moz-8id.6e1.62.133.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 20:56:11	<--	jensnockert (jensnockert@moz-c4k.8b6.219.84.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 20:56:53	IPoAC	Interesting
2015-05-25 20:57:30	<--	swgillespie (swgillespie@moz-rn1.vmq.232.104.IP) has quit (Quit: Textual IRC Client: www.textualapp.com)
2015-05-25 20:57:32	IPoAC	Why does `impl<'a, T> IntoIterator for &'a [T; XX]` differs from `impl<'a, T> IntoIterator for &'a [T]`? Some kind of optimization?
2015-05-25 20:58:00	Morten	Where's an up-to-date guide for getting simple text input from stdin?
2015-05-25 20:58:04	aatch	IPoAC, convenience really
2015-05-25 20:58:46	Morten	The first stack overflow question that pops up is from 2012... *shudder*
2015-05-25 20:59:07	bluss	IPoAC: [T] and [T; N] are different types. I didn't know we had those array impls though
2015-05-25 20:59:30	aatch	IPoAC, though I'm not sure it's necessary. &[T; N] should coerce to &[T] perfectly well.
2015-05-25 20:59:42	IPoAC	Wasn't [T; N] a [T] of size N?
2015-05-25 20:59:43	-->	narann (narann@moz-j49beg.dsl.netrevolution.com) has joined #rust
2015-05-25 20:59:57	aatch	IPoAC, it *is* yes.
2015-05-25 21:00:09	<--	andrewseidl (andrewseidl@moz-7e86q0.aas.io) has quit (Ping timeout: 121 seconds)
2015-05-25 21:00:13	<--	ComfortablyNull (Mibbit@moz-6u3r3d.biz.rr.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-25 21:00:29	IPoAC	Ok, but the types are still different, I see.
2015-05-25 21:00:43	<--	pgonda (peter@moz-s36.0tp.134.75.IP) has quit (Ping timeout: 121 seconds)
2015-05-25 21:01:11	-->	kgrandon (Adium@moz-0rpllm.dc.cox.net) has joined #rust
2015-05-25 21:01:13	aatch	IPoAC, &[T] is essentially a &[T; N] with the N erased and stored at runtime.
2015-05-25 21:02:18	-->	andrewseidl (andrewseidl@moz-7e86q0.aas.io) has joined #rust
2015-05-25 21:03:16	--	irc: disconnected from server
2015-05-26 18:57:12	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-26 18:57:12	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-26 18:57:12	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-26 18:57:12	--	Channel #rust: 978 nicks (17 ops, 0 halfops, 1 voice, 960 normals)
2015-05-26 18:57:14	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-26 18:57:21	<--	joshua-g (joshuag@moz-pv72fm.res.rr.com) has quit (Ping timeout: 121 seconds)
2015-05-26 18:57:23	iu	Anyway, I should probably consult #cargo)
2015-05-26 18:57:31	iu	jdub: Thanks!
2015-05-26 18:58:17	-->	Layl (Layl@moz-65hqmf.direct-adsl.nl) has joined #rust
2015-05-26 18:58:49	<--	ahal (ahal@moz-b8e0a0.cpe.pppoe.ca) has quit (A TLS packet with unexpected length was received.)
2015-05-26 18:58:55	<--	NerdTaco (NerdTaco@moz-a4e65f.dsl.bell.ca) has quit (A TLS packet with unexpected length was received.)
2015-05-26 18:59:18	<--	anty (anty@moz-m1a7t4.dynamic.cablesurf.de) has quit (A TLS packet with unexpected length was received.)
2015-05-26 18:59:47	-->	RaiNote (Mibbit@moz-dmc7q9.pools.vodafone-ip.de) has joined #rust
2015-05-26 19:01:02	-->	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has joined #rust
2015-05-26 19:01:09	-->	gopar (gopar@moz-5039uj.ca.comcast.net) has joined #rust
2015-05-26 19:01:20	-->	kermit (Mibbit@moz-qkpd0t.clientes.euskaltel.es) has joined #rust
2015-05-26 19:01:24	kermit	z
2015-05-26 19:01:40	kermit	hey
2015-05-26 19:01:46	jdub	https://github.com/jdub/derp/blob/master/src/lib.rs
2015-05-26 19:02:04	kermit	wus dat
2015-05-26 19:02:29	jdub	^ can anyone suggest why uncommenting line 21 would make linking fail with undefined float related symbols?
2015-05-26 19:02:31	kermit	u mad brah
2015-05-26 19:02:33	<--	ziocroc (ziocroc@moz-bfu.33o.74.151.IP) has quit (Client exited)
2015-05-26 19:02:45	<--	kermit (Mibbit@moz-qkpd0t.clientes.euskaltel.es) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-26 19:02:46	-->	Izacht13 (Izacht13@moz-gee645.atsnmeam.ccmaine.net) has joined #rust
2015-05-26 19:02:52	-->	pgonda (peter@moz-s36.0tp.134.75.IP) has joined #rust
2015-05-26 19:02:58	@huon	jdub: weird
2015-05-26 19:03:12	jdub	works beautifully otherwise
2015-05-26 19:03:18	<--	RaiNote (Mibbit@moz-dmc7q9.pools.vodafone-ip.de) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-26 19:03:22	@huon	jdub: (btw, there are byte constants, e.g. b'Y' is a u8)
2015-05-26 19:03:31	@huon	jdub: how are you compiling it?
2015-05-26 19:03:33	jdub	huon: heh, thanks
2015-05-26 19:03:46	@huon	ah, I see a makefile
2015-05-26 19:03:53	jdub	huon: https://github.com/jdub/derp/blob/master/Makefile
2015-05-26 19:04:04	@bstrie	koobs: you made it :)
2015-05-26 19:04:29	@huon	jdub: I wonder if it will behave more sensibly if you have optimisations (i.e. cargo rustc --release -- ...
2015-05-26 19:05:07	jdub	huon: giving a whirl...
2015-05-26 19:05:23	-->	godlikesme (godlikesme@moz-2a2.dsd.174.79.IP) has joined #rust
2015-05-26 19:05:32	-->	jbomo (dkd@moz-uol4mm.fios.verizon.net) has joined #rust
2015-05-26 19:06:23	jdub	huon: huh!
2015-05-26 19:06:31	<--	yuja (yuja@moz-m62een.so-net.ne.jp) has quit (Ping timeout: 121 seconds)
2015-05-26 19:07:06	<--	kaeluka (kaeluka@moz-tn3lqd.cust.bredbandsbolaget.se) has quit (Client exited)
2015-05-26 19:07:09	<--	hjr3 (hradtke@moz-lei.av4.169.69.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2015-05-26 19:07:13	jdub	huon: linked okay, though now it's blowing up in qemu
2015-05-26 19:08:04	@huon	ah, well... progress?
2015-05-26 19:08:17	@huon	you may be interested in #rust-osdev too, btw
2015-05-26 19:08:44	jdub	huon: ooh, cool -- thanks
2015-05-26 19:08:51	cholcombe	anyone mind taking a quick look at an error message?
2015-05-26 19:09:25	@steveklabnik	cholcombe: it's better to just ask the question than to ask if it's okay to ask :)
2015-05-26 19:09:34	cholcombe	lol true i forgot
2015-05-26 19:10:39	cholcombe	steveklabnik: https://gist.github.com/cholcombe973/5c1fcf30e169f8224e4d
2015-05-26 19:10:44	cholcombe	trying to figure out what i'm doing wrong here
2015-05-26 19:10:54	-->	bohr (Mibbit@moz-u1d.via.199.115.IP) has joined #rust
2015-05-26 19:11:00	-->	aldanor (ivansmirnov@moz-kc07mc.ptr.magnet.ie) has joined #rust
2015-05-26 19:11:20	-->	joshua-g (joshuag@moz-nve.5de.71.64.IP) has joined #rust
2015-05-26 19:11:28	-->	ajhager (aajhager@moz-mcdsgi.iplsin.sbcglobal.net) has joined #rust
2015-05-26 19:12:11	talchas	cholcombe: concat! is only for string literals
2015-05-26 19:12:24	cholcombe	oh ok
2015-05-26 19:12:27	cholcombe	i thought it could take anything
2015-05-26 19:12:27	<--	errordeveloper (ilya@moz-41f.3sd.204.90.IP) has quit (Connection closed)
2015-05-26 19:12:28	-->	errordeveloper (ilya@moz-41f.3sd.204.90.IP) has joined #rust
2015-05-26 19:12:39	cholcombe	that's a bummer haha
2015-05-26 19:12:49	talchas	nah, it's just for things like in C where "a" "b" would compile as "ab"
2015-05-26 19:13:08	-->	hyunsik (hyunsik@moz-3qgjl9.ca.comcast.net) has joined #rust
2015-05-26 19:13:10	cholcombe	i see
2015-05-26 19:13:14	<--	m_khvoinitsky (quassel@moz-bkl6sn.d57a.lq23.04f8.2a01.IP) has quit (Connection closed)
2015-05-26 19:13:26	<--	erz (erz@moz-fiq1tl.broadband.corbina.ru) has quit (Connection closed)
2015-05-26 19:13:35	cholcombe	i also tried to just + them together and that failed as well
2015-05-26 19:13:41	talchas	if you want to concatenate strings at runtime there's String
2015-05-26 19:13:50	-->	erz (erz@moz-fiq1tl.broadband.corbina.ru) has joined #rust
2015-05-26 19:14:22	iu	Is it still the case that one cannot call C++ without extern "C" wrappers? https://internals.rust-lang.org/t/interfacing-rust-with-c-and-c/423/2
2015-05-26 19:14:50	aatch	iu, interfacing with C++ is very hard.
2015-05-26 19:15:17	@huon	iu: i.e. yes
2015-05-26 19:15:24	thelink2012	so I have several Box<Trait> where each one has a different 'Trait' on it, those end up being transmuted into raw pointers and associated with a name. In the search to a way to free up all those boxes without knowing the type of 'Trait' (but I know it IS a trait where Self: CommonTrait) I thought of transmuting the raw pointers to this common trait and drop()
2015-05-26 19:15:37	thelink2012	is it alright? I know it'll work because of the TraitObject layout
2015-05-26 19:15:38	aatch	There's only two languages I know that try: D, which has some significant limitations on it, and Julia which uses `clang` to acheive it.
2015-05-26 19:15:50	cholcombe	talchas: when i use String i get this: the trait `core::marker::Sized` is not implemented for the type `[u8]`
2015-05-26 19:16:00	@huon	aatch: I heard C++ had a reasonable C++ FFI too :P
2015-05-26 19:16:03	talchas	cholcombe:  I think it may work as self.peer.hostname.clone() + ":" + self.path.to_str() but I'm not sure
2015-05-26 19:16:08	@huon	thelink2012: dangerous stuff
2015-05-26 19:16:14	iu	aatch, huon: What’s my best option right now if I still need to do it? Wrap everything?
2015-05-26 19:16:16	XMPPwocky	even different C++ compilers dont' work togother
2015-05-26 19:16:23	cholcombe	talchas: ok let me try
2015-05-26 19:16:33	talchas	cholcombe: I have to go though, so good luck
2015-05-26 19:16:35	geofft	huon: no, the C++-to-C++ FFI is terrible, if you have a library from one compiler and you try calling it from an app from another compiler.... 
2015-05-26 19:16:35	aatch	iu, pretty much. It's what every other language has to do.
2015-05-26 19:16:43	<--	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-26 19:16:43	cholcombe	talchas: ok thanks
2015-05-26 19:16:48	@huon	iu: yeah, although I guess there's tools (SWIG?) that at least allow auto-generating C wrappers
2015-05-26 19:16:58	fmtq	beautiful
2015-05-26 19:16:59	aatch	Not that Rust is any better in that regard mind you.
2015-05-26 19:17:00	fmtq	</3
2015-05-26 19:17:06	@huon	geofft: heh
2015-05-26 19:17:12	<--	pgonda (peter@moz-s36.0tp.134.75.IP) has quit (Ping timeout: 121 seconds)
2015-05-26 19:17:22	frozenfinger	its worse since you have to write a c layer, and then a rust layer
2015-05-26 19:17:27	aatch	We pretty much have the same set of problems C++ does when it comes to interfacing with other languages.
2015-05-26 19:17:31	geofft	aatch: yup 
2015-05-26 19:17:32	frozenfinger	at least in lua you can just bind it in one go
2015-05-26 19:17:59	<--	iiixtiii (ixti@moz-i3d.dae.119.188.IP) has quit (Ping timeout: 121 seconds)
2015-05-26 19:18:05	aatch	frozenfinger, eh, that's a quirk of lua though, most languages would require two-stage bindings.
2015-05-26 19:18:14	thelink2012	huon: Indeed very hacky that's why I'm not sure if I should go ahead, but I have been thinking all night about it and all the other solutions will be extremely complex
2015-05-26 19:18:19	<--	ajhager (aajhager@moz-mcdsgi.iplsin.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-26 19:18:21	mcpherrin	Somebody could write bindgen tool that generates rust bindings for c++ using libclang, which understands the c++ ABI needs.
2015-05-26 19:18:27	aatch	frozenfinger, it's more that in lua your C bindings *are* your lua bindings.
2015-05-26 19:18:43	@huon	thelink2012: it probably works now, but it *may* break in future (no back-compat guarantees about stuff like that)
2015-05-26 19:18:58	frozenfinger	ya but with luabind etc you get proper C++ bindings very easily
2015-05-26 19:19:16	@huon	mcpherrin: I actually vaguely recall some work on making bindgen do that
2015-05-26 19:19:29	-->	namespace (user@moz-na89d2.wa.frontiernet.net) has joined #rust
2015-05-26 19:19:32	geofft	mcpherrin: hrm, now I'm thinking if demanding _source_ binding of C++ is reasonable / useful 
2015-05-26 19:19:39	<--	futile (felix@moz-cmcd12.unity-media.net) has quit (Quit: WeeChat 1.2-rc1)
2015-05-26 19:19:55	geofft	if you say that "C++" means "C++ as compiled by clang / libc++, with the same LLVM as Rust itself", then `extern "C++"` starts to make sense 
2015-05-26 19:20:15	@huon	frozenfinger: hm, it looks to me like luabind requiers a pile of manual setup? http://www.rasterbar.com/products/luabind/docs.html#hello-world
2015-05-26 19:20:19	-->	pgonda (peter@moz-s36.0tp.134.75.IP) has joined #rust
2015-05-26 19:20:36	namespace	Having never done C before, what am I supposed to do when I want a function that accepts no parameters and returns nothing?
2015-05-26 19:20:40	namespace	Like say, main()?
2015-05-26 19:20:46	thelink2012	huon: This is a library I'm implementing, so since there's no 'binary compatibility' as of now (well cargo pretty much nails it eh) I could just keep it for a while until I think of a better way I guess (or until it breaks ehhh!)?
2015-05-26 19:21:01	<--	jimb (user@moz-09a.i8g.126.207.IP) has quit (Ping timeout: 121 seconds)
2015-05-26 19:21:09	frozenfinger	huon: ya you write a binding once, but you don't have to drop into c, you can bind the C++ directly
2015-05-26 19:21:18	geofft	namespace: in C? "void main(void)" (in Rust, just "fn main()", short for "fn main() -> ()") 
2015-05-26 19:21:40	aatch	geofft, eh, I'm pretty sure modern C is fine with `void main()`
2015-05-26 19:21:45	geofft	though C's main returns int, and optionally takes two or three (or four) parameters 
2015-05-26 19:21:49	namespace	geofft: I wouldn't come in here to ask for help with C. ;)
2015-05-26 19:21:51	XMPPwocky	four?
2015-05-26 19:21:53	-->	NerdTaco (NerdTaco@moz-a4e65f.dsl.bell.ca) has joined #rust
2015-05-26 19:21:54	-->	mib_55sjs8 (Mibbit@moz-kjvkr3.netcologne.de) has joined #rust
2015-05-26 19:21:57	aatch	geofft, wait, four?
2015-05-26 19:22:04	geofft	Apple's libc does some weird things 
2015-05-26 19:22:11	-->	bkearns (Adium@moz-rudtng.static.wiline.com) has joined #rust
2015-05-26 19:22:13	geofft	I think you can also get auxv from glibc 
2015-05-26 19:22:44	aatch	geofft, the auxv has to be gotten at manually though. I don't think you can get off of the stack.
2015-05-26 19:22:52	aatch	geofft, I mean, as a parameter...
2015-05-26 19:23:12	aatch	geofft, IIRC it's after the environment variables.
2015-05-26 19:23:16	rillian	where can I find the schedule for upcoming releases?
2015-05-26 19:23:22	-->	Witcher (Witcher@moz-1514fg.dynamic.chello.pl) has joined #rust
2015-05-26 19:23:24	@huon	frozenfinger: that doesn't seem *that* different to dropping down into C (especially since one can do drop directly in C++, via extern "C")
2015-05-26 19:23:29	-->	thor (thor@moz-u9i.355.131.104.IP) has joined #rust
2015-05-26 19:23:32	@huon	frozenfinger: but interesting approach, thanks for raising it
2015-05-26 19:24:09	-->	envi_u (envi@moz-ih5.olo.169.121.IP) has joined #rust
2015-05-26 19:24:10	aatch	rillian, not sure where it's posted, but there's a release every six weeks.
2015-05-26 19:24:16	<--	larhat (Adium@moz-vlo5br.cable.virginm.net) has quit (Quit: Leaving.)
2015-05-26 19:24:23	-->	paupau (grrrr@moz-7l1.1cg.90.208.IP) has joined #rust
2015-05-26 19:24:38	jdub	anyone know what this lovely llvm error is?
2015-05-26 19:24:39	jdub	rustc: /home/rustbuild/src/rust-buildbot/slave/nightly-dist-rustc-linux/build/src/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp:4684: llvm::SDValue llvm::SelectionDAG::getLoad(llvm::ISD::MemIndexedMode, llvm::ISD::LoadExtType, llvm::EVT, llvm::SDLoc, llvm::SDValue, llvm::SDValue, llvm::SDValue, llvm::EVT, llvm::MachineMemOperand*): Assertion `MemVT.getScalarType().bitsLT(VT.getScalarType()) && "Should only be an extending load, not truncating!"' failed.
2015-05-26 19:24:40	<--	CMCDragonkai (nobody@moz-v01.321.218.216.IP) has quit (Connection closed)
2015-05-26 19:24:55	-->	CMCDragonkai (nobody@moz-v01.321.218.216.IP) has joined #rust
2015-05-26 19:24:59	rillian	aatch: I know. I wanted dates because reviewers want dates.
2015-05-26 19:25:00	aatch	jdub, oo, that's a new one.
2015-05-26 19:25:07	<--	godlikesme (godlikesme@moz-2a2.dsd.174.79.IP) has quit (Ping timeout: 121 seconds)
2015-05-26 19:25:18	geofft	aatch: looks like glibc does it if MAIN_AUXVEC_ARG is defined, which it is on PowerPC 
2015-05-26 19:25:22	aatch	rillian, well #rust-internals says its 40 days to 1.1.0
2015-05-26 19:25:26	jdub	this line causes it:
2015-05-26 19:25:27	jdub	*(VIDEO as *mut [u8; 10]) = transmute([b'Y'; 10]);
2015-05-26 19:25:32	@huon	rillian: the schedule is 6 weeks after May 15
2015-05-26 19:25:41	<--	thiblahute (tsaunier@moz-68f5rr.rev.sfr.net) has quit (Ping timeout: 121 seconds)
2015-05-26 19:25:49	@huon	rillian: although I think it won't be friday
2015-05-26 19:26:08	aatch	jdub, ??? That shouldn't even get that far
2015-05-26 19:26:08	@huon	rillian: so June 25, maybe.
2015-05-26 19:26:20	rillian	huon: so there's no published schedule like https://wiki.mozilla.org/RapidRelease/Calendar ?
2015-05-26 19:26:30	<--	bohr (Mibbit@moz-u1d.via.199.115.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-26 19:26:31	@steveklabnik	rillian: huon yeah we've vaguely discussed not-friday but nothing decided yet
2015-05-26 19:26:32	@huon	not yet
2015-05-26 19:26:38	aatch	jdub, oh wait, I misread the parens.
2015-05-26 19:26:40	<--	Nashenas88 (Nashenas88@moz-of81j9.miamfl.sbcglobal.net) has quit (Client exited)
2015-05-26 19:26:45	 *	steveklabnik likes friday
2015-05-26 19:26:49	aatch	jdub, still, that's very, very weird.
2015-05-26 19:27:10	@huon	steveklabnik: unfortunately friday in the US is pretty bad for the rest of the world :P
2015-05-26 19:27:17	cholcombe	how do i make a variable valid for a static lifetime?
2015-05-26 19:27:20	<--	NerdTaco (NerdTaco@moz-a4e65f.dsl.bell.ca) has quit (A TLS packet with unexpected length was received.)
2015-05-26 19:27:24	@steveklabnik	huon: yeah, i can hear that, for sure
2015-05-26 19:27:29	<--	Matthias247 (Miranda@moz-49li60.hsi14.kabel-badenwuerttemberg.de) has quit (Connection closed)
2015-05-26 19:27:34	jdub	aatch: it's in this file https://github.com/jdub/derp/blob/master/src/lib.rs, variation on line 21
2015-05-26 19:27:38	@steveklabnik	cholcombe: well, depending on what kind it is, you can't _make_ it
2015-05-26 19:27:39	thor	cholcombe: 'static no?
2015-05-26 19:27:40	rillian	and if it's 6 weeks from June 25, 1.2 will be August, not July like steveklabnik said
2015-05-26 19:27:45	aatch	jdub, can you open an issue with a complete, minimal example?
2015-05-26 19:27:48	jdub	aatch: file bug on github?
2015-05-26 19:27:50	jdub	sure
2015-05-26 19:27:51	<--	skade (skade@moz-eetliv.pools.vodafone-ip.de) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-26 19:27:58	<--	rajat (rajat@moz-fq5.l4p.189.205.IP) has quit (Client exited)
2015-05-26 19:28:03	@steveklabnik	rillian: yeah my calendar math may be suspect. i did it real quick. 
2015-05-26 19:28:15	<--	Gabriel_7 (Gabriel@moz-geu5r2.mtgr.92aj.0e35.2a01.IP) has quit (Connection closed)
2015-05-26 19:28:25	rillian	steveklabnik: see, current date makes perfect sense :)
2015-05-26 19:28:37	@steveklabnik	hehe. well it's not likely to get updated past current
2015-05-26 19:28:44	@steveklabnik	that's why i left said comments
2015-05-26 19:29:00	@steveklabnik	since releases are timeboxed, it makes more sense to update to their final values once, imho
2015-05-26 19:29:08	cholcombe	steveklabnik: https://gist.github.com/anonymous/71e42bb1fe4e247528b5
2015-05-26 19:29:18	cholcombe	i'm just trying to return a string representation of my struct :)
2015-05-26 19:29:22	<--	mib_fml744 (Mibbit@moz-nc7nts.bb.dnainternet.fi) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-26 19:29:32	@steveklabnik	cholcombe: right, so that won't ever be possible
2015-05-26 19:29:38	cholcombe	darn
2015-05-26 19:29:40	@steveklabnik	'static means 'always valid for the entire program'
2015-05-26 19:29:41	cholcombe	so what do i do?
2015-05-26 19:29:45	&mbrubeck	cholcombe: Return a String.
2015-05-26 19:29:49	@steveklabnik	this is very much not that
2015-05-26 19:29:51	cholcombe	from the heap?
2015-05-26 19:29:55	@steveklabnik	and yes, mbrubeck is correct
2015-05-26 19:30:07	<--	Izacht13 (Izacht13@moz-gee645.atsnmeam.ccmaine.net) has quit (Quit: Leaving)
2015-05-26 19:30:22	cholcombe	would i be better served by not having this function and generating this string where i need it?
2015-05-26 19:30:46	<--	tristanseifert (tristanseif@moz-r0t7ns.res.rr.com) has quit (Ping timeout: 121 seconds)
2015-05-26 19:30:46	cholcombe	i thought this would be a nice quick way using the struct
2015-05-26 19:32:08	<--	colinsurprenant (colin@moz-rmn4e2.169.electronicbox.net) has quit (Client exited)
2015-05-26 19:32:23	-->	harrisonclarke (harrisoncla@moz-uur7pt.eastlink.ca) has joined #rust
2015-05-26 19:33:05	<--	mkoskar (mkoskar@moz-0cpaeb.thd.ninja) has quit (Client exited)
2015-05-26 19:33:35	-->	Rym (y@moz-c2u.sd4.38.217.IP) has joined #rust
2015-05-26 19:34:29	geofft	why don't you want to return a String? 
2015-05-26 19:34:56	Dr-Emann	cholcombe: you should look into std::fmt::Display
2015-05-26 19:35:47	Dr-Emann	cholcombe: so you can do something like `println!("{}", my_brick);`
2015-05-26 19:35:56	-->	rajat (rajat@moz-fq5.l4p.189.205.IP) has joined #rust
2015-05-26 19:36:22	-->	zzing (textual@moz-h2euaq.comm.cgocable.net) has joined #rust
2015-05-26 19:36:57	<--	mib_55sjs8 (Mibbit@moz-kjvkr3.netcologne.de) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-26 19:37:38	-->	hjr3 (hradtke@moz-lei.av4.169.69.IP) has joined #rust
2015-05-26 19:37:42	-->	Guest (textual@moz-rtn.fg7.77.192.IP) has joined #rust
2015-05-26 19:38:01	<--	asQuirreL (asQuirreL@moz-ro1qqu.ox.ac.uk) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-26 19:38:08	<--	Rym (y@moz-c2u.sd4.38.217.IP) has quit (Ping timeout: 121 seconds)
2015-05-26 19:38:18	-->	Wild_Cat (Max@moz-fa8mvt.dsl.teksavvy.com) has joined #rust
2015-05-26 19:38:45	<--	Jesin (Jesin@moz-a3uhsd.fios.verizon.net) has quit (Ping timeout: 121 seconds)
2015-05-26 19:39:12	-->	godlikesme (godlikesme@moz-2a2.dsd.174.79.IP) has joined #rust
2015-05-26 19:41:16	<--	Witcher (Witcher@moz-1514fg.dynamic.chello.pl) has quit (Ping timeout: 121 seconds)
2015-05-26 19:41:18	-->	mkpankov (mkpankov@moz-8hm.u5t.23.84.IP) has joined #rust
2015-05-26 19:41:30	jdub	aatch: trying to pin it down, it looks like it only happens with --target=i686-unknown-linux-gnu
2015-05-26 19:41:36	<--	GGist (Mibbit@moz-07kde0.seattleu.edu) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-26 19:41:47	Dr-Emann	cholcombe: something like this: https://gist.github.com/Dr-Emann/29da28068c5af0638194
2015-05-26 19:42:05	<--	demilux (demilux@moz-fk1.kt4.14.64.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-26 19:42:09	-->	demilux (demilux@moz-fk1.kt4.14.64.IP) has joined #rust
2015-05-26 19:43:18	<--	Nextra (Nextra@moz-ovf7h1.ewe-ip-backbone.de) has quit (Quit: Leaving)
2015-05-26 19:43:21	aatch	jdub, yeah, I noticed that I couldn't repro on playpen.
2015-05-26 19:44:14	thelink2012	when I use trait inheritance (trait X : Y) what I'm exactly saying?  that Self must implement Y (just like where Self: Y) or that X contains the methods of Y?
2015-05-26 19:44:40	aatch	thelink2012, that `Self` must implement `Y`.
2015-05-26 19:45:09	thelink2012	So it's the same thing as where?
2015-05-26 19:45:16	<--	areski (areski@moz-l7mjm5.user.ono.com) has quit (Ping timeout: 121 seconds)
2015-05-26 19:45:27	thelink2012	just diferent syntax like <F: Trait> is to where F: Trait
2015-05-26 19:45:38	aatch	thelink2012, it's better to think of them as another set of bounds. It's just that we can reason about the relationship so we know that if `T: X` is true, then `T: Y` must also be true.
2015-05-26 19:45:50	jdub	aatch: oh lord, now it's building if i run cargo rustc manually, but not if i do it with make... *fossicks*
2015-05-26 19:46:06	<--	Azdle_ (Azdle@moz-738.tg8.232.50.IP) has quit (Ping timeout: 121 seconds)
2015-05-26 19:46:34	aatch	thelink2012, yeah. more or less, though I'm not sure if actually works the exact same way.
2015-05-26 19:46:44	-->	ajhager (aajhager@moz-mcdsgi.iplsin.sbcglobal.net) has joined #rust
2015-05-26 19:46:56	<--	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-26 19:47:09	jdub	aatch: aha! only happens on --release
2015-05-26 19:47:29	-->	Jesin (Jesin@moz-a3uhsd.fios.verizon.net) has joined #rust
2015-05-26 19:47:46	aatch	jdub, hah! That might technically make it an LLVM bug.
2015-05-26 19:48:24	jdub	aatch: nailed it down to -C soft-float
2015-05-26 19:49:27	<--	swgillespie (swgillespie@moz-1i5.3un.220.167.IP) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-26 19:50:13	--	irc: disconnected from server
2015-05-26 19:50:25	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-26 19:50:25	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-26 19:50:25	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-26 19:50:25	--	Channel #rust: 968 nicks (17 ops, 0 halfops, 1 voice, 950 normals)
2015-05-26 19:50:27	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-26 19:50:56	-->	loz (quassel@moz-0m7tp3.tpgi.com.au) has joined #rust
2015-05-26 19:53:25	--	irc: disconnected from server
2015-05-26 19:53:37	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-26 19:53:37	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-26 19:53:37	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-26 19:53:37	--	Channel #rust: 969 nicks (17 ops, 0 halfops, 1 voice, 951 normals)
2015-05-26 19:53:39	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-26 19:55:08	<--	dmac_ (dmac@moz-moa.puk.8.50.IP) has quit (Ping timeout: 121 seconds)
2015-05-26 19:55:28	-->	Rym (y@moz-c2u.sd4.38.217.IP) has joined #rust
2015-05-26 19:55:56	-->	dmac_ (dmac@moz-moa.puk.8.50.IP) has joined #rust
2015-05-26 19:56:18	<--	qwerty_nor (Thunderbird@moz-5ql.sn8.241.50.IP) has quit (Ping timeout: 121 seconds)
2015-05-26 19:56:21	cholcombe	Dr-Emann: so fmt display huh.. interesting
2015-05-26 19:57:02	-->	Kingsquee (kingsley@moz-3fm07c.bchsia.telus.net) has joined #rust
2015-05-26 19:57:37	<--	Guest38 (textual@moz-4hh.6p3.217.74.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-26 19:57:41	<--	brson (brson@moz-48fqub.res.rr.com) has quit (Quit: leaving)
2015-05-26 19:57:56	-->	saml_ (saml@moz-rkfmct.res.rr.com) has joined #rust
2015-05-26 20:00:10	<--	skeuomorf (skeuomorf@moz-ij1.21q.32.197.IP) has quit (Ping timeout: 121 seconds)
2015-05-26 20:00:15	-->	Guest38 (textual@moz-4hh.6p3.217.74.IP) has joined #rust
2015-05-26 20:02:35	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Connection closed)
2015-05-26 20:03:06	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-26 20:04:16	-->	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has joined #rust
2015-05-26 20:04:42	<--	JosiahOne (Instantbird@moz-a29a0c.l2d1.q8mm.0306.2602.IP) has quit (Ping timeout: 121 seconds)
2015-05-26 20:05:18	<--	bkearns (Adium@moz-rudtng.static.wiline.com) has quit (Quit: Leaving.)
2015-05-26 20:05:20	<--	johnsoft (johnsoft@moz-69mrig.res.rr.com) has quit (Ping timeout: 121 seconds)
2015-05-26 20:05:23	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Connection closed)
2015-05-26 20:05:29	<--	Rym (y@moz-c2u.sd4.38.217.IP) has quit (Ping timeout: 121 seconds)
2015-05-26 20:05:32	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-26 20:05:39	-->	gregburd (uid85367@moz-513f2i.ealing.irccloud.com) has joined #rust
2015-05-26 20:05:46	-->	johnsoft (johnsoft@moz-69mrig.res.rr.com) has joined #rust
2015-05-26 20:06:21	<--	nicknikolov (nicknikolov@moz-0q4.2rm.211.90.IP) has quit (Connection closed)
2015-05-26 20:06:44	<--	ajhager (aajhager@moz-mcdsgi.iplsin.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-26 20:07:39	-->	krakatoa (krakatoa@moz-121.ktg.95.181.IP) has joined #rust
2015-05-26 20:08:04	-->	kgrandon (Adium@moz-i0u8p7.hfc.comcastbusiness.net) has joined #rust
2015-05-26 20:08:09	krakatoa	hi guys, rust is amazing, i will bother you with newbie questions hoping to learn a lot :)
2015-05-26 20:09:26	-->	tilde` (namidasshu@moz-3gs.igt.238.95.IP) has joined #rust
2015-05-26 20:10:20	@Havvy	Should I publish these first 16 lines as a Rust crate?  http://is.gd/SZHHzX
2015-05-26 20:10:40	@Havvy	krakatoa:  Please do.
2015-05-26 20:11:49	<--	tilde (namidasshu@moz-3gs.igt.238.95.IP) has quit (Ping timeout: 121 seconds)
2015-05-26 20:12:12	-->	magician (themagician@moz-dj43jb.elisa-laajakaista.fi) has joined #rust
2015-05-26 20:12:14	-->	copycat (Thunderbird@moz-dpm.8hc.223.111.IP) has joined #rust
2015-05-26 20:12:27	@Havvy	(And does anybody have a better name for the methods in that trait?)
2015-05-26 20:12:29	krakatoa	i have one for you: i'm using lmdb-rs lib, and wanted to put the 'read' code inside a fn, problem is when I run that function, the result is ()
2015-05-26 20:12:35	-->	Witcher (Witcher@moz-1514fg.dynamic.chello.pl) has joined #rust
2015-05-26 20:12:43	krakatoa	here's a gist that better describes my question: https://gist.github.com/krakatoa/09f356ca7111707a264c
2015-05-26 20:13:15	&mbrubeck	krakatoa: Remove the final semicolon (;)
2015-05-26 20:13:23	<--	themagician (themagician@moz-dj43jb.elisa-laajakaista.fi) has quit (Ping timeout: 121 seconds)
2015-05-26 20:13:43	&mbrubeck	if you want `b()` to return `name`
2015-05-26 20:14:08	<--	pgonda (peter@moz-s36.0tp.134.75.IP) has quit (Ping timeout: 121 seconds)
2015-05-26 20:14:30	&mbrubeck	krakatoa: You may need to change the signature to `fn b() -> String` and return `String::from(name)`
2015-05-26 20:15:16	-->	pgonda (peter@moz-s36.0tp.134.75.IP) has joined #rust
2015-05-26 20:15:31	@Havvy	!learn semicolon = If the final expression in a block ends with a semicolon, the value of that block is `()`.
2015-05-26 20:15:31	+rustbot	Learned factoid 'semicolon'.
2015-05-26 20:15:38	@Havvy	!learn ; @= semicolon
2015-05-26 20:15:38	+rustbot	Learned alias ';' => 'semicolon'.
2015-05-26 20:16:34	krakatoa	mbrubeck you are awesome !
2015-05-26 20:16:39	krakatoa	many thanks!
2015-05-26 20:17:07	krakatoa	I also needed to add an unwrap() on name
2015-05-26 20:17:18	krakatoa	so, String::from(name.unwrap()) did the job
2015-05-26 20:18:12	krakatoa	ahh so the semicolon goes only to separate between expressions ?
2015-05-26 20:18:12	<--	jwatt (roslea@jwatt.irc.users.mozilla.org) has quit (Connection closed)
2015-05-26 20:18:35	nathan7	yep
2015-05-26 20:18:36	-->	Ms2ger (Ms2ger@moz-3mi.nja.110.38.IP) has joined #rust
2015-05-26 20:18:55	aatch	krakatoa, well, more accurately a semicolon ends a statement.
2015-05-26 20:18:56	ChrisMorgan	Havvy: various of the types can be elided, so it can be .collect::<Result<Vec<_>, _>>()
2015-05-26 20:19:24	<--	simukis (nagisa@moz-8t068g.static.zebra.lt) has quit (Ping timeout: 121 seconds)
2015-05-26 20:19:24	aatch	krakatoa, you always have to put a `;` at the end of a `let` statement.
2015-05-26 20:20:48	<--	Altazimuth (Altazimuth@moz-rb7u6p.skybroadband.com) has quit (Ping timeout: 121 seconds)
2015-05-26 20:20:56	-->	ajhager (aajhager@moz-mcdsgi.iplsin.sbcglobal.net) has joined #rust
2015-05-26 20:21:00	krakatoa	got it 
2015-05-26 20:21:31	@Havvy	ChrisMorgan:  Okay...but yes/no on crate, and thoughts on method names?
2015-05-26 20:21:31	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Connection closed)
2015-05-26 20:22:05	-->	SpaceManiac (Tad@moz-ichs44.dyn.suddenlink.net) has joined #rust
2015-05-26 20:22:13	<--	mkpankov (mkpankov@moz-8hm.u5t.23.84.IP) has quit (Ping timeout: 121 seconds)
2015-05-26 20:22:16	ChrisMorgan	Havvy: I would consider such a trait unnecessary, preferring to use collect::<Result<Vec<_>, _>>() and similar.
2015-05-26 20:22:46	-->	Rym (y@moz-c2u.sd4.38.217.IP) has joined #rust
2015-05-26 20:24:06	-->	doomrobo (doomrobo@moz-7rfp9f.res.rr.com) has joined #rust
2015-05-26 20:24:38	-->	JosiahOne (Instantbird@moz-ddc6ja.l2d1.q8mm.0306.2602.IP) has joined #rust
2015-05-26 20:25:33	-->	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has joined #rust
2015-05-26 20:26:38	<--	erz (erz@moz-fiq1tl.broadband.corbina.ru) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-26 20:26:55	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-26 20:27:17	-->	zzing (textual@moz-qc6ujs.cpe.distributel.net) has joined #rust
2015-05-26 20:27:44	doomrobo	I read this somewhere but forgot. How do I write a function that transparently takes a &str or a String and converts the &str to a String if a &str was given and does nothing extra if a String was given?
2015-05-26 20:28:06	<--	nicholasf (nicholasf@moz-5gls9l.internode.on.net) has quit (Connection closed)
2015-05-26 20:28:29	-->	nicholasf (nicholasf@moz-5gls9l.internode.on.net) has joined #rust
2015-05-26 20:28:49	Ms2ger	fn f<T: Into<String>>(s: T) { ... s.into() ... }
2015-05-26 20:29:18	@huon	doomrobo: http://benashford.github.io/blog/2015/05/24/rust-traits-for-developer-friendly-libraries/
2015-05-26 20:29:36	<--	goyox86 (textual@moz-6gq.t8s.78.166.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-26 20:29:59	<--	coryforsyth (coryforsyth@moz-hpsim2.fios.verizon.net) has quit (Client exited)
2015-05-26 20:30:15	doomrobo	haha huon you knew exactly the article :) . Also thanks Ms2ger
2015-05-26 20:30:27	Ms2ger	Np
2015-05-26 20:30:38	Ms2ger	(I don't like that pattern much, fwiw)
2015-05-26 20:31:28	doomrobo	wait a minute, Into<String> is not implemented for String or &str. What gives?
2015-05-26 20:31:39	doomrobo	String only implements Into<Vec<u8>>
2015-05-26 20:31:52	@Havvy	Ms2ger: Do you have a better name for the methods in http://is.gd/SZHHzX ?
2015-05-26 20:31:52	--	nsm|away is now known as nsm
2015-05-26 20:32:10	<--	gattschardo (richard@moz-bvkdk4.dyn.telefonica.de) has quit (Quit: leaving)
2015-05-26 20:32:20	Ms2ger	doomrobo, aw, too good to be true :)
2015-05-26 20:32:30	mcoffin	Hey is there a quick way to build documentation for non-public crates now that it's not online? The rustc build system seems to want to compile the whole thing when I run `make docs'.
2015-05-26 20:32:54	doomrobo	Ms2ger, no, I think you're still right, I just don't know why. The article huon linked showed that pattern, but I can't make sense of it :\
2015-05-26 20:33:12	-->	mib_1lwm0i (Mibbit@moz-3mjnpi.broadband.corbina.ru) has joined #rust
2015-05-26 20:33:22	<--	mib_1lwm0i (Mibbit@moz-3mjnpi.broadband.corbina.ru) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-26 20:33:33	<--	saml_ (saml@moz-rkfmct.res.rr.com) has quit (Ping timeout: 121 seconds)
2015-05-26 20:35:24	doomrobo	ohh, I see. Ms2ger huon . There's a default implementation impl<T, U> Into<U> for T where U: From<T>. As it turns out, there is impl<'a> From<&'a str> for String as well as a trivial impl<T> From<T> for T . So through 2 layers of indirection, it works out fine
2015-05-26 20:35:28	-->	swgillespie (swgillespie@moz-1i5.3un.220.167.IP) has joined #rust
2015-05-26 20:36:16	<--	wolfviking0 (wolfviking0@moz-8hd.3b6.246.162.IP) has left #rust
2015-05-26 20:39:37	--	irc: disconnected from server
2015-05-26 20:39:49	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-26 20:39:49	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-26 20:39:49	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-26 20:39:49	--	Channel #rust: 969 nicks (16 ops, 0 halfops, 1 voice, 952 normals)
2015-05-26 20:39:51	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-26 20:40:13	-->	dougxxx (dougxxx@moz-0js00c.iinet.net.au) has joined #rust
2015-05-26 20:40:29	doomrobo	Havvy, What is that code supposed to do?
2015-05-26 20:40:57	-->	bjz (bjz@moz-4cc8qn.bigpond.net.au) has joined #rust
2015-05-26 20:41:06	<--	Fiveside (fiveside@moz-t2eatg.vsp.com) has quit (Ping timeout: 121 seconds)
2015-05-26 20:41:18	&mbrubeck	covert from Vec<Result> to Result<Vec>, basically.  (actually can take any IntoIter<Item=Result>, not just Vec<Result>)
2015-05-26 20:41:19	@Havvy	doomrobo:  It allows you to write the thing in main in the third form instead of as the first form.
2015-05-26 20:41:49	--	irc: disconnected from server
2015-05-26 20:42:02	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-26 20:42:02	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-26 20:42:02	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-26 20:42:02	--	Channel #rust: 969 nicks (16 ops, 0 halfops, 1 voice, 952 normals)
2015-05-26 20:42:04	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-26 20:42:49	<--	niconii (nicole@moz-hnv1fo.frgo.qwest.net) has quit (Connection closed)
2015-05-26 20:42:54	@Havvy	mbrubeck:  Should I change the type `I: Iterator<Item = Result<T, E>>` to `I: IntoIter<Item = Result<T, E>>` ?
2015-05-26 20:43:06	doomrobo	Oh, I see. So it stops collecting after the first error?
2015-05-26 20:43:31	<--	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-26 20:43:34	&mbrubeck	umm, maybe?
2015-05-26 20:43:41	@Havvy	doomrobo:  Yeah.
2015-05-26 20:43:46	<--	rajat (rajat@moz-fq5.l4p.189.205.IP) has quit (Client exited)
2015-05-26 20:43:59	@Havvy	You'll notice that "def" doesn't get printed out if you run it.
2015-05-26 20:44:15	-->	niconii (nicole@moz-hnv1fo.frgo.qwest.net) has joined #rust
2015-05-26 20:44:15	--	Mode #rust [+o niconii] by ChanServ
2015-05-26 20:44:30	doomrobo	Havvy, isn't IntoIter a struct? You'd want to keep it as generic as possible with I: Iterator<...>, no?
2015-05-26 20:44:40	-->	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has joined #rust
2015-05-26 20:44:54	@Havvy	doomrobo:  Is it? Okay.
2015-05-26 20:45:18	Ms2ger	IntoIterator is a trait
2015-05-26 20:45:39	doomrobo	But IntoIter is a struct
2015-05-26 20:45:39	@huon	std::vec::IntoIter is a struct
2015-05-26 20:46:07	@Havvy	So, is it better to take an IntoIterator or an Iterator?
2015-05-26 20:46:18	&mbrubeck	IntoIterator is more general
2015-05-26 20:46:24	&mbrubeck	since every Iterator is an IntoIterator
2015-05-26 20:47:01	&mbrubeck	Here's a more "fair" comparison with/without the trait http://is.gd/xT3hzU
2015-05-26 20:47:14	<--	mcoffin (mcoffin@moz-beh.ab9.110.137.IP) has quit (Ping timeout: 121 seconds)
2015-05-26 20:47:20	-->	jwatt (roslea@jwatt.irc.users.mozilla.org) has joined #rust
2015-05-26 20:48:12	<--	hroi (hroi@moz-d273ub.static.netgroup.dk) has quit (Ping timeout: 121 seconds)
2015-05-26 20:48:31	doomrobo	mbrubeck, what do you mean every Iterator is an IntoIterator?
2015-05-26 20:48:48	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Connection closed)
2015-05-26 20:49:01	aatch	doomrobo, theres `impl<I: Iterator> IntoIterator for I`
2015-05-26 20:49:11	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-26 20:49:21	&mbrubeck	yeah, that
2015-05-26 20:50:02	aatch	doomrobo, since `into_iter` for iterators is just the identity function.
2015-05-26 20:50:23	aatch	doomrobo, it's why both `for i in vec` and `for i in vec.iter()` work.
2015-05-26 20:50:37	<--	Sho (sho@moz-83s.6h6.28.5.IP) has quit (Quit: Konversation terminated!)
2015-05-26 20:51:11	doomrobo	gotcha. here it is: http://doc.rust-lang.org/src/core/iter.rs.html#1145
2015-05-26 20:51:21	<--	jadbaires (jadrian@moz-dhpu9p.dfcu.o1j7.08a0.2001.IP) has quit (Quit: Konversation terminated!)
2015-05-26 20:51:47	<--	ptstomp (paul@moz-rn5jn1.exetel.com.au) has quit (Ping timeout: 121 seconds)
2015-05-26 20:52:35	@Havvy	I basically think that this idea of going from Vec<Result> to Result<Vec> should have a name, but I don't know a good name, so I'm going with collect_result.
2015-05-26 20:52:46	<--	Layl (Layl@moz-65hqmf.direct-adsl.nl) has quit (Quit: Leaving)
2015-05-26 20:53:14	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Ping timeout: 121 seconds)
2015-05-26 20:53:18	@Havvy	http://is.gd/5DRALx  I changed the implementation to now be for IntoIterator.
2015-05-26 20:53:20	bluss	Havvy: have you seen the rfc related to that?
2015-05-26 20:53:24	bluss	Havvy: collect_result
2015-05-26 20:53:25	@Havvy	bluss:  Nope.
2015-05-26 20:53:36	-->	Azdle_ (Azdle@moz-1av.n0d.255.50.IP) has joined #rust
2015-05-26 20:53:39	<--	zzing (textual@moz-qc6ujs.cpe.distributel.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-26 20:53:40	bluss	Havvy: well broadly related, https://github.com/rust-lang/rfcs/pull/1130
2015-05-26 20:53:58	bluss	you have std::result::fold already
2015-05-26 20:54:04	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-26 20:54:47	bluss	Havvy: maybe it's not so important
2015-05-26 20:54:58	doomrobo	aatch, wait a minute. Why is that the reason why the for syntax works? Wouldn't it be the opposite? Vec implements IntoIterator. If every IntoIterator was an Iterator, then that'd make sense. I though for loops are defined for IntoIter by calling .into_iter() under the hood
2015-05-26 20:55:04	<--	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-26 20:55:33	Ms2ger	doomrobo, if you have an Iterator x, x.into_iter() == x
2015-05-26 20:56:02	doomrobo	right, but that doesn't seem to explain the for loop thing
2015-05-26 20:56:05	@Havvy	If every IntoIterator implemented Iterator, then you'd be able to call Iterator methods on types that implement IntoIterator.
2015-05-26 20:56:33	<--	qard (qard@moz-nekdha.vc.shawcable.net) has quit (Connection closed)
2015-05-26 20:56:44	XMPPwocky	Havvy: that sounds like a good thing, tbh
2015-05-26 20:56:58	aatch	doomrobo, every IntoIterator *isn't* an Iterator. Vec<T> : IntoIterator is true, for example.
2015-05-26 20:57:14	doomrobo	I'm not saying every IntoIterator implements Iterator, I'm saying that I think that aatch had it backwards when he said that that's how looping through a vec works
2015-05-26 20:57:24	<--	iu (iu@moz-6263qv.cc.cmu.edu) has quit (Quit: )
2015-05-26 20:57:34	aatch	doomrobo, all I said is that it's why *both* work.
2015-05-26 20:57:43	aatch	doomrobo, as opposed to only one or the other.
2015-05-26 20:58:10	doomrobo	aatch, I'm confused. What types y is "for x in y" defined for?
2015-05-26 20:58:24	aatch	doomrobo, all types implementing IntoIterator.
2015-05-26 20:58:24	-->	krax (archlap@moz-hff.m76.69.68.IP) has joined #rust
2015-05-26 20:58:31	jdub	hmm, shouldn't something built with no-stack-check *never* generate __morestack calls?
2015-05-26 20:58:36	-->	m_kato (m_kato@moz-86b4bs.bitcat.net) has joined #rust
2015-05-26 20:58:38	doomrobo	OHH, aatch now I get it
2015-05-26 20:58:58	<--	Guest38 (textual@moz-4hh.6p3.217.74.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-26 20:59:04	aatch	doomrobo, we *always* call into_iter().
2015-05-26 20:59:24	<--	pcwalton (pcwalton@moz-l8ebtf.sfo1.mozilla.com) has quit (Client exited)
2015-05-26 20:59:26	doomrobo	I thought you were saying that vec impls IntoIterator and is therefore an iterator, as is vec.iter(). Didn't realize that `for` was defined for IntoIterator
2015-05-26 20:59:46	koobs	bstrie: just :)
2015-05-26 20:59:59	doomrobo	cool. Now I'm finally gonna watch kmc's Rust Release Party talk
2015-05-26 21:00:05	-->	markstory (textual@moz-tb3ghu.cable.rogers.com) has joined #rust
2015-05-26 21:00:56	-->	acgtyrant (acgtyrant@moz-3kd.b79.160.124.IP) has joined #rust
2015-05-26 21:01:08	-->	skeuomorf (skeuomorf@moz-ij1.21q.32.197.IP) has joined #rust
2015-05-26 21:02:44	bluss	watch the whole hour, it was great
2015-05-26 21:02:51	<--	Leon (Leon@moz-8aq.mv0.33.189.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-26 21:03:32	<--	ryanxcharles (ryan@moz-lcf.eq6.124.64.IP) has quit (Ping timeout: 121 seconds)
2015-05-26 21:03:39	<--	envi_u (envi@moz-ih5.olo.169.121.IP) has quit (Ping timeout: 121 seconds)
2015-05-26 21:04:01	meh	do I always need a RefCell when using thread_local! ?
2015-05-26 21:04:25	<--	santiago (santiago@moz-8th.j2e.167.12.IP) has quit (Quit: Computer has gone to sleep.)
2015-05-26 21:05:25	grant	Mutabah_: you around?
2015-05-26 21:05:30	talchas	you might want some other Cell instead, but probably
2015-05-26 21:05:32	-->	fyolnish (fyolnish@moz-rv32aj.ocn.ne.jp) has joined #rust
2015-05-26 21:05:45	<--	panicbit (panicbit@moz-rcvp1e.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2015-05-26 21:06:17	krax	anyone have the patience to help me cross compile libstd?
2015-05-26 21:07:09	-->	indefini (indefini@moz-4p4v25.ucom.ne.jp) has joined #rust
2015-05-26 21:07:10	<--	SpaceManiac (Tad@moz-ichs44.dyn.suddenlink.net) has quit (Ping timeout: 121 seconds)
2015-05-26 21:07:10	-->	SiegeLord (sl@moz-9jtaei.ca.comcast.net) has joined #rust
2015-05-26 21:09:58	<--	Witcher (Witcher@moz-1514fg.dynamic.chello.pl) has quit (Connection closed)
2015-05-26 21:10:22	Mutabah_	grant: An now
2015-05-26 21:10:26	--	Mutabah_ is now known as Mutabah
2015-05-26 21:10:29	-->	vmesons (rmacleod@moz-hs5cri.cable.teksavvy.com) has joined #rust
2015-05-26 21:10:54	<--	jaen (jaen@moz-ifmik2.copit.pl) has quit (Quit: WeeChat 1.1.1)
2015-05-26 21:11:25	<--	ygrek (user@moz-8j9aeu.org.ua) has quit (Ping timeout: 121 seconds)
2015-05-26 21:11:36	-->	Mutabah_ (tpg@moz-cv3j21.bigpond.net.au) has joined #rust
2015-05-26 21:12:09	<--	skeuomorf (skeuomorf@moz-ij1.21q.32.197.IP) has quit (Ping timeout: 121 seconds)
2015-05-26 21:12:34	@huon	krax: what platform?
2015-05-26 21:12:45	 *	Ms2ger waves at bstrie 
2015-05-26 21:13:20	@huon	krax: (generally, the "easiest" to cross compile std is to do a bootstrap after running `./configure --target=$YOUR TARGET`)
2015-05-26 21:13:29	<--	kuanhungc (kuanhungc@moz-46bmsq.ipv6.he.net) has quit (Connection closed)
2015-05-26 21:13:38	grant	Mutabah: can you review some code for general stylistic and idiomatic stuff? My first longish rust code.
2015-05-26 21:14:27	Mutabah	maybe? I'm a little busy atm
2015-05-26 21:14:32	krax	huon: emscripten :P
2015-05-26 21:14:34	grant	Mutabah: nevermind, no worries
2015-05-26 21:14:42	-->	nicoo (nico@moz-1v2b7a.citronna.de) has joined #rust
2015-05-26 21:14:42	-->	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has joined #rust
2015-05-26 21:14:43	@huon	krax: oh
2015-05-26 21:14:59	krax	huon: ive gotten through libcore, collections, and up to libstd, but ive hit a snag at libbacktrace
2015-05-26 21:15:13	@huon	krax: I know a few people in #rust-gamedev have done a pile of stuff with emscripten, so it may have a higher density of knowledge
2015-05-26 21:15:19	@huon	(I certainly don't have much)
2015-05-26 21:15:34	krax	ok. maybe ill swing over there, thanks!
2015-05-26 21:15:44	<--	demilux (demilux@moz-fk1.kt4.14.64.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-26 21:16:31	--	Mutabah_ is now known as tpg
2015-05-26 21:17:46	krax	huon: could you help me understand where rust_builtin and rustrt_native comes from?
2015-05-26 21:17:50	Kovensky	https://github.com/Manishearth/rust-clippy <-- clippy... /o\
2015-05-26 21:18:11	<--	nicoo (nico@moz-1v2b7a.citronna.de) has quit (Quit: WeeChat 1.1.1)
2015-05-26 21:19:53	-->	mcoffin (mcoffin@moz-hrs.16d.54.128.IP) has joined #rust
2015-05-26 21:20:24	@huon	krax: erm, I don't know
2015-05-26 21:20:30	@huon	krax: maybe something in src/rt?
2015-05-26 21:20:58	<--	ajhager (aajhager@moz-mcdsgi.iplsin.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-26 21:21:48	-->	NerdTaco (NerdTaco@moz-a4e65f.dsl.bell.ca) has joined #rust
2015-05-26 21:22:36	<--	nicholasf (nicholasf@moz-5gls9l.internode.on.net) has quit (Connection closed)
2015-05-26 21:22:43	-->	nicoo (nico@moz-1v2b7a.citronna.de) has joined #rust
2015-05-26 21:23:27	-->	zslayton (Mibbit@moz-0gsjuf.res.rr.com) has joined #rust
2015-05-26 21:23:34	-->	nicholasf (nicholasf@moz-5gls9l.internode.on.net) has joined #rust
2015-05-26 21:23:57	<--	dmac_ (dmac@moz-moa.puk.8.50.IP) has quit (Ping timeout: 121 seconds)
2015-05-26 21:24:31	zslayton	Is there an easy way to make #[bench]es available to people using the nightly while having stable rustc ignore them?
2015-05-26 21:24:47	doomrobo	ok wow kmc's talk confused the hell out of me. I lost him at the enum Equal. Is there any good intro to dependent typing anyone would recommend?
2015-05-26 21:25:11	bluss	zslayton: you can put them in the benches/ directory
2015-05-26 21:25:35	zslayton	bluss: Oh, is it that easy? Cool!@
2015-05-26 21:25:38	zslayton	*-@
2015-05-26 21:25:40	-->	logan_e (logan_e@moz-ltn.qg3.218.73.IP) has joined #rust
2015-05-26 21:26:41	<--	timj (timj@moz-27orc9.berlin.ccc.de) has quit (Ping timeout: 121 seconds)
2015-05-26 21:27:42	aatch	doomrobo, probably one of the dependently typed languages.
2015-05-26 21:27:54	aatch	doomrobo, if you're familiar with Haskell, Agda's not too bad.
2015-05-26 21:28:03	<--	godlikesme (godlikesme@moz-2a2.dsd.174.79.IP) has quit (Ping timeout: 121 seconds)
2015-05-26 21:28:16	doomrobo	I am not familiar with either of those :)
2015-05-26 21:28:31	 *	niconii is a little disappointed that rust-clippy doesn't actually make Clippy show up
2015-05-26 21:28:33	<--	acgtyrant (acgtyrant@moz-3kd.b79.160.124.IP) has quit (Connection closed)
2015-05-26 21:28:35	<--	Ms2ger (Ms2ger@moz-3mi.nja.110.38.IP) has quit (Ping timeout: 121 seconds)
2015-05-26 21:28:51	@niconii	Manishearth: you at least need some ascii art or something
2015-05-26 21:29:03	-->	zyga (zyga@moz-84t.g3u.7.89.IP) has joined #rust
2015-05-26 21:29:28	@Havvy	Can I sort an Iterator without collecting it into a Vec first?
2015-05-26 21:29:30	-->	skeuomorf (skeuomorf@moz-ij1.21q.32.197.IP) has joined #rust
2015-05-26 21:30:33	jn	Havvy: you might collect it into a inherently sorted data structure such as a sorted tree
2015-05-26 21:31:26	<--	_Vi (vi@moz-bbs.vhj.131.104.IP) has quit (Ping timeout: 121 seconds)
2015-05-26 21:31:38	@Havvy	jn: Good idea, though that still leaves me with .collect::<SortedTree>().into_iter().  :S
2015-05-26 21:32:00	-->	mkpankov (mkpankov@moz-44d.3mh.23.84.IP) has joined #rust
2015-05-26 21:32:03	pingveno	And more runtime/memory cost
2015-05-26 21:32:15	-->	jviereck (Adium@moz-jh8j4p.dynamic.hispeed.ch) has joined #rust
2015-05-26 21:32:23	<--	harrisonclarke (harrisoncla@moz-uur7pt.eastlink.ca) has quit (Connection closed)
2015-05-26 21:32:28	<--	JosiahOne (Instantbird@moz-ddc6ja.l2d1.q8mm.0306.2602.IP) has quit (Ping timeout: 121 seconds)
2015-05-26 21:32:45	@Havvy	I'm not really caring about runtime/memory cost. IO will outweigh anything else.
2015-05-26 21:33:05	pingveno	Then why is collecting into a Vec an issue?
2015-05-26 21:33:29	@Havvy	Because sorting a Vec breaks my method chaining...
2015-05-26 21:33:49	-->	ryanxcharles (ryan@moz-c89.3pk.170.166.IP) has joined #rust
2015-05-26 21:34:06	pingveno	Ah
2015-05-26 21:34:40	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Connection closed)
2015-05-26 21:34:53	bluss	hehe then define more methods
2015-05-26 21:35:02	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-26 21:35:16	pingveno	sorted()? :P
2015-05-26 21:36:24	bluss	Havvy: I was going to link you a lazy sort implementation
2015-05-26 21:36:59	pingveno	fn sorted<T: Cmp, C: FromIterator<Item=T>(self) -> C?
2015-05-26 21:37:16	bluss	Havvy: but that wasn't the point was it. You want a sort of the whole iterator, not just a part
2015-05-26 21:37:37	@Havvy	Yeah.
2015-05-26 21:37:46	-->	kuanhungc (kuanhungc@moz-46bmsq.ipv6.he.net) has joined #rust
2015-05-26 21:38:23	<--	gandalf (zbraniecki@moz-cp7c4m.ca.comcast.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-26 21:39:04	-->	harrisonclarke (harrisoncla@moz-uur7pt.eastlink.ca) has joined #rust
2015-05-26 21:39:04	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Ping timeout: 121 seconds)
2015-05-26 21:39:25	@Havvy	http://is.gd/4HxTi7 is what I currently have.
2015-05-26 21:39:56	<--	rbranson (rbranson@moz-i7m.9o0.201.199.IP) has quit (Quit: Computer has gone to sleep.)
2015-05-26 21:40:14	-->	ajhager (aajhager@moz-mcdsgi.iplsin.sbcglobal.net) has joined #rust
2015-05-26 21:40:17	@Havvy	I'm going from Vec -> Iter (for one method) -> Vec (for one method) -> Iter (for one method) -> String
2015-05-26 21:40:21	@Havvy	And that's just crazy.
2015-05-26 21:40:22	-->	jkernen (Thunderbird@moz-3avp5f.wi.charter.com) has joined #rust
2015-05-26 21:40:24	-->	keenan (keenan@moz-qdcjho.res.rr.com) has joined #rust
2015-05-26 21:41:19	XMPPwocky	i just found out what OIBITs are, woah
2015-05-26 21:41:23	-->	GGist (Mibbit@moz-st7v59.wa.comcast.net) has joined #rust
2015-05-26 21:41:50	<--	c74d (c74d3a4ebb6@moz-0ersgu.oc.cox.net) has quit (Ping timeout: 121 seconds)
2015-05-26 21:42:02	@Havvy	!oibit
2015-05-26 21:42:02	+rustbot	OIBIT is Opt-in built-in traits.
2015-05-26 21:42:09	-->	c74d (c74d3a4ebb6@moz-kfb9ol.mggc.hibn.4404.2002.IP) has joined #rust
2015-05-26 21:42:18	-->	csherrat_ (textual@moz-357qdq.cable.teksavvy.com) has joined #rust
2015-05-26 21:42:23	<--	Ralith (ralith@moz-miv.lne.251.63.IP) has quit (Ping timeout: 121 seconds)
2015-05-26 21:42:25	@Havvy	XMPPwocky:  If you could add more to that factoid, please do.
2015-05-26 21:42:32	-->	popow (Thunderbird@moz-03f.kd0.252.223.IP) has joined #rust
2015-05-26 21:43:12	-->	godlikesme (godlikesme@moz-2a2.dsd.174.79.IP) has joined #rust
2015-05-26 21:43:57	@Havvy	So yeah...does anybody have a suggestion for cleaning up http://is.gd/4HxTi7 ?
2015-05-26 21:44:05	-->	_Vi (vi@moz-bbs.vhj.131.104.IP) has joined #rust
2015-05-26 21:44:08	<--	mkpankov (mkpankov@moz-44d.3mh.23.84.IP) has quit (Ping timeout: 121 seconds)
2015-05-26 21:44:54	-->	hroi (hroi@moz-d273ub.static.netgroup.dk) has joined #rust
2015-05-26 21:45:01	-->	dcb (textual@moz-j72nfe.ca.comcast.net) has joined #rust
2015-05-26 21:45:59	<--	ellinokon (ellinokon@moz-gh5.r2h.62.178.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-26 21:46:02	-->	ellinokon (ellinokon@moz-gh5.r2h.62.178.IP) has joined #rust
2015-05-26 21:46:12	SiegeLord	Anyone know how to select the nightlies in travis?
2015-05-26 21:46:20	ChrisMorgan	Havvy: middle.connect(", ")
2015-05-26 21:46:22	-->	rajat (rajat@moz-emnlcf.ca.comcast.net) has joined #rust
2015-05-26 21:46:32	@Havvy	ChrisMorgan:  Not available in Stable Rust.
2015-05-26 21:46:36	ChrisMorgan	Ah.
2015-05-26 21:47:33	-->	kkoski (kkoski@moz-1av.n0d.255.50.IP) has joined #rust
2015-05-26 21:48:18	<--	_Vi (vi@moz-bbs.vhj.131.104.IP) has quit (Ping timeout: 121 seconds)
2015-05-26 21:49:00	<--	hroi (hroi@moz-d273ub.static.netgroup.dk) has quit (Ping timeout: 121 seconds)
2015-05-26 21:49:06	-->	pohl (pohl@moz-0a4vld.res.rr.com) has joined #rust
2015-05-26 21:49:16	-->	_Vi (vi@moz-bbs.vhj.131.104.IP) has joined #rust
2015-05-26 21:49:38	SiegeLord	I guess I could install it myself... but travis installing the stable rust kind of removes 90% of the point of travis ci :P
2015-05-26 21:50:16	SiegeLord	Ah, I see... there's a setting
2015-05-26 21:50:18	bombela	am I correct that until we have the "box pattern" stuff figured out, we cannot pattern destructure the content of a box in some places?
2015-05-26 21:50:26	-->	demilux (demilux@moz-73qa6c.wa.comcast.net) has joined #rust
2015-05-26 21:50:31	@Havvy	bombela:  Correct.
2015-05-26 21:50:47	bombela	Havvy: oky doky, thanks :)
2015-05-26 21:51:27	bluss	Havvy: it's stable
2015-05-26 21:51:46	bluss	Havvy: by the way, use acc and push to it instead of creating new strings
2015-05-26 21:52:06	GGist	SiegeLord: https://github.com/GGist/redox-rs/blob/master/.travis.yml how i did it
2015-05-26 21:52:24	SiegeLord	GGist: Was that env required?
2015-05-26 21:52:52	@Havvy	bluss:  http://doc.rust-lang.org/std/slice/trait.SliceConcatExt.html  This entire trait is Unstable.
2015-05-26 21:52:54	GGist	SiegeLord: That part im not sure about, I got that line from another person's script
2015-05-26 21:53:44	SiegeLord	Hehe
2015-05-26 21:53:50	bluss	Havvy: try to call it
2015-05-26 21:53:54	SiegeLord	I'm going to try just rust: nightly and see if that works
2015-05-26 21:53:56	bluss	Havvy: it's stable :)
2015-05-26 21:54:08	bluss	playbot: ["a", "b"].connect(", ")
2015-05-26 21:54:09	--	Notice(playbot): "a, b"
2015-05-26 21:54:13	bluss	playbot: VERSION
2015-05-26 21:54:14	--	Notice(playbot): "rustc 1.0.0 (a59de37e9 2015-05-13) (built 2015-05-14)"
2015-05-26 21:55:03	@Havvy	bluss:  What? I *was* getting compiler errors saying it wasn't stable when I tried that yesterday.
2015-05-26 21:55:21	<--	jeffasinger (jeff@moz-u5nog7.res.rr.com) has quit (Client exited)
2015-05-26 21:55:29	bluss	as long as you don't use the trait by name
2015-05-26 21:55:39	bluss	it's in the prelude, the methods are available
2015-05-26 21:56:20	@niconii	so you can't do this:
2015-05-26 21:56:22	@niconii	playbot: use std::slice::SliceConcatExt;
2015-05-26 21:56:24	--	Notice(playbot): <anon>:9:13: 9:39 error: use of unstable library feature 'collections': U should be an associated type
2015-05-26 21:56:24	--	Notice(playbot): <anon>:9         use std::slice::SliceConcatExt;
2015-05-26 21:56:24	--	Notice(playbot): output truncated; full output at: http://bit.ly/1Ax1FCp
2015-05-26 21:57:03	<--	Morten (Morten@moz-t81tde.bb.online.no) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-05-26 21:57:41	@niconii	the boundaries between what's stable and what's unstable are a little weird...
2015-05-26 21:58:37	<--	c_wraith (c_wraith@moz-7i8.v6v.191.131.IP) has quit (Quit: Leaving)
2015-05-26 21:58:40	SiegeLord	GGist: Seems to work without it, fyi
2015-05-26 21:58:50	-->	c_wraith (c_wraith@moz-7i8.v6v.191.131.IP) has joined #rust
2015-05-26 21:59:14	<--	ajhager (aajhager@moz-mcdsgi.iplsin.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-26 21:59:52	-->	chip (quassel@moz-26d.2gk.254.199.IP) has joined #rust
2015-05-26 21:59:56	<--	chip (quassel@moz-26d.2gk.254.199.IP) has quit (Connection closed)
2015-05-26 21:59:57	<--	harrisonclarke (harrisoncla@moz-uur7pt.eastlink.ca) has quit (Connection closed)
2015-05-26 22:00:11	-->	harrisonclarke (harrisoncla@moz-uur7pt.eastlink.ca) has joined #rust
2015-05-26 22:00:27	bluss	niconii: rust is never 100% coherent :)
2015-05-26 22:01:06	-->	bitborn (Mibbit@moz-1av.n0d.255.50.IP) has joined #rust
2015-05-26 22:01:10	@Havvy	Sounds like a Rust Horse tweet.
2015-05-26 22:02:11	GGist	SiegeLord: Oh thanks, gonna remove that from my scripts as well
2015-05-26 22:03:33	kkoski	So I was going to try working on this issue:
2015-05-26 22:03:34	kkoski	https://github.com/rust-lang/rust/issues/25800
2015-05-26 22:03:41	kkoski	Should I leave a comment on the issue?
2015-05-26 22:04:36	-->	santiago (santiago@moz-ro2mm9.res.rr.com) has joined #rust
2015-05-26 22:05:28	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-26 22:05:38	-->	chippers (chip@moz-26d.2gk.254.199.IP) has joined #rust
2015-05-26 22:07:18	<--	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-26 22:07:31	<--	pohl (pohl@moz-0a4vld.res.rr.com) has quit (Ping timeout: 121 seconds)
2015-05-26 22:07:33	-->	timj (timj@moz-355v5d.dip0.t-ipconnect.de) has joined #rust
2015-05-26 22:07:51	<--	DerisiveLogic (smuxi@moz-g93io6.res.rr.com) has quit (Ping timeout: 121 seconds)
2015-05-26 22:08:05	<--	logan_e (logan_e@moz-ltn.qg3.218.73.IP) has quit (Client exited)
2015-05-26 22:08:26	-->	Guest_ (textual@moz-lmfinb.fios.verizon.net) has joined #rust
2015-05-26 22:08:38	<--	zslayton (Mibbit@moz-0gsjuf.res.rr.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-26 22:08:58	-->	Ralith (ralith@moz-tiaj7p.customer.broadstripe.net) has joined #rust
2015-05-26 22:09:21	<--	markstory (textual@moz-tb3ghu.cable.rogers.com) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-26 22:09:30	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Ping timeout: 121 seconds)
2015-05-26 22:10:37	<--	daurnimator (daurnimator@moz-tol6tm.8ht3.2og7.19f0.2001.IP) has quit (Ping timeout: 121 seconds)
2015-05-26 22:11:03	-->	logan_e (logan_e@moz-ltn.qg3.218.73.IP) has joined #rust
2015-05-26 22:11:09	-->	tristanseifert (tristanseif@moz-r0t7ns.res.rr.com) has joined #rust
2015-05-26 22:12:00	-->	daurnimator (daurnimator@moz-tol6tm.8ht3.2og7.19f0.2001.IP) has joined #rust
2015-05-26 22:13:37	<--	timj (timj@moz-355v5d.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2015-05-26 22:14:25	--	chmanchester is now known as chmanchester|afk
2015-05-26 22:14:47	<--	NerdTaco (NerdTaco@moz-a4e65f.dsl.bell.ca) has quit (A TLS packet with unexpected length was received.)
2015-05-26 22:15:12	<--	tristanseifert (tristanseif@moz-r0t7ns.res.rr.com) has quit (Ping timeout: 121 seconds)
2015-05-26 22:15:42	-->	zzing (textual@moz-jucm1n.cpe.distributel.net) has joined #rust
2015-05-26 22:16:39	-->	tristanseifert (tristanseif@moz-r0t7ns.res.rr.com) has joined #rust
2015-05-26 22:16:43	<--	ytain (ytain@moz-ffpck2.dsl.teksavvy.com) has quit (Quit: Textual IRC Client: www.textualapp.com)
2015-05-26 22:16:58	-->	pcwalton (pcwalton@moz-6kjabm.ca.comcast.net) has joined #rust
2015-05-26 22:16:58	--	Mode #rust [+ao pcwalton pcwalton] by ChanServ
2015-05-26 22:17:13	-->	rubear (rubear@moz-8ubls0.uq.edu.au) has joined #rust
2015-05-26 22:17:28	jdub	aha, the memcpy implementation in rlibc was causing __morestack
2015-05-26 22:17:30	-->	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has joined #rust
2015-05-26 22:18:07	<--	swgillespie (swgillespie@moz-1i5.3un.220.167.IP) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-26 22:19:57	<--	harrisonclarke (harrisoncla@moz-uur7pt.eastlink.ca) has quit (Connection closed)
2015-05-26 22:21:18	<--	bluss (bluss@moz-ec5o68.cust.bredbandsbolaget.se) has quit (Ping timeout: 121 seconds)
2015-05-26 22:21:27	--	Azdle is now known as Guest5707
2015-05-26 22:21:27	--	Azdle_ is now known as Azdle
2015-05-26 22:22:51	<--	kgrandon (Adium@moz-i0u8p7.hfc.comcastbusiness.net) has quit (Quit: Leaving.)
2015-05-26 22:24:06	-->	acgtyrant (acgtyrant@moz-0k4.4sk.186.39.IP) has joined #rust
2015-05-26 22:24:39	<--	csherrat_ (textual@moz-357qdq.cable.teksavvy.com) has quit (Ping timeout: 121 seconds)
2015-05-26 22:24:43	<--	kkoski (kkoski@moz-1av.n0d.255.50.IP) has quit (Connection closed)
2015-05-26 22:24:53	<--	csherratt (colin@moz-357qdq.cable.teksavvy.com) has quit (Ping timeout: 121 seconds)
2015-05-26 22:26:28	thelink2012	what is a 'static type as mentioned in Any doc (http://doc.rust-lang.org/std/any/) ? When isn't a type 'static ?
2015-05-26 22:26:31	<--	bitborn (Mibbit@moz-1av.n0d.255.50.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-26 22:26:54	<--	rajat (rajat@moz-emnlcf.ca.comcast.net) has quit (Client exited)
2015-05-26 22:27:00	thelink2012	and also when isn't a type Reflect?
2015-05-26 22:27:20	<--	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-26 22:27:27	<--	skeuomorf (skeuomorf@moz-ij1.21q.32.197.IP) has quit (Ping timeout: 121 seconds)
2015-05-26 22:27:35	<--	khades (Thunderbird@moz-qgd.3vk.74.212.IP) has quit (Ping timeout: 121 seconds)
2015-05-26 22:27:44	-->	kgrandon (Adium@moz-i0u8p7.hfc.comcastbusiness.net) has joined #rust
2015-05-26 22:28:08	thelink2012	Nevermind the last question actually? "This trait is implemented for all types" in the Reflect doc
2015-05-26 22:28:28	thelink2012	but still, when will a type not be 'static ?
2015-05-26 22:29:44	<--	Guest_ (textual@moz-lmfinb.fios.verizon.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-26 22:30:33	ChrisMorgan	thelink2012: when it contains non-'static types. http://chrismorgan.info/blog/rust-ownership-the-hard-way.html
2015-05-26 22:30:47	<--	Azdle (Azdle@moz-1av.n0d.255.50.IP) has quit (Ping timeout: 121 seconds)
2015-05-26 22:31:00	<--	dcb (textual@moz-j72nfe.ca.comcast.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-26 22:31:27	<--	jviereck (Adium@moz-jh8j4p.dynamic.hispeed.ch) has quit (Quit: Leaving.)
2015-05-26 22:33:04	<--	rubear (rubear@moz-8ubls0.uq.edu.au) has quit (Ping timeout: 121 seconds)
2015-05-26 22:33:06	<--	krakatoa (krakatoa@moz-121.ktg.95.181.IP) has quit (Ping timeout: 121 seconds)
2015-05-26 22:33:46	-->	Wilduck (erik@moz-0l3fjb.fios.verizon.net) has joined #rust
2015-05-26 22:34:29	-->	rmgk (ragnar@moz-aoflfc.dyn.telefonica.de) has joined #rust
2015-05-26 22:34:54	<--	godlikesme (godlikesme@moz-2a2.dsd.174.79.IP) has quit (Ping timeout: 121 seconds)
2015-05-26 22:35:22	<--	dalarmmst (dalarmmst@moz-mb21j4.bredband.comhem.se) has quit (Ping timeout: 121 seconds)
2015-05-26 22:35:25	-->	dcb (textual@moz-j72nfe.ca.comcast.net) has joined #rust
2015-05-26 22:35:42	<--	meh (meh@moz-e56g7l.42-151.net24.it) has quit (Ping timeout: 121 seconds)
2015-05-26 22:35:49	-->	rubear (rubear@moz-8ubls0.uq.edu.au) has joined #rust
2015-05-26 22:35:58	-->	playjax (chatzilla@moz-0q3jo8.optusnet.com.au) has joined #rust
2015-05-26 22:36:47	<--	jkernen (Thunderbird@moz-3avp5f.wi.charter.com) has quit (Client exited)
2015-05-26 22:37:45	<--	Guest (textual@moz-rtn.fg7.77.192.IP) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-26 22:37:54	<--	rmgk_ (ragnar@moz-elld5u.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2015-05-26 22:38:16	<--	acgtyrant (acgtyrant@moz-0k4.4sk.186.39.IP) has quit (Ping timeout: 121 seconds)
2015-05-26 22:39:14	<--	pcwalton (pcwalton@moz-6kjabm.ca.comcast.net) has quit (Client exited)
2015-05-26 22:39:44	<--	Wilduck (erik@moz-0l3fjb.fios.verizon.net) has quit (Client exited)
2015-05-26 22:41:53	-->	mkpankov (mkpankov@moz-km8.0jj.23.84.IP) has joined #rust
2015-05-26 22:43:01	<--	dlmanning (dlmanning@moz-en2.j2q.243.162.IP) has quit (Ping timeout: 121 seconds)
2015-05-26 22:43:10	-->	mkpankov` (mkpankov@moz-hc8.k4a.16.195.IP) has joined #rust
2015-05-26 22:43:16	<--	mkpankov (mkpankov@moz-km8.0jj.23.84.IP) has quit (Connection closed)
2015-05-26 22:43:30	-->	mib_bkkmog (Mibbit@moz-a48.rpu.91.208.IP) has joined #rust
2015-05-26 22:44:15	-->	mkpankov (mkpankov@moz-km8.0jj.23.84.IP) has joined #rust
2015-05-26 22:44:16	<--	mkpankov` (mkpankov@moz-hc8.k4a.16.195.IP) has quit (Connection closed)
2015-05-26 22:44:19	aatch	huon, ping
2015-05-26 22:44:36	thelink2012	ChrisMorgan: Ah, great article. So as I understood a 'static type is one that has at least a reference (which is not &'static!)  in itself or types in it...!?!
2015-05-26 22:45:03	--	irc: disconnected from server
2015-05-26 22:45:20	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-26 22:45:20	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-26 22:45:20	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-26 22:45:20	--	Channel #rust: 949 nicks (15 ops, 0 halfops, 1 voice, 933 normals)
2015-05-26 22:45:22	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-26 22:45:43	-->	mkpankov` (mkpankov@moz-hc8.k4a.16.195.IP) has joined #rust
2015-05-26 22:45:44	ChrisMorgan	thelink2012: the lifetime of a type is the shortest of that of its members. So if a type contains purely 'static types, it is 'static.
2015-05-26 22:45:44	<--	mkpankov (mkpankov@moz-km8.0jj.23.84.IP) has quit (Connection closed)
2015-05-26 22:45:45	aatch	huon, generating random numbers for Ramp, any tips/tricks/pitfalls? (You seem like the guy to ask about this).
2015-05-26 22:46:02	@huon	aatch: what distribution do you want?
2015-05-26 22:46:03	@huon	uniform?
2015-05-26 22:46:14	-->	aseaday (Mibbit@moz-5nb.atm.166.180.IP) has joined #rust
2015-05-26 22:46:15	<--	mkpankov` (mkpankov@moz-hc8.k4a.16.195.IP) has quit (Connection closed)
2015-05-26 22:46:20	aatch	huon, seems like a good start, yeah.
2015-05-26 22:46:44	-->	mkpankov (mkpankov@moz-km8.0jj.23.84.IP) has joined #rust
2015-05-26 22:46:59	<--	pgonda (peter@moz-s36.0tp.134.75.IP) has quit (Ping timeout: 121 seconds)
2015-05-26 22:47:02	aseaday	Er... Where could find the principle and details of thread, arc, mux in Rust-lang?
2015-05-26 22:47:23	@huon	aatch: hm, so what's your goal; generating a random Int?
2015-05-26 22:48:04	aatch	huon, pretty much, within a range of course.
2015-05-26 22:48:15	-->	dalarmmst (dalarmmst@moz-mb21j4.bredband.comhem.se) has joined #rust
2015-05-26 22:48:39	-->	bkearns (Adium@moz-2l9j31.ca.comcast.net) has joined #rust
2015-05-26 22:48:47	<--	mkpankov (mkpankov@moz-km8.0jj.23.84.IP) has quit (Connection closed)
2015-05-26 22:48:48	-->	mkpankov` (mkpankov@moz-hc8.k4a.16.195.IP) has joined #rust
2015-05-26 22:49:12	aatch	huon, since a uniform distribution over a practically infinite range is probably not what people want...
2015-05-26 22:49:38	@huon	aatch: and doesn't exist :P
2015-05-26 22:49:39	<--	mkpankov` (mkpankov@moz-hc8.k4a.16.195.IP) has quit (Connection closed)
2015-05-26 22:49:42	@huon	aatch: but yeah
2015-05-26 22:49:52	@huon	aatch: I've not really done anyhting with arbitrary precision
2015-05-26 22:50:09	@huon	like, the algorithms used by rand for fixed precision will work, but may not be the most efficient
2015-05-26 22:50:21	-->	mkpankov (mkpankov@moz-km8.0jj.23.84.IP) has joined #rust
2015-05-26 22:51:08	<--	dcb (textual@moz-j72nfe.ca.comcast.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-26 22:51:23	Murarth	Is there a reason why `Foo(a, ..)` doesn't work with enum values?
2015-05-26 22:51:35	<--	tilde` (namidasshu@moz-3gs.igt.238.95.IP) has quit (Ping timeout: 121 seconds)
2015-05-26 22:51:45	@huon	aatch: (basically, to generate in [a, b), let c = b - a, range = floor(RAND_MAX / c) * c, do { x = rand() } while (x >= range); return a + (x % c);)
2015-05-26 22:52:15	-->	packman2261 (steve@moz-i09.vvp.14.76.IP) has joined #rust
2015-05-26 22:53:30	<--	keenan (keenan@moz-qdcjho.res.rr.com) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-05-26 22:54:47	-->	acgtyrant (acgtyrant@moz-tfb.evq.68.101.IP) has joined #rust
2015-05-26 22:54:50	-->	keenan (keenan@moz-qdcjho.res.rr.com) has joined #rust
2015-05-26 22:56:07	-->	forgottenone (forgottenon@moz-j95.1v3.131.217.IP) has joined #rust
2015-05-26 22:57:20	--	irc: disconnected from server
2015-05-26 22:57:32	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-26 22:57:32	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-26 22:57:32	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-26 22:57:33	--	Channel #rust: 953 nicks (15 ops, 0 halfops, 1 voice, 937 normals)
2015-05-26 22:57:34	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-26 22:57:56	--	zz_kimundi is now known as kimundi
2015-05-26 22:59:43	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-26 23:00:10	-->	p1start (p1start@moz-nftjhe.org) has joined #rust
2015-05-26 23:00:13	<--	harrisonclarke (harrisoncla@moz-uur7pt.eastlink.ca) has quit (Connection closed)
2015-05-26 23:00:21	-->	harrisonclarke (harrisoncla@moz-uur7pt.eastlink.ca) has joined #rust
2015-05-26 23:00:23	-->	dcb (textual@moz-j72nfe.ca.comcast.net) has joined #rust
2015-05-26 23:00:51	<--	acgtyrant (acgtyrant@moz-tfb.evq.68.101.IP) has quit (Ping timeout: 121 seconds)
2015-05-26 23:00:54	XMPPwocky	wait a second
2015-05-26 23:01:06	XMPPwocky	can you have Rc<Foo> and Rc<Bar>, where foo and bar are traits
2015-05-26 23:01:10	XMPPwocky	that point to the same thing
2015-05-26 23:02:02	XMPPwocky	if so: awww yesss
2015-05-26 23:02:10	-->	tmtwd (tmtwd@moz-0kkm5n.cable.rogers.com) has joined #rust
2015-05-26 23:02:17	c_wraith	Do rust Traits get treated as supertypes?
2015-05-26 23:02:22	-->	khades (Thunderbird@moz-ual.b31.186.31.IP) has joined #rust
2015-05-26 23:03:45	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Ping timeout: 121 seconds)
2015-05-26 23:03:55	-->	kkoski (kkoski@moz-bur2si.mn.comcast.net) has joined #rust
2015-05-26 23:03:56	Mutabah	XMPPwocky: Aah, I think so
2015-05-26 23:05:02	Mutabah	XMPPwocky: I'd presume something like RcInner<T: ?Sized> { strong: usize, weak: usize, data: T } is how it works internally
2015-05-26 23:06:44	<--	tpg (tpg@moz-cv3j21.bigpond.net.au) has quit (Quit: VPS is back, so I'm not needed any more)
2015-05-26 23:06:52	<--	forgottenone (forgottenon@moz-j95.1v3.131.217.IP) has quit (Quit: Konversation terminated!)
2015-05-26 23:06:59	aatch	XMPPwocky, I don't see why not.
2015-05-26 23:07:15	<--	idegen (greg@moz-9c4nle.or.frontiernet.net) has quit (Quit: Leaving.)
2015-05-26 23:07:30	<--	keenan (keenan@moz-qdcjho.res.rr.com) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-05-26 23:08:13	<--	gregburd (uid85367@moz-513f2i.ealing.irccloud.com) has quit (Quit: Connection closed for inactivity)
2015-05-26 23:08:21	-->	kazimuth (james@moz-4fl.86t.92.209.IP) has joined #rust
2015-05-26 23:09:10	-->	colinsurprenant (colin@moz-q9ee1n.74.electronicbox.net) has joined #rust
2015-05-26 23:09:26	posix4e	do we have a url library anymore?
2015-05-26 23:09:48	Mutabah	posix4e: Is there a crate on crates.io?
2015-05-26 23:09:52	Mutabah	!crate url
2015-05-26 23:09:53	posix4e	ahh
2015-05-26 23:09:53	+rustbot	url (0.2.34) - URL parser for Rust -> https://crates.io/crates/url
2015-05-26 23:09:54	posix4e	ok 
2015-05-26 23:09:55	<--	Rym (y@moz-c2u.sd4.38.217.IP) has quit (Ping timeout: 121 seconds)
2015-05-26 23:09:57	posix4e	thanks
2015-05-26 23:10:14	Mutabah	posix4e: Many things that were in std have been moved to crates.io
2015-05-26 23:10:38	<--	mkpankov (mkpankov@moz-km8.0jj.23.84.IP) has quit (Ping timeout: 121 seconds)
2015-05-26 23:10:47	Mutabah	This allows them to be versioned separately (avoiding locking a bad API into the std)
2015-05-26 23:10:54	posix4e	probably a good idea
2015-05-26 23:11:52	<--	jwilm (jwilm@moz-1rin99.hfc.comcastbusiness.net) has quit (Ping timeout: 121 seconds)
2015-05-26 23:13:04	<--	housl (housl@moz-qnjt4k.ut.comcast.net) has quit (Quit: WeeChat 1.2)
2015-05-26 23:13:34	-->	acgtyrant (acgtyrant@moz-0k4.4sk.186.39.IP) has joined #rust
2015-05-26 23:15:03	_habnabit	http://is.gd/zKhF9p why is this complaining about Sized? i thought using ?Sized on the trait like this was sufficient to say it doesn't matter what the size is? or, would i have to make add_callback generic over the type?
2015-05-26 23:16:03	<--	kazimuth (james@moz-4fl.86t.92.209.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-26 23:16:17	Mutabah	_habnabit: You're using 'F' as an argument to a function, but F isn't nessesarily sized
2015-05-26 23:16:36	_habnabit	Mutabah, so all non-reference arguments must be sized?
2015-05-26 23:16:54	Mutabah	Yes
2015-05-26 23:16:57	_habnabit	ah, okay
2015-05-26 23:16:59	_habnabit	that's clear then
2015-05-26 23:17:03	Mutabah	Anything that you pass that isn't via a pointer must be Sized
2015-05-26 23:17:45	@niconii	well, put another way
2015-05-26 23:17:51	@niconii	everything that you pass must be sized
2015-05-26 23:17:58	@niconii	it just so happens that references are sized
2015-05-26 23:18:10	Mutabah	^ better way of putting it
2015-05-26 23:18:13	_habnabit	okay
2015-05-26 23:19:32	thelink2012	posix4e: Your nickname gives me so many memories :) I used to have a project called **posix4**ever with the objective to brought a subset of the POSIX APIs to Windows.
2015-05-26 23:19:49	<--	kkoski (kkoski@moz-bur2si.mn.comcast.net) has quit (Connection closed)
2015-05-26 23:20:04	aseaday	Where could I read principle of arc, thread and mux?
2015-05-26 23:20:32	posix4e	haha
2015-05-26 23:20:37	Mutabah	aseaday: Does the book cover thread safety?
2015-05-26 23:20:49	posix4e	thelink2012: lolz, i got this username because trying to implement some subset of posix was so buggy it became my nic
2015-05-26 23:21:51	-->	summerlight_ (summerlight@moz-99k.2mj.130.121.IP) has joined #rust
2015-05-26 23:21:59	@niconii	huh
2015-05-26 23:22:08	@niconii	Arc was moved from std::rc to std::sync?
2015-05-26 23:22:28	thelink2012	aseaday: https://doc.rust-lang.org/book/concurrency.html prehaps; this is also a cool blog post http://blog.rust-lang.org/2015/04/10/Fearless-Concurrency.html
2015-05-26 23:22:44	thelink2012	posix4e: hu, for windows too?
2015-05-26 23:22:50	aseaday	thx!
2015-05-26 23:26:18	-->	sambotron (sambotron@moz-nao11s.ca.comcast.net) has joined #rust
2015-05-26 23:26:20	<--	sambotron (sambotron@moz-nao11s.ca.comcast.net) has quit (Connection closed)
2015-05-26 23:26:22	posix4e	nah, bsd and leeenux
2015-05-26 23:26:32	posix4e	I don't even know what the epoll for windows is
2015-05-26 23:26:44	-->	BossKonaSegway (Michael@moz-vp8rf7.res.rr.com) has joined #rust
2015-05-26 23:26:46	ubeatlenine	If I have a HashMap from &str to &str what would be the syntax for getting a value?
2015-05-26 23:27:00	ubeatlenine	I've been trying to figure it out for a while and nothing's working
2015-05-26 23:27:30	Mutabah	ubeatlenine: .get?
2015-05-26 23:28:18	<--	BossKonaSegway1 (Michael@moz-vp8rf7.res.rr.com) has quit (Ping timeout: 121 seconds)
2015-05-26 23:31:22	<--	frecel (quassel@moz-qme.p1t.254.162.IP) has quit (Connection closed)
2015-05-26 23:31:37	chchjesus	Hi there, does a variable transfer ownership if it goes into a loop, or an if statement?
2015-05-26 23:31:42	chchjesus	I mean, they're considered separate blocks
2015-05-26 23:31:59	Mutabah	chchjesus: No, most operations just borrow
2015-05-26 23:32:09	chchjesus	Mutabah: automatically?
2015-05-26 23:32:22	Mutabah	chchjesus: Any &self or &mut self method borrows
2015-05-26 23:32:23	-->	frecel (quassel@moz-qme.p1t.254.162.IP) has joined #rust
2015-05-26 23:32:48	Mutabah	However, if you use a non-Copy variable by value, then it will be moved to wherever it's going
2015-05-26 23:33:03	Mutabah	Separate from blocks etc
2015-05-26 23:33:18	chchjesus	But, I'm talking about within if statements and loops
2015-05-26 23:33:25	chchjesus	basically, any structure with { }
2015-05-26 23:33:43	aatch	chchjesus, some code would help.
2015-05-26 23:33:46	Mutabah	chchjesus: Unrelated
2015-05-26 23:33:49	-->	gandalf (zbraniecki@moz-cp7c4m.ca.comcast.net) has joined #rust
2015-05-26 23:33:52	chchjesus	wat
2015-05-26 23:33:54	chchjesus	Ok
2015-05-26 23:33:58	-->	Wilduck (erik@moz-0l3fjb.fios.verizon.net) has joined #rust
2015-05-26 23:34:03	-->	hroi (hroi@moz-d273ub.static.netgroup.dk) has joined #rust
2015-05-26 23:34:08	chchjesus	Hold up, let me get some code to explain what I mean
2015-05-26 23:34:13	Mutabah	chchjesus: If a value is moved, it's moved. It gets moved to whatever the new name is (a function call, into a struct, into a new binding)
2015-05-26 23:34:30	chchjesus	I thought it was moved into any new block
2015-05-26 23:34:34	Mutabah	doing 'let b = a;' moves out of a and makes a unusable
2015-05-26 23:36:13	<--	harrisonclarke (harrisoncla@moz-uur7pt.eastlink.ca) has quit (Connection closed)
2015-05-26 23:36:48	<--	kgrandon (Adium@moz-i0u8p7.hfc.comcastbusiness.net) has quit (Quit: Leaving.)
2015-05-26 23:36:49	-->	Rym (y@moz-c2u.sd4.38.217.IP) has joined #rust
2015-05-26 23:37:35	Kovensky	playbot: let a = [0; 1]; let b = a; println!("{}", a)
2015-05-26 23:37:36	--	Notice(playbot): <anon>:9:51: 9:52 error: the trait `core::fmt::Display` is not implemented for the type `[_; 1]` [E0277]
2015-05-26 23:37:36	--	Notice(playbot): <anon>:9         let a = [0; 1]; let b = a; println!("{}", a)
2015-05-26 23:37:36	--	Notice(playbot): output truncated; full output at: http://bit.ly/1etJiET
2015-05-26 23:37:44	Kovensky	playbot: let a = [0; 1]; let b = a; println!("{:?}", a)
2015-05-26 23:37:45	--	Notice(playbot): [0]
2015-05-26 23:37:45	--	Notice(playbot): ()
2015-05-26 23:37:58	Kovensky	o_O
2015-05-26 23:38:10	<--	hroi (hroi@moz-d273ub.static.netgroup.dk) has quit (Ping timeout: 121 seconds)
2015-05-26 23:38:26	Mutabah	Kovensky: Arrays are Copy iirc
2015-05-26 23:38:27	Kovensky	is [_; n] always a reference?
2015-05-26 23:38:30	Kovensky	oic
2015-05-26 23:38:37	@huon	Mutabah: if their contents are.
2015-05-26 23:38:43	Mutabah	huon: That's a given
2015-05-26 23:38:49	Kovensky	any "trivial" type that's not Copy?
2015-05-26 23:38:58	-->	harrisonclarke (harrisoncla@moz-uur7pt.eastlink.ca) has joined #rust
2015-05-26 23:39:01	Mutabah	Kovensky: Make a newtype?
2015-05-26 23:39:02	Kovensky	(as in, a type you can easily ask playbot to create)
2015-05-26 23:39:05	XMPPwocky	aatch: that's super cool
2015-05-26 23:39:26	@huon	Kovensky: &mut T
2015-05-26 23:39:28	XMPPwocky	it means you can do a lot of the fun antipatterns you might in C++ game engines
2015-05-26 23:39:32	@huon	Kovensky: Vec<X>, Box<X>
2015-05-26 23:39:33	Mutabah	playbot: #[derive(Debug)] struct S; let a = S; let b = a; println!("{:?}", a);
2015-05-26 23:39:34	--	Notice(playbot): <anon>:9:75: 9:76 error: use of moved value: `a`
2015-05-26 23:39:34	--	Notice(playbot): <anon>:9         #[derive(Debug)] struct S; let a = S; let b = a; println!("{:?}", a);
2015-05-26 23:39:34	--	Notice(playbot): output truncated; full output at: http://bit.ly/1BogAtT
2015-05-26 23:39:49	XMPPwocky	i.e a player is Rc<Player>, but also Rc<Renderable>, Rc<PhysicsObject>, etc....
2015-05-26 23:39:55	XMPPwocky	that's *awesome* 
2015-05-26 23:40:10	Mutabah	XMPPwocky: Have fun
2015-05-26 23:40:14	XMPPwocky	win 12
2015-05-26 23:40:36	thelink2012	playbot: 4
2015-05-26 23:40:37	--	Notice(playbot): 4
2015-05-26 23:40:50	thelink2012	just testing if it prints the result of a expression :P
2015-05-26 23:41:06	<--	orangeshark (erik@moz-cohgk0.44tj.56ot.0306.2602.IP) has quit (Quit: Leaving)
2015-05-26 23:41:23	<--	Rym (y@moz-c2u.sd4.38.217.IP) has quit (Ping timeout: 121 seconds)
2015-05-26 23:41:53	-->	tschottdorf (tobias@moz-d021av.aipg.hajb.2000.2604.IP) has joined #rust
2015-05-26 23:42:19	-->	jacobmao0416 (jacobmao041@moz-9emlv5.members.linode.com) has joined #rust
2015-05-26 23:42:45	grant	If I have a string, how expensive (if anything) is doing &*my_string ?
2015-05-26 23:42:59	aatch	grant, almost free
2015-05-26 23:43:01	<--	jacobmao0416 (jacobmao041@moz-9emlv5.members.linode.com) has quit (Quit: )
2015-05-26 23:43:04	Mutabah	grant: Practically a no-op
2015-05-26 23:43:12	-->	jacobmao0416 (jacobmao041@moz-9emlv5.members.linode.com) has joined #rust
2015-05-26 23:43:22	<--	jacobmao0416 (jacobmao041@moz-9emlv5.members.linode.com) has quit (Quit: )
2015-05-26 23:43:25	aatch	grant, it copies two words: a pointer to the start of the string and the length of the string.
2015-05-26 23:43:34	Kovensky	thelink2012: yeah, and it's also why you can't end a playbot snippet that returns a borrowed value
2015-05-26 23:43:42	grant	aatch: Mutabah: thanks
2015-05-26 23:43:51	aatch	Which is actually cheaper than moving the `String`, since String is 3 words.
2015-05-26 23:44:09	chchjesus	Mutabah aatch http://is.gd/iouMR9
2015-05-26 23:44:20	&Manishearth	niconii: I actually tried making that happen
2015-05-26 23:44:35	&Manishearth	not ascii art, just taking the regular clippy images and using them
2015-05-26 23:44:35	-->	swgillespie (swgillespie@moz-rn1.vmq.232.104.IP) has joined #rust
2015-05-26 23:45:02	Mutabah	chchjesus: Moves don't happen because a value is used within a block
2015-05-26 23:45:52	chchjesus	Mutabah: Ah. See, that's where I was getting confused
2015-05-26 23:45:54	Mutabah	chchjesus: A move happens when a non-Copy type is used by value (i.e. not borrowed)
2015-05-26 23:46:02	chchjesus	I thought any block was a separate scope, so a move happened
2015-05-26 23:46:03	Kovensky	Manishearth: lol; and how would you get rustc to show them
2015-05-26 23:46:39	aatch	chchjesus, also, `&` is a value, the same way another other pointer is a value.
2015-05-26 23:47:23	chchjesus	aatch: then why does Rust complain if I don't dereference it?
2015-05-26 23:47:54	Mutabah	chchjesus: There's a few places where dereferences are done implicitly
2015-05-26 23:48:33	<--	p1start (p1start@moz-nftjhe.org) has quit (Ping timeout: 121 seconds)
2015-05-26 23:48:34	aatch	chchjesus, for the same it complains when you try to add '4' and 'File', they're different types.
2015-05-26 23:48:41	<--	logan_e (logan_e@moz-ltn.qg3.218.73.IP) has quit (Client exited)
2015-05-26 23:48:45	aatch	chchjesus, a &T is a type in it's own right.
2015-05-26 23:49:06	Mutabah	chchjesus: Sometimes it looks like &T is the same as a T because of autoderef and deref coercions
2015-05-26 23:49:11	aatch	chchjesus, unlike in C++ where it's the weird not-type
2015-05-26 23:49:16	<--	psy (psy@moz-haq.hr7.224.43.IP) has quit (Ping timeout: 121 seconds)
2015-05-26 23:49:40	&Manishearth	Kovensky: why not? arbitrary code at compile time and all that
2015-05-26 23:49:41	Mutabah	chchjesus: When you call a method=, the compiler will attempt to deref the type until it finds the method, or can't deref any more
2015-05-26 23:49:43	aatch	this*
2015-05-26 23:49:44	chchjesus	Also, unrelated, but I watched a video where a guy said that Rust didn't need a runtime
2015-05-26 23:50:05	chchjesus	But then I read that Rust actually does run on a runtime since it runs on the llvm
2015-05-26 23:50:12	Mutabah	chchjesus: Depends on the definition of runtime, rust needs as much of a runtime as C++ (maybe slightly less, if you don't use panic!)
2015-05-26 23:50:14	@niconii	what we really need is a clippy that will try to format your code as a business letter
2015-05-26 23:50:19	Mutabah	chchjesus: llvm != a VM (like the JVM)
2015-05-26 23:50:19	aatch	chchjesus, huh? LLVM is a compiler backend.
2015-05-26 23:50:20	chchjesus	Also, does that mean that rust compiles to bytecode, and needs JIT to be compiled natively?
2015-05-26 23:50:33	aatch	chchjesus, nope, LLVM isn't a virtual machine.
2015-05-26 23:50:47	eevee	Low Level Verbiage Mismatch
2015-05-26 23:50:53	aatch	chchjesus, despite the name. LLVM doesn't really stand for anything anymore
2015-05-26 23:50:55	Mutabah	chchjesus: LLVM is a compile-time VM, allowing a common opimiser backend to be used between different languages. It's converted to native code at compile time
2015-05-26 23:50:58	aatch	Hasn't for a while.
2015-05-26 23:50:59	Kovensky	LLVM is a compilation model
2015-05-26 23:51:03	XMPPwocky	LLVM: Lactuallynota Virtual Machine
2015-05-26 23:51:09	chchjesus	It's just that I sent an email around to all the devs at work today, because I /really/ like the approach Rust takes to safety
2015-05-26 23:51:27	XMPPwocky	what's the smallest device rust's run on so far?
2015-05-26 23:51:35	chchjesus	But some of them are kinda senior, and Delphi enthusiasts, so I can see them coming back with "it runs on a runtime"
2015-05-26 23:51:50	Mutabah	chchjesus: Feel free to inform them what LLVM actually does :)
2015-05-26 23:51:51	eevee	afaik rust compiles about "as much as" c++ compiles
2015-05-26 23:51:54	aatch	chchjesus, Rust is a systems language, compiling to bytecode and requiring a VM would be counter productive.
2015-05-26 23:52:03	XMPPwocky	specifically, about as much as clang compiles
2015-05-26 23:52:03	chchjesus	aatch: this is what I thought
2015-05-26 23:52:05	XMPPwocky	clang uses LLVM too
2015-05-26 23:52:10	Mutabah	chchjesus: And point to the couple of kernels written in pure rust
2015-05-26 23:52:13	chchjesus	lol
2015-05-26 23:52:20	chchjesus	All I need to do is point to Servo
2015-05-26 23:52:20	Kovensky	LLVM is basically structured assembly
2015-05-26 23:52:26	XMPPwocky	now, Rust's standard library has some very minimal "runtime-y" features, for stuff like exceptions
2015-05-26 23:52:35	XMPPwocky	but so does C++'s standard library
2015-05-26 23:52:35	Kovensky	the LLVM pass then converts that into machine code
2015-05-26 23:53:09	chchjesus	let point: &Servo = Servo::get();
2015-05-26 23:53:36	chchjesus	XMPPwocky Kovensky Ah, I see
2015-05-26 23:53:54	-->	Astrum|Lap (Astrum|Lap@moz-skcefh.co.comcast.net) has joined #rust
2015-05-26 23:53:54	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-26 23:54:17	-->	mindtree (Mitch@moz-eo0q0a.iprimus.net.au) has joined #rust
2015-05-26 23:54:28	chchjesus	Also, what's rust like for stuff like GUI libraries, and IDEs? I had a look around, and there seem to be some small GUI libraries, but no big IDEs yet
2015-05-26 23:54:40	<--	harrisonclarke (harrisoncla@moz-uur7pt.eastlink.ca) has quit (Connection closed)
2015-05-26 23:54:50	XMPPwocky	writing a rust IDE would have been very difficult until recently, since the language was unstable
2015-05-26 23:54:58	chchjesus	Very good point.
2015-05-26 23:55:00	XMPPwocky	ther's stuff like racer, for autocomplete
2015-05-26 23:55:12	aatch	There's some GUI stuff popping up here and there though.
2015-05-26 23:55:16	chchjesus	Yeah, I saw that. I'm working in vim at the moment
2015-05-26 23:55:27	_habnabit	so if i had `trait Whatever<A, B, C> { ... }`, inside that block would Self be isomorphic to Whatever<A, B, C>?
2015-05-26 23:55:52	chchjesus	I ask, because I'm wondering what the chances are of Rust being adopted in a typical enterprisey environment
2015-05-26 23:55:54	<--	Wilduck (erik@moz-0l3fjb.fios.verizon.net) has quit (Client exited)
2015-05-26 23:55:56	Kovensky	will there be (is there already?) a "librustc" like there's a "libclang" for easy code parsing?
2015-05-26 23:56:16	chchjesus	Lol, Visual Rust++ when?
2015-05-26 23:57:09	chchjesus	Microsoft® Visual Rust++®
2015-05-26 23:57:09	aatch	Kovensky, you can already use bits of the compiler as libraries. However it's not officially supported.
2015-05-26 23:57:11	Kovensky	I think there actually was a MSVS plugin
2015-05-26 23:57:15	_habnabit	oh, hm, you can use Self in impl as well as trait?
2015-05-26 23:57:20	&Manishearth	niconii: wha
2015-05-26 23:57:29	&Manishearth	why would you do that to clippy
2015-05-26 23:57:34	chchjesus	Rustyfox
2015-05-26 23:57:35	Kovensky	https://visualstudiogallery.msdn.microsoft.com/c6075d2f-8864-47c0-8333-92f183d3e640
2015-05-26 23:57:38	-->	ajhager (aajhager@moz-mcdsgi.iplsin.sbcglobal.net) has joined #rust
2015-05-26 23:57:40	aatch	https://github.com/PistonDevelopers/VisualRust
2015-05-26 23:57:56	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Ping timeout: 121 seconds)
2015-05-26 23:58:02	chchjesus	Kovensky aatch neat
2015-05-26 23:58:28	aatch	chchjesus, no idea how good it is or anything.
2015-05-26 23:58:38	chchjesus	Of course, of course.
2015-05-26 23:58:47	aatch	Since I don't even use Windows.
2015-05-26 23:58:57	chchjesus	I don't really do Windows or .NET programming at home anyway, which is where I've been looking at Rust.
2015-05-26 23:59:32	@nrc	Kovensky: tutorial for part of the API we expose atm: https://github.com/nrc/stupid-stats/blob/master/README.md
2015-05-27 00:00:11	@nrc	Kovensky: -Zsave-analysis will give you a lot of the info you'd need for an IDE or whatever, I'm slowing turning that into an IDE
2015-05-27 00:00:37	&mbrubeck	_habnabit: Yeah, I think that's a recent-ish change.  I'm pretty sure it wasn't possible at some point in the past.
2015-05-27 00:00:44	-->	psd (psd@moz-ugam8v.mtnl.net.in) has joined #rust
2015-05-27 00:01:55	_habnabit	mbrubeck, ah i see
2015-05-27 00:02:04	_habnabit	mbrubeck, i didn't remember seeing it in the book, so
2015-05-27 00:02:42	<--	tristanseifert (tristanseif@moz-r0t7ns.res.rr.com) has quit (Ping timeout: 121 seconds)
2015-05-27 00:04:11	_habnabit	http://is.gd/s9jEyJ http://is.gd/Ssw6rX ok this is really puzzling me. why is one of these object-safe but the other isn't? it seems that using Self /isn't/ isomorphic to writing it out longhand
2015-05-27 00:04:11	<--	krax (archlap@moz-hff.m76.69.68.IP) has quit (Connection closed)
2015-05-27 13:00:11	--	irc: disconnected from server
2015-05-27 13:01:22	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-27 13:01:22	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-27 13:01:22	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-27 13:01:22	--	Channel #rust: 1024 nicks (14 ops, 0 halfops, 1 voice, 1009 normals)
2015-05-27 13:01:24	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-27 13:01:39	-->	ebel (rory@moz-8aqsbk.m4r4.nqcu.0470.2001.IP) has joined #rust
2015-05-27 13:02:25	--	irc: disconnected from server
2015-05-27 13:02:36	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-27 13:02:36	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-27 13:02:36	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-27 13:02:36	--	Channel #rust: 1025 nicks (14 ops, 0 halfops, 1 voice, 1010 normals)
2015-05-27 13:02:38	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-27 13:02:40	<--	Morten (Morten@moz-jm3q3v.eduroam.uib.no) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-05-27 13:02:53	terpstra	or not. you can read files in the user program too
2015-05-27 13:03:36	--	irc: disconnected from server
2015-05-27 13:03:47	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-27 13:03:47	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-27 13:03:47	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-27 13:03:47	--	Channel #rust: 1024 nicks (14 ops, 0 halfops, 1 voice, 1009 normals)
2015-05-27 13:03:49	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-27 13:04:35	-->	grodan (Mibbit@moz-o5eg8b.bredband.comhem.se) has joined #rust
2015-05-27 13:04:38	<--	espadrine (tyl@moz-qfr4fg.abo.wanadoo.fr) has quit (Ping timeout: 121 seconds)
2015-05-27 13:04:39	WindowsBunny	mkpankov: Rust can emit object files
2015-05-27 13:04:45	<--	pgonda (peter@moz-s36.0tp.134.75.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 13:04:53	WindowsBunny	mkpankov: But for the sake of convenience it calls the linker for you
2015-05-27 13:05:03	-->	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has joined #rust
2015-05-27 13:05:15	<--	lenstr (lenstr@moz-rrh.vju.25.171.IP) has quit (Connection closed)
2015-05-27 13:05:47	--	irc: disconnected from server
2015-05-27 13:06:03	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-27 13:06:03	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-27 13:06:03	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-27 13:06:03	--	Channel #rust: 1024 nicks (14 ops, 0 halfops, 1 voice, 1009 normals)
2015-05-27 13:06:05	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-27 13:06:28	<--	Havvy (Havvy@moz-epv20b.wa.comcast.net) has quit (Connection closed)
2015-05-27 13:06:37	<--	kngl (Adium@moz-m3a3bq.ipv4.evonet.be) has quit (Ping timeout: 121 seconds)
2015-05-27 13:07:17	--	chmanchester|afk is now known as chmanchester
2015-05-27 13:07:18	terpstra	i am very glad we don't need autoconf+crap for rust
2015-05-27 13:07:32	terpstra	make makes me angry :)
2015-05-27 13:07:37	@steveklabnik	make angry
2015-05-27 13:08:00	terpstra	anyway, have a nice evening guys.
2015-05-27 13:08:04	<--	terpstra (terpstra@moz-290p6a.gsi.de) has quit (Quit: Leaving)
2015-05-27 13:08:05	<--	copycat (Thunderbird@moz-mm4e60.singnet.com.sg) has quit (Ping timeout: 121 seconds)
2015-05-27 13:08:10	<--	NerdTaco (NerdTaco@moz-q14a6s.datacom.cgocable.net) has quit (Quit: Leaving)
2015-05-27 13:09:03	-->	dpc (dpc@moz-t6gr4b.ca.comcast.net) has joined #rust
2015-05-27 13:09:42	<--	cakecatz (cakecatz@moz-edrvuc.sannet.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-27 13:10:16	mkpankov	WindowsBunny: how?
2015-05-27 13:11:03	--	irc: disconnected from server
2015-05-27 13:11:15	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-27 13:11:15	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-27 13:11:15	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-27 13:11:15	--	Channel #rust: 1019 nicks (14 ops, 0 halfops, 1 voice, 1004 normals)
2015-05-27 13:11:17	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-27 13:11:33	-->	Havvy (Havvy@moz-epv20b.wa.comcast.net) has joined #rust
2015-05-27 13:11:39	mkpankov	WindowsBunny: what I've been thinking about is that, IIRC, Haskell still emits separate object files for some reason
2015-05-27 13:11:41	<--	Funkill[wrk] (Funkill@moz-pmt.89o.175.79.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 13:11:45	mkpankov	mbrubeck: thanks
2015-05-27 13:12:10	-->	Ralith (ralith@moz-miv.lne.251.63.IP) has joined #rust
2015-05-27 13:13:04	-->	jwilm (jwilm@moz-1rin99.hfc.comcastbusiness.net) has joined #rust
2015-05-27 13:13:12	WindowsBunny	mkpankov: Emitting a binary/library by default is typically what users want. Emitting object files is typically used in custom build setups, where you can afford to explicitly specify --emit obj
2015-05-27 13:13:26	<--	Guest_ (textual@moz-il1.n6s.204.65.IP) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-27 13:13:33	-->	cakecatz (cakecatz@moz-edrvuc.sannet.ne.jp) has joined #rust
2015-05-27 13:13:40	-->	lenstr (lenstr@moz-rrh.vju.25.171.IP) has joined #rust
2015-05-27 13:13:45	<--	cakecatz (cakecatz@moz-edrvuc.sannet.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-27 13:14:14	-->	hyperion (hyperion@moz-noh.hva.21.67.IP) has joined #rust
2015-05-27 13:14:24	<--	tamird (textual@moz-lje.m54.130.157.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-27 13:15:13	<--	ahal|afk (ahal@moz-b8e0a0.cpe.pppoe.ca) has quit (Connection closed)
2015-05-27 13:15:17	-->	ahal (ahal@moz-b8e0a0.cpe.pppoe.ca) has joined #rust
2015-05-27 13:15:36	<--	mdup (cc@moz-tcjusk.eduroam.univ-ubs.fr) has quit (Ping timeout: 121 seconds)
2015-05-27 13:15:46	<--	jiojiajiu (Guro@moz-trc2j7.asianet.co.th) has quit (Ping timeout: 121 seconds)
2015-05-27 13:15:57	-->	spider-mario (spidermario@moz-meu9c6.wb.wifirst.net) has joined #rust
2015-05-27 13:16:15	-->	jiojiajiu (Guro@moz-trc2j7.asianet.co.th) has joined #rust
2015-05-27 13:16:30	mkpankov	WindowsBunny: I think what I wanted to ask is how did Rust get "crate consists of several files and that is unit of compilation" model
2015-05-27 13:16:45	<--	alonlevy (alon@moz-83psmt.red.bezeqint.net) has quit (Ping timeout: 121 seconds)
2015-05-27 13:16:47	mkpankov	AFAIK there's no way to build one file or module separately
2015-05-27 13:17:11	WindowsBunny	Well it's partly due to the order independent nature of a single crate
2015-05-27 13:17:12	<--	hjr3 (hradtke@moz-lei.av4.169.69.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2015-05-27 13:17:21	WindowsBunny	any definition in a crate can depend on any other (aside from macros)
2015-05-27 13:17:28	<--	ThatOtherPerson_ (ThatOtherPe@moz-rgn.69c.167.82.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 13:17:51	WindowsBunny	So you can't compile two modules separately because then they'd depend on information that wasn't known at the time
2015-05-27 13:18:35	-->	hjr3 (hradtke@moz-lei.av4.169.69.IP) has joined #rust
2015-05-27 13:18:54	-->	wilfredh (uid159@moz-1vt7bj.irccloud.com) has joined #rust
2015-05-27 13:19:04	mkpankov	so it actually makes little sense to emit objects in Rust, because even then, they're entire crates, and at the same time, you can't link two "crates-objects" to something sensible
2015-05-27 13:19:24	-->	ziocroc (ziocroc@moz-bfu.33o.74.151.IP) has joined #rust
2015-05-27 13:19:33	-->	alonlevy (alon@moz-83psmt.red.bezeqint.net) has joined #rust
2015-05-27 13:19:56	<--	Tuna-Fish (quassel@moz-5djkv5.kortex.jyu.fi) has quit (Ping timeout: 121 seconds)
2015-05-27 13:20:35	-->	Tuna-Fish (quassel@moz-5djkv5.kortex.jyu.fi) has joined #rust
2015-05-27 13:21:05	cholcombe	mbrubeck: in my gist i sent you do you know how I can make my variable brick.to_str() on line 305 live longer?
2015-05-27 13:21:19	cholcombe	sorry line #302
2015-05-27 13:21:20	-->	ThatOtherPerson (ThatOtherPe@moz-ol7.hf2.127.128.IP) has joined #rust
2015-05-27 13:21:28	<--	jwilm (jwilm@moz-1rin99.hfc.comcastbusiness.net) has quit (A TLS packet with unexpected length was received.)
2015-05-27 13:21:31	<--	grodan (Mibbit@moz-o5eg8b.bredband.comhem.se) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-27 13:21:56	<--	kimwonyong (kimwonyong@moz-gfp.vhi.163.221.IP) has quit (Quit: )
2015-05-27 13:22:00	<--	hroi (hroi@moz-d273ub.static.netgroup.dk) has quit (Ping timeout: 121 seconds)
2015-05-27 13:22:14	&mbrubeck	cholcombe: I don't see where Brick::to_string is defined
2015-05-27 13:22:25	&mbrubeck	looking at https://gist.github.com/cholcombe973/fccddb6f3e5596314957
2015-05-27 13:22:28	-->	Savago (Savago@moz-8hd.3b6.246.162.IP) has joined #rust
2015-05-27 13:22:32	cholcombe	oh i'm using the code you sent me now
2015-05-27 13:22:38	<--	hyperion (hyperion@moz-noh.hva.21.67.IP) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-05-27 13:22:49	-->	hroi (hroi@moz-d273ub.static.netgroup.dk) has joined #rust
2015-05-27 13:22:50	cholcombe	yeah if that said &brick.to_str() how would i make that live longer?
2015-05-27 13:22:50	-->	loyd (loyd@moz-jsb.32f.108.213.IP) has joined #rust
2015-05-27 13:23:05	<--	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-27 13:23:11	cholcombe	the compiler says after the for loop it's destroyed i think
2015-05-27 13:23:19	<--	lenstr (lenstr@moz-rrh.vju.25.171.IP) has quit (Connection closed)
2015-05-27 13:23:56	talchas	cholcombe: no, you need some place to own the string, and &str cannot
2015-05-27 13:24:07	-->	lenstr (lenstr@moz-rrh.vju.25.171.IP) has joined #rust
2015-05-27 13:24:16	cholcombe	yeah that's what i'm not understanding
2015-05-27 13:24:25	cholcombe	this lifetime stuff is tricky
2015-05-27 13:24:25	-->	mkoskar (mkoskar@moz-4lmh4m.privacyfoundation.ch) has joined #rust
2015-05-27 13:24:33	talchas	&str is a reference to a string owned by something else
2015-05-27 13:24:51	cholcombe	so the for loop still owns it right?
2015-05-27 13:24:55	talchas	(for literals like "foo", it's owned by your .rodata)
2015-05-27 13:25:01	-->	eschatite (eschatite@moz-95cjjj.res.rr.com) has joined #rust
2015-05-27 13:25:23	<--	alonlevy (alon@moz-83psmt.red.bezeqint.net) has quit (Ping timeout: 121 seconds)
2015-05-27 13:25:24	talchas	cholcombe: ownership is a variable on the stack or a global
2015-05-27 13:25:39	cholcombe	ok i think that makes sense
2015-05-27 13:25:52	-->	naerbnic (naerbnic@moz-nl3.4ra.239.216.IP) has joined #rust
2015-05-27 13:26:02	talchas	the temporary that owns the string only lives for as long as the for loop, so any references can't last past then
2015-05-27 13:26:36	cholcombe	yeah i think i get that part i just don't understand what i should do to modify the lifetime of the variable
2015-05-27 13:26:50	cholcombe	do i make a string variable outside the for loop and push that ?
2015-05-27 13:26:54	<--	__mark__ (mark@moz-udut16.dynamic.chello.pl) has quit (Connection closed)
2015-05-27 13:26:55	<--	hroi (hroi@moz-d273ub.static.netgroup.dk) has quit (Ping timeout: 121 seconds)
2015-05-27 13:28:17	talchas	you need a String for each Brick that will last throughout run_command
2015-05-27 13:28:23	talchas	there's a few ways you can do that
2015-05-27 13:28:37	talchas	you could have a separate Vec<String> for bricks in particular
2015-05-27 13:28:49	<--	kmicu (kmicu@moz-uga.edn.218.91.IP) has quit (Connection closed)
2015-05-27 13:28:53	-->	Rym (y@moz-c2u.sd4.38.217.IP) has joined #rust
2015-05-27 13:28:58	cholcombe	wouldn't that still destroy the string in the for loop?
2015-05-27 13:29:02	-->	kmicu (kmicu@moz-uga.edn.218.91.IP) has joined #rust
2015-05-27 13:29:13	-->	__mark__ (mark@moz-udut16.dynamic.chello.pl) has joined #rust
2015-05-27 13:29:19	talchas	cholcombe: you would move the result into the Vec
2015-05-27 13:29:35	cholcombe	i see
2015-05-27 13:30:03	cholcombe	i guess that's what i thought i was doing with arg_list.push(brick string)
2015-05-27 13:30:05	<--	laumann (thomas@moz-vj4.hq0.225.130.IP) has quit (Quit: leaving)
2015-05-27 13:30:09	talchas	other options include making arg_list a Vec<String> (which will result in a bunch of unnecessary clones of string literals and such)
2015-05-27 13:30:23	<--	eschatite (eschatite@moz-95cjjj.res.rr.com) has quit (Ping timeout: 121 seconds)
2015-05-27 13:30:28	talchas	cholcombe: the thing is that arg_list is Vec<&str>, not Vec<String>
2015-05-27 13:30:43	cholcombe	and because of that i'm only borrowing right not owning?
2015-05-27 13:30:46	talchas	yeah
2015-05-27 13:30:50	cholcombe	ah ok i get it haha
2015-05-27 13:31:15	--	irc: disconnected from server
2015-05-27 13:31:26	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-27 13:31:26	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-27 13:31:26	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-27 13:31:26	--	Channel #rust: 1019 nicks (14 ops, 0 halfops, 1 voice, 1004 normals)
2015-05-27 13:31:28	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-27 13:31:29	@steveklabnik	naerbnic: not currently
2015-05-27 13:31:30	<--	hjr3 (hradtke@moz-lei.av4.169.69.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2015-05-27 13:31:35	<--	lenstr (lenstr@moz-rrh.vju.25.171.IP) has quit (Connection closed)
2015-05-27 13:31:45	talchas	the third option would be to use Cow, which lets you be either &str or String on a per-element basis
2015-05-27 13:31:54	-->	xrl (uid1091@moz-f0543s.brockwell.irccloud.com) has joined #rust
2015-05-27 13:31:59	cholcombe	i've not read how cow works yet
2015-05-27 13:32:14	<--	nicoch (nicoch@moz-g02d7k.be) has quit (Ping timeout: 121 seconds)
2015-05-27 13:32:39	talchas	(which saves you on clones, but not on slightly-more-annoying-looking code going .into() on all your literal strings)
2015-05-27 13:32:50	--	NameNotFound is now known as zz_NameNotFound
2015-05-27 13:33:08	cholcombe	i think i'll change to Vec<String> for now since i'm a newb and that's easier to read
2015-05-27 13:33:34	-->	pcwalton (pcwalton@moz-l8ebtf.sfo1.mozilla.com) has joined #rust
2015-05-27 13:33:34	--	Mode #rust [+ao pcwalton pcwalton] by ChanServ
2015-05-27 13:33:40	<--	qrlpx (smuxi@moz-oruooo.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2015-05-27 13:33:44	<--	rbranson (rbranson@moz-oeg7f0.ca.comcast.net) has quit (Quit: Computer has gone to sleep.)
2015-05-27 13:33:49	<--	pcwalton (pcwalton@moz-l8ebtf.sfo1.mozilla.com) has quit (Client exited)
2015-05-27 13:33:56	-->	nicoch (nicoch@moz-g02d7k.be) has joined #rust
2015-05-27 13:33:58	-->	pcwalton (pcwalton@moz-l8ebtf.sfo1.mozilla.com) has joined #rust
2015-05-27 13:33:58	--	Mode #rust [+ao pcwalton pcwalton] by ChanServ
2015-05-27 13:33:59	-->	slomo (slomo@moz-p8m0g2.net) has joined #rust
2015-05-27 13:34:06	<--	skade (skade@moz-eetliv.pools.vodafone-ip.de) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-27 13:34:24	-->	jimb (user@moz-09a.i8g.126.207.IP) has joined #rust
2015-05-27 13:34:42	-->	lenstr (lenstr@moz-rrh.vju.25.171.IP) has joined #rust
2015-05-27 13:35:52	-->	nano (nano@moz-00j6et.dynamic.kabel-deutschland.de) has joined #rust
2015-05-27 13:36:00	-->	maraoz (maraoz@moz-7fc9s6.fibertel.com.ar) has joined #rust
2015-05-27 13:36:12	<--	mujou (mujou@moz-rko6lo.ocn.ne.jp) has quit (Ping timeout: 121 seconds)
2015-05-27 13:36:27	<--	yota (sdouche@moz-9atnlv.3iqc.r856.0e35.2a01.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 13:37:26	--	irc: disconnected from server
2015-05-27 13:37:37	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-27 13:37:37	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-27 13:37:37	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-27 13:37:37	--	Channel #rust: 1019 nicks (15 ops, 0 halfops, 1 voice, 1003 normals)
2015-05-27 13:37:39	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-27 13:38:00	-->	skade (skade@moz-eetliv.pools.vodafone-ip.de) has joined #rust
2015-05-27 13:38:40	-->	qrlpx (smuxi@moz-n7t.3nb.211.95.IP) has joined #rust
2015-05-27 13:39:15	<--	rudolph (rudolph@moz-ce0j93.qdet.dsq9.010d.2620.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-27 13:39:16	<--	mkpankov` (mkpankov@moz-fu7.jvq.149.83.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 13:39:44	cholcombe	talchas: it compiles!  hooray haha
2015-05-27 13:39:44	-->	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has joined #rust
2015-05-27 13:40:10	-->	jwilm (jwilm@moz-1rin99.hfc.comcastbusiness.net) has joined #rust
2015-05-27 13:41:27	-->	Hildar (Mibbit@moz-04vi1v.cable.virginm.net) has joined #rust
2015-05-27 13:41:43	--	irc: disconnected from server
2015-05-27 13:41:54	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-27 13:41:54	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-27 13:41:54	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-27 13:41:54	--	Channel #rust: 1023 nicks (15 ops, 0 halfops, 1 voice, 1007 normals)
2015-05-27 13:41:56	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-27 13:42:46	<--	dpc (dpc@moz-t6gr4b.ca.comcast.net) has quit (Connection closed)
2015-05-27 13:44:00	<--	lucian (lucian@moz-iuo.htl.74.194.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 13:44:57	-->	calatalee (Mibbit@moz-l5d.men.211.46.IP) has joined #rust
2015-05-27 13:44:58	-->	dpc (dpc@moz-t6gr4b.ca.comcast.net) has joined #rust
2015-05-27 13:45:43	Hildar	So, how do I fix this bug: "mismatched types:  expected `*const libc::types::common::c95::c_void`, found `*const libc::types::common::c95::c_void`" The error mesage is hardly helpful...
2015-05-27 13:46:02	@steveklabnik	Hildar: sounds like you have two versions of libc maybe?
2015-05-27 13:47:00	-->	hroi (hroi@moz-d273ub.static.netgroup.dk) has joined #rust
2015-05-27 13:47:11	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Connection closed)
2015-05-27 13:47:16	Hildar	steveklabnik: Would make sense. Guessing I'm in dependency hell then, sigh.
2015-05-27 13:47:32	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-27 13:48:05	<--	lenstr (lenstr@moz-rrh.vju.25.171.IP) has quit (Connection closed)
2015-05-27 13:48:19	-->	sdogruyol (sdogruyol@moz-mdm.mqr.142.195.IP) has joined #rust
2015-05-27 13:48:32	<--	gattschardo (richard@moz-caff7e.dyn.telefonica.de) has quit (Quit: leaving)
2015-05-27 13:48:50	-->	Guest_ (textual@moz-rtn.fg7.77.192.IP) has joined #rust
2015-05-27 13:49:07	@steveklabnik	Hildar: you have libc="*" or whatever in your Cargo.toml?
2015-05-27 13:49:43	Hildar	I do not. That would appear to be the problem. *sigh*
2015-05-27 13:49:59	Hildar	Surprised it didn't blow up with "could not find crate for libc".
2015-05-27 13:50:06	@steveklabnik	well
2015-05-27 13:50:12	@steveklabnik	let me guess, you're on nightly?
2015-05-27 13:50:14	pyon	Is it possible to have a trait with both safe and unsafe impls?
2015-05-27 13:50:19	Hildar	Nope, stable.
2015-05-27 13:50:21	geofft	terpstra: the compiler is seccomp'd too: http://is.gd/3yvgVL 
2015-05-27 13:50:21	@steveklabnik	huh
2015-05-27 13:50:26	-->	dinfuehr_ (dinfuehr@moz-c25.u8s.112.91.IP) has joined #rust
2015-05-27 13:50:31	@steveklabnik	rust _should_ say that you're trying to use a private crate
2015-05-27 13:50:38	@steveklabnik	and that you need to add a feature flag
2015-05-27 13:50:39	<--	dinfuehr_ (dinfuehr@moz-c25.u8s.112.91.IP) has quit (Connection closed)
2015-05-27 13:50:47	@steveklabnik	and that you should use the crate from crates.i oinstead of the private one
2015-05-27 13:50:48	geofft	I vaguely recall it does those checks in the wrong order 
2015-05-27 13:50:59	-->	dinfuehr_ (dinfuehr@moz-c25.u8s.112.91.IP) has joined #rust
2015-05-27 13:51:00	-->	alonlevy (alon@moz-83psmt.red.bezeqint.net) has joined #rust
2015-05-27 13:51:12	-->	gattschardo (richard@moz-caff7e.dyn.telefonica.de) has joined #rust
2015-05-27 13:51:24	-->	pgonda (peter@moz-s36.0tp.134.75.IP) has joined #rust
2015-05-27 13:51:34	-->	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has joined #rust
2015-05-27 13:51:55	<--	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-27 13:52:22	<--	sdogruyol (sdogruyol@moz-mdm.mqr.142.195.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 13:52:57	-->	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has joined #rust
2015-05-27 13:53:45	<--	dinfuehr (dinfuehr@moz-c25.u8s.112.91.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 13:54:11	-->	yota (sdouche@moz-0mlqpp.3iqc.r856.0e35.2a01.IP) has joined #rust
2015-05-27 13:54:44	Hildar	steveklabnik: Strange that it doesn't. Oh well, problem solved (note to self: fill out Cargo.toml right next time...)
2015-05-27 13:54:46	<--	mkpankov (user@moz-h0n.sma.198.91.IP) has quit (Quit: ERC Version 5.3 (IRC client for Emacs))
2015-05-27 13:55:03	<--	dinfuehr_ (dinfuehr@moz-c25.u8s.112.91.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 13:56:39	<--	gingermusketeer (gingermuske@moz-ddv3k1.compute.amazonaws.com) has quit (Connection closed)
2015-05-27 13:56:52	-->	gingermusketeer (gingermuske@moz-6ocrkk.compute.amazonaws.com) has joined #rust
2015-05-27 13:56:57	-->	Matthias247 (Miranda@moz-49li60.hsi14.kabel-badenwuerttemberg.de) has joined #rust
2015-05-27 13:57:38	<--	pgonda (peter@moz-s36.0tp.134.75.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 13:58:16	-->	lenstr (lenstr@moz-rrh.vju.25.171.IP) has joined #rust
2015-05-27 13:58:29	-->	avikpal (avikpal@moz-j2a.un0.238.117.IP) has joined #rust
2015-05-27 13:58:39	@steveklabnik	Hildar: huh. so, i'm trying to reproduce this
2015-05-27 13:58:49	<--	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-27 13:59:07	@steveklabnik	https://gist.github.com/steveklabnik/0b7e312136c00ba28e1c
2015-05-27 13:59:18	-->	mkpankov (mkpankov@moz-suo.dee.149.83.IP) has joined #rust
2015-05-27 13:59:28	@steveklabnik	code + error
2015-05-27 13:59:29	<--	brson (brson@moz-48fqub.res.rr.com) has quit (Quit: leaving)
2015-05-27 13:59:39	@steveklabnik	how does my code differ from yours?
2015-05-27 13:59:47	<--	naerbnic (naerbnic@moz-nl3.4ra.239.216.IP) has quit (Client exited)
2015-05-27 14:00:30	-->	naerbnic (naerbnic@moz-nl3.4ra.239.216.IP) has joined #rust
2015-05-27 14:00:49	-->	dfoelber (Mibbit@moz-ncvqfk.fios.verizon.net) has joined #rust
2015-05-27 14:01:12	<--	kgrandon (Adium@moz-4qc9b1.hfc.comcastbusiness.net) has quit (Quit: Leaving.)
2015-05-27 14:02:04	-->	rkruppe_ (chatzilla@moz-3nj.rnu.131.95.IP) has joined #rust
2015-05-27 14:02:31	-->	lucian (lucian@moz-2c3pda.cable.virginm.net) has joined #rust
2015-05-27 14:02:39	-->	cakecatz (cakecatz@moz-edrvuc.sannet.ne.jp) has joined #rust
2015-05-27 14:02:50	-->	grodan (Mibbit@moz-o5eg8b.bredband.comhem.se) has joined #rust
2015-05-27 14:03:15	-->	pgonda (peter@moz-s36.0tp.134.75.IP) has joined #rust
2015-05-27 14:03:20	<--	rkruppe (chatzilla@moz-3nj.rnu.131.95.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 14:03:21	--	rkruppe_ is now known as rkruppe
2015-05-27 14:03:29	<--	p32blo (p32blo@moz-fhmueq.1oel.r662.0690.2001.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 14:03:39	<--	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-27 14:03:54	<--	Rym (y@moz-c2u.sd4.38.217.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 14:04:11	Hildar	stevelabnik: I was pulling in crates.io libc implicitly in a dependency.
2015-05-27 14:04:11	<--	daschl (Adium@moz-oirn1i.vie.surfer.at) has quit (Quit: Leaving.)
2015-05-27 14:04:30	@steveklabnik	ahhhhhhh
2015-05-27 14:04:37	@steveklabnik	right
2015-05-27 14:04:42	<--	naerbnic (naerbnic@moz-nl3.4ra.239.216.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 14:04:45	-->	phynx (chatzilla@moz-mg4atb.dsl.scarlet.be) has joined #rust
2015-05-27 14:05:03	-->	eibwen (eibwen@moz-mvc8eh.dip0.t-ipconnect.de) has joined #rust
2015-05-27 14:05:31	Hildar	so it's a mismatch between the forbidden builtin libc, and the crates libc (which seems to happen before the feature check) I'm guessing.
2015-05-27 14:06:07	-->	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has joined #rust
2015-05-27 14:06:33	<--	lucian (lucian@moz-2c3pda.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2015-05-27 14:06:39	-->	kngl (Adium@moz-rmgnkh.dynamic.voo.be) has joined #rust
2015-05-27 14:06:42	--	zz_NameNotFound is now known as NameNotFound
2015-05-27 14:06:47	<--	calatalee (Mibbit@moz-l5d.men.211.46.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-27 14:07:11	Havvy	Is there an article that explains how to implement Debug properly?
2015-05-27 14:07:19	<--	errordeveloper (ilya@moz-8jq.ge6.157.37.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 14:07:37	@steveklabnik	ttp://doc.rust-lang.org/stable/std/fmt/index.html#formatting-traits has an example
2015-05-27 14:07:44	@steveklabnik	of implementing Display
2015-05-27 14:07:44	-->	kgrandon (Adium@moz-4qc9b1.hfc.comcastbusiness.net) has joined #rust
2015-05-27 14:07:48	@steveklabnik	it's the exact same thing
2015-05-27 14:08:12	@steveklabnik	you almos talways just want to derive debug though
2015-05-27 14:08:43	-->	packman2261 (steve@moz-neegfc.ca.comcast.net) has joined #rust
2015-05-27 14:09:12	Havvy	steveklabnik:  Can I suggest linking to that in http://doc.rust-lang.org/nightly/std/fmt/trait.Debug.html ?
2015-05-27 14:09:17	<--	packman2261 (steve@moz-neegfc.ca.comcast.net) has quit (Client exited)
2015-05-27 14:44:30	--	irc: disconnected from server
2015-05-27 14:47:02	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-27 14:47:02	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-27 14:47:02	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-27 14:47:02	--	Channel #rust: 1032 nicks (13 ops, 0 halfops, 1 voice, 1018 normals)
2015-05-27 14:47:04	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-27 14:47:04	<--	jiojiajiu (Guro@moz-trc2j7.asianet.co.th) has quit (Ping timeout: 121 seconds)
2015-05-27 14:47:10	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Connection closed)
2015-05-27 14:48:02	--	irc: disconnected from server
2015-05-27 14:48:14	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-27 14:48:14	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-27 14:48:14	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-27 14:48:14	--	Channel #rust: 1031 nicks (13 ops, 0 halfops, 1 voice, 1017 normals)
2015-05-27 14:48:16	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-27 14:48:16	@steveklabnik	DoomBoom: ah! so what that means is that this was fixed on master
2015-05-27 14:48:21	@steveklabnik	if you read the nightly book, i bet it's fixed
2015-05-27 14:48:29	DoomBoom	ah, it takes a while? okay
2015-05-27 14:48:36	DoomBoom	hehe, stable bugs
2015-05-27 14:48:38	@steveklabnik	so, stable is only updated on each release
2015-05-27 14:48:59	DoomBoom	you're right, nightly book has it fixed
2015-05-27 14:49:13	@steveklabnik	cool :) thanks for doing that! we'll get you a commit some  other time :)
2015-05-27 14:49:22	<--	lenstr (lenstr@moz-rrh.vju.25.171.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 14:49:32	<--	zmack (zmack@moz-htpein.home.aster.pl) has quit (Ping timeout: 121 seconds)
2015-05-27 14:49:47	-->	qwerty_nor (Thunderbird@moz-ji7l3t.hfc.comcastbusiness.net) has joined #rust
2015-05-27 14:49:48	<--	Binero (jeroen@moz-91joat.69vi.s4ge.1810.2a02.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 14:50:14	--	irc: disconnected from server
2015-05-27 14:50:26	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-27 14:50:26	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-27 14:50:26	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-27 14:50:26	--	Channel #rust: 1030 nicks (13 ops, 0 halfops, 1 voice, 1016 normals)
2015-05-27 14:50:28	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-27 14:51:26	--	irc: disconnected from server
2015-05-27 14:51:38	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-27 14:51:38	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-27 14:51:38	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-27 14:51:38	--	Channel #rust: 1029 nicks (13 ops, 0 halfops, 1 voice, 1015 normals)
2015-05-27 14:51:40	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-27 14:52:11	<--	mayeko (mayeko@moz-b1l19u.ovr0.0mfe.0e35.2a01.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 14:53:06	-->	Rym (y@moz-c2u.sd4.38.217.IP) has joined #rust
2015-05-27 14:53:20	Hildar	When is 1.1 (or whatever rustNext is called)?
2015-05-27 14:53:30	<--	arBmind (Andreas@moz-8er.srj.246.46.IP) has quit (Quit: Leaving.)
2015-05-27 14:53:37	Dabo	Hildar, 6 months from the release of 1.0 stable 1.1 stable will be released
2015-05-27 14:53:49	-->	lenstr (lenstr@moz-rrh.vju.25.171.IP) has joined #rust
2015-05-27 14:53:55	<--	pauls (pauls@moz-e5p333.ccs.neu.edu) has left #rust ("Ignore me!!")
2015-05-27 14:53:57	Dabo	1.1 beta has already been released, and will most likely closely resemble 1.1 stable
2015-05-27 14:54:03	Havvy	Dabo:  s/months/weeks/
2015-05-27 14:54:13	Dabo	true
2015-05-27 14:54:15	Hildar	I was going to say, 6 months of beta :P
2015-05-27 14:54:19	Dabo	6 weeks, not months
2015-05-27 14:54:53	Dabo	Hildar, nightly code now will make it into the 1.2 beta; 1.2 stable is released 12 weeks after 1.0 was
2015-05-27 14:55:54	-->	duncan (paul@moz-9vabq7.sgnwmi.sbcglobal.net) has joined #rust
2015-05-27 14:56:02	XMPPwocky	if the Rust-hog sees its shadow, it means another 6 weeks of beta
2015-05-27 14:56:05	XMPPwocky	or something
2015-05-27 14:56:10	@steveklabnik	lol
2015-05-27 14:56:38	--	irc: disconnected from server
2015-05-27 14:56:50	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-27 14:56:50	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-27 14:56:50	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-27 14:56:50	--	Channel #rust: 1028 nicks (13 ops, 0 halfops, 1 voice, 1014 normals)
2015-05-27 14:56:52	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-27 14:56:54	Dabo	Hildar, cargo hasn't yet reached 1.0, but a snapshot of it is taken for reach beta release afaik
2015-05-27 14:56:59	@steveklabnik	yes
2015-05-27 14:57:04	@steveklabnik	there's a new cargo branch per rust release basically
2015-05-27 14:57:14	-->	James (quassel@moz-739rgr.range86-148.btcentralplus.com) has joined #rust
2015-05-27 14:57:18	@steveklabnik	Havvy: yeah, it would
2015-05-27 14:57:19	grodan	is this the nightly book: https://doc.rust-lang.org/book/
2015-05-27 14:57:37	-->	grover (grover@moz-2o4.tci.145.198.IP) has joined #rust
2015-05-27 14:57:38	<--	Rym (y@moz-c2u.sd4.38.217.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 14:57:45	-->	errordeveloper (ilya@moz-41f.3sd.204.90.IP) has joined #rust
2015-05-27 14:57:56	grodan	or should I read .md files directly via github in order to get the nightly version?
2015-05-27 14:58:03	@steveklabnik	grodan: https://doc.rust-lang.org/nightly/book/
2015-05-27 14:58:09	grodan	thanks :)
2015-05-27 14:58:13	--	chmanchester is now known as chmanchester|afk
2015-05-27 14:58:20	--	chmanchester|afk is now known as chmanchester
2015-05-27 14:58:29	@steveklabnik	in general, with doc.rust-lang.org, / is the same as /stable, there's also /nightly and /beta
2015-05-27 14:58:45	-->	asQuirre_ (asQuirreL@moz-ro1qqu.ox.ac.uk) has joined #rust
2015-05-27 14:59:43	grodan	ok. Is there any link from the main site or is this left as a puzzle to the reader ;) ?
2015-05-27 14:59:55	-->	dalarmmst (dalarmmst@moz-mb21j4.bredband.comhem.se) has joined #rust
2015-05-27 15:00:20	Dabo	grodan, "Docs (Nightly)" I think
2015-05-27 15:00:29	Dabo	on the top of rust-lang.org
2015-05-27 15:00:40	<--	_Vi (vi@moz-bbs.vhj.131.104.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 15:00:44	Dabo	as apposed to "Docs (1.0.0)"
2015-05-27 15:00:49	-->	mayeko (mayeko@moz-ishpc0.ovr0.0mfe.0e35.2a01.IP) has joined #rust
2015-05-27 15:01:06	@steveklabnik	yeah
2015-05-27 15:01:30	<--	asQuirreL (asQuirreL@moz-ro1qqu.ox.ac.uk) has quit (Ping timeout: 121 seconds)
2015-05-27 15:01:49	grodan	I see. The nightly version is linked from http://www.rust-lang.org/ but not from http://doc.rust-lang.org/.
2015-05-27 15:02:26	-->	dstrbad (dstrbad@moz-pac.d96.217.31.IP) has joined #rust
2015-05-27 15:03:25	<--	pgonda (peter@moz-s36.0tp.134.75.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 15:03:36	<--	Fiveside (fiveside@moz-t2eatg.vsp.com) has quit (Ping timeout: 121 seconds)
2015-05-27 15:04:20	--	chmanchester is now known as chmanchester|afk
2015-05-27 15:04:21	grodan	steveklabnik: btw. when I was reading the book chapter about lifetimes I was wondering whether it might be confusing to say that a function "has" a lifetime. I mean, it's quite clear from context that it's referring to the lifetime name parameter, but still... - just a thought.
2015-05-27 15:04:39	grodan	"This says that bar has one lifetime, 'a."
2015-05-27 15:05:11	<--	dstrbad (dstrbad@moz-pac.d96.217.31.IP) has quit (Connection closed)
2015-05-27 15:05:13	jmesmon	Is anyone here using rust-openssl on arm? And if so, are you seeing rust dieing due to illegal instructions in libcrypto.so?
2015-05-27 15:05:14	@steveklabnik	i guess it should be 'lifetime parameter', sure
2015-05-27 15:05:23	<--	mib_xy8by8 (Mibbit@moz-9f923n.dip0.t-ipconnect.de) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-27 15:05:35	-->	dstrbad (dstrbad@moz-pac.d96.217.31.IP) has joined #rust
2015-05-27 15:05:39	grant	Is there any function for converting a hex digit as a char to a numeric type?
2015-05-27 15:05:53	 *	jmesmon Is thinking that openssl is trying to probe things and expects to catch the SIGILL signal, but for some reason isn't able to
2015-05-27 15:06:31	@steveklabnik	grant: iirc, the num crate has that in it
2015-05-27 15:06:37	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Connection closed)
2015-05-27 15:06:55	<--	lenstr (lenstr@moz-rrh.vju.25.171.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 15:06:58	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-27 15:07:35	ogham	grant: 'f'.to_digit(16)
2015-05-27 15:08:19	grant	ogham: thanks
2015-05-27 15:08:59	<--	DerisiveLogic (smuxi@moz-mip.gni.35.4.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 15:08:59	<--	dstrbad (dstrbad@moz-pac.d96.217.31.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-27 15:09:36	-->	killercup (killercup@moz-723bo4.dip0.t-ipconnect.de) has joined #rust
2015-05-27 15:10:17	-->	stjahns_ (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-27 15:10:33	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Connection closed)
2015-05-27 15:10:35	-->	larhat (Adium@moz-vlo5br.cable.virginm.net) has joined #rust
2015-05-27 15:10:36	FreeFull	playbot: '3'.to_digit(4)
2015-05-27 15:10:37	--	Notice(playbot): Some(3)
2015-05-27 15:10:40	-->	turtil (turtil@moz-gfc.es4.23.103.IP) has joined #rust
2015-05-27 15:10:45	FreeFull	playbot: 'F'.to_digit(16)
2015-05-27 15:10:46	--	Notice(playbot): Some(15)
2015-05-27 15:10:51	FreeFull	playbot: 'F'.to_digit(32)
2015-05-27 15:10:52	--	Notice(playbot): Some(15)
2015-05-27 15:11:03	-->	Izacht13 (Izacht13@moz-gee645.atsnmeam.ccmaine.net) has joined #rust
2015-05-27 15:11:06	FreeFull	playbot: 'F'.to_digit(64)
2015-05-27 15:11:07	--	Notice(playbot): output truncated; full output at: http://bit.ly/1SCxwaN
2015-05-27 15:11:18	ogham	yeah it only goes up to 36
2015-05-27 15:11:22	FreeFull	Seems so
2015-05-27 15:11:22	<--	jviereck (Adium@moz-jh8j4p.dynamic.hispeed.ch) has quit (Ping timeout: 121 seconds)
2015-05-27 15:11:31	-->	lenstr (lenstr@moz-rrh.vju.25.171.IP) has joined #rust
2015-05-27 15:12:09	-->	jviereck (Adium@moz-pqri8u.dclient.hispeed.ch) has joined #rust
2015-05-27 15:12:34	grant	Is there a method to convert a number 1-127 to the corresponding char?
2015-05-27 15:12:38	<--	fabiand (fabiand@moz-g3nf8v.dip0.t-ipconnect.de) has quit (Quit: Verlassend)
2015-05-27 15:12:38	--	ker is now known as oli_obk
2015-05-27 15:12:44	-->	A205B064 (A205B064@moz-9s9nhk.nap.wideopenwest.com) has joined #rust
2015-05-27 15:12:44	@steveklabnik	note that 'char' in Rust is not 'char' in C
2015-05-27 15:12:54	@steveklabnik	rust's Char is a 32 bit unicode codepoint
2015-05-27 15:13:04	grant	I’m aware
2015-05-27 15:13:13	<--	dalarmmst (dalarmmst@moz-mb21j4.bredband.comhem.se) has quit (Ping timeout: 121 seconds)
2015-05-27 15:13:14	Havvy	!learn char = Type representing a 32bit Unicode Codepoint
2015-05-27 15:13:14	+rustbot	Learned factoid 'char'.
2015-05-27 15:13:14	XMPPwocky	rusti: 56 as char
2015-05-27 15:13:15	--	Notice(playbot): '8'
2015-05-27 15:14:10	-->	panicbit (panicbit@moz-idbfi8.dip0.t-ipconnect.de) has joined #rust
2015-05-27 15:14:51	mbudde	
2015-05-27 15:14:55	grant	XMPPwocky: what did you just do there?
2015-05-27 15:15:10	<--	errordeveloper (ilya@moz-41f.3sd.204.90.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 15:15:26	Havvy	grant:  Cast from i32 to char.
2015-05-27 15:15:33	grant	Is that safe?
2015-05-27 15:15:38	Havvy	Yes.
2015-05-27 15:16:14	-->	fabianvf (fabianvf@moz-fjqmui.va.comcast.net) has joined #rust
2015-05-27 15:16:23	leftylink	ah I see
2015-05-27 15:16:31	leftylink	since 56 is 0x38
2015-05-27 15:16:43	FreeFull	playbot: 200 as char
2015-05-27 15:16:44	--	Notice(playbot): '\u{c8}'
2015-05-27 15:16:50	<--	colinsurprenant (colin@moz-rmn4e2.169.electronicbox.net) has quit (Ping timeout: 121 seconds)
2015-05-27 15:16:51	FreeFull	playbot: 20000 as char
2015-05-27 15:16:53	--	Notice(playbot): <anon>:9:9: 9:14 warning: literal out of range for u8, #[warn(overflowing_literals)] on by default
2015-05-27 15:16:53	--	Notice(playbot): <anon>:9         20000 as char
2015-05-27 15:16:53	--	Notice(playbot): output truncated; full output at: http://bit.ly/1Fh4rIM
2015-05-27 15:17:00	leftylink	:o
2015-05-27 15:17:05	-->	lw (lw@moz-nbsdoh.cust.bredband2.com) has joined #rust
2015-05-27 15:17:06	grant	Only u8 can be cast to char
2015-05-27 15:17:10	Havvy	Ah wait, it's u8 to char.
2015-05-27 15:17:24	-->	mdup (cc@moz-6fgo9p.abo.wanadoo.fr) has joined #rust
2015-05-27 15:17:25	grant	Which now leads me to my next question, I have a u32 that I know is 0-127. How do I cast to u8?
2015-05-27 15:17:42	Havvy	playbot: 8u32 as u8
2015-05-27 15:17:43	--	Notice(playbot): 8
2015-05-27 15:17:44	XMPPwocky	rusti: 9999999u32 as u8
2015-05-27 15:17:45	--	Notice(playbot): 127
2015-05-27 15:17:57	XMPPwocky	... that is a suspicious answer
2015-05-27 15:18:00	XMPPwocky	is that saturating?
2015-05-27 15:18:02	XMPPwocky	no, it's u8
2015-05-27 15:18:04	tomaka	rusti is in release mode
2015-05-27 15:18:08	XMPPwocky	rusti: 9999998u32 as u8
2015-05-27 15:18:08	tomaka	so there are no checks
2015-05-27 15:18:09	--	Notice(playbot): 126
2015-05-27 15:18:11	XMPPwocky	huh.
2015-05-27 15:18:13	<--	cakecatz (cakecatz@moz-edrvuc.sannet.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-27 15:18:15	XMPPwocky	had a 1/256 chance there
2015-05-27 15:18:59	Dabo	xD
2015-05-27 15:18:59	Havvy	playbot: -2i32 as u8
2015-05-27 15:19:00	--	Notice(playbot): 254
2015-05-27 15:19:06	talchas	also you cast to u8 not i8 :P
2015-05-27 15:19:22	-->	colinsurprenant (colin@moz-rmn4e2.169.electronicbox.net) has joined #rust
2015-05-27 15:19:32	Havvy	talchas:  Ah, same principle applies though.
2015-05-27 15:20:00	talchas	Havvy: oh, I was replying to XMPPwocky (and was late about it)
2015-05-27 15:20:09	-->	Rym (y@moz-c2u.sd4.38.217.IP) has joined #rust
2015-05-27 15:20:43	-->	jophish (jophish@moz-fjh8o1.gotadsl.co.uk) has joined #rust
2015-05-27 15:20:54	-->	minot2 (kkus@moz-baj4jj.74.srtnet.com) has joined #rust
2015-05-27 15:20:59	<--	south_fish (south_fish@moz-v21.spo.147.217.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 15:21:33	<--	lenstr (lenstr@moz-rrh.vju.25.171.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 15:22:27	-->	errordeveloper (ilya@moz-41f.3sd.204.90.IP) has joined #rust
2015-05-27 15:22:50	<--	grodan (Mibbit@moz-o5eg8b.bredband.comhem.se) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-27 15:23:14	-->	cakecatz (cakecatz@moz-edrvuc.sannet.ne.jp) has joined #rust
2015-05-27 15:24:23	<--	jviereck (Adium@moz-pqri8u.dclient.hispeed.ch) has quit (Quit: Leaving.)
2015-05-27 15:24:36	FreeFull	tomaka: It was in debug mode for some time, but isn't now
2015-05-27 15:24:43	-->	raisin (Mibbit@moz-iah5ju.66.brainstorminternet.net) has joined #rust
2015-05-27 15:24:46	<--	Rym (y@moz-c2u.sd4.38.217.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 15:26:15	-->	gonzaloserrano (Adium@moz-off.lj8.27.46.IP) has joined #rust
2015-05-27 15:26:16	-->	kidto_ (gabriel@moz-is2.t20.176.109.IP) has joined #rust
2015-05-27 15:26:25	-->	goyox86 (textual@moz-rvv.00r.255.109.IP) has joined #rust
2015-05-27 15:27:20	<--	KaiRo (robert@moz-egujgs.highway.telekom.at) has left #rust ("www.KaiRo.at")
2015-05-27 15:28:50	--	irc: disconnected from server
2015-05-27 15:29:02	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-27 15:29:02	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-27 15:29:02	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-27 15:29:02	--	Channel #rust: 1032 nicks (13 ops, 0 halfops, 1 voice, 1018 normals)
2015-05-27 15:29:04	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-27 15:29:09	raisin	Is there any way to filter out all the elements in an iterator that are present in a second iterator?
2015-05-27 15:29:31	<--	lw (lw@moz-nbsdoh.cust.bredband2.com) has quit (Quit: )
2015-05-27 15:29:46	-->	errordeveloper (ilya@moz-41f.3sd.204.90.IP) has joined #rust
2015-05-27 15:29:51	XMPPwocky	raisin: not nicely, because iterators are not sets-you'd have to run through the second iterator potentially multiple times, etc.
2015-05-27 15:30:05	@bstrie	raisin: if your data is already in a HashSet, there's a difference method :P
2015-05-27 15:30:06	jmesmon	It feels like the `99999 as u8` should be statically determinable to overflow, and thus should (ideally) be a compile time error regardless of compiler mode. I suppose we just lean a bit too much on llvm for opt to know that ourselves.
2015-05-27 15:30:18	raisin	xmppwocky: okay, thats what I thought
2015-05-27 15:30:19	XMPPwocky	if you collect the second iterator into a HashSet, you can just do first_iter.filter(|x| !hashset.contains(x))
2015-05-27 15:30:27	<--	capcar (mathieu@moz-mi55kn.mc.videotron.ca) has quit (Quit: WeeChat 1.1.1)
2015-05-27 15:30:29	XMPPwocky	jmesmon: there are actually a few lints like that already
2015-05-27 15:30:30	@bstrie	jmesmon: feel free to file a bug if you think we should be doing better
2015-05-27 15:30:36	XMPPwocky	rusti: 255u8 + 1
2015-05-27 15:30:37	--	Notice(playbot): <anon>:9:9: 9:18 error: attempted to add with overflow
2015-05-27 15:30:37	--	Notice(playbot): <anon>:9         255u8 + 1
2015-05-27 15:30:37	--	Notice(playbot): output truncated; full output at: http://bit.ly/1Fh69Kj
2015-05-27 15:31:05	--	irc: disconnected from server
2015-05-27 15:31:17	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-27 15:31:17	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-27 15:31:17	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-27 15:31:17	--	Channel #rust: 1031 nicks (13 ops, 0 halfops, 1 voice, 1017 normals)
2015-05-27 15:31:19	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-27 15:31:41	-->	dstrbad (dstrbad@moz-s2e2tt.dsl.iskon.hr) has joined #rust
2015-05-27 15:32:31	<--	dstrbad (dstrbad@moz-s2e2tt.dsl.iskon.hr) has quit (A TLS packet with unexpected length was received.)
2015-05-27 15:32:57	<--	rovar (rovar@moz-6iq.47m.88.38.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 15:33:51	-->	lenstr (lenstr@moz-rrh.vju.25.171.IP) has joined #rust
2015-05-27 15:34:09	<--	kgrandon (Adium@moz-4qc9b1.hfc.comcastbusiness.net) has quit (Quit: Leaving.)
2015-05-27 15:34:25	-->	nrc (nrc@moz-14pjgj.xtra.co.nz) has joined #rust
2015-05-27 15:34:25	--	Mode #rust [+o nrc] by ChanServ
2015-05-27 15:34:29	<--	lenstr (lenstr@moz-rrh.vju.25.171.IP) has quit (Quit: Leaving...)
2015-05-27 15:36:55	-->	rovar (rovar@moz-6iq.47m.88.38.IP) has joined #rust
2015-05-27 15:37:09	-->	pcwalton (pcwalton@moz-l8ebtf.sfo1.mozilla.com) has joined #rust
2015-05-27 15:37:09	--	Mode #rust [+ao pcwalton pcwalton] by ChanServ
2015-05-27 15:37:57	--	AutomatedTester|AFK is now known as AutomatedTester
2015-05-27 15:38:02	&mbrubeck	jmesmon: There's a warning for out-of-bounds literal casts. http://is.gd/llRQUl
2015-05-27 15:38:44	&mbrubeck	But no, `as` does not panic on overflow even in debug builds.
2015-05-27 15:39:05	-->	skade (skade@moz-eetliv.pools.vodafone-ip.de) has joined #rust
2015-05-27 15:39:17	<--	Izacht13 (Izacht13@moz-gee645.atsnmeam.ccmaine.net) has quit (Ping timeout: 121 seconds)
2015-05-27 15:39:32	-->	pgonda (peter@moz-s36.0tp.134.75.IP) has joined #rust
2015-05-27 15:39:35	-->	alonlevy (alon@moz-p48.q13.159.94.IP) has joined #rust
2015-05-27 15:39:37	-->	NerdTaco (NerdTaco@moz-a4e65f.dsl.bell.ca) has joined #rust
2015-05-27 15:39:48	raisin	XMPPwocky: Turns out, I phrased my question wrong. I should have asked "Is there any way to filter out all the elements in an iterator that are present in a second *vector*?" .collect works in that case. Thank you!
2015-05-27 15:39:53	 *	mbrubeck tries to avoid `as` casts as much as possible. Too many different ways to hide bugs...
2015-05-27 15:40:04	raisin	.contains*
2015-05-27 15:40:09	-->	jakevn (jakevn@moz-mnb.u8e.63.104.IP) has joined #rust
2015-05-27 15:40:10	XMPPwocky	raisin: ah, yeah. that'll work.
2015-05-27 15:40:18	-->	markstory (textual@moz-cd82nj.res.rr.com) has joined #rust
2015-05-27 15:40:22	XMPPwocky	although note that it'll run through the second vector on every element in the first
2015-05-27 15:40:31	XMPPwocky	which is roughly O(N^2)
2015-05-27 15:40:43	XMPPwocky	assuming they have comparable number of elements
2015-05-27 15:40:44	-->	espadrine (tyl@moz-l019mn.fbx.proxad.net) has joined #rust
2015-05-27 15:41:04	<--	errordeveloper (ilya@moz-41f.3sd.204.90.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 15:42:17	--	irc: disconnected from server
2015-05-27 15:42:29	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-27 15:42:29	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-27 15:42:29	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-27 15:42:29	--	Channel #rust: 1037 nicks (15 ops, 0 halfops, 1 voice, 1021 normals)
2015-05-27 15:42:31	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-27 15:42:57	-->	arBmind (Andreas@moz-8er.srj.246.46.IP) has joined #rust
2015-05-27 15:43:01	&mbrubeck	raisin: yes
2015-05-27 15:43:04	<--	arBmind (Andreas@moz-8er.srj.246.46.IP) has quit (Quit: Leaving.)
2015-05-27 15:43:34	raisin	mbrubeck: cool. I'll look into them.
2015-05-27 15:44:15	<--	ZenSword (ZenSword@moz-ivg6ls.pools.vodafone-ip.de) has quit (Ping timeout: 121 seconds)
2015-05-27 15:44:50	-->	Tyde (yttyd_000@moz-t5glkn.pools.vodafone-ip.de) has joined #rust
2015-05-27 15:45:48	-->	jophish_ (jophish@moz-fjh8o1.gotadsl.co.uk) has joined #rust
2015-05-27 15:45:53	-->	gandalf (zbraniecki@moz-u3dg2t.sfo1.mozilla.com) has joined #rust
2015-05-27 15:46:45	<--	jophish (jophish@moz-fjh8o1.gotadsl.co.uk) has quit (Ping timeout: 121 seconds)
2015-05-27 15:46:46	-->	ZenSword (ZenSword@moz-nim6me.pools.vodafone-ip.de) has joined #rust
2015-05-27 15:46:47	-->	mindtree (Mitch@moz-eo0q0a.iprimus.net.au) has joined #rust
2015-05-27 15:47:17	namespace	Okay so, how do I read the standard library API docs? (Not access them, I know where they are I mean how the heck do I interpret information out of them?)
2015-05-27 15:47:29	<--	ZenSword (ZenSword@moz-nim6me.pools.vodafone-ip.de) has quit (Quit: quit)
2015-05-27 15:47:36	<--	kamilc__ (kamil@moz-tqj1lq.play-internet.pl) has quit (Quit: Linkinus - http://linkinus.com)
2015-05-27 15:47:40	@steveklabnik	well
2015-05-27 15:47:47	@steveklabnik	that depends
2015-05-27 15:47:47	XMPPwocky	namespace: are you looking for something in particular?
2015-05-27 15:47:57	namespace	XMPPwocky: Yes.
2015-05-27 15:48:06	XMPPwocky	What?
2015-05-27 15:48:11	namespace	http://doc.rust-lang.org/std/io/struct.BufReader.html
2015-05-27 15:48:13	namespace	Sorry, was pasting.
2015-05-27 15:48:16	XMPPwocky	np
2015-05-27 15:48:19	<--	wolfviking0 (wolfviking0@moz-8hd.3b6.246.162.IP) has quit (Client exited)
2015-05-27 15:48:43	XMPPwocky	namespace: so the docs there roughly resemble actual code
2015-05-27 15:48:49	XMPPwocky	impl<R: Read> BufReader<R> 
2015-05-27 15:49:09	XMPPwocky	i.e. for every R that implements Read, the following methods are implemented on BufReader<R>
2015-05-27 15:49:29	<--	jnvsor (j@moz-1o1jrn.dynamic.ziggo.nl) has quit (Ping timeout: 121 seconds)
2015-05-27 15:49:46	namespace	I'm new to this, so I have slight problems reading it. My apologies. :P
2015-05-27 15:50:13	namespace	Would it make more sense if I go read about impl, which are supposed to be sorta like objects?
2015-05-27 15:50:30	crisco_	how to convert an enum to its int?
2015-05-27 15:50:32	<--	stjahns_ (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Connection closed)
2015-05-27 15:50:37	XMPPwocky	no, it's fine! i can see how there'd be a little bootstrapping issue- if you don't know how to read rust code very well, it can be hard to read the auto-generated docs
2015-05-27 15:50:54	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-27 15:50:59	<--	rovar (rovar@moz-6iq.47m.88.38.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 15:51:00	<--	mindtree (Mitch@moz-eo0q0a.iprimus.net.au) has quit (Ping timeout: 121 seconds)
2015-05-27 15:51:10	<--	nano (nano@moz-00j6et.dynamic.kabel-deutschland.de) has quit (Connection closed)
2015-05-27 15:51:16	--	chmanchester|afk is now known as chmanchester
2015-05-27 15:51:18	-->	SpaceManiac (Tad@moz-ichs44.dyn.suddenlink.net) has joined #rust
2015-05-27 15:51:20	XMPPwocky	namespace: *traits* are sort of like virtual objects
2015-05-27 15:51:36	XMPPwocky	really like interfaces
2015-05-27 15:51:47	<--	Quanttek (quassel@moz-25k96c.6fkd.dvrb.8108.2a02.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 15:52:03	XMPPwocky	impls can either implement a trait on a type, or they can be "inherent impls" that just add sort of stand-alone methods to a type
2015-05-27 15:52:05	<--	fizzbooze (bp@moz-no6phj.sm5k.54kg.0101.2620.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 15:52:08	XMPPwocky	http://doc.rust-lang.org/book/method-syntax.html
2015-05-27 15:52:12	tilpner	crisco_ - Enum to int is easy, int to Enum is tricky.
2015-05-27 15:52:15	-->	kgrandon (Adium@moz-4qc9b1.hfc.comcastbusiness.net) has joined #rust
2015-05-27 15:52:15	XMPPwocky	have you read the book? it's pretty handy
2015-05-27 15:52:15	@steveklabnik	crisco_: http://is.gd/bJODsS
2015-05-27 15:52:16	tilpner	playbot: enum A { A, B, C } A::B as u32
2015-05-27 15:52:17	--	Notice(playbot): 1
2015-05-27 15:52:28	<--	alexherbo2 (alex@moz-3ji.gig.97.79.IP) has quit (Quit: WeeChat 1.2)
2015-05-27 15:52:30	crisco_	thanks
2015-05-27 15:53:17	<--	kushal (kdas@moz-0bg.hkq.143.114.IP) has quit (Quit: Leaving)
2015-05-27 15:53:25	namespace	XMPPwocky: No I haven't, I usually try to learn languages by doing toy problems and I stopped when I realized the reference told me how to do bitwise operators and the book doesn't.
2015-05-27 15:53:28	<--	raisin (Mibbit@moz-iah5ju.66.brainstorminternet.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-27 15:53:36	-->	errordeveloper (ilya@moz-41f.3sd.204.90.IP) has joined #rust
2015-05-27 15:54:06	XMPPwocky	steveklabnik: is the reference up-to-date now?
2015-05-27 15:54:18	--	NameNotFound is now known as zz_NameNotFound
2015-05-27 15:54:21	<--	Hildar (Mibbit@moz-04vi1v.cable.virginm.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-27 15:54:36	@steveklabnik	it shouldn't be wrong
2015-05-27 15:54:39	@steveklabnik	it is missing things
2015-05-27 15:54:56	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Ping timeout: 121 seconds)
2015-05-27 15:55:09	XMPPwocky	ah
2015-05-27 15:55:58	-->	jiojiajiu (Guro@moz-pc8.dl6.204.223.IP) has joined #rust
2015-05-27 15:56:05	-->	rkruppe_ (chatzilla@moz-3nj.rnu.131.95.IP) has joined #rust
2015-05-27 15:56:39	<--	Azdle (Azdle@moz-738.tg8.232.50.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 15:56:39	-->	chippers (chip@moz-26d.2gk.254.199.IP) has joined #rust
2015-05-27 15:57:22	<--	rkruppe (chatzilla@moz-3nj.rnu.131.95.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 15:57:31	--	rkruppe_ is now known as rkruppe
2015-05-27 15:57:34	<--	jakevn (jakevn@moz-mnb.u8e.63.104.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 15:57:59	<--	amyers (amyers@moz-f2k.1cm.177.128.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 15:58:08	XMPPwocky	namespace: i'd recommend going through the book
2015-05-27 15:58:16	<--	giucam (giucam@moz-iv0nnc.bb.dnainternet.fi) has quit (Connection closed)
2015-05-27 15:58:56	<--	Tyde (yttyd_000@moz-t5glkn.pools.vodafone-ip.de) has left #rust
2015-05-27 15:59:23	slomo	how can i pass around a unboxed closure through C code, which might call the closure a few times and once it's done with it calls a function pointer where i could free any data related to the closure? https://paste.debian.net/184705/ has some code, line 54 following is the interesting part. this mostly works, except that the closure's captured data (see y, line 104) is dropped when foo() returns although the closure should be kept alive still
2015-05-27 16:00:02	-->	Quanttek (quassel@moz-25k96c.6fkd.dvrb.8108.2a02.IP) has joined #rust
2015-05-27 16:00:18	<--	qwerty_nor (Thunderbird@moz-ji7l3t.hfc.comcastbusiness.net) has quit (Ping timeout: 121 seconds)
2015-05-27 16:00:41	-->	brendan (brendaneich@moz-boc.40s.170.209.IP) has joined #rust
2015-05-27 16:01:09	<--	goyox86 (textual@moz-rvv.00r.255.109.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-27 16:01:11	-->	goyox86 (textual@moz-rvv.00r.255.109.IP) has joined #rust
2015-05-27 16:01:17	-->	Izacht13 (Izacht13@moz-gee645.atsnmeam.ccmaine.net) has joined #rust
2015-05-27 16:01:31	<--	lucian (lucian@moz-2c3pda.cable.virginm.net) has quit (A TLS packet with unexpected length was received.)
2015-05-27 16:01:52	-->	lucian (lucian@moz-2c3pda.cable.virginm.net) has joined #rust
2015-05-27 16:02:35	-->	playjax (chatzilla@moz-r1o56k.optusnet.com.au) has joined #rust
2015-05-27 16:02:37	crisco_	what is the default inferred type for an int literal?
2015-05-27 16:02:42	XMPPwocky	i32
2015-05-27 16:02:45	-->	nodweber (nodweber@moz-knt.fgq.178.5.IP) has joined #rust
2015-05-27 16:02:50	crisco_	thanks
2015-05-27 16:02:52	@steveklabnik	technically
2015-05-27 16:02:56	@steveklabnik	it's unconstrained
2015-05-27 16:03:07	@steveklabnik	like, it's only i32 if nothing else causes it to be something elese
2015-05-27 16:03:35	@steveklabnik	slomo: whoah that sounds intense :)
2015-05-27 16:03:36	<--	xificurC (xificurC@moz-3u7gmd.chello.sk) has quit (Connection closed)
2015-05-27 16:04:02	XMPPwocky	iirc the functions in closures are rust-call, so you can't just call them from C
2015-05-27 16:04:13	XMPPwocky	you could export an extern "C" fn from Rust that calls a closure
2015-05-27 16:04:18	XMPPwocky	and in C, treat it as an opaque pointer
2015-05-27 16:04:32	XMPPwocky	you'd have to box it, though
2015-05-27 16:04:41	@steveklabnik	yes, they are rust-call, that's true
2015-05-27 16:04:41	slomo	XMPPwocky: see the code i linked, it does that :) it works except for the closure being destroyed too early
2015-05-27 16:05:03	XMPPwocky	sorry, that pastebin is blocked by this terrible webfilter
2015-05-27 16:05:10	XMPPwocky	it also blocks HN for "hacking"
2015-05-27 16:05:35	<--	goyox86 (textual@moz-rvv.00r.255.109.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-27 16:05:54	<--	lucian (lucian@moz-2c3pda.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2015-05-27 16:05:58	mdup	XMPPwocky: at least blocking HN might help against procrastination? :)
2015-05-27 16:06:03	slomo	XMPPwocky: if you're interested i can also paste it to whatever works for you
2015-05-27 16:06:22	-->	drumstick (Mibbit@moz-sh0.rtd.85.86.IP) has joined #rust
2015-05-27 16:06:23	<--	munksgaard (munksgaard@moz-1f0.hq0.225.130.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 16:07:05	<--	nodweber (nodweber@moz-knt.fgq.178.5.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 16:07:38	comex	slomo: i think you have an issue with *mut Box<F> versus just Box<F>
2015-05-27 16:07:46	slomo	steveklabnik: glib :) that api works nicely for integration with other languages, did the same a long time ago with c# and it apparently also works for various other languages. so i thought it might be nice to find a way to make use of that in rust too
2015-05-27 16:07:49	-->	mkpankov (mkpankov@moz-4s5.k4a.16.195.IP) has joined #rust
2015-05-27 16:07:57	<--	duncan (paul@moz-9vabq7.sgnwmi.sbcglobal.net) has left #rust
2015-05-27 16:08:00	comex	you don't want to use a pointer to a stack slot in idle_add
2015-05-27 16:08:00	<--	xcombelle (xcombelle@moz-1frl96.abo.wanadoo.fr) has quit (Connection closed)
2015-05-27 16:08:07	-->	wolfviking0 (wolfviking0@moz-8hd.3b6.246.162.IP) has joined #rust
2015-05-27 16:08:13	<--	drumstick (Mibbit@moz-sh0.rtd.85.86.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-27 16:08:15	comex	just cast the box directly to a void * rather than a pointer to it
2015-05-27 16:08:36	-->	xificurC (xificurC@moz-3u7gmd.chello.sk) has joined #rust
2015-05-27 16:08:52	-->	alaska (alaska@moz-g1d0bn.vrt.sourcefire.com) has joined #rust
2015-05-27 16:09:04	<--	avikpal (avikpal@moz-j2a.un0.238.117.IP) has quit (Connection closed)
2015-05-27 16:09:33	slomo	comex: let me try that
2015-05-27 16:10:29	-->	dstrbad (dstrbad@moz-s2e2tt.dsl.iskon.hr) has joined #rust
2015-05-27 16:10:32	comex	actually, in dispatch you're first casting to a *mut Box<F>, then transmuting that to a Box<F> (without dereferencing it)... that doesn't make sense :)
2015-05-27 16:10:36	-->	ai (ai@moz-pqofrl.sunline.net.ua) has joined #rust
2015-05-27 16:10:36	<--	dstrbad (dstrbad@moz-s2e2tt.dsl.iskon.hr) has quit (A TLS packet with unexpected length was received.)
2015-05-27 16:10:45	comex	but when you create it it is, in fact, a *mut Box<F>
2015-05-27 16:10:54	comex	which it shouldn't be
2015-05-27 16:11:18	-->	mkpankov` (mkpankov@moz-hfh.n6u.23.84.IP) has joined #rust
2015-05-27 16:11:18	<--	mkpankov (mkpankov@moz-4s5.k4a.16.195.IP) has quit (Connection closed)
2015-05-27 16:12:39	<--	kidto_ (gabriel@moz-is2.t20.176.109.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 16:12:54	@steveklabnik	slomo: yeah totally :) something should be workable here, there's just a lot going on :)
2015-05-27 16:14:29	--	irc: disconnected from server
2015-05-27 16:14:41	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-27 16:14:41	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-27 16:14:41	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-27 16:14:41	--	Channel #rust: 1027 nicks (15 ops, 0 halfops, 1 voice, 1011 normals)
2015-05-27 16:14:43	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-27 16:14:59	slomo	comex: how would i cast the box directly to a void*? just transmute()?
2015-05-27 16:15:13	-->	harrison_ (harrisoncla@moz-uur7pt.eastlink.ca) has joined #rust
2015-05-27 16:15:49	<--	harrisonclarke (harrisoncla@moz-uur7pt.eastlink.ca) has quit (Connection closed)
2015-05-27 16:16:36	<--	NerdTaco (NerdTaco@moz-a4e65f.dsl.bell.ca) has quit (A TLS packet with unexpected length was received.)
2015-05-27 16:16:56	comex	slomo: yes
2015-05-27 16:17:46	comex	i guess you could also use into_raw(), though that's unstable
2015-05-27 16:18:14	-->	JuggleTux (tux@moz-ho0t1f.adslplus.ch) has joined #rust
2015-05-27 16:18:19	-->	jbomo (dkd@moz-uol4mm.fios.verizon.net) has joined #rust
2015-05-27 16:18:50	slomo	ok, that doesn't change much in the behaviour. y (and x) are still gone after foo() has returned
2015-05-27 16:18:54	<--	Rym (y@moz-c2u.sd4.38.217.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 16:18:54	-->	grodan (Mibbit@moz-o5eg8b.bredband.comhem.se) has joined #rust
2015-05-27 16:18:58	comex	can you paste your new code?
2015-05-27 16:19:02	slomo	sure, one second
2015-05-27 16:19:14	<--	maraoz (maraoz@moz-7fc9s6.fibertel.com.ar) has quit (Ping timeout: 121 seconds)
2015-05-27 16:19:28	slomo	comex: https://paste.debian.net/184728/
2015-05-27 16:19:34	-->	krzysz00 (krzys@moz-3ultad.fios.verizon.net) has joined #rust
2015-05-27 16:19:39	comex	i guess another issue is that idle_add should enforce that the references inside the closure outlive the call
2015-05-27 16:19:53	comex	i think - where F: FnMut() -> SourceReturn + 'static
2015-05-27 16:20:19	-->	fkaa_ (tundmatu@moz-501od2.business.telia.com) has joined #rust
2015-05-27 16:20:25	<--	wipeD (wipeD@moz-ticd1t.dip0.t-ipconnect.de) has quit (Connection closed)
2015-05-27 16:20:41	-->	c0170 (c0170@moz-4stj9o.cable.virginm.net) has joined #rust
2015-05-27 16:20:47	comex	which would correctly make the call from foo() illegal - but you could fix that by sticking move before the ||
2015-05-27 16:21:03	talchas	yeah, if it's getting into the closure then everything's as fine as it's going to get
2015-05-27 16:21:39	talchas	if you want to make it so they have some local state that isn't shared, I think move || {...} instead will do what you want
2015-05-27 16:21:50	talchas	(and you don't need it shared in that example)
2015-05-27 16:22:22	slomo	that indeed works, just that i can't use l inside the closure and outside it :)
2015-05-27 16:22:31	<--	ygrek (user@moz-8j9aeu.org.ua) has quit (Ping timeout: 121 seconds)
2015-05-27 16:22:56	comex	that make sense, since rust thinks MainLoop isn't copyable
2015-05-27 16:23:00	talchas	ah yes
2015-05-27 16:23:01	<--	paupau (grrrr@moz-35edek.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-27 16:23:06	comex	you probably want to use Rc or something
2015-05-27 16:23:08	slomo	yeah, time to fix that
2015-05-27 16:23:10	<--	fkaa (tundmatu@moz-501od2.business.telia.com) has quit (Ping timeout: 121 seconds)
2015-05-27 16:23:11	<--	wolfviking0 (wolfviking0@moz-8hd.3b6.246.162.IP) has quit (Client exited)
2015-05-27 16:23:11	talchas	because it isn't safe to do so
2015-05-27 16:23:20	<--	rkruppe (chatzilla@moz-3nj.rnu.131.95.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 16:23:46	<--	harrison_ (harrisoncla@moz-uur7pt.eastlink.ca) has quit (Connection closed)
2015-05-27 16:24:04	slomo	instead of Rc i could also implement the Clone trait and map that to the refcounting of GMainLoop?
2015-05-27 16:24:20	-->	brendan (brendaneich@moz-boc.40s.170.209.IP) has joined #rust
2015-05-27 16:24:21	--	zz_NameNotFound is now known as NameNotFound
2015-05-27 16:24:22	comex	yeah
2015-05-27 16:24:31	<--	lerxst (lerxst@21st.century.schizoid.man) has quit (Quit: bye)
2015-05-27 16:24:45	-->	wolfviking0 (wolfviking0@moz-8hd.3b6.246.162.IP) has joined #rust
2015-05-27 16:24:50	-->	lerxst (lerxst@moz-f8l04i.moo.cat) has joined #rust
2015-05-27 16:24:51	<--	Guest38 (textual@moz-j72nfe.ca.comcast.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-27 16:25:03	<--	lerxst (lerxst@moz-f8l04i.moo.cat) has quit (Changing host)
2015-05-27 16:25:03	-->	lerxst (lerxst@21st.century.schizoid.man) has joined #rust
2015-05-27 16:25:05	-->	w4ffles (textual@moz-g7g.toe.144.12.IP) has joined #rust
2015-05-27 16:25:57	-->	mib_yfg8c7 (Mibbit@moz-qpt0c9.fios.verizon.net) has joined #rust
2015-05-27 16:26:41	--	irc: disconnected from server
2015-05-27 16:26:53	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-27 16:26:53	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-27 16:26:53	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-27 16:26:53	--	Channel #rust: 1027 nicks (15 ops, 0 halfops, 1 voice, 1011 normals)
2015-05-27 16:26:55	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-27 16:27:04	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-27 16:28:22	-->	sigma (sigma@moz-k1ghg8.range109-153.btcentralplus.com) has joined #rust
2015-05-27 16:28:31	<--	mib_yfg8c7 (Mibbit@moz-qpt0c9.fios.verizon.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-27 16:31:29	<--	playjax (chatzilla@moz-r1o56k.optusnet.com.au) has quit (Ping timeout: 121 seconds)
2015-05-27 16:32:09	<--	jiojiajiu (Guro@moz-pc8.dl6.204.223.IP) has quit (Connection closed)
2015-05-27 16:32:11	-->	goyox86 (textual@moz-rvv.00r.255.109.IP) has joined #rust
2015-05-27 16:32:20	slomo	comex, talchas: perfect, that seems to work reliable now. thanks for your help :)
2015-05-27 16:32:33	-->	nated (nated@moz-h0up8b.hfc.comcastbusiness.net) has joined #rust
2015-05-27 16:33:10	<--	goyox86 (textual@moz-rvv.00r.255.109.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-27 16:33:17	-->	jiojiajiu (Guro@moz-pc8.dl6.204.223.IP) has joined #rust
2015-05-27 16:33:20	<--	mkpankov` (mkpankov@moz-hfh.n6u.23.84.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 16:33:25	-->	munksgaard (munksgaard@moz-1f0.hq0.225.130.IP) has joined #rust
2015-05-27 16:33:33	-->	turtil (turtil@moz-gfc.es4.23.103.IP) has joined #rust
2015-05-27 16:33:59	<--	tigrou3tac (fabien@moz-gdonfo.fbx.proxad.net) has quit (Ping timeout: 121 seconds)
2015-05-27 16:34:13	-->	chc4 (chc4@moz-pdo0at.ma.comcast.net) has joined #rust
2015-05-27 16:34:27	-->	kidto_ (gabriel@moz-is2.t20.176.109.IP) has joined #rust
2015-05-27 16:34:54	-->	goyox86 (textual@moz-rvv.00r.255.109.IP) has joined #rust
2015-05-27 16:35:24	-->	_Vi (vi@moz-bbs.vhj.131.104.IP) has joined #rust
2015-05-27 16:36:19	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Connection closed)
2015-05-27 16:36:40	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-27 16:37:28	-->	rovar (rovar@moz-6iq.47m.88.38.IP) has joined #rust
2015-05-27 16:37:41	<--	ncarrillo (textual@moz-hr3gaj.subnet.rcn.com) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-27 16:39:22	-->	paupau (grrrr@moz-v1f312.ca.comcast.net) has joined #rust
2015-05-27 16:39:38	-->	mkpankov (mkpankov@moz-hfh.n6u.23.84.IP) has joined #rust
2015-05-27 16:40:43	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Ping timeout: 121 seconds)
2015-05-27 16:41:52	-->	niconii (nicole@moz-hnv1fo.frgo.qwest.net) has joined #rust
2015-05-27 16:41:52	--	Mode #rust [+o niconii] by ChanServ
2015-05-27 16:42:02	-->	maraoz (maraoz@moz-1k4.j39.86.181.IP) has joined #rust
2015-05-27 16:43:09	slomo	https://paste.debian.net/184742/ if anyone is interested
2015-05-27 16:43:42	-->	Guest38 (textual@moz-j72nfe.ca.comcast.net) has joined #rust
2015-05-27 16:44:04	<--	ryanhiebert (ryanhiebert@moz-nsd5kl.ks.cox.net) has quit (Connection closed)
2015-05-27 16:44:29	-->	ryanhiebert (ryanhiebert@moz-nsd5kl.ks.cox.net) has joined #rust
2015-05-27 16:44:43	-->	agjacome (agjacome@moz-ta5ck8.dynamic.jazztel.es) has joined #rust
2015-05-27 16:44:53	-->	IAmRasputin (rmg@moz-89l6lj.ct.comcast.net) has joined #rust
2015-05-27 16:45:27	-->	bfrog (tburdick@moz-hde.5e5.136.67.IP) has joined #rust
2015-05-27 16:45:54	-->	barsonme (barsonme@moz-lr1hrn.wa.comcast.net) has joined #rust
2015-05-27 16:45:58	<--	barsonme (barsonme@moz-lr1hrn.wa.comcast.net) has quit (Connection closed)
2015-05-27 16:46:16	<--	maraoz (maraoz@moz-1k4.j39.86.181.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 16:46:33	<--	kgrandon (Adium@moz-4qc9b1.hfc.comcastbusiness.net) has quit (Quit: Leaving.)
2015-05-27 16:47:31	-->	mindtree (Mitch@moz-eo0q0a.iprimus.net.au) has joined #rust
2015-05-27 16:47:32	-->	ncarrillo (textual@moz-hr3gaj.subnet.rcn.com) has joined #rust
2015-05-27 16:47:47	-->	maraoz (maraoz@moz-1k4.j39.86.181.IP) has joined #rust
2015-05-27 16:48:08	<--	silven (quassel@moz-0roor3.priv.bahnhof.se) has quit (Ping timeout: 121 seconds)
2015-05-27 16:48:14	-->	silven (quassel@moz-0roor3.priv.bahnhof.se) has joined #rust
2015-05-27 16:48:59	<--	Lilly (Lilly@moz-pfkvo9.bredband.comhem.se) has quit (Quit: bajs)
2015-05-27 16:49:06	<--	jiojiajiu (Guro@moz-pc8.dl6.204.223.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 16:50:03	<--	Izacht13 (Izacht13@moz-gee645.atsnmeam.ccmaine.net) has quit (Quit: Leaving)
2015-05-27 16:50:30	<--	jml (jml@moz-mqpurn.178.in-addr.arpa) has quit (Ping timeout: 121 seconds)
2015-05-27 16:51:44	<--	mindtree (Mitch@moz-eo0q0a.iprimus.net.au) has quit (Ping timeout: 121 seconds)
2015-05-27 16:51:44	-->	jml (jml@moz-mqpurn.178.in-addr.arpa) has joined #rust
2015-05-27 16:51:51	<--	munksgaard (munksgaard@moz-1f0.hq0.225.130.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 16:52:06	-->	ctjhoa_ (Mibbit@moz-0oqgv8.fbx.proxad.net) has joined #rust
2015-05-27 16:52:29	<--	hohoho (hohoho@moz-vnksqj.pools.vodafone-ip.de) has quit (Quit: Leaving)
2015-05-27 16:52:32	-->	ChrisMorgan (ChrisMorgan@moz-g6osuq.tpgi.com.au) has joined #rust
2015-05-27 16:52:33	-->	frankmcsherry (frankmcsher@moz-q5151m.dyn.telefonica.de) has joined #rust
2015-05-27 16:52:34	<--	sigma (sigma@moz-k1ghg8.range109-153.btcentralplus.com) has quit (Ping timeout: 121 seconds)
2015-05-27 16:52:48	<--	kidto_ (gabriel@moz-is2.t20.176.109.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 16:53:04	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-27 16:53:07	ctjhoa_	hi guys, I' m looking for the equivalent of http://doc.rust-lang.org/0.12.0/std/io/net/addrinfo/fn.get_host_addresses.html for rust 1.0. Any ideas ?
2015-05-27 16:53:09	<--	jdm (jdm@moz-ilbt2e.cable.teksavvy.com) has quit (Quit: )
2015-05-27 16:53:37	<--	maraoz (maraoz@moz-1k4.j39.86.181.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 16:53:42	<--	ai (ai@moz-pqofrl.sunline.net.ua) has quit (Quit: Leaving.)
2015-05-27 16:54:04	-->	harrisonclarke (harrisoncla@moz-uur7pt.eastlink.ca) has joined #rust
2015-05-27 16:54:19	-->	agjacome_ (agjacome@moz-q042ma.dynamic.jazztel.es) has joined #rust
2015-05-27 16:54:24	XMPPwocky	ctjhoa_: i believe it went into a crate
2015-05-27 16:54:28	-->	kgrandon (Adium@moz-4qc9b1.hfc.comcastbusiness.net) has joined #rust
2015-05-27 16:54:49	&mbrubeck	ctjhoa_: There's an unstable replacement in http://doc.rust-lang.org/std/net/fn.lookup_host.html (but not useful for 1.0)
2015-05-27 16:55:11	-->	jiojiajiu (Guro@moz-pc8.dl6.204.223.IP) has joined #rust
2015-05-27 16:55:39	-->	zyphrus (David@moz-1a4.urk.98.101.IP) has joined #rust
2015-05-27 16:55:44	-->	rudolph (rudolph@moz-q5b.rfa.152.37.IP) has joined #rust
2015-05-27 16:55:47	ctjhoa_	XMPPwocky maybe
2015-05-27 16:56:03	<--	iowvb (tegu@moz-ajp31n.dhcp.inet.fi) has quit (Quit: WeeChat 1.2)
2015-05-27 16:56:46	<--	agjacome_ (agjacome@moz-q042ma.dynamic.jazztel.es) has quit (Quit: leaving)
2015-05-27 16:57:00	<--	agjacome (agjacome@moz-ta5ck8.dynamic.jazztel.es) has quit (Ping timeout: 121 seconds)
2015-05-27 16:57:04	ctjhoa_	mbrubeck Looks good. Too bad it's unstable
2015-05-27 16:57:12	-->	godlikesme_ (godlikesme@moz-2a2.dsd.174.79.IP) has joined #rust
2015-05-27 16:57:19	<--	pcwalton (pcwalton@moz-l8ebtf.sfo1.mozilla.com) has quit (Client exited)
2015-05-27 16:57:46	-->	pcwalton (pcwalton@moz-l8ebtf.sfo1.mozilla.com) has joined #rust
2015-05-27 16:57:46	--	Mode #rust [+ao pcwalton pcwalton] by ChanServ
2015-05-27 16:58:19	<--	harrisonclarke (harrisoncla@moz-uur7pt.eastlink.ca) has quit (Ping timeout: 121 seconds)
2015-05-27 16:59:19	-->	Savago (Savago@moz-8hd.3b6.246.162.IP) has joined #rust
2015-05-27 16:59:35	&mbrubeck	ctjhoa_: http://doc.rust-lang.org/std/net/trait.ToSocketAddrs.html
2015-05-27 16:59:50	<--	godlikesme (godlikesme@moz-2a2.dsd.174.79.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 16:59:57	-->	JosiahOne (Instantbird@moz-p650au.l2d1.q8mm.0306.2602.IP) has joined #rust
2015-05-27 17:01:22	<--	rudolph (rudolph@moz-q5b.rfa.152.37.IP) has quit (Quit: Leaving...)
2015-05-27 17:01:37	-->	rudolph (rudolph@moz-22qlvh.o3k5.dsq9.010d.2620.IP) has joined #rust
2015-05-27 17:01:46	-->	mjboa (mike@moz-gfdglf.hsi06.unitymediagroup.de) has joined #rust
2015-05-27 17:02:20	<--	whipsch (whipsch@moz-bl4i0b.from.irc.camp) has quit (Ping timeout: 121 seconds)
2015-05-27 17:02:52	--	godlikesme_ is now known as godlikesme
2015-05-27 17:03:08	<--	mkpankov (mkpankov@moz-hfh.n6u.23.84.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 17:03:09	-->	lucian (lucian@moz-2c3pda.cable.virginm.net) has joined #rust
2015-05-27 17:03:10	<--	jiojiajiu (Guro@moz-pc8.dl6.204.223.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 17:03:17	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Connection closed)
2015-05-27 17:03:23	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-27 17:03:25	-->	kidto_ (gabriel@moz-is2.t20.176.109.IP) has joined #rust
2015-05-27 17:03:39	ctjhoa_	mbrubeck thanks
2015-05-27 17:03:43	<--	__mark__ (mark@moz-udut16.dynamic.chello.pl) has quit (Client exited)
2015-05-27 17:03:44	godlikesme	hi! what is the standard/preferred way of creating pairs in Rust? 
2015-05-27 17:03:47	godlikesme	just std::tuple? 
2015-05-27 17:03:52	&mbrubeck	godlikesme: (a, b)
2015-05-27 17:03:55	sam113101	is println! supposed to flush automatically?
2015-05-27 17:04:13	@steveklabnik	sam113101: iirc println! does but print does not
2015-05-27 17:04:15	@steveklabnik	print!
2015-05-27 17:04:18	godlikesme	mbrubeck, oh cool, there is a nice syntax for that! 
2015-05-27 17:04:22	-->	futile (felix@moz-cmcd12.unity-media.net) has joined #rust
2015-05-27 17:04:27	XMPPwocky	godlikesme: yep, it's built into the language
2015-05-27 17:04:28	godlikesme	mbrubeck, thank you 
2015-05-27 17:04:54	XMPPwocky	you can also destructure them
2015-05-27 17:04:55	godlikesme	much more beautiful than std::make_pair(a,b) :) 
2015-05-27 17:05:03	XMPPwocky	rusti: let (a, b) = (1, 2); b
2015-05-27 17:05:05	--	Notice(playbot): 2
2015-05-27 17:05:12	mcpherrin	godlikesme: it's one of my favourite things I miss in C++ these days
2015-05-27 17:05:15	godlikesme	XMPPwocky, very nice! It is like python
2015-05-27 17:05:26	<--	dmac_ (dmac@moz-moa.puk.8.50.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 17:05:57	<--	gsingh93 (uid22642@moz-aq0iah.charlton.irccloud.com) has quit (Quit: Connection closed for inactivity)
2015-05-27 17:05:57	-->	kogg (Mibbit@moz-5ev.5pk.144.213.IP) has joined #rust
2015-05-27 17:06:23	kogg	Hello. I am a bit puzzled by something.
2015-05-27 17:06:25	kogg	https://play.rust-lang.org/?gist=1afa46a8f88b2e4c39c5&version=stable
2015-05-27 17:06:30	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Connection closed)
2015-05-27 17:06:34	XMPPwocky	godlikesme: and you can access the individual members via .0, .1, etc.
2015-05-27 17:06:43	godlikesme	yeah, I remember that! 
2015-05-27 17:06:51	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-27 17:06:52	godlikesme	When I first saw this, I was like WTF :) 
2015-05-27 17:06:57	kogg	Why do I have to call .cloned() on the iterator in this code?
2015-05-27 17:07:04	XMPPwocky	kogg: you cannot add references to eachother
2015-05-27 17:07:11	<--	lucian (lucian@moz-2c3pda.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2015-05-27 17:07:12	XMPPwocky	you can add i32s to eachother
2015-05-27 17:07:19	<--	hroi (hroi@moz-d273ub.static.netgroup.dk) has quit (Ping timeout: 121 seconds)
2015-05-27 17:07:24	-->	lpil (Mibbit@moz-g0i02j.dsl.telepac.pt) has joined #rust
2015-05-27 17:07:27	XMPPwocky	Vec.iter() returns an iterator over references
2015-05-27 17:07:32	<--	jgallagher (john@moz-d5e8oc.hfc.comcastbusiness.net) has quit (Client exited)
2015-05-27 17:08:05	SpaceManiac	you can add &i32 + &i32
2015-05-27 17:08:11	<--	ytain (ytain@moz-ffpck2.dsl.teksavvy.com) has quit (Quit: Textual IRC Client: www.textualapp.com)
2015-05-27 17:08:17	kogg	If I have a Vec<Foo>, then Vec.iter() returns an iterator I with I::Item = &Foo ?
2015-05-27 17:08:27	-->	Rym (y@moz-c2u.sd4.38.217.IP) has joined #rust
2015-05-27 17:08:27	SpaceManiac	yes
2015-05-27 17:09:06	<--	filsmick (filsmick@moz-0svev4.abo.wanadoo.fr) has quit (Quit: )
2015-05-27 17:09:16	<--	c0a8 (joel@moz-6ampnk.gtri.gatech.edu) has quit (Ping timeout: 121 seconds)
2015-05-27 17:09:32	lpil	Hi guys. I've started playing about with Rust today with a tic tac toe game, and I'm getting an error that I don't know how to resolve. "cannot move out of indexed content" Could someone possibly offer any aid? Thanks. https://bpaste.net/show/4610eb6fc143
2015-05-27 17:09:37	<--	rovar (rovar@moz-6iq.47m.88.38.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 17:10:21	kogg	And so how does cloned work"
2015-05-27 17:10:38	talchas	it calls clone() on each element
2015-05-27 17:10:40	kogg	Does it clone each referenced item and give me a version I own?
2015-05-27 17:10:47	-->	ygrek (user@moz-8j9aeu.org.ua) has joined #rust
2015-05-27 17:10:47	talchas	which for an i32 is just going to be a dereference
2015-05-27 17:10:50	XMPPwocky	Ver)ical?
2015-05-27 17:10:53	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Ping timeout: 121 seconds)
2015-05-27 17:11:03	<--	mcarton (martin@moz-hal.ibl.127.147.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 17:11:11	-->	Wilduck_ (erik@moz-0l3fjb.fios.verizon.net) has joined #rust
2015-05-27 17:11:16	kogg	Can I call cloned() on any iterator whose Item implements the Clone trait?
2015-05-27 17:11:16	<--	divius (dtantsur@moz-16g.ma8.175.213.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 17:11:16	<--	brendan (brendaneich@moz-boc.40s.170.209.IP) has quit (Client exited)
2015-05-27 17:11:22	XMPPwocky	lpil: try "match (&board[x], &board[y], &board[z])"
2015-05-27 17:11:52	<--	Wilduck (erik@moz-7k30dn.compute-1.amazonaws.com) has quit (Ping timeout: 121 seconds)
2015-05-27 17:11:52	--	Wilduck_ is now known as Wilduck
2015-05-27 17:11:53	XMPPwocky	kogg: on any iterator whose item is a reference *to* something implementing Clone
2015-05-27 17:11:58	XMPPwocky	http://doc.rust-lang.org/std/iter/trait.Iterator.html#method.cloned
2015-05-27 17:12:29	cholcombe	for python to be able to call rust through ctypes do i need #[no_mangle] on all my structs and functions?
2015-05-27 17:12:50	XMPPwocky	cholcombe: yes, unless you want to typee out very long and convoluted mangled names :P
2015-05-27 17:12:55	cholcombe	haha
2015-05-27 17:12:58	XMPPwocky	cholcombe: you also want to make sure they're extern "C"
2015-05-27 17:13:03	<--	Rym (y@moz-c2u.sd4.38.217.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 17:13:05	cholcombe	do i also need to extern the structs or is that not needed?
2015-05-27 17:13:16	-->	jiojiajiu (Guro@moz-trc2j7.asianet.co.th) has joined #rust
2015-05-27 17:13:43	nathan7	#[repr(C)] if you want to handle C structs
2015-05-27 17:13:43	XMPPwocky	cholcombe: you want #[repr(C)] on those
2015-05-27 17:13:48	cholcombe	ok
2015-05-27 17:14:08	-->	Jesse (jruderman@moz-pqc1f5.ca.comcast.net) has joined #rust
2015-05-27 17:14:14	cholcombe	XMPPwocky: got it so #[no_mangle]  + #[repr(C)] on my structs
2015-05-27 17:14:24	XMPPwocky	and extern "C" on the functions
2015-05-27 17:14:28	lpil	Thank you XXMPwocky. So if I do this I get a type error as (I think) my pattern uses values, rather than pointers. I change it to use &Cell::Taken(xx), etc, but then I get an error like this: "cannot move out of borrowed content". Again, I don't really understand this, coming from the cosy high level worlds of Ruby and JS.
2015-05-27 17:14:31	XMPPwocky	that gives you the calling convention
2015-05-27 17:14:37	talchas	well, #[no_mangle] has no meaning on structs, yes?
2015-05-27 17:14:38	cholcombe	ok
2015-05-27 17:14:43	talchas	(it's just repr for them)
2015-05-27 17:14:47	cholcombe	oh i see
2015-05-27 17:14:52	XMPPwocky	lpil: then you use &Cell::Taken(ref xx) instead
2015-05-27 17:14:58	XMPPwocky	lpil: that captures xx by value too
2015-05-27 17:15:13	godlikesme	btw, how to declare a vector of tuples ?
2015-05-27 17:15:29	godlikesme	I do Vec<tuple<String, String>>
2015-05-27 17:15:34	bluss	godlikesme: the type is Vec<(A, B)>
2015-05-27 17:15:35	-->	geri (Mibbit@moz-jniv8c.highway.telekom.at) has joined #rust
2015-05-27 17:15:37	XMPPwocky	godlikesme: Vec<(String, String)>
2015-05-27 17:15:41	godlikesme	o_O 
2015-05-27 17:15:43	godlikesme	okay then
2015-05-27 17:15:49	geri	hi, did someone here implement a DSL with rust?
2015-05-27 17:15:50	cholcombe	XMPPwocky: looks like that causes my python program to segfault haha
2015-05-27 17:15:55	-->	whipsch (whipsch@moz-bl4i0b.from.irc.camp) has joined #rust
2015-05-27 17:15:58	-->	maraoz (maraoz@moz-8b6h6p.itba.edu.ar) has joined #rust
2015-05-27 17:16:10	simukis	geri
2015-05-27 17:16:13	<--	santiago (santiago@moz-ro2mm9.res.rr.com) has quit (Quit: Computer has gone to sleep.)
2015-05-27 17:16:14	XMPPwocky	a 0-ple is (), a 1-ple is (T, ), a 2-ple is (T, T), a 3-ple is (T, T, T)
2015-05-27 17:16:15	XMPPwocky	and so on
2015-05-27 17:16:27	bur_sangjun	Uhhh, so dumb question
2015-05-27 17:16:33	simukis	you basically would implement a compiler plugin which parses everything between () in your maco
2015-05-27 17:16:33	geri	simukis: did you write a auto code completion plugin?
2015-05-27 17:16:35	XMPPwocky	cholcombe: can you make a gist with the code on both ends
2015-05-27 17:16:36	bur_sangjun	do you use getters and setters in rust, or no?
2015-05-27 17:16:40	cholcombe	sure
2015-05-27 17:16:45	-->	santiago (santiago@moz-ro2mm9.res.rr.com) has joined #rust
2015-05-27 17:16:51	<--	Matthias247 (Miranda@moz-49li60.hsi14.kabel-badenwuerttemberg.de) has quit (Connection closed)
2015-05-27 17:16:54	<--	santiago (santiago@moz-ro2mm9.res.rr.com) has quit (Quit: Computer has gone to sleep.)
2015-05-27 17:16:59	simukis	no, I did not.
2015-05-27 17:17:04	XMPPwocky	bur_sangjun: i don't
2015-05-27 17:17:07	geri	simukis: would that be lots of work?
2015-05-27 17:17:08	XMPPwocky	bur_sangjun: except when necessary
2015-05-27 17:17:16	<--	pgonda (peter@moz-s36.0tp.134.75.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 17:17:26	-->	santiago (santiago@moz-ro2mm9.res.rr.com) has joined #rust
2015-05-27 17:17:27	lpil	OK, I think I slightly understand, thank you XMPPwocky. Now I wish to return Some(xx) where xx is that same value, though I can't use *xx due to this "cannot move out of borrowed content" error. Sorry about this. Very embarrassing.
2015-05-27 17:17:34	simukis	geri: you want to implement code completion for rust or DSL in rust?
2015-05-27 17:17:34	<--	santiago (santiago@moz-ro2mm9.res.rr.com) has quit (Quit: Computer has gone to sleep.)
2015-05-27 17:17:43	bur_sangjun	XMPPwocky: What do you define as "Neccessary"
2015-05-27 17:17:51	simukis	s/DSL/arbitrary DSL usable from rust/
2015-05-27 17:17:51	SpaceManiac	lpil: perhaps you want to make the type you're trying to deal with Copy.
2015-05-27 17:17:55	-->	rovar (rovar@moz-6iq.47m.88.38.IP) has joined #rust
2015-05-27 17:18:01	geri	simukis: a new DSL using rust + auto code completion feature for the DSL
2015-05-27 17:18:04	-->	santiago (santiago@moz-ro2mm9.res.rr.com) has joined #rust
2015-05-27 17:18:06	kogg	Another question: I have had &-ptr pop up in lots of error messages
2015-05-27 17:18:10	cholcombe	XMPPwocky: https://gist.github.com/cholcombe973/a305d7e350b2846591c8
2015-05-27 17:18:11	kogg	What exactly does it mean?
2015-05-27 17:18:12	<--	santiago (santiago@moz-ro2mm9.res.rr.com) has quit (Quit: Computer has gone to sleep.)
2015-05-27 17:18:23	kogg	My googling has been futile
2015-05-27 17:18:42	-->	santiago (santiago@moz-ro2mm9.res.rr.com) has joined #rust
2015-05-27 17:18:50	<--	santiago (santiago@moz-ro2mm9.res.rr.com) has quit (Quit: Computer has gone to sleep.)
2015-05-27 17:18:55	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-27 17:18:57	-->	ytain (ytain@moz-ffpck2.dsl.teksavvy.com) has joined #rust
2015-05-27 17:18:57	SpaceManiac	kogg: it just means some reference type &T
2015-05-27 17:19:00	simukis	geri: uh, I fear it wouldn’t be an easy thing to do
2015-05-27 17:19:09	lpil	SpaceManiac: Copy. Ah. This sounds like something I should know about. Thank you. I'm finding I've huge holes in my knowledge with Rust!
2015-05-27 17:19:13	geri	simukis: whats the best way to go?
2015-05-27 17:19:19	geri	simukis: eclipse plugin?
2015-05-27 17:19:31	kogg	Why -ptr?
2015-05-27 17:19:42	&mbrubeck	short for "pointer"
2015-05-27 17:19:58	XMPPwocky	cholcombe: does it crash at the peer_list call?
2015-05-27 17:19:59	kogg	but why the minus?
2015-05-27 17:20:06	kogg	And why reference to pointer?
2015-05-27 17:20:16	cholcombe	XMPPwocky: i think so
2015-05-27 17:20:25	XMPPwocky	try commenting it out
2015-05-27 17:20:25	SpaceManiac	I interpret it as "reference-pointer", or "pointer which is a reference"
2015-05-27 17:20:49	cholcombe	yeah that works fine.  it'll load the dll 
2015-05-27 17:21:05	lpil	Oh gosh. It works. And I'm not entirely sure why. Thanks guys ;)
2015-05-27 17:21:14	cholcombe	i wonder if i should add some println!'s to my peer_list function
2015-05-27 17:21:39	XMPPwocky	cholcombe: yeah
2015-05-27 17:21:49	SpaceManiac	lpil: the `Copy` trait indicates a type has copy rather than move semantics - such that after `let a = b`, b is still valid
2015-05-27 17:21:52	<--	nott (nott@moz-to4.06o.57.86.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 17:22:08	<--	JosiahOne (Instantbird@moz-p650au.l2d1.q8mm.0306.2602.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 17:22:08	kogg	so the minus is more like a dash
2015-05-27 17:22:15	<--	veelenga (Mibbit@moz-2e4.l9o.90.212.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-27 17:22:21	cholcombe	if it said running sudo gluster blah blah that means it entered the run_command function ok
2015-05-27 17:22:24	cholcombe	maybe it died after that
2015-05-27 17:22:37	XMPPwocky	cholcombe: try not returning that Vec
2015-05-27 17:22:40	XMPPwocky	i bet that's it
2015-05-27 17:22:44	XMPPwocky	your signatures don't match
2015-05-27 17:22:53	cholcombe	which signatures?
2015-05-27 17:22:54	XMPPwocky	so it screws up the stack when you return
2015-05-27 17:23:01	&mbrubeck	kogg: Yeah.  &T is one of the pointer types in Rust.  You can call it a "borrowed reference" or an "&"-pointer
2015-05-27 17:23:16	lpil	Does this mean that if I assign it to a new variable name it it copied to a new place in memory? So there are two instances of this value in the stack? Sorry if this is a silly question.
2015-05-27 17:23:23	kogg	:)
2015-05-27 17:23:28	@steveklabnik	lpil: no questions are silly :)
2015-05-27 17:23:29	-->	gsingh93 (gulshan@moz-ln1ktu.st3l.iv8o.0004.2601.IP) has joined #rust
2015-05-27 17:23:48	XMPPwocky	cholcombe: https://docs.python.org/2/library/ctypes.html#specifying-the-required-argument-types-function-prototypes
2015-05-27 17:23:53	XMPPwocky	i think you want to do this
2015-05-27 17:23:55	lpil	Very kind, but rust does make me feel silly. ;)
2015-05-27 17:23:55	SpaceManiac	lpil: semantically, yes. the optimizer can do things
2015-05-27 17:24:01	-->	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has joined #rust
2015-05-27 17:24:01	@steveklabnik	lpil: and yes, if you assign it, it gets coped, and there are two instances
2015-05-27 17:24:06	XMPPwocky	er, the return types thing right under that
2015-05-27 17:24:12	lpil	OK, great. Thanks guys
2015-05-27 17:24:13	XMPPwocky	i haven't pythoned in a while, though
2015-05-27 17:24:22	XMPPwocky	cholcombe: the quick test is to, again, return nothing
2015-05-27 17:24:25	cholcombe	oh so ctypes prob just doesn't know how to deal with that vector
2015-05-27 17:24:26	XMPPwocky	and see if it works then
2015-05-27 17:24:30	cholcombe	ok
2015-05-27 17:24:32	cholcombe	let me try that
2015-05-27 17:24:46	talchas	kogg: it made more sense when there were ~-ptrs and @-ptrs as well. Now there's just &-ptr and *-ptr
2015-05-27 17:24:46	-->	brendan (brendaneich@moz-boc.40s.170.209.IP) has joined #rust
2015-05-27 17:24:53	kogg	How exactly are copy and clone related?
2015-05-27 17:25:06	@steveklabnik	kogg: Clone can run arbitrary code. 
2015-05-27 17:25:14	@steveklabnik	and it is never implicitly called
2015-05-27 17:25:14	kogg	I know that the Copy trait is just an empty "marker" trait that tells the compiler: You can copy this value bit by bit
2015-05-27 17:25:19	-->	hroi (hroi@moz-d273ub.static.netgroup.dk) has joined #rust
2015-05-27 17:25:24	<--	Halamix2 (Halamix2@moz-432.fjt.30.81.IP) has left #rust ("Another working function, I can go to sleep now.")
2015-05-27 17:25:26	kogg	So does Copy imply Clone?
2015-05-27 17:25:39	talchas	yes
2015-05-27 17:25:47	@steveklabnik	semantically, yes. we made some changes to make that automatically happen, iirc
2015-05-27 17:25:57	talchas	(mumble issues with [T; N > 32])
2015-05-27 17:26:07	cholcombe	i suppose a rust vector would map to a python list
2015-05-27 17:26:11	<--	mbudde (mbudde@moz-vmd8oc.customer.tdc.net) has quit (Ping timeout: 121 seconds)
2015-05-27 17:26:11	-->	nott (nott@moz-to4.06o.57.86.IP) has joined #rust
2015-05-27 17:26:26	XMPPwocky	cholcombe: but you can't do that directly
2015-05-27 17:26:44	XMPPwocky	the memory representations are *totally* different, even though they may be semantically similar
2015-05-27 17:26:45	bluss	cholcombe: sure, it's the same kind of collection
2015-05-27 17:26:55	cholcombe	uh oh haha
2015-05-27 17:27:05	cholcombe	i was hoping i could call this from python :(
2015-05-27 17:27:10	kogg	Do you require the programmer to honour certain contracts for clone? E.g. \forall a. a.clone() == a
2015-05-27 17:27:42	bluss	kogg: it's not enforcable
2015-05-27 17:28:01	bluss	kogg: oh and floats don't follow that ;)
2015-05-27 17:28:03	cholcombe	XMPPwocky: so it says python expect an int return value by default
2015-05-27 17:28:12	<--	rovar (rovar@moz-6iq.47m.88.38.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 17:28:19	XMPPwocky	yeah
2015-05-27 17:28:25	kogg	because NaN?
2015-05-27 17:28:28	XMPPwocky	Peolpe have done this before, but i can't find it now
2015-05-27 17:28:28	bluss	yees
2015-05-27 17:28:41	-->	fabianvf_ (fabianvf@moz-fjqmui.va.comcast.net) has joined #rust
2015-05-27 17:28:51	-->	Havvy[telnet] (Havvy@moz-epv20b.wa.comcast.net) has joined #rust
2015-05-27 17:28:52	cholcombe	XMPPwocky: go go internets :) https://avacariu.me/articles/calling-rust-from-python.html
2015-05-27 17:28:58	<--	fabianvf (fabianvf@moz-fjqmui.va.comcast.net) has quit (Connection closed)
2015-05-27 17:29:00	XMPPwocky	yeah, but passing a Vec or some collection around
2015-05-27 17:29:06	<--	godlikesme (godlikesme@moz-2a2.dsd.174.79.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 17:29:15	cholcombe	yeah that's going to be tricky
2015-05-27 17:29:32	bluss	kogg: Rust has `unsafe trait` for when something breaks if you misimplement the trait. That's only concerning rust's safety guarantees and not logic errors though
2015-05-27 17:29:37	<--	Havvy[telnet] (Havvy@moz-epv20b.wa.comcast.net) has left #rust
2015-05-27 17:29:38	XMPPwocky	i know people do it with Ruby a lot
2015-05-27 17:29:39	cholcombe	he's got code for it it looks like
2015-05-27 17:30:11	cholcombe	i wonder if i could get away not bridging this crap between python and rust.  this looks complicated
2015-05-27 17:30:13	<--	tadh (quassel@moz-pg51s5.CWRU.Edu) has quit (Connection closed)
2015-05-27 17:30:13	kogg	How come that I can assign a value of type &collections::vec::Vec<u8> to a variable of type &[u8]?
2015-05-27 17:30:22	XMPPwocky	cholcombe: passing fixed-size arrays around is simple
2015-05-27 17:30:23	<--	JuggleTux (tux@moz-ho0t1f.adslplus.ch) has quit (Ping timeout: 121 seconds)
2015-05-27 17:30:25	@steveklabnik	cholcombe: http://doc.rust-lang.org/book/rust-inside-other-languages.html
2015-05-27 17:30:25	-->	jedireza (jedireza@moz-ungcc1.dsl.ovh.fr) has joined #rust
2015-05-27 17:30:29	bluss	kogg: you just do it actually
2015-05-27 17:30:32	@steveklabnik	cholcombe: just the basics, ;)
2015-05-27 17:30:35	XMPPwocky	as is writing an iterator-y thing where you have one function to start doing things
2015-05-27 17:30:38	bluss	kogg: maybe you need an explicit type on th binding
2015-05-27 17:30:40	XMPPwocky	and call that over and over again to get more things
2015-05-27 17:30:42	XMPPwocky	one thing at a time
2015-05-27 17:30:48	&mbrubeck	kogg: The long answer is https://github.com/rust-lang/rfcs/blob/master/text/0241-deref-conversions.md
2015-05-27 17:30:49	-->	JuggleTux (tux@moz-ho0t1f.adslplus.ch) has joined #rust
2015-05-27 17:30:56	cholcombe	XMPPwocky: yeah i don't know why i made it a vector.  it could've been an array
2015-05-27 17:30:57	bluss	playbot: let x: &[u8] = vec![0u8; 4];
2015-05-27 17:30:58	-->	godlikesme (godlikesme@moz-2a2.dsd.174.79.IP) has joined #rust
2015-05-27 17:30:59	--	Notice(playbot): <anon>:9:24: 9:36 error: mismatched types:
2015-05-27 17:30:59	--	Notice(playbot):  expected `&[u8]`,
2015-05-27 17:30:59	--	Notice(playbot): output truncated; full output at: http://bit.ly/1AyDh3l
2015-05-27 17:31:07	kogg	Ah, coercions...
2015-05-27 17:31:13	XMPPwocky	https://github.com/dgrunwald/rust-cpython
2015-05-27 17:31:17	XMPPwocky	this seems to be helpful cholcombe ?
2015-05-27 17:31:29	bluss	kogg: heh, I messed that simple thing up
2015-05-27 17:31:38	<--	nwin (textual@moz-rmebj6.pools.arcor-ip.net) has quit (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
2015-05-27 17:31:38	cholcombe	XMPPwocky: woot!
2015-05-27 17:31:39	bluss	kogg: anyway, it's &Vec<u8> -> &[u8]
2015-05-27 17:31:47	XMPPwocky	https://github.com/dgrunwald/rust-cpython/blob/db47455904757269c10ef31552f9ab2d6fc89397/src/objects/list.rs#L121
2015-05-27 17:31:48	cholcombe	oh that's the other way around
2015-05-27 17:31:51	XMPPwocky	yeah that looks very very helpful
2015-05-27 17:31:51	cholcombe	i have python calling rust
2015-05-27 17:32:11	XMPPwocky	ah
2015-05-27 17:32:22	<--	kgrandon (Adium@moz-4qc9b1.hfc.comcastbusiness.net) has quit (Quit: Leaving.)
2015-05-27 17:32:32	&mbrubeck	bluss: That's what kogg wrote originally. :)
2015-05-27 17:32:41	XMPPwocky	cholcombe: http://dgrunwald.github.io/rust-cpython/doc/cpython/macro.py_module_initializer!.html ?
2015-05-27 17:33:00	cholcombe	what is this? 
2015-05-27 17:33:10	XMPPwocky	cholcombe: seems like you can make it a loadable python module that way
2015-05-27 17:33:15	XMPPwocky	instead of going through ctypes
2015-05-27 17:33:19	cholcombe	interesting
2015-05-27 17:33:24	XMPPwocky	which is probably MUCH nicer
2015-05-27 17:33:42	bluss	mbrubeck: yeah I saw it just forgot to type the & to playbot 
2015-05-27 17:33:47	cholcombe	yeah that's interesting
2015-05-27 17:34:15	kogg	bluss: What did you mess up?
2015-05-27 17:34:25	bluss	playbot: let x: &[u8] = &vec![0u8; 4];
2015-05-27 17:34:27	--	Notice(playbot): ()
2015-05-27 17:34:33	bluss	now it works ^
2015-05-27 17:34:51	kogg	ah, I see. The playbot invocation
2015-05-27 17:35:06	--	kimundi is now known as zz_kimundi
2015-05-27 17:35:52	kogg	Is there a way to own a slice?
2015-05-27 17:36:05	kogg	Or do slices only ever occur as (mutable) borrows?
2015-05-27 17:36:07	--	zz_kimundi is now known as kimundi
2015-05-27 17:36:26	<--	IAmRasputin (rmg@moz-89l6lj.ct.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-27 17:36:35	-->	kgrandon (Adium@moz-4qc9b1.hfc.comcastbusiness.net) has joined #rust
2015-05-27 17:36:39	kimundi	kogg: Box<[T]>
2015-05-27 17:36:56	kimundi	kogg: Though its rarely ther better choice over Vec
2015-05-27 17:37:47	<--	markstory (textual@moz-cd82nj.res.rr.com) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-27 17:38:46	kogg	How would I initialise that?
2015-05-27 17:38:53	Dabo	Vec.into_boxed_slice
2015-05-27 17:38:55	Soni	ok so I wanna learn rust quickly and without stupid things like Cargo
2015-05-27 17:39:09	XMPPwocky	please don't insult cargo, it's very sensitive :(
2015-05-27 17:39:18	Dabo	Soni, Cargo/crates.io is kind of integral to using rust effectively
2015-05-27 17:39:19	Havvy	Any good crates for colored terminal output?
2015-05-27 17:39:35	Soni	it's not available on my system
2015-05-27 17:39:36	futile	Havvy: there are quite a few I think
2015-05-27 17:39:41	futile	but don't know any names right now
2015-05-27 17:39:41	XMPPwocky	Soni: oh, what system's that?
2015-05-27 17:39:48	Soni	Arch Linux
2015-05-27 17:39:49	&mbrubeck	Has anyone written a robust Unicode string reversing function in Rust, ala https://github.com/mathiasbynens/esrever/ ?
2015-05-27 17:39:51	Soni	altho tbh...
2015-05-27 17:40:00	futile	Soni: use multirust
2015-05-27 17:40:00	panicbit	Soni: Do you know the playground? play.rust-lang.org
2015-05-27 17:40:02	XMPPwocky	Soni: you can build cargo
2015-05-27 17:40:03	<--	skade (skade@moz-eetliv.pools.vodafone-ip.de) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-27 17:40:06	-->	markstory (textual@moz-cd82nj.res.rr.com) has joined #rust
2015-05-27 17:40:12	Soni	I haven't upgraded in a while...
2015-05-27 17:40:15	-->	bytewise (bytewise@moz-mkh5h4.hsi16.unitymediagroup.de) has joined #rust
2015-05-27 17:40:16	Dabo	Soni, i'd suggest installing using rustup.sh until cargo becomes available on the package manager :/
2015-05-27 17:40:17	XMPPwocky	if you're on arch
2015-05-27 17:40:20	gattschardo	Soni: use the cargo-bin from AUR
2015-05-27 17:40:22	Havvy	XMPPwocky:  You need a nightly build for Rust to bulid Cargo right now.
2015-05-27 17:40:25	-->	divius (dtantsur@moz-rgm.jp8.132.209.IP) has joined #rust
2015-05-27 17:40:27	-->	rovar (rovar@moz-6iq.47m.88.38.IP) has joined #rust
2015-05-27 17:40:29	XMPPwocky	Havvy: aha
2015-05-27 17:40:30	futile	cargo is also in the AUR
2015-05-27 17:40:36	XMPPwocky	right, so arch ships 1.0 stable?
2015-05-27 17:40:41	<--	jmbto (jmbto@moz-f5obsl.hca5.8frp.0e35.2a01.IP) has quit (Quit: WeeChat 1.1.1)
2015-05-27 17:40:45	kogg	playbot: let x: Box<[u8]> = vec![1u8, 2, 3, 4].into_boxed_slice();
2015-05-27 17:40:46	kimundi	Soni: Arch has about all variations of Rust and cargo packages there is tbh :P
2015-05-27 17:40:47	--	Notice(playbot): ()
2015-05-27 17:40:48	<--	lpil (Mibbit@moz-g0i02j.dsl.telepac.pt) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-27 17:40:53	@niconii	Soni: i'd recommend multirust, it's pretty nice and lets you have multiple versions of rust at once
2015-05-27 17:40:53	Dabo	I mean at this point, most of functionality which you would need for building any sort of non-example program is found in crates 
2015-05-27 17:41:00	Havvy	!multirust
2015-05-27 17:41:01	+rustbot	A tool for managing multiple Rust installations. https://github.com/brson/multirust
2015-05-27 17:41:12	futile	<- also running Arch Linux, using multirust
2015-05-27 17:41:15	@niconii	so you could have stable and nightly at once
2015-05-27 17:41:23	futile	its really useful
2015-05-27 17:41:26	<--	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-27 17:41:30	@niconii	<- same as futile, running Arch Linux and multirust
2015-05-27 17:41:34	panicbit	XMPPwocky: Yup, arch ships 1.0 but without cargo
2015-05-27 17:42:12	<--	w4ffles (textual@moz-g7g.toe.144.12.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-27 17:42:20	futile	sooner or later y
2015-05-27 17:42:24	@niconii	i'm surprised arch doesn't bundle cargo
2015-05-27 17:42:27	-->	ctennis (ctennis@moz-vcpg3c.in.comcast.net) has joined #rust
2015-05-27 17:42:28	Havvy	<- Running NixOS with Rust 1.0 and Cargo. Though I had to build them myself since they hadn't entered the unstable channel when I built them.
2015-05-27 17:42:33	futile	you will want to use some nightly functionality anyway
2015-05-27 17:42:39	 *	XMPPwocky running windows, much to his chagrin
2015-05-27 17:42:40	-->	munksgaard (munksgaard@moz-478pev.u.parknet.dk) has joined #rust
2015-05-27 17:43:54	<--	nott (nott@moz-to4.06o.57.86.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 17:44:13	kogg	playbot: let x: Box<[u8]> = vec![1u8, 2, 3, 4].into_boxed_slice(); *x[2]
2015-05-27 17:44:15	--	Notice(playbot): <anon>:9:67: 9:72 error: type `u8` cannot be dereferenced
2015-05-27 17:44:15	--	Notice(playbot): <anon>:9         let x: Box<[u8]> = vec![1u8, 2, 3, 4].into_boxed_slice(); *x[2]
2015-05-27 17:44:15	--	Notice(playbot): output truncated; full output at: http://bit.ly/1AyF8Fs
2015-05-27 17:44:27	-->	mujou (mujou@moz-rko6lo.ocn.ne.jp) has joined #rust
2015-05-27 17:44:34	kogg	playbot: let x: Box<[u8]> = vec![1u8, 2, 3, 4].into_boxed_slice(); (*x)[2]
2015-05-27 17:44:35	--	Notice(playbot): 3
2015-05-27 17:44:52	@niconii	on another note, since cmr hates fun and i can't use colors in #rust-offtopic
2015-05-27 17:44:57	@niconii	playbot: print!("\x034R\x037A\x038I\x039N\x0311B\x0312O\x036W ");
2015-05-27 17:44:58	--	Notice(playbot): RAINBOW ()
2015-05-27 17:45:14	<--	divius (dtantsur@moz-rgm.jp8.132.209.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 17:45:23	-->	dalarmmst (dalarmmst@moz-mb21j4.bredband.comhem.se) has joined #rust
2015-05-27 17:45:34	ctjhoa_	I'm stuck between two errors using http://doc.rust-lang.org/std/net/trait.ToSocketAddrs.html#tymethod.to_socket_addrs  (https://gist.github.com/ctjhoa/403e2114ff0ef5f3fb44) 
2015-05-27 17:45:36	<--	markstory (textual@moz-cd82nj.res.rr.com) has quit (Connection closed)
2015-05-27 17:45:45	-->	debuuux (debu@moz-evvnnt.dyn.telefonica.de) has joined #rust
2015-05-27 17:45:46	<--	nico_ (nico@moz-itj1vp.retail.telecomitalia.it) has quit (Quit: Leaving)
2015-05-27 17:45:47	<--	grodan (Mibbit@moz-o5eg8b.bredband.comhem.se) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-27 17:46:10	-->	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has joined #rust
2015-05-27 17:46:29	XMPPwocky	ctjhoa_: use it as std::net::ToSocketAddrs;
2015-05-27 17:46:36	XMPPwocky	the hint message is wrong because of reexporting
2015-05-27 17:46:39	-->	brianloveswords (brianlovesw@moz-tq78gs.fios.verizon.net) has joined #rust
2015-05-27 17:46:39	-->	hhhhhhhh1 (mike@moz-969kuj.cable.virginm.net) has joined #rust
2015-05-27 17:46:41	<--	hhhhhhhh1 (mike@moz-969kuj.cable.virginm.net) has quit (Quit: WeeChat 1.2)
2015-05-27 17:46:53	<--	ncarrillo (textual@moz-hr3gaj.subnet.rcn.com) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-27 17:46:57	Soni	playbot, print!("\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00");
2015-05-27 17:46:58	--	Notice(playbot):                 ()
2015-05-27 17:47:11	Soni	hmm well at least it's not that stupid
2015-05-27 17:47:22	<--	kidto_ (gabriel@moz-is2.t20.176.109.IP) has quit (Quit: Lost terminal)
2015-05-27 17:47:34	@niconii	Soni: what were you expecting?
2015-05-27 17:47:38	Soni	(yes I actually expected that to make it crash/disconnect somehow)
2015-05-27 17:47:46	-->	hjr3 (hradtke@moz-lei.av4.169.69.IP) has joined #rust
2015-05-27 17:47:48	ctjhoa_	XMPPwocky oh not so simple :P thanks
2015-05-27 17:47:55	&mbrubeck	Did it translate those to space characters?
2015-05-27 17:48:02	 *	mitsuhiko burntsushi: this thread ... http://www.reddit.com/r/programming/comments/37foph/rust_for_python_programmers/crmlpf6
2015-05-27 17:48:02	<--	mujou (mujou@moz-rko6lo.ocn.ne.jp) has quit (Quit: Leaving...)
2015-05-27 17:48:05	futile	on my terminal I see spaces
2015-05-27 17:48:09	XMPPwocky	same
2015-05-27 17:48:19	mitsuhiko	burntsushi: i could not continue in there
2015-05-27 17:48:44	Soni	mbrubeck, whatever it did, anything is better than sending raw \x00's down a line socket
2015-05-27 17:48:53	XMPPwocky	iirc, IRC must strip them out
2015-05-27 17:48:56	XMPPwocky	as per the RFC
2015-05-27 17:48:57	burntsushi	mitsuhiko: sometimes i get sucked into that stuff. :P
2015-05-27 17:49:10	mitsuhiko	XMPPwocky: na, i think nullbytes in sending disconnects you
2015-05-27 17:49:15	XMPPwocky	oh yeah
2015-05-27 17:49:18	Soni	XMPPwocky, most IRCds just halt and catch fire when they see a bunch of \x00's
2015-05-27 17:49:21	XMPPwocky	it's supposed to disconnnect you
2015-05-27 17:49:26	Soni	and treat them as EOLs
2015-05-27 17:49:31	godlikesme	hey, how do I create vector from an iterator? 
2015-05-27 17:49:43	mitsuhiko	godlikesme: .collect()
2015-05-27 17:49:44	tilpner	.collect::<Vec<_>>()
2015-05-27 17:49:44	panicbit	godlikesme: .collect()
2015-05-27 17:49:45	Soni	so having a bunch of them in a row = flood
2015-05-27 17:49:51	Soni	which causes a disconnect
2015-05-27 17:49:54	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Connection closed)
2015-05-27 17:49:57	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-27 17:50:08	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Connection closed)
2015-05-27 17:50:10	mitsuhiko	playbot: let x : Vec<u8> = range(10).collect(); println!("{:?}", x);
2015-05-27 17:50:10	<--	gopar (gopar@moz-5039uj.ca.comcast.net) has quit (Quit: Leaving)
2015-05-27 17:50:11	--	Notice(playbot): <anon>:9:27: 9:32 error: unresolved name `range`
2015-05-27 17:50:11	--	Notice(playbot): <anon>:9         let x : Vec<u8> = range(10).collect(); println!("{:?}", x);
2015-05-27 17:50:11	--	Notice(playbot): output truncated; full output at: http://bit.ly/1AyFV9q
2015-05-27 17:50:12	godlikesme	hmmm, what about from_iter? 
2015-05-27 17:50:17	godlikesme	is it a different thing? 
2015-05-27 17:50:18	mitsuhiko	playbot: let x : Vec<u8> = (0..10).collect(); println!("{:?}", x);
2015-05-27 17:50:19	--	Notice(playbot): [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
2015-05-27 17:50:20	--	Notice(playbot): ()
2015-05-27 17:50:21	-->	whidgle (Mibbit@moz-fgundf.dynamic.ziggo.nl) has joined #rust
2015-05-27 17:50:32	SpaceManiac	godlikesme: collect() calls from_iter
2015-05-27 17:50:33	<--	fabianvf_ (fabianvf@moz-fjqmui.va.comcast.net) has quit (Connection closed)
2015-05-27 17:50:35	godlikesme	I tried Vec::from_iter()
2015-05-27 17:50:38	Havvy	playbot: print!("\x00\r\nPRIVMSG #rust Hacks!")
2015-05-27 17:50:39	--	Notice(playbot):  
2015-05-27 17:50:39	--	Notice(playbot): PRIVMSG #rust Hacks!()
2015-05-27 17:50:48	whidgle	Can I create a shared object (.so) with rustc which is dynamically linked in Linux?
2015-05-27 17:51:06	&mbrubeck	Soni: By the way, the bot code is at https://github.com/rust-lang/rust-playpen/blob/master/bot.py
2015-05-27 17:51:09	Soni	I wish print did lines and write did... writing
2015-05-27 17:51:12	mcpherrin	whidgle: yes!
2015-05-27 17:51:13	-->	fabianvf (fabianvf@moz-fjqmui.va.comcast.net) has joined #rust
2015-05-27 17:51:20	Soni	println is clunky
2015-05-27 17:51:25	whidgle	e.g. if I do nm -D mylib.so I would only see my foo function and not everything else from the standard library
2015-05-27 17:51:28	&mbrubeck	if you want to poke it without crashing the production bot :)
2015-05-27 17:51:32	<--	loyd (loyd@moz-jsb.32f.108.213.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 17:51:41	godlikesme	Users/putilin/servo/components/devtools/actors/network_event.rs:83:30: 83:64 error: no associated item named `from_iter` found for type `collections::vec::Vec<(collections::string::String, collections::string::String)>` in the current scope
2015-05-27 17:51:41	godlikesme	Users/putilin/servo/components/devtools/actors/network_event.rs:83                     headers: Vec::<(String, String)>::from_iter(self.request.headers.iter().map(|h| (h.name(), h.value_string()))),
2015-05-27 17:51:45	godlikesme	why do I get this error? 
2015-05-27 17:51:56	mitsuhiko	godlikesme: don't use from_iter directly
2015-05-27 17:52:14	cow_2001	is there a way to find if a function uses unsafe?
2015-05-27 17:52:23	mcpherrin	whidgle: the command line flag used to be -C prefer-dynamic ... but I forget exactly
2015-05-27 17:52:33	mitsuhiko	cow_2001: grep :)
2015-05-27 17:52:46	&mbrubeck	godlikesme: You probably need to `use std::iter::FromIterator;` to call that.  But you can also use iter.collect()
2015-05-27 17:52:47	whidgle	mcpherrin: Thanks for the indicator!
2015-05-27 17:52:48	mitsuhiko	cow_2001: also, what do you mean by that? if it uses unsafe directly?
2015-05-27 17:52:53	cow_2001	like, if somewhere along the chain of modules used to write a specific function, there could be a case in which an abort() or somesuch could stop everything in its tracks
2015-05-27 17:53:10	@steveklabnik	there's a lint
2015-05-27 17:53:15	godlikesme	ok, I think I figured it out 
2015-05-27 17:53:18	@steveklabnik	iirc
2015-05-27 17:53:21	godlikesme	.collect() gave much better error message
2015-05-27 17:53:29	mcpherrin	whidgle: oh, looks like it still is.     -C            prefer-dynamic -- prefer dynamic linking to static linking
2015-05-27 17:53:42	@steveklabnik	but realistically, cow_2001 , so much base code uses unsafe that it wouldn't be useful. like, allocating memory calls unsafe ;)
2015-05-27 17:53:44	cow_2001	i don't know much about it. i just heard that abort() can do real bad things, like not letting the program finish
2015-05-27 17:54:04	XMPPwocky	all programs must be tolerant of having the power switch pulled out, though
2015-05-27 17:54:12	cow_2001	right
2015-05-27 17:54:34	mcpherrin	You can make a rust program abort without using unsafe
2015-05-27 17:54:39	mcpherrin	panic in a destructor
2015-05-27 17:54:43	Soni	playbot, }); show({
2015-05-27 17:54:44	mitsuhiko	godlikesme: if you want to invoke from_iter directly, you kinda need to do it similar to here: https://github.com/rust-lang/rust/blob/master/src/libcore/iter.rs#L565
2015-05-27 17:54:44	whidgle	mcpherrin: Any idea in Cargo then? I can;t find any good documentation (book style) for Cargo. That would be useful for things like this.
2015-05-27 17:54:45	--	Notice(playbot): ()
2015-05-27 17:54:45	--	Notice(playbot): ()
2015-05-27 17:54:48	Soni	cool
2015-05-27 17:54:55	@steveklabnik	http://doc.rust-lang.org/stable/std/process/fn.exit.html <- not unsafe
2015-05-27 17:54:58	mcpherrin	whidgle: Sorry, I don't know about cargo.
2015-05-27 17:55:09	whidgle	mcpherrin: no wories. Thanks!
2015-05-27 17:55:10	@steveklabnik	whidgle: doc.crates.io is all the cargo docs
2015-05-27 17:55:18	@steveklabnik	whidgle: i have had it on my plate forever to fix them up
2015-05-27 17:55:33	<--	areski (areski@moz-l7mjm5.user.ono.com) has quit (Ping timeout: 121 seconds)
2015-05-27 17:55:40	whidgle	steveklabnik: that is a big plate :)
2015-05-27 17:55:47	@steveklabnik	whidgle: i think http://doc.crates.io/manifest.html#building-dynamic-or-static-libraries is what you're looking for?
2015-05-27 17:56:50	whidgle	steveklabnik: That is what I thought as well, but it isn't, because the .so this produces has all the rust standard library packaged in it.
2015-05-27 17:57:01	-->	casey (casey@moz-v0ns05.tpgi.com.au) has joined #rust
2015-05-27 17:57:23	whidgle	steveklabnik: if I do nm -D on the .so it will list many symbols :D
2015-05-27 17:57:26	@steveklabnik	well
2015-05-27 17:57:34	@steveklabnik	iirc if you're producing a .so you have to
2015-05-27 17:57:38	godlikesme	mitsuhiko, thanks! I'll use .collect() 
2015-05-27 17:57:38	@steveklabnik	if it's an .rlib, you don't
2015-05-27 17:57:42	@steveklabnik	but this isn't my strong point
2015-05-27 17:57:58	<--	casey (casey@moz-v0ns05.tpgi.com.au) has quit (Connection closed)
2015-05-27 17:58:05	<--	ctjhoa_ (Mibbit@moz-0oqgv8.fbx.proxad.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-27 17:58:06	-->	divius (dtantsur@moz-rgm.jp8.132.209.IP) has joined #rust
2015-05-27 17:58:18	@steveklabnik	bbut without a stable ABI, dynamically linking rust libraries isn't htat great anyway
2015-05-27 17:58:25	@steveklabnik	they have to be built with the exact same SHA of the compiler
2015-05-27 17:59:16	whidgle	steveklabnik: thanks for the insight! I had a feeling it had to do with the ABI
2015-05-27 17:59:34	<--	slomo (slomo@moz-p8m0g2.net) has quit (Quit: Ex-Chat)
2015-05-27 17:59:47	-->	nickniko_ (nicknikolov@moz-ko7.r6m.215.90.IP) has joined #rust
2015-05-27 17:59:50	whidgle	I sure hope it gets fixed in the future. I don't want my small libraries to have a minimum size of 2.9 MB
2015-05-27 18:00:02	<--	gandalf (zbraniecki@moz-u3dg2t.sfo1.mozilla.com) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-27 18:00:05	whidgle	and 90% binary overlap
2015-05-27 18:00:10	XMPPwocky	whidgle: enable LTO
2015-05-27 18:00:16	@steveklabnik	yup
2015-05-27 18:00:17	@bstrie	LTO is pain
2015-05-27 18:00:22	@bstrie	a fate worse than binary bloat
2015-05-27 18:00:30	-->	gandalf (zbraniecki@moz-u3dg2t.sfo1.mozilla.com) has joined #rust
2015-05-27 18:00:31	Soni	mbrubeck, that is a cool bot
2015-05-27 18:01:05	<--	munksgaard (munksgaard@moz-478pev.u.parknet.dk) has quit (Ping timeout: 121 seconds)
2015-05-27 18:01:14	<--	hjr3 (hradtke@moz-lei.av4.169.69.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2015-05-27 18:01:21	dfockler	does llvm do all the linking and handling the shared libraries? I'm also not entirely sure what the terminology is
2015-05-27 18:01:39	<--	rmdashrf (rmdashrf@moz-ecr.kjm.54.128.IP) has quit (Quit: WeeChat 0.4.2)
2015-05-27 18:02:02	<--	nicknikolov (nicknikolov@moz-0q4.2rm.211.90.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 18:02:13	FreeFull	steveklabnik: It'd be nice if there was an equivalent to exit that does run destructors
2015-05-27 18:02:26	FreeFull	So like panic!, but non-errorenous
2015-05-27 18:02:29	<--	gandalf (zbraniecki@moz-u3dg2t.sfo1.mozilla.com) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-27 18:02:33	-->	lucian (lucian@moz-2c3pda.cable.virginm.net) has joined #rust
2015-05-27 18:02:37	<--	whidgle (Mibbit@moz-fgundf.dynamic.ziggo.nl) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-27 18:02:55	-->	James_ (quassel@moz-q6malq.range86-148.btcentralplus.com) has joined #rust
2015-05-27 18:03:16	<--	James (quassel@moz-739rgr.range86-148.btcentralplus.com) has quit (Ping timeout: 121 seconds)
2015-05-27 18:03:39	-->	mcarton (martin@moz-ag64s6.rev.sfr.net) has joined #rust
2015-05-27 18:03:39	<--	djhworld (djhworld@moz-uag.hpf.10.94.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-27 18:03:42	<--	Binero (jeroen@moz-9quuoa.access.telenet.be) has quit (Client exited)
2015-05-27 18:04:00	<--	panicbit (panicbit@moz-idbfi8.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2015-05-27 18:04:02	<--	Cindela (cindela@moz-dlkpia.bb.dnainternet.fi) has quit (Ping timeout: 121 seconds)
2015-05-27 18:04:11	<--	divius (dtantsur@moz-rgm.jp8.132.209.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 18:05:10	-->	djhworld (djhworld@moz-uag.hpf.10.94.IP) has joined #rust
2015-05-27 18:05:24	-->	sono (sono@moz-ti08o8.clients.your-server.de) has joined #rust
2015-05-27 18:05:49	<--	alaska (alaska@moz-g1d0bn.vrt.sourcefire.com) has quit (Ping timeout: 121 seconds)
2015-05-27 18:06:17	<--	jjthrash (jjthrash@moz-la0q45.res.rr.com) has quit (Quit: Leaving...)
2015-05-27 18:06:24	<--	djhworld (djhworld@moz-uag.hpf.10.94.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-27 18:06:25	<--	asQuirre_ (asQuirreL@moz-ro1qqu.ox.ac.uk) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-27 18:06:32	<--	fabianvf (fabianvf@moz-fjqmui.va.comcast.net) has quit (Connection closed)
2015-05-27 18:06:52	-->	orangeshark (erik@moz-pnk7v0.44tj.56ot.0306.2602.IP) has joined #rust
2015-05-27 18:06:57	-->	fabianvf (fabianvf@moz-fjqmui.va.comcast.net) has joined #rust
2015-05-27 18:07:04	<--	ziocroc (ziocroc@moz-bfu.33o.74.151.IP) has quit (Client exited)
2015-05-27 18:07:06	Soni	mbrubeck, no better way to learn a language other than trying to break a bot for it
2015-05-27 18:07:18	@steveklabnik	FreeFull: yeah possibly
2015-05-27 18:07:22	-->	DemonOne (Avi@moz-be395p.red.bezeqint.net) has joined #rust
2015-05-27 18:07:48	bur_sangjun	compiler tells me "non-ascii idents are not fully supported", if I support them, how prone to breaking things are they
2015-05-27 18:08:09	bur_sangjun	because I'd semantically prefer to call my delta time variable <Delta>t
2015-05-27 18:08:20	-->	gr5 (Mibbit@moz-o5eg8b.bredband.comhem.se) has joined #rust
2015-05-27 18:08:26	bur_sangjun	"Δt"
2015-05-27 18:08:28	<--	bfrog (tburdick@moz-hde.5e5.136.67.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 18:08:30	kimundi	bur_sangjun: You'd probably be fine
2015-05-27 18:08:45	<--	gr5 (Mibbit@moz-o5eg8b.bredband.comhem.se) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-27 18:08:46	mcpherrin	bur_sangjun: you will run into things like error messages being misaligned maybe, and you don't get backwards compatibility guarantees
2015-05-27 18:08:54	mcpherrin	But it *does* work.
2015-05-27 18:09:00	<--	mkoskar (mkoskar@moz-4lmh4m.privacyfoundation.ch) has quit (Ping timeout: 121 seconds)
2015-05-27 18:09:02	<--	freefall (ff@moz-r9rogb.enn.lu) has quit (Ping timeout: 121 seconds)
2015-05-27 18:09:06	XMPPwocky	and once you have one part done, it's a slippery slope
2015-05-27 18:09:10	kimundi	bur_sangjun: They have been put behind af eature gate because of undecided issues like unicode normalization - right now it just uses the strings 1:1 unchanged
2015-05-27 18:09:23	XMPPwocky	and before you know it all your variables are emoji
2015-05-27 18:09:29	-->	doran (Mibbit@moz-o5eg8b.bredband.comhem.se) has joined #rust
2015-05-27 18:09:31	FreeFull	The feature gate means you'll have to use nightly to get them
2015-05-27 18:09:51	<--	coryforsyth (coryforsyth@moz-q577km.static.cosmoweb.net) has quit (Client exited)
2015-05-27 18:09:53	bur_sangjun	haha, because I'm a physics student I have all the greek conveniently mapped on my keyboard, and so I'd only really be using them in my code
2015-05-27 18:09:57	<--	kgrandon (Adium@moz-4qc9b1.hfc.comcastbusiness.net) has quit (Quit: Leaving.)
2015-05-27 18:10:04	-->	asQuirreL (asQuirreL@moz-ro1qqu.ox.ac.uk) has joined #rust
2015-05-27 18:10:54	-->	panicbit (panicbit@moz-5t16ju.dip0.t-ipconnect.de) has joined #rust
2015-05-27 18:10:55	-->	divius (dtantsur@moz-16g.ma8.175.213.IP) has joined #rust
2015-05-27 18:10:59	<--	fabianvf (fabianvf@moz-fjqmui.va.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-27 18:11:05	bur_sangjun	I dread the day, a long time in the future, when someone thought it was sensible to call their "user" variable 👤
2015-05-27 18:11:27	-->	bfrog (tburdick@moz-hde.5e5.136.67.IP) has joined #rust
2015-05-27 18:11:37	mcpherrin	bur_sangjun: I'm a big fan of unicode variables, personally!
2015-05-27 18:11:52	mcpherrin	"Δt" sounds like a great variable name
2015-05-27 18:11:55	<--	pcwalton (pcwalton@moz-l8ebtf.sfo1.mozilla.com) has quit (Client exited)
2015-05-27 18:12:02	mcpherrin	as does unicode emojis :)
2015-05-27 18:12:36	-->	naerbnic (naerbnic@moz-nl3.4ra.239.216.IP) has joined #rust
2015-05-27 18:12:38	bur_sangjun	I use delta time in Δt in my python all the time
2015-05-27 18:12:45	<--	frankmcsherry (frankmcsher@moz-q5151m.dyn.telefonica.de) has left #rust ("Leaving...")
2015-05-27 18:12:58	mcpherrin	I used to write a lot of Racket code, and used unicode all over there
2015-05-27 18:12:59	--	bvssvni is now known as bvssvni_
2015-05-27 18:13:05	<--	grover (grover@moz-2o4.tci.145.198.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 18:13:15	-->	jensnockert (jensnockert@moz-0rd3rj.siw.siwnet.net) has joined #rust
2015-05-27 18:14:26	bur_sangjun	the other one I use a lot is θ for angle calculations
2015-05-27 18:14:58	bur_sangjun	there's something surpsisingly satisifying about your code saying "let θ = 'some long trig function'"
2015-05-27 18:15:08	mcpherrin	things like µΩ for micro ohms or ∑ for the sum over some range
2015-05-27 18:15:17	naerbnic	Are there some docs as to how a method call a.b() is statically resolved?
2015-05-27 18:15:27	bur_sangjun	Ehh, I'd avoid using Ohm like that, I'd use "R"
2015-05-27 18:15:29	naerbnic	I know for example that there can be one (or possibly more) implicit derefs in there
2015-05-27 18:15:32	bur_sangjun	as Ohm is a unit, not a symbol
2015-05-27 18:15:52	-->	fengshaun (fengshaun@moz-oagll1.cpe.pppoe.ca) has joined #rust
2015-05-27 18:15:57	mcpherrin	bur_sangjun: that is true :P
2015-05-27 18:16:01	-->	grover (grover@moz-2o4.tci.145.198.IP) has joined #rust
2015-05-27 18:16:02	<--	essem2 (Thunderbird@moz-0g3v4k.biz.rr.com) has quit (Client exited)
2015-05-27 18:16:09	naerbnic	Are there any other traits which are involved in that resolution?
2015-05-27 18:16:27	@steveklabnik	naerbnic: http://stackoverflow.com/a/28552082/24817 ?
2015-05-27 18:16:31	-->	Rym (y@moz-c2u.sd4.38.217.IP) has joined #rust
2015-05-27 18:17:00	<--	tamird (textual@moz-lje.m54.130.157.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-27 18:17:06	bur_sangjun	if I were to make a (scientific) programming language, I would make units be required, and μ or m or n or any of the other SI prefixes would automaticcaly shift the number.
2015-05-27 18:17:12	-->	south_fish (south_fish@moz-v21.spo.147.217.IP) has joined #rust
2015-05-27 18:17:18	<--	jensnockert (jensnockert@moz-0rd3rj.siw.siwnet.net) has quit (Ping timeout: 121 seconds)
2015-05-27 18:17:26	<--	eric_lagergren (barsonme@moz-lr1hrn.wa.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-27 18:17:44	<--	SneakySnake (nya@moz-i9is4u.pool.telekom.hu) has quit (Connection closed)
2015-05-27 18:17:56	<--	doran (Mibbit@moz-o5eg8b.bredband.comhem.se) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-27 18:18:07	<--	fenster (Mibbit@moz-i7cb3r.fios.verizon.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-27 18:18:22	-->	qwerty_nor (Thunderbird@moz-5ql.sn8.241.50.IP) has joined #rust
2015-05-27 18:18:49	<--	kogg (Mibbit@moz-5ev.5pk.144.213.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-27 18:18:55	-->	bombless (_@moz-ovk.piv.41.59.IP) has joined #rust
2015-05-27 18:19:13	@niconii	bur_sangjun: reminds me a bit of frink: https://futureboy.us/frinkdocs/
2015-05-27 18:19:15	-->	summerlight (summerlight@moz-99k.2mj.130.121.IP) has joined #rust
2015-05-27 18:19:19	<--	ajnirp (uid34286@moz-9vna9c.charlton.irccloud.com) has quit (Quit: Connection closed for inactivity)
2015-05-27 18:19:26	-->	Wild_Cat (Max@moz-fa8mvt.dsl.teksavvy.com) has joined #rust
2015-05-27 18:19:32	<--	o11c (ben@moz-9bd9kh.customer.t3.se) has quit (Connection closed)
2015-05-27 18:19:42	-->	alaska (alaska@moz-8bdjem.fios.verizon.net) has joined #rust
2015-05-27 18:20:01	@niconii	examples here: https://futureboy.us/frinkdocs/#SampleCalculations
2015-05-27 18:20:03	<--	alaska (alaska@moz-8bdjem.fios.verizon.net) has quit (A TLS packet with unexpected length was received.)
2015-05-27 18:20:16	-->	alaska (alaska@moz-8bdjem.fios.verizon.net) has joined #rust
2015-05-27 18:20:22	Gankro	lol I just noticed that 7 of my first 11 PRs to rust were closed >.>;
2015-05-27 18:20:25	<--	godlikesme (godlikesme@moz-2a2.dsd.174.79.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 18:20:31	-->	fabianvf (fabianvf@moz-fjqmui.va.comcast.net) has joined #rust
2015-05-27 18:20:49	bur_sangjun	I asked in #rust-gamedev but nobody has answered, I have a glium instance running, and I'm calculating the delta time, and it seems to be locked at 60fps, it's just a loop{} calling the event loop from glium, does rust limit loop speed by default?
2015-05-27 18:20:56	-->	godlikesme (godlikesme@moz-2a2.dsd.174.79.IP) has joined #rust
2015-05-27 18:21:06	-->	freefall (ff@moz-sepf42.tor-exit.calyxinstitute.org) has joined #rust
2015-05-27 18:21:07	kimundi	bur_sangjun: Are you on linux?
2015-05-27 18:21:13	bur_sangjun	kimundi: yep, arch
2015-05-27 18:21:18	<--	south_fish (south_fish@moz-v21.spo.147.217.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 18:21:36	kimundi	bur_sangjun: Afaik there is in fact a 60 FPS lock somewhere in the driver-xserver-opengl stack
2015-05-27 18:21:52	kimundi	Not sure where exactly it was, but its not Rust specific
2015-05-27 18:22:00	<--	espadrine (tyl@moz-l019mn.fbx.proxad.net) has quit (Ping timeout: 121 seconds)
2015-05-27 18:22:06	bur_sangjun	That's rather annoying, how will I know how much of a performance hit my changes are having if I can't see framerate drop from several billion to a few thousand :(
2015-05-27 18:22:19	kimundi	yeah its annoying
2015-05-27 18:22:19	<--	tomprogrammer (thomas@moz-36geco.tr5r.qept.4dd0.2001.IP) has quit (Connection closed)
2015-05-27 18:22:23	<--	}ls{ (uhelp@moz-5drl8f.dip0.t-ipconnect.de) has quit (Quit: User terminated by real life interrupt)
2015-05-27 18:22:46	bur_sangjun	are there any plans in any of the upstreams to fix that issue?
2015-05-27 18:22:48	-->	loyd (loyd@moz-jsb.32f.108.213.IP) has joined #rust
2015-05-27 18:22:53	bur_sangjun	I can't imagine we are the only people frustrated by that
2015-05-27 18:23:07	-->	pcwalton (pcwalton@moz-l8ebtf.sfo1.mozilla.com) has joined #rust
2015-05-27 18:23:07	--	Mode #rust [+ao pcwalton pcwalton] by ChanServ
2015-05-27 18:23:37	<--	simukis (nagisa@moz-8t068g.static.zebra.lt) has quit (Ping timeout: 121 seconds)
2015-05-27 18:23:44	bombless	Who's the owner of playbot? Can I have one on #rust-zh?
2015-05-27 18:23:55	-->	mkoskar (mkoskar@moz-6lorq0.stud.hig.no) has joined #rust
2015-05-27 18:24:23	bur_sangjun	Is that a chinese rust channel?
2015-05-27 18:24:32	bombless	Hmm I hope so, yes.
2015-05-27 18:24:50	geri	hi does someone use a IDE to develop with rust?
2015-05-27 18:24:51	bur_sangjun	ni shibushi zhongguoren?
2015-05-27 18:24:51	genbattle	I think Havvy is responsible for playbot?
2015-05-27 18:24:52	bombless	It might be a problem of your video card, I guess...
2015-05-27 18:24:56	-->	foo (ctennis@moz-vcpg3c.in.comcast.net) has joined #rust
2015-05-27 18:24:59	Havvy	Not i.
2015-05-27 18:25:05	Havvy	rustbot yes, playbot no.
2015-05-27 18:25:11	genbattle	ah sorry, wrong bot
2015-05-27 18:25:15	<--	ctennis (ctennis@moz-vcpg3c.in.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-27 18:25:43	bombless	http://github.com/bombless Yes I live in China and I speak Chinese.
2015-05-27 18:25:52	bombless	:D
2015-05-27 18:26:12	Havvy	I'm surprised China doesn't censor IRC.
2015-05-27 18:26:32	bur_sangjun	你好，我学习中文
2015-05-27 18:26:32	geri	proxy :)
2015-05-27 18:26:43	bombless	Hmm I think the authority don't know anything about IRC.
2015-05-27 18:26:56	bombless	哈哈，你好
2015-05-27 18:27:03	<--	thiblahute (tsaunier@moz-68f5rr.rev.sfr.net) has quit (Ping timeout: 121 seconds)
2015-05-27 18:27:03	<--	killercup (killercup@moz-723bo4.dip0.t-ipconnect.de) has quit (Quit: Bye)
2015-05-27 18:27:09	bur_sangjun	It's rare I run into chinese people just browsing the internet
2015-05-27 18:27:45	geri	hi does someone use a IDE to develop with rust?
2015-05-27 18:27:52	<--	mcarton (martin@moz-ag64s6.rev.sfr.net) has quit (Ping timeout: 121 seconds)
2015-05-27 18:27:54	bur_sangjun	Does Vim with custom plugins count?
2015-05-27 18:28:36	-->	fkaa (tundmatu@moz-501od2.business.telia.com) has joined #rust
2015-05-27 18:28:47	bombless	Hmm rust-dt (or similar name), visualrust?
2015-05-27 18:29:04	<--	fkaa_ (tundmatu@moz-501od2.business.telia.com) has quit (Ping timeout: 121 seconds)
2015-05-27 18:29:09	<--	pcwalton (pcwalton@moz-l8ebtf.sfo1.mozilla.com) has quit (Ping timeout: 121 seconds)
2015-05-27 18:29:11	geri	https://github.com/RustDT/RustDT ?
2015-05-27 18:29:15	bombless	right
2015-05-27 18:29:20	geri	did you use it?
2015-05-27 18:29:44	bombless	no, I just use Atom to edit the code and compile it on CLI.
2015-05-27 18:29:49	geri	how the parse the rust syntax?
2015-05-27 18:29:55	geri	i see its an eclipse plugin
2015-05-27 18:29:58	bur_sangjun	vim + wting/rust.vim + phildawes/racer.vim
2015-05-27 18:30:00	geri	i refer to RustDT
2015-05-27 18:30:11	-->	w4ffles (textual@moz-34v1r4.res.rr.com) has joined #rust
2015-05-27 18:30:15	bombless	Hmmm I guess they use hand-written parser but I'm not sure.
2015-05-27 18:30:23	bur_sangjun	That's my vim config of choice, plus some extra stuff for style validation and some indenting tweaks
2015-05-27 18:31:08	-->	Porkepix (Porkepix@moz-e1bv2v.rev.sfr.net) has joined #rust
2015-05-27 18:31:23	-->	hhhhhhhh1 (mike@moz-969kuj.cable.virginm.net) has joined #rust
2015-05-27 18:31:32	<--	mayeko (mayeko@moz-ishpc0.ovr0.0mfe.0e35.2a01.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 18:32:37	<--	debuuux (debu@moz-evvnnt.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2015-05-27 18:32:59	geri	bombless: written in java?
2015-05-27 18:33:26	@steveklabnik	bur_sangjun: wting/rust.vim has moved to rust-lang/rust.vim
2015-05-27 18:33:29	@steveklabnik	basically
2015-05-27 18:33:41	frozenfinger	i tried visual rust but it doesn't do much yet, syntax highlighting is worse than sublime. Also couldn't get it to actually compile anything
2015-05-27 18:33:52	-->	kgrandon (Adium@moz-i0u8p7.hfc.comcastbusiness.net) has joined #rust
2015-05-27 18:33:58	Dabo	I know the main choices right now are either a. vim with rust plugins and racer plugin, b. sublime text with rust plugin and racer plugin, c. RustDT - there are others, but those are the 3 I've seen most used
2015-05-27 18:34:02	@steveklabnik	like, wting/rust.vim was a mirror of the version we had in tree, we moved it out of tree
2015-05-27 18:34:22	-->	harrisonclarke (harrisoncla@moz-uur7pt.eastlink.ca) has joined #rust
2015-05-27 18:34:30	-->	arBmind1 (Andreas@moz-l8m231.dyn.telefonica.de) has joined #rust
2015-05-27 18:34:36	bur_sangjun	For the prosterity of the logs, you can remove the linux 60fps log with the following "env vblank_mode=0 ./target/debug/foo"
2015-05-27 18:34:43	geri	RustDT....writing the parse for rust in java is kinda painful... 
2015-05-27 18:34:43	bur_sangjun	*lock
2015-05-27 18:34:44	bombless	geri: I guess so https://github.com/RustDT/RustDT/blob/dd38529f0360cc461f7e5cfba8f18d70f598a918/plugin_tooling/src/com/github/rustdt/tooling/lexer/RustCharacterLexingRule.java
2015-05-27 18:35:06	<--	JustAPerson (JustAPerson@moz-un628q.moe) has quit (Ping timeout: 121 seconds)
2015-05-27 18:35:06	-->	stephan (Mibbit@moz-11ovr8.res.bhn.net) has joined #rust
2015-05-27 18:35:10	<--	samcliu (samcliu@moz-p36.4ra.239.216.IP) has quit (Quit: peaceeeeeee)
2015-05-27 18:35:24	-->	samcliu (samcliu@moz-p36.4ra.239.216.IP) has joined #rust
2015-05-27 18:35:26	-->	gopar (gopar@moz-5039uj.ca.comcast.net) has joined #rust
2015-05-27 18:35:27	<--	stephan (Mibbit@moz-11ovr8.res.bhn.net) has left #rust
2015-05-27 18:35:38	bombless	It's verbose, but I guess that's totally fine for Java programmers.
2015-05-27 18:35:53	<--	bur_sangjun (bur_sangjun@moz-7rlpks.range86-156.btcentralplus.com) has quit (Quit: Leaving)
2015-05-27 18:36:10	<--	nickniko_ (nicknikolov@moz-ko7.r6m.215.90.IP) has quit (Connection closed)
2015-05-27 18:36:11	geri	bombless: thats the lexer
2015-05-27 18:36:17	 *	bombless needs to be more friendly
2015-05-27 18:36:35	<--	arBmind (Andreas@moz-v7ib82.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2015-05-27 18:36:42	geri	bombless: those eclipse plugins are way to much effort to write
2015-05-27 18:36:43	bombless	geri: right but they don't need to generate the whole AST
2015-05-27 18:37:01	<--	judicare (judicare@moz-ghk0g7.io) has quit (Ping timeout: 121 seconds)
2015-05-27 18:37:04	-->	mkpankov` (user@moz-hfh.n6u.23.84.IP) has joined #rust
2015-05-27 18:37:04	geri	bombless: but how they know function arguments?
2015-05-27 18:37:11	-->	coryforsyth (coryforsyth@moz-vuc.imu.162.66.IP) has joined #rust
2015-05-27 18:38:05	-->	judicare (judicare@moz-ghk0g7.io) has joined #rust
2015-05-27 18:38:33	-->	JustAPerson (JustAPerson@moz-un628q.moe) has joined #rust
2015-05-27 18:38:41	<--	andre_ (andre@moz-rnd.3qv.76.201.IP) has quit (Quit: leaving)
2015-05-27 18:38:45	<--	harrisonclarke (harrisoncla@moz-uur7pt.eastlink.ca) has quit (Ping timeout: 121 seconds)
2015-05-27 18:40:09	<--	loyd (loyd@moz-jsb.32f.108.213.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 18:41:06	<--	DoomBoom (DoomBoom@moz-a5b.m4r.89.86.IP) has quit (Quit: Leaving)
2015-05-27 18:41:25	<--	paupau (grrrr@moz-v1f312.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-27 18:42:25	<--	Wilduck (erik@moz-0l3fjb.fios.verizon.net) has quit (Client exited)
2015-05-27 18:42:28	<--	summerlight (summerlight@moz-99k.2mj.130.121.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 18:43:02	-->	Pic (Mibbit@moz-cla0tk.adsl.tpnet.pl) has joined #rust
2015-05-27 18:43:46	<--	fabianvf (fabianvf@moz-fjqmui.va.comcast.net) has quit (Connection closed)
2015-05-27 18:43:49	--	AutomatedTester is now known as AutomatedTester|AFK
2015-05-27 18:44:18	-->	fabianvf (fabianvf@moz-fjqmui.va.comcast.net) has joined #rust
2015-05-27 18:45:14	bombless	geri: It seems that it use racer to parse the source. So I guess there're lots of work to be done there.
2015-05-27 18:45:53	Pic	Hello, sorry for a silly question but how do I divide two u32 and get a f32?
2015-05-27 18:46:04	@huon	Pic: cast to f32
2015-05-27 18:46:07	-->	scoobycoder (scoobycoder@moz-nun.gd0.238.207.IP) has joined #rust
2015-05-27 18:46:08	@huon	x as f32 / y as f32
2015-05-27 18:46:10	futile	x as f32 / y as f32
2015-05-27 18:46:13	futile	>.>
2015-05-27 18:46:17	@huon	:D
2015-05-27 18:46:23	futile	are both casts necessary by the way?
2015-05-27 18:46:28	Pic	Oh, thanks a lot :D
2015-05-27 18:46:46	<--	JustAPerson (JustAPerson@moz-un628q.moe) has quit (Ping timeout: 121 seconds)
2015-05-27 18:46:59	geri	bombless: what is racer?
2015-05-27 18:47:05	@huon	futile: yes
2015-05-27 18:47:06	<--	kmicu (kmicu@moz-uga.edn.218.91.IP) has quit (Client exited)
2015-05-27 18:47:23	bombless	geri: https://github.com/phildawes/racer
2015-05-27 18:47:29	futile	playbot: 5f32 / 3u32
2015-05-27 18:47:31	--	Notice(playbot): <anon>:9:9: 9:20 error: the trait `core::ops::Div<u32>` is not implemented for the type `f32` [E0277]
2015-05-27 18:47:31	--	Notice(playbot): <anon>:9         5f32 / 3u32
2015-05-27 18:47:31	--	Notice(playbot): output truncated; full output at: http://bit.ly/1Qb2z9K
2015-05-27 18:47:38	futile	I see
2015-05-27 18:47:39	<--	toshok (toshok@moz-vle008.cat) has quit (Ping timeout: 121 seconds)
2015-05-27 18:48:00	<--	commie (quassel@moz-1fm.0p2.50.198.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 18:48:17	<--	spider-mario (spidermario@moz-meu9c6.wb.wifirst.net) has quit (Ping timeout: 121 seconds)
2015-05-27 18:48:20	<--	fabianvf (fabianvf@moz-fjqmui.va.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-27 18:48:29	-->	fabianvf (fabianvf@moz-fjqmui.va.comcast.net) has joined #rust
2015-05-27 18:48:49	<--	larhat (Adium@moz-vlo5br.cable.virginm.net) has quit (Quit: Leaving.)
2015-05-27 18:48:54	geri	bombless: so thats the parser which is written by hand?
2015-05-27 18:49:02	-->	mindtree (Mitch@moz-eo0q0a.iprimus.net.au) has joined #rust
2015-05-27 18:49:38	<--	playbot (playbot@moz-1vk5qd.compute.amazonaws.com) has quit (Connection closed)
2015-05-27 18:49:38	<--	playbot-mini (playbot-min@moz-1vk5qd.compute.amazonaws.com) has quit (Connection closed)
2015-05-27 18:49:40	-->	playbot-mini (playbot-min@moz-1vk5qd.compute.amazonaws.com) has joined #rust
2015-05-27 18:49:40	-->	playbot (playbot@moz-1vk5qd.compute.amazonaws.com) has joined #rust
2015-05-27 18:49:41	<--	judicare (judicare@moz-ghk0g7.io) has quit (Ping timeout: 121 seconds)
2015-05-27 18:49:46	<--	maraoz (maraoz@moz-8b6h6p.itba.edu.ar) has quit (Ping timeout: 121 seconds)
2015-05-27 18:49:47	bombless	geri: It use the result of rustc if I understand correctly.
2015-05-27 18:49:51	<--	fabianvf (fabianvf@moz-fjqmui.va.comcast.net) has quit (Connection closed)
2015-05-27 18:49:58	bombless	s/of/from
2015-05-27 18:50:01	-->	jdpage (jdpage@moz-3crs7j.res.rr.com) has joined #rust
2015-05-27 18:50:27	<--	Douman (Douman@moz-vgcd85.dynamic.mts-nn.ru) has quit (Quit: )
2015-05-27 18:50:35	geri	bombless: what is the result? llvm code?
2015-05-27 18:51:11	bombless	geri: Something from rustc_private
2015-05-27 18:51:17	@steveklabnik	libsyntax
2015-05-27 18:51:18	geri	hu?
2015-05-27 18:51:18	@steveklabnik	i think
2015-05-27 18:51:21	thelink2012	<anon>:5:21: 5:23 ?31merror: ?B?m?1mexpected one of `:`, `where`, or `{`, found `->`?B?m
2015-05-27 18:51:24	thelink2012	lol what the hell
2015-05-27 18:51:27	-->	judicare (judicare@moz-0gljna.n3ik.opad.5300.2607.IP) has joined #rust
2015-05-27 18:51:31	-->	dmac_ (dmac@moz-moa.puk.8.50.IP) has joined #rust
2015-05-27 18:51:46	-->	armpitpuncher (Mibbit@moz-g465nu.snantx.sbcglobal.net) has joined #rust
2015-05-27 18:51:48	jdpage	So I'm confused about how to get an iterator from a Vec<T>. What's the difference between iter() and into_iter(), which should I call, and why?
2015-05-27 18:52:04	@steveklabnik	jdpage: so there are three basic options
2015-05-27 18:52:10	@steveklabnik	iter, into_iter, and iter_Mut
2015-05-27 18:52:11	geri	libsyntax is a library for parsing?
2015-05-27 18:52:11	@steveklabnik	mut
2015-05-27 18:52:18	@steveklabnik	geri: it's rust's internal parsing stuff, yeah
2015-05-27 18:52:23	geri	ok
2015-05-27 18:52:25	@steveklabnik	jdpage: the difference is in the type each returns
2015-05-27 18:52:36	@steveklabnik	iter -> &T, into_iter -> T, iter_mut -> &mut T
2015-05-27 18:52:49	@steveklabnik	which one you should call depends on what you're doing. iter() is probably the most common
2015-05-27 18:52:50	geri	steveklabnik: so that they can copy past the parser?
2015-05-27 18:52:59	@steveklabnik	geri: well, not copy paste, but use it
2015-05-27 18:53:02	<--	rudolph (rudolph@moz-22qlvh.o3k5.dsq9.010d.2620.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-27 18:53:04	<--	kgrandon (Adium@moz-i0u8p7.hfc.comcastbusiness.net) has quit (Quit: Leaving.)
2015-05-27 18:53:15	<--	mindtree (Mitch@moz-eo0q0a.iprimus.net.au) has quit (Ping timeout: 121 seconds)
2015-05-27 18:53:15	jdpage	steveklabnik: Okay, that makes sense. Thanks very much!
2015-05-27 18:53:20	-->	rudolph (rudolph@moz-7fg.0cr.201.199.IP) has joined #rust
2015-05-27 18:53:30	geri	steveklabnik: ok
2015-05-27 18:54:01	@steveklabnik	any time :)
2015-05-27 18:54:13	-->	swgillespie (swgillespie@moz-1i5.3un.220.167.IP) has joined #rust
2015-05-27 18:54:29	geri	steveklabnik: not busy with coding? you hang out here a lot ^^
2015-05-27 18:54:51	-->	Guest__ (textual@moz-rtn.fg7.77.192.IP) has joined #rust
2015-05-27 18:54:53	-->	njn (chatzilla@moz-e6r6of.iinet.net.au) has joined #rust
2015-05-27 18:54:56	@steveklabnik	well i already opened seven pull requests today :p
2015-05-27 18:55:02	@steveklabnik	also, i'm at JSConf right now
2015-05-27 18:55:12	geri	presenting rust?
2015-05-27 18:55:15	@steveklabnik	... but i'm awlways around a lot, in general
2015-05-27 18:55:28	@steveklabnik	i'm not, my girlfriend is giving a talk
2015-05-27 18:55:41	@steveklabnik	talking to people about it a lot though
2015-05-27 18:55:48	@steveklabnik	many Node people are interested in checking out rust
2015-05-27 18:55:48	geri	are you allowed to go to golang conference and give a talk? ^^
2015-05-27 18:56:07	<--	flugsio (flugsio@moz-283uu4.tbcn.telia.com) has quit (Quit: WeeChat 1.2)
2015-05-27 18:56:12	<--	scoobycoder (scoobycoder@moz-nun.gd0.238.207.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 18:56:12	@steveklabnik	they probably wouldn't want to have me :)
2015-05-27 18:56:17	@steveklabnik	if they did i would
2015-05-27 18:56:21	<--	rudolph (rudolph@moz-7fg.0cr.201.199.IP) has quit (Quit: Leaving...)
2015-05-27 18:56:22	geri	be nice to them ^^
2015-05-27 18:56:44	<--	lu324 (lu324___@moz-3v8ljg.dhcp.embarqhsd.net) has quit (Ping timeout: 121 seconds)
2015-05-27 18:56:48	dfockler	Using Rust FFI calls in Go ;)
2015-05-27 18:56:51	geri	steveklabnik: http://www.gophercon.com/
2015-05-27 18:57:01	-->	lu324 (lu324___@moz-3v8ljg.dhcp.embarqhsd.net) has joined #rust
2015-05-27 18:57:09	-->	cwraith (c_wraith@moz-7i8.v6v.191.131.IP) has joined #rust
2015-05-27 18:57:15	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-27 18:57:27	thelink2012	aw why does this work? http://is.gd/6q2Ncp i.e. the main module knows about my trait impl in mymod (even though I don't even use it). Is there a way to let a trait impl be private to a module (but the module needs to be public since it'll be exposed as a library)?
2015-05-27 18:57:37	-->	pgonda (peter@moz-s36.0tp.134.75.IP) has joined #rust
2015-05-27 18:57:58	thelink2012	^ ah, removing pub from mymod doesn't change the result of the compilation, still compiles
2015-05-27 18:58:26	-->	turtil_ (turtil@moz-gfc.es4.23.103.IP) has joined #rust
2015-05-27 18:58:28	<--	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-27 18:58:34	@steveklabnik	thelink2012: impls can't be private, no
2015-05-27 18:58:48	<--	turtil (turtil@moz-gfc.es4.23.103.IP) has quit (Connection closed)
2015-05-27 18:58:52	-->	Wilduck (erik@moz-cvs.3it.33.129.IP) has joined #rust
2015-05-27 19:00:04	<--	c_wraith (c_wraith@moz-7i8.v6v.191.131.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 19:02:52	<--	errordeveloper (ilya@moz-41f.3sd.204.90.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 19:03:10	Soni	what does a Rustic parser look like?
2015-05-27 19:03:30	Soni	(what does a parser written in Rust for Rust using Rustisms look like?)
2015-05-27 19:04:12	reem	it highly depends on the thing you are parsing, usually they take a &[u8] or an &str and return a struct with pointers into that buf
2015-05-27 19:04:33	Soni	a Lua parser
2015-05-27 19:04:37	<--	dfockler (dfockler@moz-etoj16.hfc.comcastbusiness.net) has quit (Connection closed)
2015-05-27 19:04:46	-->	spider-mario (spidermario@moz-meu9c6.wb.wifirst.net) has joined #rust
2015-05-27 19:04:50	Soni	how would you parse Lua with Rust?
2015-05-27 19:05:12	Soni	lots of muts?
2015-05-27 19:05:26	<--	Guest__ (textual@moz-rtn.fg7.77.192.IP) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-27 19:06:57	&mbrubeck	Soni: Looks like Lua has a reasonable formal grammar, so you it should be easy to parse using something like nom or rust-peg.
2015-05-27 19:07:33	&mbrubeck	Soni: You might be interested in https://github.com/kmcallister/html5ever or https://github.com/servo/rust-cssparser for examples of parsing languages with more complicated rules...
2015-05-27 19:07:34	-->	JustAPerson (JustAPerson@moz-un628q.moe) has joined #rust
2015-05-27 19:07:36	<--	Pic (Mibbit@moz-cla0tk.adsl.tpnet.pl) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-27 19:07:42	-->	dinfuehr (dinfuehr@moz-uocjue.highway.telekom.at) has joined #rust
2015-05-27 19:07:53	SpaceManiac	Is there a way to tell Cargo to color its output even when it thinks it shouldn't?
2015-05-27 19:07:57	-->	o11c (ben@moz-9bd9kh.customer.t3.se) has joined #rust
2015-05-27 19:07:59	-->	coryforsyth_ (coryforsyth@moz-vuc.imu.162.66.IP) has joined #rust
2015-05-27 19:08:14	<--	futile (felix@moz-cmcd12.unity-media.net) has quit (Quit: WeeChat 1.2-rc1)
2015-05-27 19:08:22	@huon	SpaceManiac: --color=always doesn't work?
2015-05-27 19:08:36	SpaceManiac	Unknown flag: '--color'
2015-05-27 19:08:38	<--	jedireza (jedireza@moz-ungcc1.dsl.ovh.fr) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-27 19:08:51	@huon	sounds like the answer is no :(
2015-05-27 19:09:28	<--	coryforsyth (coryforsyth@moz-vuc.imu.162.66.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 19:09:28	--	coryforsyth_ is now known as coryforsyth
2015-05-27 19:09:59	<--	pgonda (peter@moz-s36.0tp.134.75.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 19:10:25	Soni	mbrubeck, is rust-peg macro based? (i.e. does the compiler optimize it all away?)
2015-05-27 19:10:32	<--	arBmind1 (Andreas@moz-l8m231.dyn.telefonica.de) has quit (Quit: Leaving.)
2015-05-27 19:10:40	<--	frecel (quassel@moz-qme.p1t.254.162.IP) has quit (Connection closed)
2015-05-27 19:11:30	<--	cholcombe (chris@moz-mtfab9.or.comcast.net) has quit (A TLS packet with unexpected length was received.)
2015-05-27 19:11:49	&mbrubeck	Soni: It generates code at compile time, but I don't know exactly what the generated code looks like...
2015-05-27 19:11:57	SpaceManiac	I guess it's a Windows problem anyways; rustc automatically knows to color
2015-05-27 19:12:26	<--	mdup (cc@moz-6fgo9p.abo.wanadoo.fr) has quit (Ping timeout: 121 seconds)
2015-05-27 19:12:33	<--	armpitpuncher (Mibbit@moz-g465nu.snantx.sbcglobal.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-27 19:12:50	-->	scoobycoder (scoobycoder@moz-nun.gd0.238.207.IP) has joined #rust
2015-05-27 19:13:05	<--	Astrum|Lap (Astrum|Lap@moz-7enfbr.co.comcast.net) has quit (Client exited)
2015-05-27 19:13:13	&mbrubeck	Soni: I guess rust-peg is self-hosting and you can look at its own parser to see an example of its generated code. https://github.com/kevinmehall/rust-peg/blob/master/src/grammar.rs
2015-05-27 19:13:14	<--	eibwen (eibwen@moz-mvc8eh.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2015-05-27 19:13:21	bombless	SpaceManiac: Hmm are you using MSYS2 shell?
2015-05-27 19:13:35	SpaceManiac	I am (but with a nonstandard configuration on top of that)
2015-05-27 19:13:43	mystor	Why is this trait implementation conflicting? http://is.gd/4ifk1b
2015-05-27 19:13:54	bombless	then you might want to use cmd.exe instead
2015-05-27 19:14:11	<--	ixti (ixti@moz-i3d.dae.119.188.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 19:14:14	SpaceManiac	I'll just live without color
2015-05-27 19:14:19	&mbrubeck	mystor: I think because Vec could theoretically impl Copy in the future.
2015-05-27 19:14:22	&mbrubeck	?
2015-05-27 19:14:30	mystor	mbrubeck: Maybe? Seems weird to me
2015-05-27 19:14:46	mystor	mbrubeck: I don’t think Vec could ever impl Copy, as it could contain values which are non-copy
2015-05-27 19:14:53	SpaceManiac	fwiw, cmd.exe does not help with color
2015-05-27 19:15:06	Soni	mbrubeck, say I wanna make a Lua parser without PEG
2015-05-27 19:15:15	<--	dinfuehr (dinfuehr@moz-uocjue.highway.telekom.at) has quit (Connection closed)
2015-05-27 19:15:28	SpaceManiac	hey, playpen has color now though, neat.
2015-05-27 19:15:43	mystor	mbrubeck: Also, it needs to manage contained data :/
2015-05-27 19:16:11	-->	paupau (grrrr@moz-35edek.ca.comcast.net) has joined #rust
2015-05-27 19:16:12	-->	pgonda (peter@moz-s36.0tp.134.75.IP) has joined #rust
2015-05-27 19:16:22	bombless	It should print color on MSYS2, that's something will finally be fixed I guess... but I need to invest more to see what needs to be done...
2015-05-27 19:16:33	<--	geri (Mibbit@moz-jniv8c.highway.telekom.at) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-27 19:16:41	--	kimundi is now known as zz_kimundi
2015-05-27 19:17:02	-->	willianveiga (yaaic@moz-h11.t5j.0.177.IP) has joined #rust
2015-05-27 19:17:02	jethrogb	how do I make a factory that returns a trait object?
2015-05-27 19:17:06	jethrogb	e.g. http://is.gd/tsmRee
2015-05-27 19:17:07	-->	mayeko (mayeko@moz-b1l19u.ovr0.0mfe.0e35.2a01.IP) has joined #rust
2015-05-27 19:17:13	@huon	mystor: the compiler doesn't reason about Copy in detail like that, I guess
2015-05-27 19:17:22	&mbrubeck	mystor: Yeah, I don't mean that Vec<T> might actually change to impl Copy... just that the compiler doesn't know enough to statically guarantee that it can't happen.
2015-05-27 19:17:30	mystor	huon: So it’s baccompat to make something copy?
2015-05-27 19:17:31	Dabo	mystor, because rust doesn't have any special cases for types like Vec not being (or ever being) Copy - allowing that would make it a breaking change to implement Copy for some type
2015-05-27 19:17:42	Dabo	mystor, yes, implementing a type is backwards compatible
2015-05-27 19:17:49	Dabo	s/type/trait/
2015-05-27 19:18:01	SpaceManiac	jethrogb: you probably want something like http://is.gd/il1wEN
2015-05-27 19:18:02	mystor	Dabo: Ah - and copy isn’t special cased at all :-/
2015-05-27 19:18:06	mystor	ok
2015-05-27 19:18:07	Dabo	Copy is just a special trait which the compiler recognizes - in terms of the type system it is exactly like any other trait
2015-05-27 19:18:20	mystor	Dabo: That’s midly inconvenient
2015-05-27 19:18:27	Dabo	mystor, yeah, it's only special in that the compiler uses it
2015-05-27 19:18:38	<--	kngl (Adium@moz-rmgnkh.dynamic.voo.be) has quit (Quit: Leaving.)
2015-05-27 19:18:46	Dabo	yeah, but I think it's better not to have anything like that special cased, it would be a lot more confusing that way
2015-05-27 19:18:57	mystor	Dabo: No - I totally understand that
2015-05-27 19:19:02	Dabo	yeah
2015-05-27 19:19:09	-->	errordeveloper (ilya@moz-41f.3sd.204.90.IP) has joined #rust
2015-05-27 19:19:13	mystor	I didn’t realize that adding a new trait was intended to be backcompat
2015-05-27 19:19:16	<--	hroi (hroi@moz-d273ub.static.netgroup.dk) has quit (Ping timeout: 121 seconds)
2015-05-27 19:19:33	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Connection closed)
2015-05-27 19:19:54	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-27 19:20:37	bfrog	is there a zero copy serialization library for rust?
2015-05-27 19:20:40	<--	fkaa (tundmatu@moz-501od2.business.telia.com) has quit (Ping timeout: 121 seconds)
2015-05-27 19:21:01	bfrog	so serialize/deserialize structs directly from/to a &[u8]
2015-05-27 19:21:27	bfrog	if not possible with a &[u8] maybe with a *u8?
2015-05-27 19:21:33	-->	toshok (toshok@moz-vle008.cat) has joined #rust
2015-05-27 19:21:48	jethrogb	SpaceManiac: why doesn't this work? http://is.gd/oTSc8V
2015-05-27 19:21:56	&mbrubeck	bfrog: https://github.com/Geal/nom
2015-05-27 19:22:13	-->	tamird (textual@moz-gg3hct.res.rr.com) has joined #rust
2015-05-27 19:22:28	<--	pgonda (peter@moz-s36.0tp.134.75.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 19:22:38	SpaceManiac	jethrogb: the signature `fn make_foo<T: Foo>() -> Box<T>` promises that make_foo will be able to return a Box<T> for whatever type T: Foo the user desires, not that it will return *some* Foo
2015-05-27 19:22:48	&mbrubeck	bfrog: There's also ongoing work to make html5ever zero-copy
2015-05-27 19:23:56	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Ping timeout: 121 seconds)
2015-05-27 19:24:14	-->	santiago (santiago@moz-8th.j2e.167.12.IP) has joined #rust
2015-05-27 19:24:17	bfrog	I don't see how this help directly
2015-05-27 19:24:26	bfrog	s/help/helps
2015-05-27 19:24:30	<--	gsingh93 (gulshan@moz-ln1ktu.st3l.iv8o.0004.2601.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 19:24:51	&mbrubeck	bfrog: Ah, you want something more along the lines of rustc-serialize or serde, I guess?
2015-05-27 19:24:57	bfrog	I'm not looking to make a parser necessarily, I'm looking to back struct's with mmap'ed memory pages ideally
2015-05-27 19:25:09	-->	krdln (krdln@moz-gpo.ioe.219.81.IP) has joined #rust
2015-05-27 19:25:20	jethrogb	SpaceManiac: I see, thanks
2015-05-27 19:25:30	<--	mjboa (mike@moz-gfdglf.hsi06.unitymediagroup.de) has quit (Quit: leaving)
2015-05-27 19:25:35	bfrog	I guess really what I want is my own allocator for some types I want to create
2015-05-27 19:25:46	&mbrubeck	Sorry, I was still stuck on the parsing topic from earlier. :P
2015-05-27 19:25:47	bfrog	and being able to do what I'd do in C
2015-05-27 19:25:56	-->	pgonda (peter@moz-s36.0tp.134.75.IP) has joined #rust
2015-05-27 19:25:58	<--	vosen (vosen@moz-mtm1g4.dynamic.chello.pl) has quit (Connection closed)
2015-05-27 19:25:59	mystor	huon Dabo mbrubeck: Is there any way to override the thing for copy? I really wanted to take advantage of the built-in status of copy.
2015-05-27 19:26:06	eddyb	bfrog: hmm
2015-05-27 19:26:07	bfrog	void* stuff = mmap(...)
2015-05-27 19:26:18	bombless	jethrogb: not sure if this is what you want http://is.gd/GjebVt
2015-05-27 19:26:24	eddyb	bfrog: I believe Capn' Proto does that
2015-05-27 19:26:25	bfrog	struct mytype* mything = stuff[someoffset]
2015-05-27 19:26:52	bfrog	with some magic before just casting pointers maybe to validate
2015-05-27 19:27:03	bfrog	I'll take a look at capnproto
2015-05-27 19:27:05	<--	toshok (toshok@moz-vle008.cat) has quit (Ping timeout: 121 seconds)
2015-05-27 19:27:14	&mbrubeck	mystor: One option is a newtype wrapper. http://is.gd/rstrMz
2015-05-27 19:27:57	mystor	mbrubeck: Yeah - unfortunately that doesn’t work for me :(
2015-05-27 19:28:04	mystor	ohwell
2015-05-27 19:28:28	mystor	I’ll just look into compiler magic I guess :P
2015-05-27 19:28:31	mystor	woo plugins!
2015-05-27 19:28:38	<--	ajhager (aajhager@moz-mcdsgi.iplsin.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-27 19:28:42	bfrog	it sounds like capnproto does what I want
2015-05-27 19:28:54	&mbrubeck	mystor: Discussion of long-term solutions to this: https://github.com/rust-lang/rfcs/issues/1053
2015-05-27 19:29:33	-->	harrisonclarke (harrisoncla@moz-uur7pt.eastlink.ca) has joined #rust
2015-05-27 19:29:39	-->	toshok (toshok@moz-vle008.cat) has joined #rust
2015-05-27 19:30:35	<--	krzysz00 (krzys@moz-3ultad.fios.verizon.net) has left #rust
2015-05-27 19:30:44	jethrogb	bombless: that's great
2015-05-27 19:31:40	<--	mayeko (mayeko@moz-b1l19u.ovr0.0mfe.0e35.2a01.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 19:32:53	--	irc: disconnected from server
2015-05-27 19:33:04	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-27 19:33:04	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-27 19:33:04	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-27 19:33:04	--	Channel #rust: 987 nicks (14 ops, 0 halfops, 1 voice, 972 normals)
2015-05-27 19:33:04	-->	lu324 (lu324___@moz-3v8ljg.dhcp.embarqhsd.net) has joined #rust
2015-05-27 19:33:05	-->	mib_hews3c (Mibbit@moz-g0i02j.dsl.telepac.pt) has joined #rust
2015-05-27 19:33:06	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-27 19:33:18	<--	aepsil0n (eduard@moz-6491ha.mv2h.pepi.8071.2a02.IP) has quit (Connection closed)
2015-05-27 19:33:57	<--	Nextra (Nextra@moz-b7lf2j.ewe-ip-backbone.de) has quit (Connection closed)
2015-05-27 19:34:07	--	irc: disconnected from server
2015-05-27 19:34:18	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-27 19:34:18	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-27 19:34:18	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-27 19:34:18	--	Channel #rust: 987 nicks (14 ops, 0 halfops, 1 voice, 972 normals)
2015-05-27 19:34:20	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-27 19:34:25	-->	partkyle (partkyle@moz-e8m.r65.206.12.IP) has joined #rust
2015-05-27 19:34:46	<--	nham (nham@moz-lglsfe.il.comcast.net) has quit (Quit: leaving)
2015-05-27 19:35:58	mib_hews3c	Hello! I have a struct with field that contains an array. I want to create a method that returns a new struct but with an array of slightly different values, something like this: https://bpaste.net/show/98bd0b5a8181 I can't do this, as the array is borrowed in this context. I thought I could use .clone(), but arrays don't have this method (I think).
2015-05-27 19:36:08	mib_hews3c	What's the recommended way to do this?
2015-05-27 19:36:17	<--	FrozenCow (FrozenCow@moz-i2tvv4.chello.nl) has quit (Connection closed)
2015-05-27 19:37:02	locks	can I `brew install rust` or should I use the installer from the website?
2015-05-27 19:37:06	<--	toshok (toshok@moz-vle008.cat) has quit (Ping timeout: 121 seconds)
2015-05-27 19:37:21	<--	coryforsyth (coryforsyth@moz-vuc.imu.162.66.IP) has quit (Client exited)
2015-05-27 19:37:39	-->	tristanseifert (tristanseif@moz-r0t7ns.res.rr.com) has joined #rust
2015-05-27 19:37:51	XMPPwocky	mib_hews3c: derive Clone on Cell?
2015-05-27 19:37:55	-->	eric_lagergren (barsonme@moz-e0h.6s0.39.134.IP) has joined #rust
2015-05-27 19:38:01	mystor	mbrubeck: So - my problem is pretty much that Copy isn’t #[fundamental]?
2015-05-27 19:38:18	mystor	and that negative trait impls are not in the language for backcompat reasons 
2015-05-27 19:38:39	-->	toshok (toshok@moz-vle008.cat) has joined #rust
2015-05-27 19:39:31	mib_hews3c	Oh! So if the datatype the array contains has .clone(), I can clone the array?
2015-05-27 19:40:00	&mbrubeck	mystor: Yeah... and that we don't have any general method of impl specialization.
2015-05-27 19:40:12	mib_hews3c	My unit tests are passing, so I guess so!
2015-05-27 19:40:18	mystor	mbrubeck: Yeah - interesting
2015-05-27 19:40:38	mib_hews3c	Thank you again XMPPwocky, you're most excellent.
2015-05-27 19:40:55	XMPPwocky	mib_hews3c: np
2015-05-27 19:41:03	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-27 19:41:21	XMPPwocky	also, i might suggest renaming that Cell type, because people might think you mean std::cell::Cell
2015-05-27 19:41:45	mib_hews3c	I didn't know that was a thing. OK, cool, thank you.
2015-05-27 19:42:26	-->	gandalf (zbraniecki@moz-u3dg2t.sfo1.mozilla.com) has joined #rust
2015-05-27 19:43:20	jethrogb	what's the "class method" pattern in rust?
2015-05-27 19:43:38	jethrogb	just a function in the same module?
2015-05-27 19:43:51	-->	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has joined #rust
2015-05-27 19:44:00	-->	OmniMancer (omnimancer@moz-enu.lgm.149.118.IP) has joined #rust
2015-05-27 19:44:07	<--	mkpankov` (user@moz-hfh.n6u.23.84.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 19:44:37	OmniMancer	Is there a specific reason why Clone cannot fail?
2015-05-27 19:44:38	<--	ahihi (ahihi@moz-dugl25.bb.dnainternet.fi) has quit (Connection closed)
2015-05-27 19:44:54	-->	hjr3 (hradtke@moz-lei.av4.169.69.IP) has joined #rust
2015-05-27 19:45:22	jethrogb	nevermind, associated function
2015-05-27 19:45:25	XMPPwocky	OmniMancer: as in, why not return option/result?
2015-05-27 19:46:41	<--	jdpage (jdpage@moz-3crs7j.res.rr.com) has quit (Connection closed)
2015-05-27 19:46:44	<--	hjr3 (hradtke@moz-lei.av4.169.69.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2015-05-27 19:46:44	<--	john (john@moz-3qeeob.static.qwest.net) has quit (Ping timeout: 121 seconds)
2015-05-27 19:47:01	-->	nodweber (nodweber@moz-knt.fgq.178.5.IP) has joined #rust
2015-05-27 19:47:08	-->	Kurufu (Kurufu@moz-pvv8b5.res.rr.com) has joined #rust
2015-05-27 19:48:06	<--	mib_hews3c (Mibbit@moz-g0i02j.dsl.telepac.pt) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-27 19:48:13	-->	ahihi (ahihi@moz-dugl25.bb.dnainternet.fi) has joined #rust
2015-05-27 19:48:27	-->	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has joined #rust
2015-05-27 19:49:20	Kurufu	So im running into this error http://pastebin.com/aA0sUsJs which seems awfully similar to this one that was fixed a while back https://github.com/tomassedovic/tcod-rs/issues/52 is this actually just still broken or did I pass my function pointer incorrectly?
2015-05-27 19:49:51	-->	mindtree (Mitch@moz-eo0q0a.iprimus.net.au) has joined #rust
2015-05-27 19:50:02	Kurufu	oh rofl
2015-05-27 19:50:14	Kurufu	that bug is not in rust, that is a completely different lib. Let me find the rust bug report.
2015-05-27 19:50:17	-->	Guest__ (textual@moz-rtn.fg7.77.192.IP) has joined #rust
2015-05-27 19:50:35	Kurufu	https://github.com/rust-lang/rust/issues/20178 this issue is what it seems similar to.
2015-05-27 19:50:57	<--	mgottschlag (quassel@moz-8uvcc8.hsi15.kabel-badenwuerttemberg.de) has quit (Ping timeout: 121 seconds)
2015-05-27 19:51:25	-->	pcwalton (pcwalton@moz-l8ebtf.sfo1.mozilla.com) has joined #rust
2015-05-27 19:51:25	--	Mode #rust [+ao pcwalton pcwalton] by ChanServ
2015-05-27 19:51:39	-->	mgottschlag (quassel@moz-jofqrs.scc.kit.edu) has joined #rust
2015-05-27 19:52:55	<--	fengshaun (fengshaun@moz-oagll1.cpe.pppoe.ca) has quit (Ping timeout: 121 seconds)
2015-05-27 19:52:55	<--	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-27 19:53:07	-->	lenstr (lenstr@moz-rrh.vju.25.171.IP) has joined #rust
2015-05-27 19:53:47	<--	panicbit (panicbit@moz-5t16ju.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2015-05-27 19:53:57	<--	colinsurprenant (colin@moz-rmn4e2.169.electronicbox.net) has quit (Client exited)
2015-05-27 19:54:07	<--	mindtree (Mitch@moz-eo0q0a.iprimus.net.au) has quit (Ping timeout: 121 seconds)
2015-05-27 19:56:10	-->	DerisiveLogic (smuxi@moz-g93io6.res.rr.com) has joined #rust
2015-05-27 19:56:30	-->	phore (phore@moz-p8hanb.cable.rogers.com) has joined #rust
2015-05-27 19:56:34	<--	VShell (Shell@moz-hh5bpk.hackr.org.uk) has quit (A TLS packet with unexpected length was received.)
2015-05-27 19:57:09	-->	hjr3 (hradtke@moz-lei.av4.169.69.IP) has joined #rust
2015-05-27 19:57:22	-->	VShell (Shell@moz-hh5bpk.hackr.org.uk) has joined #rust
2015-05-27 19:57:41	<--	bytewise (bytewise@moz-mkh5h4.hsi16.unitymediagroup.de) has quit (Quit: Quit)
2015-05-27 19:57:57	<--	paupau (grrrr@moz-35edek.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-27 19:57:59	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Connection closed)
2015-05-27 19:58:20	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-27 19:58:24	<--	hjr3 (hradtke@moz-lei.av4.169.69.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2015-05-27 19:58:42	-->	rbranson (rbranson@moz-ao5.9o0.201.199.IP) has joined #rust
2015-05-27 19:59:29	<--	willianveiga (yaaic@moz-h11.t5j.0.177.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 20:01:57	<--	pgonda (peter@moz-s36.0tp.134.75.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 20:01:57	<--	alaska (alaska@moz-8bdjem.fios.verizon.net) has quit (Connection closed)
2015-05-27 20:02:03	-->	wohiler (wohiler@moz-8id.6e1.62.133.IP) has joined #rust
2015-05-27 20:02:21	-->	alaska (alaska@moz-8bdjem.fios.verizon.net) has joined #rust
2015-05-27 20:02:22	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Ping timeout: 121 seconds)
2015-05-27 20:02:25	<--	Guest__ (textual@moz-rtn.fg7.77.192.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 20:02:41	-->	rmdashrf (rmdashrf@moz-ecr.kjm.54.128.IP) has joined #rust
2015-05-27 20:04:18	-->	willianveiga (yaaic@moz-oas.lsi.101.200.IP) has joined #rust
2015-05-27 20:05:04	<--	asQuirreL (asQuirreL@moz-ro1qqu.ox.ac.uk) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-27 20:05:58	-->	fabianvf (fabianvf@moz-fjqmui.va.comcast.net) has joined #rust
2015-05-27 20:07:33	-->	ajhager (aajhager@moz-mcdsgi.iplsin.sbcglobal.net) has joined #rust
2015-05-27 20:08:36	-->	copycat (Thunderbird@moz-dpm.8hc.223.111.IP) has joined #rust
2015-05-27 20:09:39	<--	lucian (lucian@moz-2c3pda.cable.virginm.net) has quit (A TLS packet with unexpected length was received.)
2015-05-27 20:09:44	-->	pgonda (peter@moz-s36.0tp.134.75.IP) has joined #rust
2015-05-27 20:10:03	-->	lucian (lucian@moz-2c3pda.cable.virginm.net) has joined #rust
2015-05-27 20:10:06	-->	coryforsyth (coryforsyth@moz-hpsim2.fios.verizon.net) has joined #rust
2015-05-27 20:10:41	<--	mgottschlag (quassel@moz-jofqrs.scc.kit.edu) has quit (Ping timeout: 121 seconds)
2015-05-27 20:10:56	<--	Gabriel_7 (Gabriel@moz-1bu1la.mtgr.92aj.0e35.2a01.IP) has quit (Connection closed)
2015-05-27 20:11:16	<--	davebettin (davebettin@moz-hde.5e5.136.67.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 20:13:55	-->	dirvine (dirvine@moz-42j0at.cable.virginm.net) has joined #rust
2015-05-27 20:14:05	<--	lucian (lucian@moz-2c3pda.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2015-05-27 20:15:00	<--	Wilduck (erik@moz-cvs.3it.33.129.IP) has quit (Client exited)
2015-05-27 20:15:13	<--	wolfviking0 (wolfviking0@moz-8hd.3b6.246.162.IP) has left #rust
2015-05-27 20:16:02	-->	maraoz (maraoz@moz-k72c1e.fibertel.com.ar) has joined #rust
2015-05-27 20:19:18	-->	panicbit (panicbit@moz-trnuar.dip0.t-ipconnect.de) has joined #rust
2015-05-27 20:19:21	-->	aatch (james@moz-8r6eer.orns.ubhm.e000.2406.IP) has joined #rust
2015-05-27 20:19:44	aji	is there any replacement for the stability attributes?
2015-05-27 20:20:18	--	irc: disconnected from server
2015-05-27 20:20:29	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-27 20:20:29	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-27 20:20:29	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-27 20:20:29	--	Channel #rust: 991 nicks (15 ops, 0 halfops, 1 voice, 975 normals)
2015-05-27 20:20:31	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-27 20:22:08	Kurufu	http://pastebin.com/X2gMMBXe any clue how I might resolve this issue? I'm a bit lost.
2015-05-27 20:22:30	Kurufu	Trying to pass a function pointer to an FFI call.
2015-05-27 20:22:37	-->	bytewise (bytewise@moz-mkh5h4.hsi16.unitymediagroup.de) has joined #rust
2015-05-27 20:23:55	Havvy	steveklabnik:  Do you think it'd be useful to have a chapter about Wrapper Types (both built-in ones and implementing your own) in the Rust book?
2015-05-27 20:23:59	<--	rbranson (rbranson@moz-ao5.9o0.201.199.IP) has quit (Quit: Computer has gone to sleep.)
2015-05-27 20:24:24	-->	rbranson (rbranson@moz-ao5.9o0.201.199.IP) has joined #rust
2015-05-27 20:25:21	<--	naerbnic (naerbnic@moz-nl3.4ra.239.216.IP) has quit (Client exited)
2015-05-27 20:25:23	<--	brendan (brendaneich@moz-boc.40s.170.209.IP) has quit (Client exited)
2015-05-27 20:25:46	-->	dinfuehr (dinfuehr@moz-uocjue.highway.telekom.at) has joined #rust
2015-05-27 20:27:29	--	irc: disconnected from server
2015-05-27 20:27:40	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-27 20:27:40	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-27 20:27:40	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-27 20:27:40	--	Channel #rust: 992 nicks (15 ops, 0 halfops, 1 voice, 976 normals)
2015-05-27 20:27:42	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-27 20:27:56	<--	Sho (sho@moz-83s.6h6.28.5.IP) has quit (Quit: Konversation terminated!)
2015-05-27 20:28:28	@steveklabnik	we already have a little section about newtypes
2015-05-27 20:28:28	Havvy	huon:  Can this be bumped up to v1.0.0? https://crates.io/crates/term
2015-05-27 20:28:39	@steveklabnik	more would be useful probably
2015-05-27 20:29:18	@huon	Havvy: are is it 1.0-ready? (good features, few bugs etc.?)
2015-05-27 20:29:40	Havvy	huon:  1.0 for libraries means people are depending on it. ;)
2015-05-27 20:29:48	<--	dinfuehr (dinfuehr@moz-uocjue.highway.telekom.at) has quit (Ping timeout: 121 seconds)
2015-05-27 20:29:57	<--	James_ (quassel@moz-q6malq.range86-148.btcentralplus.com) has quit (Ping timeout: 121 seconds)
2015-05-27 20:30:03	 *	huon disagrees
2015-05-27 20:30:16	@huon	people can and do depend on 0.x libs
2015-05-27 20:30:28	@steveklabnik	yeah, semver _does_ say 'if it's in production, it should be 1.0'
2015-05-27 20:30:32	@steveklabnik	but people dont tend to folow that
2015-05-27 20:30:51	@huon	by that logic, we should only bump term to 1.0 if it's production ready
2015-05-27 20:30:59	@huon	(I have no idea of its status myself)
2015-05-27 20:31:05	Twisol	"should" in the RFC 2119 sense, I suppose
2015-05-27 20:31:35	-->	joneshf-laptop (joneshf@moz-l4h.b5s.208.98.IP) has joined #rust
2015-05-27 20:31:36	o11c	state for rust's terminal support is pretty bad
2015-05-27 20:31:47	o11c	most naive crates are outright wrong
2015-05-27 20:31:48	@steveklabnik	How do I know when to release 1.0.0?
2015-05-27 20:31:48	@steveklabnik	If your software is being used in production, it should probably already be 1.0.0. If you have a stable API on which users have come to depend, you should be 1.0.0. If you're worrying a lot about backwards compatibility, you should probably already be 1.0.0.
2015-05-27 20:32:29	@steveklabnik	bbl
2015-05-27 20:32:57	o11c	I was trying to get tickit-rs to production level, but I'm not really working on anything in Rust anymore
2015-05-27 20:33:07	o11c	tickit-rs is definitely the right general *approach* though
2015-05-27 20:36:16	jethrogb	I want to make sure a re-exported struct implements a certain trait. Is there a more elegant way than http://is.gd/vzeyfm ?
2015-05-27 20:36:16	SpaceManiac	Kurufu: as I understand, fn(..) is already a pointer type, no need for &
2015-05-27 20:36:36	--	chmanchester is now known as chmanchester|afk
2015-05-27 20:37:22	-->	jacor (jacor@moz-aq6q4f.ant0.oo2o.0007.2601.IP) has joined #rust
2015-05-27 20:37:32	<--	JagaJaga (JagaJaga@moz-ua8.hhl.62.178.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 20:37:40	<--	jophish_ (jophish@moz-fjh8o1.gotadsl.co.uk) has quit (Connection closed)
2015-05-27 20:38:01	-->	jophish (jophish@moz-fjh8o1.gotadsl.co.uk) has joined #rust
2015-05-27 20:38:54	-->	Nashenas88 (Nashenas88@moz-qa5.ohb.138.63.IP) has joined #rust
2015-05-27 20:39:33	<--	ajhager (aajhager@moz-mcdsgi.iplsin.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-27 20:39:34	Kurufu	SpaceManiac: well, it compiles now thanks! Hopefully it works.
2015-05-27 20:39:36	Havvy	o11c:  Why wasn't "term" production ready in your opinion?
2015-05-27 20:41:01	OmniMancer	XMPPwocky: yes
2015-05-27 20:41:17	-->	Kingsquee (kingsley@moz-3fm07c.bchsia.telus.net) has joined #rust
2015-05-27 20:42:03	<--	jophish (jophish@moz-fjh8o1.gotadsl.co.uk) has quit (Ping timeout: 121 seconds)
2015-05-27 20:42:51	-->	gsingh93 (gulshan@moz-ln1ktu.st3l.iv8o.0004.2601.IP) has joined #rust
2015-05-27 20:43:20	<--	Irrelium (Irrelium@moz-4kl.9ut.19.71.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 20:43:48	<--	swgillespie (swgillespie@moz-1i5.3un.220.167.IP) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-27 20:43:56	<--	jimb (user@moz-09a.i8g.126.207.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 20:44:33	<--	JuggleTux (tux@moz-ho0t1f.adslplus.ch) has quit (Quit: leaving)
2015-05-27 20:45:13	<--	Nashenas88 (Nashenas88@moz-qa5.ohb.138.63.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 20:45:31	-->	Nashenas88 (Nashenas88@moz-qa5.ohb.138.63.IP) has joined #rust
2015-05-27 20:45:45	o11c	Havvy: it is woefully incomplete
2015-05-27 20:46:02	<--	Savago (Savago@moz-8hd.3b6.246.162.IP) has quit (Client exited)
2015-05-27 20:46:50	Havvy	So it's just missing functionality, but what's there is still usable?
2015-05-27 20:47:05	-->	heatmeiser (heatmeiser@moz-3rj72b.res.rr.com) has joined #rust
2015-05-27 20:47:41	-->	ajhager (aajhager@moz-mcdsgi.iplsin.sbcglobal.net) has joined #rust
2015-05-27 20:48:27	-->	cholcombe (chris@moz-mtfab9.or.comcast.net) has joined #rust
2015-05-27 20:49:29	-->	jgallagher (john@moz-6ge.dhn.131.24.IP) has joined #rust
2015-05-27 20:50:45	o11c	no, because its design is fundamentally wrong
2015-05-27 20:51:27	-->	acgtyrant (acgtyrant@moz-0k4.4sk.186.39.IP) has joined #rust
2015-05-27 20:51:35	<--	bfrog (tburdick@moz-hde.5e5.136.67.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 20:53:01	-->	swgillespie (swgillespie@moz-1i5.3un.220.167.IP) has joined #rust
2015-05-27 20:54:45	-->	paupau (grrrr@moz-35edek.ca.comcast.net) has joined #rust
2015-05-27 20:55:14	<--	goyox86 (textual@moz-rvv.00r.255.109.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-27 20:56:43	<--	cholcombe (chris@moz-mtfab9.or.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-27 20:56:47	<--	willianveiga (yaaic@moz-oas.lsi.101.200.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 20:58:03	-->	hroi (hroi@moz-d273ub.static.netgroup.dk) has joined #rust
2015-05-27 20:58:55	<--	paupau (grrrr@moz-35edek.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-27 20:59:00	<--	nodweber (nodweber@moz-knt.fgq.178.5.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-27 20:59:00	-->	playjax (chatzilla@moz-1ts4be.optusnet.com.au) has joined #rust
2015-05-27 20:59:10	<--	Fiveside (fiveside@moz-t2eatg.vsp.com) has quit (Ping timeout: 121 seconds)
2015-05-27 20:59:25	<--	qwerty_nor (Thunderbird@moz-5ql.sn8.241.50.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 21:01:43	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-27 21:02:46	<--	ahal (ahal@moz-b8e0a0.cpe.pppoe.ca) has quit (A TLS packet with unexpected length was received.)
2015-05-27 21:03:10	<--	hroi (hroi@moz-d273ub.static.netgroup.dk) has quit (Ping timeout: 121 seconds)
2015-05-27 21:03:12	-->	sdogruyol (sdogruyol@moz-mdm.mqr.142.195.IP) has joined #rust
2015-05-27 21:06:11	benbangert	don't suppose anyone knows where os::getcwd went to?
2015-05-27 21:06:22	<--	phore (phore@moz-p8hanb.cable.rogers.com) has quit (Ping timeout: 121 seconds)
2015-05-27 21:06:45	-->	m_kato (m_kato@moz-86b4bs.bitcat.net) has joined #rust
2015-05-27 21:07:14	<--	sdogruyol (sdogruyol@moz-mdm.mqr.142.195.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 21:07:16	Kurufu	have you checked around std::evn ?
2015-05-27 21:07:17	bluss	into std::env::
2015-05-27 21:07:19	Kurufu	ennv*
2015-05-27 21:07:33	<--	krdln (krdln@moz-gpo.ioe.219.81.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 21:07:38	Kurufu	I guess its just not my day to type "env" correctly.
2015-05-27 21:08:04	aatch	eqvn
2015-05-27 21:08:15	aatch	ennnnnnnnv
2015-05-27 21:08:24	aatch	envnv<oh god help me!>vvv
2015-05-27 21:09:01	<--	ytain (ytain@moz-ffpck2.dsl.teksavvy.com) has quit (Quit: Textual IRC Client: www.textualapp.com)
2015-05-27 21:09:15	<--	tkellen (tkellen@moz-f5ji1n.vt.comcast.net) has quit (Client exited)
2015-05-27 21:09:24	-->	SiegeLord (sl@moz-9jtaei.ca.comcast.net) has joined #rust
2015-05-27 21:09:36	benbangert	Kurufu: ah, there it is
2015-05-27 21:09:40	benbangert	ok, and where'd change_dir go?
2015-05-27 21:10:26	Kurufu	set_current_dir?
2015-05-27 21:11:06	<--	santiago (santiago@moz-8th.j2e.167.12.IP) has quit (Quit: Computer has gone to sleep.)
2015-05-27 21:11:22	benbangert	Kurufu: ah, these rust std lib doc search things are not finding related funcs very well, thanks
2015-05-27 21:11:31	<--	johnsoft (johnsoft@moz-69mrig.res.rr.com) has quit (Ping timeout: 121 seconds)
2015-05-27 21:11:52	supr	Hi, i want to expose a rust function for a c interface. How can i return a boxed vector so, that i can recieve a const uint64_t array on the other side?
2015-05-27 21:11:57	-->	NerdTaco (NerdTaco@moz-a4e65f.dsl.bell.ca) has joined #rust
2015-05-27 21:12:00	-->	jacor_m (jacor_m@moz-vemspr.or.comcast.net) has joined #rust
2015-05-27 21:12:18	-->	johnsoft (johnsoft@moz-69mrig.res.rr.com) has joined #rust
2015-05-27 21:13:18	<--	lenstr (lenstr@moz-rrh.vju.25.171.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-27 21:14:21	-->	khades1 (Thunderbird@moz-qgd.3vk.74.212.IP) has joined #rust
2015-05-27 21:15:27	<--	khades (Thunderbird@moz-qgd.3vk.74.212.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 21:15:37	<--	hhhhhhhhhh (mike@moz-969kuj.cable.virginm.net) has quit (Quit: WeeChat 1.2)
2015-05-27 21:15:40	<--	hhhhhhhh1 (mike@moz-969kuj.cable.virginm.net) has quit (Quit: WeeChat 1.2)
2015-05-27 21:16:06	-->	narann (narann@moz-j49beg.dsl.netrevolution.com) has joined #rust
2015-05-27 21:16:22	<--	alaska (alaska@moz-8bdjem.fios.verizon.net) has quit (Quit: Leaving...)
2015-05-27 21:16:34	<--	kgrandon (Adium@moz-i0u8p7.hfc.comcastbusiness.net) has quit (Quit: Leaving.)
2015-05-27 21:17:33	-->	JosiahOne (Instantbird@moz-h404m9.l2d1.q8mm.0306.2602.IP) has joined #rust
2015-05-27 21:17:34	<--	fabianvf (fabianvf@moz-fjqmui.va.comcast.net) has quit (Connection closed)
2015-05-27 21:18:41	-->	fabianvf (fabianvf@moz-fjqmui.va.comcast.net) has joined #rust
2015-05-27 21:19:27	-->	mindtree (Mitch@moz-eo0q0a.iprimus.net.au) has joined #rust
2015-05-27 21:19:31	--	nsm is now known as nsm|away
2015-05-27 21:20:28	<--	scoobycoder (scoobycoder@moz-nun.gd0.238.207.IP) has quit (Connection closed)
2015-05-27 21:20:37	-->	jdpage (jdpage@moz-3crs7j.res.rr.com) has joined #rust
2015-05-27 21:21:31	<--	dpc (dpc@moz-t6gr4b.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-27 21:21:34	<--	jfredett (Adium@moz-a9ilmn.fios.verizon.net) has quit (Quit: Leaving.)
2015-05-27 21:21:38	-->	jfredett (Adium@moz-a9ilmn.fios.verizon.net) has joined #rust
2015-05-27 21:21:51	jdpage	So I'm confused about this error message ( http://is.gd/MSmsN8 ). It seems to me like T is constrained just fine by the first and second lines of the where clause.
2015-05-27 21:22:09	jdpage	What did I do wrong?
2015-05-27 21:22:43	<--	fabianvf (fabianvf@moz-fjqmui.va.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-27 21:22:46	jdpage	Removing the constraint for T doesn't help, and removing T from the impl<...> makes it complain about the constraint on U:
2015-05-27 21:23:00	-->	fkaa (tundmatu@moz-501od2.business.telia.com) has joined #rust
2015-05-27 21:23:46	FreeFull	jdpage: It's a bug
2015-05-27 21:24:00	jdpage	awesome.
2015-05-27 21:24:21	<--	godlikesme (godlikesme@moz-2a2.dsd.174.79.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 21:24:21	jdpage	is there an issue for it in Github?
2015-05-27 21:24:47	bluss	is it a bug?
2015-05-27 21:25:13	-->	paupau (grrrr@moz-35edek.ca.comcast.net) has joined #rust
2015-05-27 21:26:11	aatch	It may fall under the "intentional limition" banner.
2015-05-27 21:26:14	-->	vikaton (uid59278@moz-0a9h81.ealing.irccloud.com) has joined #rust
2015-05-27 21:26:17	aatch	limitation*
2015-05-27 21:26:24	FreeFull	Oh, actually, it might not be a bug
2015-05-27 21:26:38	<--	bytewise (bytewise@moz-mkh5h4.hsi16.unitymediagroup.de) has quit (Quit: Quit)
2015-05-27 21:26:57	FreeFull	I don't know
2015-05-27 21:27:03	jdpage	Hm.
2015-05-27 21:27:25	<--	meh (meh@moz-e56g7l.42-151.net24.it) has quit (Ping timeout: 121 seconds)
2015-05-27 21:28:21	<--	NerdTaco (NerdTaco@moz-a4e65f.dsl.bell.ca) has quit (A TLS packet with unexpected length was received.)
2015-05-27 21:29:22	<--	paupau (grrrr@moz-35edek.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-27 21:30:01	<--	fyolnish (fyolnish@moz-rv32aj.ocn.ne.jp) has quit (Quit: Bye)
2015-05-27 21:30:45	Nashenas88	I’m struggling with type annotations at https://play.rust-lang.org/?gist=57a6e3c185d453172461&version=stable . How do I annotate this further? What makes this really hard to write is the variable “city” on lines 122 and 109
2015-05-27 21:30:59	<--	panicbit (panicbit@moz-trnuar.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2015-05-27 21:32:35	SpaceManiac	I remember reading there was a way to have Cargo show the depdendency tree. What is it, or am I wrong?
2015-05-27 21:32:48	aatch	Nashenas88, in `search`, how does the compiler know what the type of `P` is?
2015-05-27 21:33:12	-->	dpc (dpc@moz-t6gr4b.ca.comcast.net) has joined #rust
2015-05-27 21:33:12	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Connection closed)
2015-05-27 21:33:30	Nashenas88	aatch, ah, let me get rid of that. That was from when I was passing in a file name. I slimmed this down from what I had locally due to dependencies on external crates
2015-05-27 21:33:38	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-27 21:33:56	-->	Guest_ (textual@moz-rtn.fg7.77.192.IP) has joined #rust
2015-05-27 21:34:51	Rym	SpaceManiac: You're probably looking for https://github.com/maxsnew/cargo-dot
2015-05-27 21:35:38	<--	Quanttek (quassel@moz-25k96c.6fkd.dvrb.8108.2a02.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 21:36:11	Nashenas88	aatch: https://play.rust-lang.org/?gist=31bdfe9b4708583badb8&version=stable
2015-05-27 21:36:12	-->	fyolnish (fyolnish@moz-rv32aj.ocn.ne.jp) has joined #rust
2015-05-27 21:36:15	aatch	Nashenas88, https://play.rust-lang.org/?gist=ca01ae3b3622ef2d3f50&version=nightly
2015-05-27 21:36:15	-->	rouma (zack@moz-p8e0re.res.rr.com) has joined #rust
2015-05-27 21:36:15	jdpage	well now I'm officially confused: "error: the trait `Tag<T>` is not implemented for the type `Tag<T> + 'a`"
2015-05-27 21:36:20	ebfull	how do i use cargo to add dependencies for a particular target (windows)?
2015-05-27 21:36:27	<--	partkyle (partkyle@moz-e8m.r65.206.12.IP) has quit (Client exited)
2015-05-27 21:36:47	jethrogb	is there a stable way to use Read::read_to_end ?
2015-05-27 21:37:00	jethrogb	I can't use Vec::borrow_mut
2015-05-27 21:37:15	<--	jeffasinger (jeff@moz-u5nog7.res.rr.com) has quit (Client exited)
2015-05-27 21:37:17	aatch	Nashenas88, notable change is on line 114, from `|row| {` to `move |row| {`.
2015-05-27 21:37:18	SpaceManiac	jethrogb: `&mut your_vec`
2015-05-27 21:37:41	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Ping timeout: 121 seconds)
2015-05-27 21:37:44	jethrogb	thanks
2015-05-27 21:37:47	aatch	Nashenas88, what that does force capture by-value
2015-05-27 21:37:48	ebfull	nvm i found it in the manifest description!
2015-05-27 21:37:50	<--	fyolnish (fyolnish@moz-rv32aj.ocn.ne.jp) has quit (Quit: Bye)
2015-05-27 21:37:54	-->	fyolnish (fyolnish@moz-rv32aj.ocn.ne.jp) has joined #rust
2015-05-27 21:37:58	-->	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has joined #rust
2015-05-27 21:38:40	Nashenas88	aatch: oh, I just made you change from line 114 and that got me farther. Thank you!
2015-05-27 21:38:46	-->	dbotton (Mibbit@moz-5r4uur.fl.comcast.net) has joined #rust
2015-05-27 21:38:56	<--	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-27 21:39:02	aatch	Nashenas88, since you can freely copy &-ptrs, it works just fine to capture the `&'a str` by-value.
2015-05-27 21:41:41	<--	stl (stl@moz-o9aiua.broadband.corbina.ru) has quit (Ping timeout: 121 seconds)
2015-05-27 21:41:54	woboats	http://is.gd/LMU9XN what's the reason these conflict? Does coherence not check type parameters of the type being implemented for?
2015-05-27 21:42:01	<--	bluss (bluss@moz-ec5o68.cust.bredbandsbolaget.se) has quit (Ping timeout: 121 seconds)
2015-05-27 21:42:09	woboats	oh nvm, because Result<T, T>
2015-05-27 21:42:09	geofft	what's the standard idiom for intentionally ignoring a #[must_use]? `let _ =`? 
2015-05-27 21:42:30	mcpherrin	geofft: yeah
2015-05-27 21:42:35	geofft	thanks 
2015-05-27 21:42:36	mcpherrin	Or at least that's what I do
2015-05-27 21:42:39	aatch	woboats, hah, just beat me to it.
2015-05-27 21:42:55	aatch	geofft, or using an #[allow] to supress it.
2015-05-27 21:43:09	<--	playjax (chatzilla@moz-1ts4be.optusnet.com.au) has quit (Connection closed)
2015-05-27 21:43:12	geofft	I don't want to put a giant #[allow] on the module/function/etc. 
2015-05-27 21:43:44	aatch	geofft, I do it when the function is like 90% writeln! and I don't really care if it fails.
2015-05-27 21:44:06	aatch	geofft, like a function for helping with debugging.
2015-05-27 21:44:15	-->	c74d3 (c74d3a4ebb6@moz-v3r8ri.mggc.hibn.4404.2002.IP) has joined #rust
2015-05-27 21:44:40	geofft	I have one call that returns a Result and I'm explicitly OK with it succeeding or failing 
2015-05-27 21:45:09	aatch	geofft, example: https://github.com/Aatch/ramp/blob/master/src/ll/mod.rs#L140-L160
2015-05-27 21:45:18	 *	aatch remembered that he actually release Ramp now.
2015-05-27 21:45:36	<--	c74d (c74d3a4ebb6@moz-0ersgu.oc.cox.net) has quit (Ping timeout: 121 seconds)
2015-05-27 21:45:42	<--	dbotton (Mibbit@moz-5r4uur.fl.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-27 21:45:53	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-27 21:46:01	--	c74d3 is now known as c74d
2015-05-27 21:48:30	Nashenas88	aatch: I incorporated the changes into the actual code, but now I’m getting ‘rdr’ does not live long enough. I understand that it’s going out of scope at the end of search around line 140. I’m thinking that it needs to be returned to extend it, but I don’t need that value. Do I have to return it in order to extend it, or can I somehow tie it to live as long as the iterator is alive?
2015-05-27 21:48:38	Nashenas88	Sorry, gist here https://play.rust-lang.org/?gist=f538953e3f5ecb84a964&version=stable
2015-05-27 21:48:41	<--	Ralith (ralith@moz-miv.lne.251.63.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 21:48:55	-->	logan_e (logan_e@moz-ltn.qg3.218.73.IP) has joined #rust
2015-05-27 21:49:08	-->	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has joined #rust
2015-05-27 21:49:19	Nashenas88	(it won’t run because of the external dependencies, but I’m hoping you could help by seeing the full code)
2015-05-27 21:49:55	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Ping timeout: 121 seconds)
2015-05-27 21:52:10	-->	stl (stl@moz-6r1bf1.broadband.corbina.ru) has joined #rust
2015-05-27 21:52:39	-->	popow (Thunderbird@moz-03f.kd0.252.223.IP) has joined #rust
2015-05-27 21:53:10	-->	playjax (chatzilla@moz-1ts4be.optusnet.com.au) has joined #rust
2015-05-27 21:54:31	<--	copycat (Thunderbird@moz-dpm.8hc.223.111.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 21:56:12	<--	erz (erz@moz-fiq1tl.broadband.corbina.ru) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-27 21:57:28	<--	dpc (dpc@moz-t6gr4b.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-27 21:57:43	-->	kentuckyfriedtakahe (ajones@moz-nouqfo.dqqd.b0fh.0cb0.2001.IP) has joined #rust
2015-05-27 21:58:00	-->	copycat (Thunderbird@moz-dpm.8hc.223.111.IP) has joined #rust
2015-05-27 21:58:31	-->	choplin (choplin@moz-b0t1a8.t6mc.g9m6.001a.240d.IP) has joined #rust
2015-05-27 21:59:28	<--	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-27 22:02:55	<--	Guest67 (textual@moz-gfs9v0.fios.verizon.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-27 22:03:28	<--	choplin (choplin@moz-b0t1a8.t6mc.g9m6.001a.240d.IP) has quit (Connection closed)
2015-05-27 22:04:12	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-27 22:04:26	-->	rlr (rlr@moz-csl.qq6.185.208.IP) has joined #rust
2015-05-27 22:04:29	-->	gary (Mibbit@moz-51a.84q.13.210.IP) has joined #rust
2015-05-27 22:04:47	<--	cakecatz (cakecatz@moz-edrvuc.sannet.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-27 22:06:52	<--	gsingh93 (gulshan@moz-ln1ktu.st3l.iv8o.0004.2601.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 22:07:00	-->	TheHydroImpulse (TheHydroImp@moz-r25mqk.ed.shawcable.net) has joined #rust
2015-05-27 22:08:14	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Ping timeout: 121 seconds)
2015-05-27 22:08:21	thelink2012	should submodule names be singular or plural?
2015-05-27 22:08:32	-->	jkingyens (jkingyens@moz-7uhe66.ca.comcast.net) has joined #rust
2015-05-27 22:08:35	<--	jkingyens (jkingyens@moz-7uhe66.ca.comcast.net) has quit (Client exited)
2015-05-27 22:08:40	-->	jkingyens (jkingyens@moz-7uhe66.ca.comcast.net) has joined #rust
2015-05-27 22:09:05	<--	jkingyens (jkingyens@moz-7uhe66.ca.comcast.net) has quit (Client exited)
2015-05-27 22:09:05	-->	choplin (choplin@moz-qkm9un.ap.nuro.jp) has joined #rust
2015-05-27 22:09:07	<--	vikaton (uid59278@moz-0a9h81.ealing.irccloud.com) has quit (Quit: )
2015-05-27 22:12:06	-->	kgrandon (Adium@moz-i0u8p7.hfc.comcastbusiness.net) has joined #rust
2015-05-27 22:14:45	-->	jensnockert (jensnockert@moz-0rd3rj.siw.siwnet.net) has joined #rust
2015-05-27 22:15:01	<--	coryforsyth (coryforsyth@moz-hpsim2.fios.verizon.net) has quit (Client exited)
2015-05-27 22:15:22	<--	demilux (demilux@moz-fk1.kt4.14.64.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-27 22:18:40	<--	Altazimuth (Altazimuth@moz-rb7u6p.skybroadband.com) has quit (Ping timeout: 121 seconds)
2015-05-27 22:18:48	<--	jensnockert (jensnockert@moz-0rd3rj.siw.siwnet.net) has quit (Ping timeout: 121 seconds)
2015-05-27 22:20:26	-->	santiago (santiago@moz-ro2mm9.res.rr.com) has joined #rust
2015-05-27 22:22:23	<--	swgillespie (swgillespie@moz-1i5.3un.220.167.IP) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-27 22:23:31	<--	khades1 (Thunderbird@moz-qgd.3vk.74.212.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 22:23:41	-->	fabianvf (fabianvf@moz-fjqmui.va.comcast.net) has joined #rust
2015-05-27 22:23:56	-->	csherratt (textual@moz-357qdq.cable.teksavvy.com) has joined #rust
2015-05-27 22:25:35	Nashenas88	I’ve got the error produced at the bottom. Any ideas why? https://play.rust-lang.org/?gist=3bbf1f5b835ca535d9f9&version=stable note: from_reader takes &mut self. Is this causing me problems? If so, how can I get around it?
2015-05-27 22:26:42	-->	Ralith (ralith@moz-tiaj7p.customer.broadstripe.net) has joined #rust
2015-05-27 22:27:45	-->	bombless_ (bombless@moz-r0c.red.21.116.IP) has joined #rust
2015-05-27 22:29:01	<--	johnsoft (johnsoft@moz-69mrig.res.rr.com) has quit (Ping timeout: 121 seconds)
2015-05-27 22:29:17	-->	johnsoft (johnsoft@moz-69mrig.res.rr.com) has joined #rust
2015-05-27 22:29:37	<--	A205B064 (A205B064@moz-9s9nhk.nap.wideopenwest.com) has quit (Ping timeout: 121 seconds)
2015-05-27 22:34:35	-->	rmgk_ (ragnar@moz-ajvat8.dyn.telefonica.de) has joined #rust
2015-05-27 22:35:22	<--	ygrek (user@moz-8j9aeu.org.ua) has quit (Ping timeout: 121 seconds)
2015-05-27 22:35:27	-->	fengshaun (fengshaun@moz-oagll1.cpe.pppoe.ca) has joined #rust
2015-05-27 22:38:01	<--	rmgk (ragnar@moz-aoflfc.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2015-05-27 22:38:59	-->	annodomini (lambda@moz-qgii5v.ma.comcast.net) has joined #rust
2015-05-27 22:39:49	<--	Guest38 (textual@moz-j72nfe.ca.comcast.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-27 22:43:12	<--	brianloveswords (brianlovesw@moz-tq78gs.fios.verizon.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-27 22:45:51	<--	agile (mike@moz-m71dqt.rcsntx.sbcglobal.net) has quit (Connection closed)
2015-05-27 22:47:02	<--	harrisonclarke (harrisoncla@moz-uur7pt.eastlink.ca) has quit (Connection closed)
2015-05-27 22:47:47	-->	vikaton (uid59278@moz-0a9h81.ealing.irccloud.com) has joined #rust
2015-05-27 22:48:01	vikaton	does Rust prevent stack overflows?
2015-05-27 22:48:31	Mutabah	vikaton: It prevents them from causing unsafety, but they still will terminate the program
2015-05-27 22:48:42	-->	harrisonclarke (harrisoncla@moz-uur7pt.eastlink.ca) has joined #rust
2015-05-27 22:48:50	<--	harrisonclarke (harrisoncla@moz-uur7pt.eastlink.ca) has quit (Connection closed)
2015-05-27 22:49:09	vikaton	Mutabah: ok, what does "causing unsafety" mean in this case? unexpected code generation from rustc?
2015-05-27 22:50:00	Mutabah	Unsafety means that undefined memory is accessed
2015-05-27 22:50:10	geofft	(potentially) incorrect behavior, like overwriting other data that someone assumes won't be overwritten 
2015-05-27 22:50:59	Mutabah	Nashenas88: First off - that 'a indicates that the result maintains the borrow on 'city', is that correct?
2015-05-27 22:51:13	Nashenas88	Mutabah: yes
2015-05-27 22:51:35	Mutabah	Nashenas88: Also, if Reader::from_reader takes &mut, then it borrows the input reader, and as such can't be returned wihtout the input reader being passed in (instead of constructed locally)
2015-05-27 22:52:16	-->	agile (mike@moz-m71dqt.rcsntx.sbcglobal.net) has joined #rust
2015-05-27 22:52:25	-->	sdogruyol (sdogruyol@moz-mdm.mqr.142.195.IP) has joined #rust
2015-05-27 22:52:33	Nashenas88	Mutabah: The problem I have is I’m trying to return the iterator generated in population_count, but that seems to have a dependency on rdr
2015-05-27 22:52:37	<--	playjax (chatzilla@moz-1ts4be.optusnet.com.au) has quit (Connection closed)
2015-05-27 22:52:53	-->	durka42 (Adium@moz-qsuual.pa.comcast.net) has joined #rust
2015-05-27 22:53:09	Mutabah	Nashenas88: Most likely does
2015-05-27 22:53:23	durka42	so… how do Rust libraries deal with needing to have state? global variables seem difficult
2015-05-27 22:53:56	SpaceManiac	durka42: what kind of state do you need to keep?
2015-05-27 22:53:59	Nashenas88	Mutabah: what can I do to abstract away the creation of the reader?
2015-05-27 22:54:02	c74d	durka42: “needing”?
2015-05-27 22:54:02	Mutabah	durka42: Depends, global statis is usable (just unsafe)
2015-05-27 22:54:24	Mutabah	Nashenas88: Can you move the ownership of the csv::Reader out of hat function?
2015-05-27 22:54:47	Nashenas88	Mutabah: out of fn search?
2015-05-27 22:54:51	Mutabah	Nashenas88: Yes
2015-05-27 22:54:59	<--	zz_kimundi (kimundi@moz-siarqd.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2015-05-27 22:55:09	Nashenas88	I think so
2015-05-27 22:55:20	durka42	well, let's say like a logging library, it'd be nice to call log::my_name_is("bob") and have that be remembered when you call log::warning() later
2015-05-27 22:55:32	Nashenas88	Mutabah, would it work if I split the search function in half? I’ll try that out
2015-05-27 22:55:35	Mutabah	durka42: As said, globals are possble, they're just insafe
2015-05-27 22:55:37	-->	tschottdorf (tobias@moz-d021av.aipg.hajb.2000.2604.IP) has joined #rust
2015-05-27 22:55:38	Mutabah	*unsafe
2015-05-27 22:55:51	durka42	fair enough
2015-05-27 22:56:19	c74d	durka42: `let logger = log::Logger::new(); logger.set_name("bob"); logger.warning("...");`
2015-05-27 22:56:22	-->	zz_kimundi (kimundi@moz-ch362e.dip0.t-ipconnect.de) has joined #rust
2015-05-27 22:56:27	<--	sdogruyol (sdogruyol@moz-mdm.mqr.142.195.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 22:56:45	--	zz_kimundi is now known as kimundi
2015-05-27 22:57:19	c74d	durka42: have the state be in objects, rather than being global.
2015-05-27 22:57:49	durka42	yeah, agreed
2015-05-27 22:57:54	durka42	I am playing with the FFI though
2015-05-27 22:58:00	durka42	so I am guessing returning objects is also going to unsafe
2015-05-27 22:58:25	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-27 22:59:01	Mutabah	durka42: Always wrap FFI in a safe wrapper :)
2015-05-27 22:59:15	-->	lucian (lucian@moz-2c3pda.cable.virginm.net) has joined #rust
2015-05-27 22:59:52	-->	khades (Thunderbird@moz-ual.b31.186.31.IP) has joined #rust
2015-05-27 23:00:10	durka42	definitely
2015-05-27 23:00:16	durka42	but I can't safely send out a pointer to anything, can I?
2015-05-27 23:00:26	durka42	you can tell C to keep something "const", but you can't trust it...
2015-05-27 23:00:30	-->	dcb (textual@moz-j72nfe.ca.comcast.net) has joined #rust
2015-05-27 23:01:15	geofft	durka42: you can't trust Rust either, there's unsafe and transmute :) 
2015-05-27 23:01:17	-->	coryforsyth (coryforsyth@moz-hpsim2.fios.verizon.net) has joined #rust
2015-05-27 23:01:26	-->	davebettin (davebettin@moz-ip635p.or.comcast.net) has joined #rust
2015-05-27 23:01:38	<--	dmac_ (dmac@moz-moa.puk.8.50.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 23:01:39	geofft	"safe wrapper" means "if the C library behaves as described, the user of this wrapper can't mess things up" 
2015-05-27 23:01:42	geofft	IMO 
2015-05-27 23:01:46	Mutabah	Yes
2015-05-27 23:02:02	<--	bombless_ (bombless@moz-r0c.red.21.116.IP) has quit (Connection closed)
2015-05-27 23:02:03	Mutabah	durka42: Safe means that you enforce the rules expected by the C API
2015-05-27 23:02:18	Mutabah	(s/enforce/represent/ most of the time)
2015-05-27 23:02:23	--	bentley|away is now known as bentley
2015-05-27 23:02:26	Mutabah	If it goes haywire, well, bad luck.
2015-05-27 23:02:27	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Ping timeout: 121 seconds)
2015-05-27 23:02:27	durka42	gotcha
2015-05-27 23:02:31	<--	timj (timj@moz-8aedb9.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2015-05-27 23:03:17	<--	lucian (lucian@moz-2c3pda.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2015-05-27 23:03:39	-->	jtdowney (jtdowney@moz-qb98um.catdevnull.net) has joined #rust
2015-05-27 23:03:56	posborne	Hey all, any pointers for debugging code generated from a syntax extension macro?
2015-05-27 23:03:58	-->	GGist (Mibbit@moz-st7v59.wa.comcast.net) has joined #rust
2015-05-27 23:04:01	--	bentley is now known as bentley|away
2015-05-27 23:04:03	posborne	Just trying to understand what it generates
2015-05-27 23:04:26	posborne	ioregs! in particular: https://zinc.rs/apidocs/ioreg/index.html
2015-05-27 23:05:13	Nashenas88	Mutabah: THANK YOU! I’ve been trying to rewrite that function to return an iterator for two days now.
2015-05-27 23:05:14	-->	psy (psy@moz-7vh.hr7.224.43.IP) has joined #rust
2015-05-27 23:05:21	Nashenas88	I just got it to compile.
2015-05-27 23:05:26	-->	psd (psd@moz-1prpav.mtnl.net.in) has joined #rust
2015-05-27 23:05:51	Mutabah	posborne: There's a flag to rustc (it's unstable though) to make it emit the AST just before typechecking
2015-05-27 23:05:54	ebfull	Nashenas88: grats!
2015-05-27 23:06:09	Mutabah	'-Z unstable-options --pretty=expanded' iirc
2015-05-27 23:06:40	posborne	Mutabah: I'll give that a try
2015-05-27 23:06:45	-->	Astrum|Lap (Astrum|Lap@moz-skcefh.co.comcast.net) has joined #rust
2015-05-27 23:07:18	-->	kazimuth (james@moz-4fl.86t.92.209.IP) has joined #rust
2015-05-27 23:07:26	<--	JosiahOne (Instantbird@moz-h404m9.l2d1.q8mm.0306.2602.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 23:08:32	-->	c74d3 (c74d3a4ebb6@moz-dc55cs.mggc.hibn.4404.2002.IP) has joined #rust
2015-05-27 23:08:52	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-27 23:09:06	-->	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has joined #rust
2015-05-27 23:09:09	<--	c74d (c74d3a4ebb6@moz-v3r8ri.mggc.hibn.4404.2002.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 23:09:24	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Quit: )
2015-05-27 23:09:35	<--	housl (housl@moz-qnjt4k.ut.comcast.net) has quit (Quit: WeeChat 1.2)
2015-05-27 23:09:47	--	c74d3 is now known as c74d
2015-05-27 23:10:14	<--	gopar (gopar@moz-5039uj.ca.comcast.net) has quit (A TLS packet with unexpected length was received.)
2015-05-27 23:10:23	-->	gattscha1do (richard@moz-8v4po7.dyn.telefonica.de) has joined #rust
2015-05-27 23:10:26	-->	Wild_Cat` (Max@moz-m9g.1sm.52.157.IP) has joined #rust
2015-05-27 23:10:29	<--	Wild_Cat (Max@moz-fa8mvt.dsl.teksavvy.com) has quit (Connection closed)
2015-05-27 23:10:33	<--	c74d (c74d3a4ebb6@moz-dc55cs.mggc.hibn.4404.2002.IP) has quit (Connection closed)
2015-05-27 23:10:38	-->	c74d (c74d3a4ebb6@moz-0ersgu.oc.cox.net) has joined #rust
2015-05-27 23:12:49	posborne	Mutabah: oofta!  43KLOC of output.  Should be able to search for what I need, however.
2015-05-27 23:12:50	<--	buhman (root@moz-7av5nh.in) has quit (Ping timeout: 121 seconds)
2015-05-27 23:13:22	<--	gattschardo (richard@moz-caff7e.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2015-05-27 23:13:24	-->	buhman (root@moz-7av5nh.in) has joined #rust
2015-05-27 23:13:30	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-27 23:14:32	<--	copycat (Thunderbird@moz-dpm.8hc.223.111.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 23:15:28	<--	logan_e (logan_e@moz-ltn.qg3.218.73.IP) has quit (Connection closed)
2015-05-27 23:16:07	-->	Takronix (Takronix@moz-nm15k0.hr.cox.net) has joined #rust
2015-05-27 23:16:49	<--	idegen (greg@moz-9c4nle.or.frontiernet.net) has quit (Quit: Leaving.)
2015-05-27 23:17:04	posborne	Mutabah: Gave me exactly what I was looking for (once I found it).  Thanks!
2015-05-27 23:17:45	Mutabah	No prob
2015-05-27 23:18:24	-->	colinsurprenant (colin@moz-q9ee1n.74.electronicbox.net) has joined #rust
2015-05-27 23:21:12	-->	brianloveswords (brianlovesw@moz-tq78gs.fios.verizon.net) has joined #rust
2015-05-27 23:22:39	-->	__mark__ (mark@moz-udut16.dynamic.chello.pl) has joined #rust
2015-05-27 23:24:21	-->	summerlight (summerlight@moz-99k.2mj.130.121.IP) has joined #rust
2015-05-27 23:24:52	-->	swgillespie (swgillespie@moz-rn1.vmq.232.104.IP) has joined #rust
2015-05-27 23:26:39	<--	coryforsyth (coryforsyth@moz-hpsim2.fios.verizon.net) has quit (Client exited)
2015-05-27 23:29:30	<--	niconii (nicole@moz-hnv1fo.frgo.qwest.net) has quit (Connection closed)
2015-05-27 23:29:46	-->	Irrelium (Irrelium@moz-4kl.9ut.19.71.IP) has joined #rust
2015-05-27 23:30:43	-->	niconii (nicole@moz-hnv1fo.frgo.qwest.net) has joined #rust
2015-05-27 23:30:44	--	Mode #rust [+o niconii] by ChanServ
2015-05-27 23:32:40	--	irc: disconnected from server
2015-05-27 23:32:51	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-27 23:32:51	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-27 23:32:51	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-27 23:32:51	--	Channel #rust: 985 nicks (15 ops, 0 halfops, 1 voice, 969 normals)
2015-05-27 23:32:53	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-27 23:32:53	-->	playjax (chatzilla@moz-1ts4be.optusnet.com.au) has joined #rust
2015-05-27 23:34:15	<--	gandalf (zbraniecki@moz-u3dg2t.sfo1.mozilla.com) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-27 23:34:38	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Connection closed)
2015-05-27 23:34:59	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-27 23:35:40	Havvy	Can I set the exit code without exiting?
2015-05-27 23:35:59	<--	choplin (choplin@moz-qkm9un.ap.nuro.jp) has quit (Connection closed)
2015-05-27 23:36:23	@huon	no
2015-05-27 23:36:47	@huon	implementing a version of the old set_exit_status isn't so hard thoguh
2015-05-27 23:37:13	@huon	a global static STATUS and finish main with `process::exit(STATUS.load())`
2015-05-27 23:38:03	Havvy	I'm fine with just exiting.
2015-05-27 23:38:07	Mutabah	Wait... why would you want to?
2015-05-27 23:38:19	Mutabah	It's like "Can I set the return value without returning"
2015-05-27 23:38:28	geofft	huon: hrm, doesn't env::set_exit_status still exist (just unstable)? 
2015-05-27 23:38:30	Havvy	Mutabah:  Pascal actually lets you do that.
2015-05-27 23:38:37	@huon	geofft: yes, but unstable
2015-05-27 23:38:52	geofft	sure but there's nothing to implement :) 
2015-05-27 23:39:02	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Ping timeout: 121 seconds)
2015-05-27 23:39:16	@huon	I generally assume that questios are asking "what can I use with 1.0" :)
2015-05-27 23:39:43	Havvy	Just trying to keep my Rust knowledge relevant in a post-1.0 world. Last time I wrote any Rust was for Rust 0.9.
2015-05-27 23:40:39	<--	mark_edward (mark@moz-dg4mrp.in.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-27 23:40:41	@huon	geofft: (in this case, I suspect that it may also be removed entirely in future)
2015-05-27 23:41:51	--	irc: disconnected from server
2015-05-27 23:42:03	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-27 23:42:03	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-27 23:42:03	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-27 23:42:03	--	Channel #rust: 983 nicks (15 ops, 0 halfops, 1 voice, 967 normals)
2015-05-27 23:42:05	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-27 23:42:34	<--	Tobba (Tobba@moz-o13d22.bredband.telia.com) has quit (Ping timeout: 121 seconds)
2015-05-27 23:43:55	-->	jophish (jophish@moz-fjh8o1.gotadsl.co.uk) has joined #rust
2015-05-27 23:45:19	<--	Rym (y@moz-c2u.sd4.38.217.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 23:46:23	-->	nham (nham@moz-lglsfe.il.comcast.net) has joined #rust
2015-05-27 23:46:42	Nashenas88	How can I check if an iterator is empty without calling next?
2015-05-27 23:46:59	-->	choplin (choplin@moz-q517gi.u-tokyo.ac.jp) has joined #rust
2015-05-27 23:47:05	@huon	you can't, in general
2015-05-27 23:47:38	@huon	i.e. iterators may not know if they're empty or not without computing the next element
2015-05-27 23:47:45	@huon	(well, trying to do so)
2015-05-27 23:47:58	<--	jophish (jophish@moz-fjh8o1.gotadsl.co.uk) has quit (Ping timeout: 121 seconds)
2015-05-27 23:47:58	Nashenas88	=/
2015-05-27 23:48:11	-->	trusty (Mibbit@moz-g77l04.ca.comcast.net) has joined #rust
2015-05-27 23:48:15	@huon	however, you can wrap an iterator to be "peekable" with the peekable method
2015-05-27 23:48:16	<--	choplin (choplin@moz-q517gi.u-tokyo.ac.jp) has quit (Connection closed)
2015-05-27 23:48:46	@huon	(which handles caching the element as appropriate)
2015-05-27 23:49:18	-->	choplin (choplin@moz-q517gi.u-tokyo.ac.jp) has joined #rust
2015-05-27 23:49:19	-->	harrisonclarke (harrisoncla@moz-uur7pt.eastlink.ca) has joined #rust
2015-05-27 23:49:38	trusty	is anyone using Rust to build production servers?
2015-05-27 23:49:42	swgillespie	+1 for peekable, it's extremely useful
2015-05-27 23:50:35	<--	kgrandon (Adium@moz-i0u8p7.hfc.comcastbusiness.net) has quit (Quit: Leaving.)
2015-05-27 23:50:59	-->	keenan (keenan@moz-es1.bb3.240.23.IP) has joined #rust
2015-05-27 23:51:48	geofft	trusty: Dropbox is building a thing that's intended to be production: https://www.reddit.com/r/rust/comments/2xvtll/getting_acquainted_with_mio/ 
2015-05-27 23:52:00	XMPPwocky	trusty: if you define crates.io as production..
2015-05-27 23:52:15	-->	mib_dki7zl (Mibbit@moz-ssp.un6.21.211.IP) has joined #rust
2015-05-27 23:52:16	XMPPwocky	skylight.io is doing some things
2015-05-27 23:52:19	aatch	Nashenas88, a good example is an iterator that generates fibonacci numbers, it just generates the next number when you ask for it. If there's and upper limit, then it'll need to generate the next number in order to know if it's over the limit.
2015-05-27 23:52:40	Nashenas88	aatch: that makes a lot of sense.
2015-05-27 23:52:41	<--	ajhager (aajhager@moz-mcdsgi.iplsin.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-27 23:53:03	XMPPwocky	that said, certain iterators are ExactSizeIterator and have a .len()
2015-05-27 23:53:10	XMPPwocky	rusti: [42].iter().len()
2015-05-27 23:53:12	--	Notice(playbot): 1
2015-05-27 23:53:21	<--	harrisonclarke (harrisoncla@moz-uur7pt.eastlink.ca) has quit (Ping timeout: 121 seconds)
2015-05-27 23:53:44	Nashenas88	well, I got my code running now. Time to go to sleep. Thanks for the help today everyone o/
2015-05-27 23:53:49	<--	Nashenas88 (Nashenas88@moz-qa5.ohb.138.63.IP) has quit (Client exited)
2015-05-27 23:54:02	-->	summerlight_ (summerlight@moz-99k.2mj.130.121.IP) has joined #rust
2015-05-27 23:54:55	jethrogb	is there an interface that connects std::sync::mpsc to std::io::{Read,Write} ?
2015-05-27 23:55:18	sam113101	"#![feature(plugin_registrar, quote, rustc_private)]", which one is an unstable feature?
2015-05-27 23:55:29	jethrogb	or another way to do select/poll on file descriptors?
2015-05-27 23:55:45	-->	IAmRasputin (rmg@moz-89l6lj.ct.comcast.net) has joined #rust
2015-05-27 23:55:48	XMPPwocky	jethrogb: no. async io requires external libraries
2015-05-27 23:55:52	Havvy	sam113101:  Anything in #![feature()] is unstable.
2015-05-27 23:55:53	XMPPwocky	i've heard good things about mio
2015-05-27 23:56:13	@niconii	sam113101: you can't use #![feature()] at all on stable
2015-05-27 23:56:32	sam113101	why not?
2015-05-27 23:56:54	@niconii	because literally the purpose of feature is to enable unstable features
2015-05-27 23:56:55	sam113101	will it always be the case?
2015-05-27 23:57:00	<--	acgtyrant (acgtyrant@moz-0k4.4sk.186.39.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 23:57:05	<--	summerlight (summerlight@moz-99k.2mj.130.121.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 23:57:07	jethrogb	XMPPwocky: select is not async
2015-05-27 23:57:14	-->	doomrobo (doomrobo@moz-tj2e6v.261j.6edk.2000.2604.IP) has joined #rust
2015-05-27 23:57:20	swgillespie	sam113101: http://doc.rust-lang.org/1.0.0/book/release-channels.html
2015-05-27 23:57:24	XMPPwocky	jethrogb: well, select also requires an external crate :P
2015-05-27 23:57:25	swgillespie	sam113101: tldr: yes
2015-05-27 23:57:30	sam113101	I'm trying to use docopt_macros, looks like I can't use it on stable?
2015-05-27 23:57:30	@niconii	sam113101: things may become stable eventually, and then you won't need the corresponding feature gate
2015-05-27 23:57:36	swgillespie	sam113101: if you want to use unstable things, use a nightly
2015-05-27 23:57:38	aatch	sam113101, no, the idea is that stuff behind feature-gates either gets removed or gets stabilized.
2015-05-27 23:57:38	doomrobo	is there a unicode escape I can use inside strings?
2015-05-27 23:57:49	XMPPwocky	rust's standard library, as of now, is very much "batteries not included"
2015-05-27 23:57:51	@niconii	sam113101: but #![feature()] *itself* is for unstable features
2015-05-27 23:58:01	aatch	doomrobo, I think "\u{abcd}" works
2015-05-27 23:58:09	XMPPwocky	like, you get the USB cable for the thing, but not the batteries, it's expected other people will make better batteries
2015-05-27 23:58:12	XMPPwocky	or something
2015-05-27 23:58:12	XMPPwocky	bad analogy
2015-05-27 23:58:26	<--	joneshf-laptop (joneshf@moz-l4h.b5s.208.98.IP) has quit (Ping timeout: 121 seconds)
2015-05-27 23:58:30	doomrobo	aatch, yup, that's it. Thanks! (I was trying "\uabcd")
2015-05-27 23:58:36	aatch	XMPPwocky, more like "accessories sold separately"
2015-05-27 23:59:11	XMPPwocky	haha exactly
2015-05-27 23:59:14	&Manishearth	   /sb end
2015-05-27 23:59:18	@niconii	sam113101: basically, imagine it's called #![unstable_feature()] and you'll understand
2015-05-27 23:59:27	<--	Shackra (Jorge@moz-7bh.ng6.177.186.IP) has quit (Connection closed)
2015-05-27 23:59:44	<--	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-28 00:00:02	-->	ajhager (aajhager@moz-mcdsgi.iplsin.sbcglobal.net) has joined #rust
2015-05-28 00:00:17	jethrogb	select is pretty essential to deal with multiple streams
2015-05-28 00:00:22	<--	brianloveswords (brianlovesw@moz-tq78gs.fios.verizon.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-28 00:00:44	<--	dcb (textual@moz-j72nfe.ca.comcast.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-28 00:01:28	-->	loyd (loyd@moz-jsb.32f.108.213.IP) has joined #rust
2015-05-28 00:01:45	aatch	XMPPwocky, it's suprisingly accurate, since some of the extra for Rust are made by the rust team (num, rand, etc.), but most are "third-party".
2015-05-28 00:01:45	reem	jethrogb: you probably want github.com/carllerche/mio
2015-05-28 00:02:00	doomrobo	interesting http://is.gd/WUUZ0Y
2015-05-28 00:02:10	<--	Kurufu (Kurufu@moz-pvv8b5.res.rr.com) has quit (Quit: Lost terminal)
2015-05-28 00:02:20	reem	jethrogb: channels aren’t related to io at all, they’re just a lockfree queue with a blocking mechanism for when channels are empty/full
2015-05-28 00:02:35	aatch	doomrobo, ah, I see you've read that article too.
2015-05-28 00:02:36	doomrobo	the behavior of the unicode string reversing isn't surprising, but still interesting
2015-05-28 00:02:42	reem	jethrogb: and github.com/carllerche/eventual too
2015-05-28 00:02:43	doomrobo	aatch, yup, weird stuff
2015-05-28 00:02:57	<--	cwraith (c_wraith@moz-7i8.v6v.191.131.IP) has quit (Quit: Leaving)
2015-05-28 00:03:03	aatch	doomrobo, I'm not sure what the correct behaviour actually is.
2015-05-28 00:03:09	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-28 00:03:14	-->	dcb (textual@moz-j72nfe.ca.comcast.net) has joined #rust
2015-05-28 00:04:03	doomrobo	aatch, it's a good point. IMO the behavior of any codepoint beginning with "Combining" should be to reverse it as one character so it displays as test2
2015-05-28 00:04:07	_habnabit	http://is.gd/td1Pmy urgh, i'm not sure how to make the lifetimes work here. Registrar::add_callback fails to compile without the + 'a annotation either, but it looks like _calling_ add_callback fails to compile with the annotation
2015-05-28 00:04:24	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Connection closed)
2015-05-28 00:04:25	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-28 00:04:33	jethrogb	reem: anything that works on windows?
2015-05-28 00:04:57	reem	jethrogb: not yet, but carlleche is working on windows support for mio
2015-05-28 00:05:26	reem	jethrogb: windows async IO is very different from *nix async io, so it’s tricky to make them work together
2015-05-28 00:05:50	carllerche	jethrogb: nope, but windows support is in the works :P as reem said, is tricky
2015-05-28 00:06:03	aatch	doomrobo, http://is.gd/2iPXBG
2015-05-28 00:06:14	<--	zyphrus (David@moz-1a4.urk.98.101.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 00:06:48	doomrobo	aatch, woah, I didn't know that was built in
2015-05-28 00:06:53	aatch	doomrobo, well it'
2015-05-28 00:06:57	doomrobo	or was it relegated to the unicode crate?
2015-05-28 00:06:57	mcpherrin	XMPPwocky: Just hope we don't stop including the USB cable so the retailer can sell it seperately for a bigger markup...
2015-05-28 00:07:00	jethrogb	oh yeah I remember being unable to do something selecty in windows
2015-05-28 00:07:03	jethrogb	without threads
2015-05-28 00:07:04	aatch	it's deprecated, but still there.
2015-05-28 00:07:19	doomrobo	ah, figured
2015-05-28 00:07:21	aatch	doomrobo, it's the way you should manage most strings, really.
2015-05-28 00:07:27	aatch	doomrobo, per-grapheme.
2015-05-28 00:07:34	carllerche	jethrogb: it is possible to do w/ the IOCP apis
2015-05-28 00:07:48	carllerche	but, they are pretty involved... still working on the details :)
2015-05-28 00:07:53	jethrogb	my code comment says "there is no way to unblock a thread that is blocking in a network call"
2015-05-28 00:08:42	jethrogb	oh well
2015-05-28 00:08:46	doomrobo	aatch, agreed, I think that's how most people intend to treat strings when they use chars. Also where is the unicode crate? Because it's not on crates.io
2015-05-28 00:09:01	<--	mattyb (mattyb@moz-oc3.h82.243.162.IP) has quit (Quit: leaving)
2015-05-28 00:09:13	-->	desophos (desophos@moz-h9facc.98ku.27p0.6000.2606.IP) has joined #rust
2015-05-28 00:09:27	@huon	doomrobo: there's several separate crates for different functionality, https://crates.io/search?q=unicode
2015-05-28 00:09:28	carllerche	jethrogb: yeah, unblocking "blocked" threads is not usually a good idea... and definitely tricky to implement in a portable fashion
2015-05-28 00:09:33	<--	IAmRasputin (rmg@moz-89l6lj.ct.comcast.net) has quit (Quit: WeeChat 1.0.1)
2015-05-28 00:09:58	<--	annodomini (lambda@moz-qgii5v.ma.comcast.net) has quit (Client exited)
2015-05-28 00:10:46	<--	trusty (Mibbit@moz-g77l04.ca.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-28 00:11:30	doomrobo	ah, graphemes is under unicode-segmentation
2015-05-28 00:11:34	-->	Rym (y@moz-c2u.sd4.38.217.IP) has joined #rust
2015-05-28 00:12:23	<--	orangeshark (erik@moz-pnk7v0.44tj.56ot.0306.2602.IP) has quit (Quit: Leaving)
2015-05-28 00:13:55	<--	wohiler (wohiler@moz-8id.6e1.62.133.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 00:14:35	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Connection closed)
2015-05-28 00:14:57	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-28 00:15:43	<--	kazimuth (james@moz-4fl.86t.92.209.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-28 00:16:08	<--	Rym (y@moz-c2u.sd4.38.217.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 00:17:14	-->	tmtwd (tmtwd@moz-0kkm5n.cable.rogers.com) has joined #rust
2015-05-28 00:17:23	<--	genbattle (genbattle@moz-4v0.gkd.16.182.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 00:17:27	<--	Kingsquee (kingsley@moz-3fm07c.bchsia.telus.net) has quit (Ping timeout: 121 seconds)
2015-05-28 00:18:02	<--	ajhager (aajhager@moz-mcdsgi.iplsin.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-28 00:18:53	-->	paupau (grrrr@moz-35edek.ca.comcast.net) has joined #rust
2015-05-28 00:19:01	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Ping timeout: 121 seconds)
2015-05-28 00:19:35	-->	nott (nott@moz-to4.06o.57.86.IP) has joined #rust
2015-05-28 00:20:09	<--	summerlight_ (summerlight@moz-99k.2mj.130.121.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 00:20:41	<--	durka42 (Adium@moz-qsuual.pa.comcast.net) has left #rust
2015-05-28 00:23:45	<--	colinsurprenant (colin@moz-q9ee1n.74.electronicbox.net) has quit (Client exited)
2015-05-28 00:23:53	-->	Rym (y@moz-c2u.sd4.38.217.IP) has joined #rust
2015-05-28 00:26:03	-->	Quxxy (chatzilla@moz-0nv.jkp.167.59.IP) has joined #rust
2015-05-28 00:27:12	<--	pcwalton (pcwalton@moz-l8ebtf.sfo1.mozilla.com) has quit (Client exited)
2015-05-28 00:27:23	-->	mib_rogy73 (Mibbit@moz-r7e.cvd.216.112.IP) has joined #rust
2015-05-28 00:27:33	<--	mib_rogy73 (Mibbit@moz-r7e.cvd.216.112.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-28 00:28:10	<--	pgonda (peter@moz-s36.0tp.134.75.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 00:28:26	<--	Rym (y@moz-c2u.sd4.38.217.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 00:29:19	-->	gsingh93 (gulshan@moz-ln1ktu.st3l.iv8o.0004.2601.IP) has joined #rust
2015-05-28 00:30:06	<--	johnsoft (johnsoft@moz-69mrig.res.rr.com) has quit (Ping timeout: 121 seconds)
2015-05-28 00:30:16	-->	fabiand (fabiand@moz-rrgunc.dip0.t-ipconnect.de) has joined #rust
2015-05-28 00:30:20	-->	johnsoft (johnsoft@moz-69mrig.res.rr.com) has joined #rust
2015-05-28 00:30:36	 *	mbrubeck has started work on another! https://github.com/mbrubeck/unicode-bidi
2015-05-28 00:31:59	-->	raisin (Mibbit@moz-48ltrf.cable.rcn.com) has joined #rust
2015-05-28 00:32:01	<--	raisin (Mibbit@moz-48ltrf.cable.rcn.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-28 00:32:08	<--	jdpage (jdpage@moz-3crs7j.res.rr.com) has quit (Connection closed)
2015-05-28 00:32:50	<--	eric_lagergren (barsonme@moz-e0h.6s0.39.134.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 00:34:28	-->	harrisonclarke (harrisoncla@moz-uur7pt.eastlink.ca) has joined #rust
2015-05-28 00:35:00	_habnabit	it seems like it shouldn't be difficult to say "here's a function that takes a mutable reference and returns something that contains a mutable reference; the passed object must necessarily live longer than the returned object"
2015-05-28 00:35:29	<--	narann (narann@moz-j49beg.dsl.netrevolution.com) has quit (Quit: Leaving)
2015-05-28 00:35:52	-->	hroi (hroi@moz-d273ub.static.netgroup.dk) has joined #rust
2015-05-28 00:36:32	<--	fabianvf (fabianvf@moz-fjqmui.va.comcast.net) has quit (Connection closed)
2015-05-28 00:37:03	-->	fabianvf (fabianvf@moz-fjqmui.va.comcast.net) has joined #rust
2015-05-28 00:38:06	<--	jiojiajiu (Guro@moz-trc2j7.asianet.co.th) has quit (Ping timeout: 121 seconds)
2015-05-28 00:38:06	&mbrubeck	_habnabit: fn f<'a, 'b: 'a, T>(x: &'b mut T) -> &'a mut T
2015-05-28 00:38:07	<--	johnsoft (johnsoft@moz-69mrig.res.rr.com) has quit (Ping timeout: 121 seconds)
2015-05-28 00:38:20	&mbrubeck	something like that?
2015-05-28 00:38:32	-->	johnsoft (johnsoft@moz-69mrig.res.rr.com) has joined #rust
2015-05-28 00:38:38	_habnabit	mbrubeck, that's approximately what i tried; see http://is.gd/td1Pmy
2015-05-28 00:38:40	<--	harrisonclarke (harrisoncla@moz-uur7pt.eastlink.ca) has quit (Ping timeout: 121 seconds)
2015-05-28 00:39:01	Mutabah	Acutally isn't that what "fn f<'a>(x: &'a mut T) -> U<'a>" does?
2015-05-28 00:39:59	<--	hroi (hroi@moz-d273ub.static.netgroup.dk) has quit (Ping timeout: 121 seconds)
2015-05-28 00:40:18	-->	ajhager (aajhager@moz-mcdsgi.iplsin.sbcglobal.net) has joined #rust
2015-05-28 00:40:29	njn	so there is std::boxed::into_raw and alloc::boxed::into_raw, but there's only alloc::boxed::Box::from_raw? huh
2015-05-28 00:41:01	sam113101	how do I install nightly?
2015-05-28 00:41:05	<--	fabianvf (fabianvf@moz-fjqmui.va.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-28 00:41:32	Mutabah	njn: The first two are the same
2015-05-28 00:41:47	chippers	sam113101, bottom of the install page http://www.rust-lang.org/install.html
2015-05-28 00:41:51	Mutabah	njn: and the latter is an associated function used to construct a Box from a raw pointer
2015-05-28 00:42:05	njn	Mutabah: it makes the required |use| statements weird :/
2015-05-28 00:42:16	Mutabah	(the into_raw is a free function to avoid cluttering up the Box's methods)
2015-05-28 00:42:24	njn	you naturally use them in pairs, but have to import them from totally different places
2015-05-28 00:42:40	Mutabah	njn: Box is in the prelude, so it's "Box::from_raw"
2015-05-28 00:42:56	-->	hjr3 (hradtke@moz-e235ok.fios.verizon.net) has joined #rust
2015-05-28 00:43:06	njn	Mutabah: aha, thank you
2015-05-28 00:43:12	 *	njn isn't sure what "the prelude" is
2015-05-28 00:43:14	Mutabah	and if you're using into_raw enough to want to import it, you're possibly doing something wrong (I would just put the full path)
2015-05-28 00:43:33	njn	ok, good suggestion
2015-05-28 00:43:41	@steveklabnik	njn: http://doc.rust-lang.org/stable/std/prelude/index.html
2015-05-28 00:43:43	aatch	_habnabit, not sure what's going on there. Might be a bug.
2015-05-28 00:43:47	Mutabah	njn: It's the list of names imported by default into every module.
2015-05-28 00:44:24	<--	nott (nott@moz-to4.06o.57.86.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 00:44:43	<--	maraoz (maraoz@moz-k72c1e.fibertel.com.ar) has quit (Ping timeout: 121 seconds)
2015-05-28 00:44:58	sam113101	thank you
2015-05-28 00:45:00	&mbrubeck	sam113101: You might also want https://github.com/brson/multirust if you want to be able to switch between nightly, beta, stable.
2015-05-28 00:45:16	njn	Mutabah: is this related to why I sometimes need std::foo and sometimes ::std::foo?
2015-05-28 00:45:25	Mutabah	njn: Not really
2015-05-28 00:45:41	<--	tristanseifert (tristanseif@moz-r0t7ns.res.rr.com) has quit (Ping timeout: 121 seconds)
2015-05-28 00:45:50	_habnabit	aatch, oh :(
2015-05-28 00:46:03	--	irc: disconnected from server
2015-05-28 00:46:14	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-28 00:46:14	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-28 00:46:14	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-28 00:46:14	--	Channel #rust: 965 nicks (14 ops, 0 halfops, 1 voice, 950 normals)
2015-05-28 00:46:16	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-28 00:46:44	@niconii	njn: well, except in `use` lines, there it's absolute
2015-05-28 00:47:10	_habnabit	aatch, i've been running into a bunch of weird errors around implied lifetimes, it seems
2015-05-28 00:47:25	 *	mbrubeck sometimes wonders if Rust should have required paths in `use` to start with ::
2015-05-28 00:47:26	_habnabit	aatch, things like "expected bound lifetime parameter ,"
2015-05-28 00:47:34	Mutabah	mbrubeck: Same
2015-05-28 00:47:47	&mbrubeck	It might reduce confusion, but it'd add two redundant characters to every import.
2015-05-28 00:48:02	Mutabah	mbrubeck: Well, afaik, it's optional now
2015-05-28 13:35:50	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-28 13:35:50	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-28 13:35:50	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-28 13:35:50	--	Channel #rust: 1021 nicks (12 ops, 0 halfops, 1 voice, 1008 normals)
2015-05-28 13:35:51	-->	jarrednicholls (uid19542@moz-cmdbn3.highgate.irccloud.com) has joined #rust
2015-05-28 13:35:52	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-28 13:35:56	&mbrubeck	dkreuter: I'm not sure if there are any specific docs about adding #[derive] plugins. http://brodoyouevencode.com/posts/how-to-write-a-rust-syntax-extension/ has some more generic docs. https://github.com/Manishearth/servo/commit/a46b47b9afa3bc185042d5730dde3c62779345ec is some example code. 
2015-05-28 13:36:03	<--	dstrbad (dstrbad@moz-vfo5vo.cable.xnet.hr) has quit (A TLS packet with unexpected length was received.)
2015-05-28 13:36:03	-->	jimb (user@moz-09a.i8g.126.207.IP) has joined #rust
2015-05-28 13:37:50	--	irc: disconnected from server
2015-05-28 13:38:22	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-28 13:38:22	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-28 13:38:22	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-28 13:38:22	--	Channel #rust: 1023 nicks (12 ops, 0 halfops, 1 voice, 1010 normals)
2015-05-28 13:38:24	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-28 13:38:38	<--	deadc0de (chsitter@moz-lrh.035.31.94.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-28 13:38:58	mib_3jda29	Hello! How do I check if a vector contains a value? The equivalent of ruby's [1,2,3].include?(3)
2015-05-28 13:39:19	-->	nott (nott@moz-to4.06o.57.86.IP) has joined #rust
2015-05-28 13:39:44	<--	kimwonyong (kimwonyong@moz-gfp.vhi.163.221.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 13:40:06	<--	nodweber (nodweber@moz-knt.fgq.178.5.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-28 13:40:10	--	zz_NameNotFound is now known as NameNotFound
2015-05-28 13:40:39	-->	ygrek (user@moz-8j9aeu.org.ua) has joined #rust
2015-05-28 13:40:47	XMPPwocky	rusti: [1, 2, 3].contains(3)
2015-05-28 13:40:48	--	Notice(playbot): <anon>:9:28: 9:29 error: mismatched types:
2015-05-28 13:40:49	--	Notice(playbot):  expected `&_`,
2015-05-28 13:40:49	--	Notice(playbot): output truncated; full output at: http://bit.ly/1EAAySe
2015-05-28 13:41:13	XMPPwocky	rusti: [1, 2, 3].contains(&3)
2015-05-28 13:41:14	--	Notice(playbot): true
2015-05-28 13:41:22	-->	Guest (textual@moz-rtn.fg7.77.192.IP) has joined #rust
2015-05-28 13:41:27	mib_3jda29	Thank you again XMPPwocky
2015-05-28 13:41:39	mib_3jda29	I think I owe you a beer at some point.
2015-05-28 13:41:42	mib_3jda29	I wish rust had a repl
2015-05-28 13:41:46	&mbrubeck	cholcombe: yes
2015-05-28 13:41:58	--	NameNotFound is now known as zz_NameNotFound
2015-05-28 13:42:04	&mbrubeck	mib_3jda29: https://github.com/murarth/rusti
2015-05-28 13:42:06	cholcombe	ok cool
2015-05-28 13:42:19	<--	Sho (sho@moz-de5aes.cust.telecolumbus.net) has quit (Quit: Konversation terminated!)
2015-05-28 13:42:21	<--	jyeo (jyeo@moz-do50ah.singnet.com.sg) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-05-28 13:42:34	<--	rudolph (rudolph@moz-2j5.b3k.89.195.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-28 13:43:33	-->	gandalf (zbraniecki@moz-cp7c4m.ca.comcast.net) has joined #rust
2015-05-28 13:43:58	-->	spider-mario (spidermario@moz-meu9c6.wb.wifirst.net) has joined #rust
2015-05-28 13:45:18	<--	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-28 13:45:51	-->	filsmick (filsmick@moz-0svev4.abo.wanadoo.fr) has joined #rust
2015-05-28 13:46:07	<--	annodomini (lambda@moz-hceqmj.hfc.comcastbusiness.net) has quit (Ping timeout: 121 seconds)
2015-05-28 13:46:22	cholcombe	mbrubeck: this crate system is nice.  i broke everything up into their own crates :)
2015-05-28 13:46:27	-->	annodomini (lambda@moz-hceqmj.hfc.comcastbusiness.net) has joined #rust
2015-05-28 13:46:36	<--	jjthrash (jjthrash@moz-la0q45.res.rr.com) has quit (Ping timeout: 121 seconds)
2015-05-28 13:46:41	-->	brendan (brendaneich@moz-boc.40s.170.209.IP) has joined #rust
2015-05-28 13:47:03	jarrednicholls	This is a completely contrived example, but shows sort of what I'm looking to do.  I think I already made a choice to avoid mem::replace and instead create a new instance of Socket and return it from the upgrade() method...which is good for ensuring drop() etc.  But if I wanted to do this sort of thing in theory, is there another way to move "stream" from
2015-05-28 13:47:03	jarrednicholls	inside of one enum variant to another?  https://gist.github.com/154a21da523585027d4a
2015-05-28 13:47:08	<--	skade (skade@moz-eetliv.pools.vodafone-ip.de) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-28 13:47:47	-->	Hannibal_Smith (nico@moz-itj1vp.retail.telecomitalia.it) has joined #rust
2015-05-28 13:47:54	-->	kushal (kdas@moz-0bg.hkq.143.114.IP) has joined #rust
2015-05-28 13:48:23	jarrednicholls	for instance in the case that TcpStream was not Clone
2015-05-28 13:48:31	-->	durka42 (Adium@moz-nbnmpt.wireless-pennnet.upenn.edu) has joined #rust
2015-05-28 13:48:40	-->	Sho (sho@moz-de5aes.cust.telecolumbus.net) has joined #rust
2015-05-28 13:48:45	jarrednicholls	would I need to do some unsafe manipulation of data?
2015-05-28 13:48:46	durka42	it seems like Cargo doesn't always run the build script. how does it decide?
2015-05-28 13:48:52	harrisonclarke	can anyone explain this error? the compiler wants T to implement Debug, but there are no values of type T, only T::Output. http://is.gd/1QUz8q
2015-05-28 13:48:55	-->	EspressoDan (EspressoDan@moz-1kt.vjg.211.140.IP) has joined #rust
2015-05-28 13:49:30	&mbrubeck	jarrednicholls: If you take the enum by ownership instead of reference, you can move out of it, create a new one, and return that new one...
2015-05-28 13:49:34	XMPPwocky	harrisonclarke: #[derive] adds implicit bounds on type parameters for the struct
2015-05-28 13:49:36	XMPPwocky	on the impl
2015-05-28 13:49:40	-->	jdm (jdm@moz-i5m.05u.207.66.IP) has joined #rust
2015-05-28 13:49:41	--	Mode #rust [+o jdm] by ChanServ
2015-05-28 13:49:45	jdub	i'm trying to cross compile with a target file, but having trouble
2015-05-28 13:49:56	XMPPwocky	harrisonclarke: Bar<T> is only Debug if T is
2015-05-28 13:50:00	meh	can Deref be used to get an &mut?
2015-05-28 13:50:01	jarrednicholls	mbrubeck: ok thanks, that's what I suspected
2015-05-28 13:50:03	-->	ugglan (ugglan@moz-rjubsq.priv.bahnhof.se) has joined #rust
2015-05-28 13:50:03	jdub	i've unpacked a nightly x64 build and added i686 rustlibs to it
2015-05-28 13:50:08	bluss	meh: no, DerefMut can
2015-05-28 13:50:13	jdub	if i build without a target file, it's fine, it finds core
2015-05-28 13:50:18	meh	ooh, nice
2015-05-28 13:50:19	meh	bluss, thanks
2015-05-28 13:50:24	jdub	use a target file and it fails :-(
2015-05-28 13:50:30	talchas	jarrednicholls: well, mem::replace(self, mem::uninitialized); ptr::write(self, newvalue); would certainly /work/, but unsafe
2015-05-28 13:50:47	<--	mib_3jda29 (Mibbit@moz-g0i02j.dsl.telepac.pt) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-28 13:50:52	jarrednicholls	talchas: cool, thanks
2015-05-28 13:50:53	XMPPwocky	talchas: then destructors run on mem::uninitialized
2015-05-28 13:50:54	XMPPwocky	which is Bad News
2015-05-28 13:51:03	-->	JanC (janc@moz-olsksc.dsl.scarlet.be) has joined #rust
2015-05-28 13:51:08	talchas	XMPPwocky: that's why I did ptr::write rather than a second replace
2015-05-28 13:51:15	talchas	I think that's the right one, yes?
2015-05-28 13:51:21	-->	paupau (grrrr@moz-35edek.ca.comcast.net) has joined #rust
2015-05-28 13:51:41	meh	bluss, how come DerefMut has no Target?
2015-05-28 13:51:43	jdub	do i need to do anything else other than copy the rustlibs to add an arch for cross-compile?
2015-05-28 13:51:47	XMPPwocky	talchas: ah, yes, my bad
2015-05-28 13:52:34	talchas	meh: it has the same target as the Deref impl
2015-05-28 13:52:44	<--	brendan (brendaneich@moz-boc.40s.170.209.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 13:52:54	talchas	(you have to implement Deref, and you can't have different types for & and &mut)
2015-05-28 13:52:58	meh	talchas, ah yeah, I missed the : Deref, thanks
2015-05-28 13:53:00	-->	south_fish (south_fish@moz-v21.spo.147.217.IP) has joined #rust
2015-05-28 13:54:22	<--	harrisonclarke (harrisoncla@moz-6v8.jf9.227.142.IP) has quit (Connection closed)
2015-05-28 13:54:28	-->	ai (ai@moz-pqofrl.sunline.net.ua) has joined #rust
2015-05-28 13:54:42	-->	avikpal (avikpal@moz-020.igl.194.117.IP) has joined #rust
2015-05-28 13:55:29	bluss	meh: the compiler wants Deref and DerefMut to have the same target, so that it can guess if & or &mut is needed correctly
2015-05-28 13:55:41	-->	iu (iu@moz-6263qv.cc.cmu.edu) has joined #rust
2015-05-28 13:55:46	Morten	Can closures be recursive?
2015-05-28 13:56:32	talchas	no
2015-05-28 13:56:58	talchas	I'm not sure if this is required for safety in the typesystem, my initial guess is it would be fine
2015-05-28 13:57:00	-->	bfrog (tburdick@moz-hde.5e5.136.67.IP) has joined #rust
2015-05-28 13:57:06	<--	south_fish (south_fish@moz-v21.spo.147.217.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 13:57:22	-->	jjthrash (jjthrash@moz-la0q45.res.rr.com) has joined #rust
2015-05-28 13:57:45	Morten	I hope there'a a good reason, it's a very annoying limitation
2015-05-28 13:58:22	<--	EspressoDan (EspressoDan@moz-1kt.vjg.211.140.IP) has quit (Client exited)
2015-05-28 13:58:22	iu	Hi! If a C function takes an optional callback, how to pass NULL to that function? I tried `0 as extern fn(…)`, but it doesn’t seem to work.
2015-05-28 13:58:26	<--	gsingh93 (gulshan@moz-ln1ktu.st3l.iv8o.0004.2601.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 13:58:41	-->	eckhardt (eckhardt@moz-s9e.ov1.227.199.IP) has joined #rust
2015-05-28 13:58:45	-->	SpaceManiac (Tad@moz-ichs44.dyn.suddenlink.net) has joined #rust
2015-05-28 13:58:46	talchas	iu: declare it as taking Option<extern fn()>, and pass None
2015-05-28 13:58:48	-->	slurps-mad-rips (slurps-mad-@moz-o2c.uaj.44.17.IP) has joined #rust
2015-05-28 13:58:56	-->	iq-0 (Mibbit@moz-aqngrc.adsl.xs4all.nl) has joined #rust
2015-05-28 13:59:00	bluss	Morten: an Fn-implementing closure can call itself if you use a combinator
2015-05-28 13:59:01	<--	fabianvf (fabianvf@moz-fjqmui.va.comcast.net) has quit (Connection closed)
2015-05-28 13:59:04	talchas	(fn() is specifically a non-null function)
2015-05-28 13:59:14	<--	quiggle (Mibbit@moz-ki50p6.sch.bme.hu) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-28 13:59:17	-->	fabianvf (fabianvf@moz-fjqmui.va.comcast.net) has joined #rust
2015-05-28 13:59:31	iu	talchas: Declare that function as taking Rust’s Option??
2015-05-28 13:59:33	iq-0	hello
2015-05-28 13:59:35	bluss	Morten: but FnMut isn't possible since it would imply aliasing mutable access to captures
2015-05-28 13:59:59	iu	talchas: How does that work?
2015-05-28 14:00:13	geofft	iu: https://doc.rust-lang.org/book/ffi.html#the-"nullable-pointer-optimization" 
2015-05-28 14:01:24	-->	p32blo (p32blo@moz-qr0u8a.dsl.telepac.pt) has joined #rust
2015-05-28 14:01:38	<--	avikpal (avikpal@moz-020.igl.194.117.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 14:01:40	<--	iq-0 (Mibbit@moz-aqngrc.adsl.xs4all.nl) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-28 14:01:45	iu	geofft: That explains everything) Thanks!
2015-05-28 14:02:28	iu	talchas: Thanks!
2015-05-28 14:02:45	<--	demilux (demilux@moz-fk1.kt4.14.64.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-28 14:03:00	<--	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-28 14:05:21	<--	pyon (pyon@moz-b0l.mdl.7.179.IP) has quit (Quit: fix config)
2015-05-28 14:06:30	<--	edbrereton (edbrereton@moz-bn6.tah.166.188.IP) has quit (Quit: WeeChat 1.1.1)
2015-05-28 14:06:46	<--	colinsurprenant (colin@moz-rmn4e2.169.electronicbox.net) has quit (Ping timeout: 121 seconds)
2015-05-28 14:07:19	jarrednicholls	mbrubeck: back to my contrived example: in my real case, the upgrade can fail and in that case I wouldn't want my original stream to be moved out of the Socket::Tcp() variant or dropped, etc.  It would be a no-op in the failure case.  My real case I can clone the stream so this works out great...but if I couldn't clone the stream, is there a "Rust" way to
2015-05-28 14:07:19	jarrednicholls	accomplish that
2015-05-28 14:07:46	jarrednicholls	and by "Rust" I mean safe
2015-05-28 14:07:48	-->	dstrbad (dstrbad@moz-stb24m.dsl.iskon.hr) has joined #rust
2015-05-28 14:08:03	jarrednicholls	maybe I should alter the toy example
2015-05-28 14:08:33	<--	guewen (guewen@moz-ftf7u4.cust.swisscom.ch) has quit (Ping timeout: 121 seconds)
2015-05-28 14:09:08	-->	colinsurprenant (colin@moz-rmn4e2.169.electronicbox.net) has joined #rust
2015-05-28 14:09:09	durka42	is there a way to convince Cargo to run my build script every time? it's running "make" for an external dependency, but it seems like Cargo doesn't feel like doing that unless the build script has changed
2015-05-28 14:09:13	-->	lucian (lucian@moz-2c3pda.cable.virginm.net) has joined #rust
2015-05-28 14:10:35	geri	are there global variables in rust?
2015-05-28 14:10:51	-->	pyon (pyon@moz-b0l.mdl.7.179.IP) has joined #rust
2015-05-28 14:10:52	&mbrubeck	durka42: Does the external dependency live in the same repo/directory as the Cargo project that builds it?
2015-05-28 14:11:02	durka42	yes
2015-05-28 14:11:08	<--	veqz_ (veqz@moz-s81.ojo.70.110.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 14:11:08	-->	vosen (vosen@moz-mtm1g4.dynamic.chello.pl) has joined #rust
2015-05-28 14:11:19	durka42	mbrubeck: I have it as a git submodule right now
2015-05-28 14:11:45	durka42	but it's not Rust, so I can't just make it a dependency, because Cargo can't deal with the lack of a Cargo.toml
2015-05-28 14:11:46	&mbrubeck	durka42: Hmm... Cargo will build every time if you have a custom build script and something in your repo changes... but that might not include changes in submodules.
2015-05-28 14:12:11	futile	subtree instead of submodule?
2015-05-28 14:12:21	futile	though I agree thats not really a solution to tthe problem
2015-05-28 14:12:32	&mbrubeck	durka42: Our usual solution is to make a "-sys" package for the C library just to build it, like https://github.com/servo/libfontconfig
2015-05-28 14:12:37	durka42	futile: I really don't understand the difference between those two :)
2015-05-28 14:12:40	&mbrubeck	durka42: Which is a dependency of the actual bindings at https://github.com/servo/rust-fontconfig
2015-05-28 14:13:03	-->	chc4 (chc4@moz-pdo0at.ma.comcast.net) has joined #rust
2015-05-28 14:13:08	durka42	I see
2015-05-28 14:13:15	<--	lucian (lucian@moz-2c3pda.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2015-05-28 14:13:15	futile	durka42: well, you might have noticed all the submodule update and clone --recursive stuff, with subtree you don't have that
2015-05-28 14:13:22	-->	pcwalton (pcwalton@moz-l8ebtf.sfo1.mozilla.com) has joined #rust
2015-05-28 14:13:22	--	Mode #rust [+ao pcwalton pcwalton] by ChanServ
2015-05-28 14:13:25	durka42	so subtree is just better?
2015-05-28 14:13:29	futile	you simply have the files in your repository(with information of their origin)
2015-05-28 14:13:32	futile	depends
2015-05-28 14:13:48	durka42	see, this is why I've never gotten a straight answer on what the hell the difference is :p
2015-05-28 14:13:54	<--	SneakySnake (nya@moz-i9is4u.pool.telekom.hu) has quit (Quit: Leaving)
2015-05-28 14:14:45	futile	I think I'd favor subtree for must-have dependencies
2015-05-28 14:14:55	futile	submodules can be kind of 'optional'
2015-05-28 14:15:06	-->	demilux (demilux@moz-fk1.kt4.14.64.IP) has joined #rust
2015-05-28 14:15:12	futile	but that's still not really a good explanation
2015-05-28 14:15:43	durka42	ahhh
2015-05-28 14:15:48	durka42	it doesn't notice if files change that are not tracked by git
2015-05-28 14:15:53	durka42	that really really really needs to be documented!
2015-05-28 14:16:18	-->	rudolph (rudolph@moz-q5b.rfa.152.37.IP) has joined #rust
2015-05-28 14:16:34	futile	also there is #cargo by the way
2015-05-28 14:16:46	durka42	okay maybe I should go rant in there :)
2015-05-28 14:16:50	<--	paupau (grrrr@moz-35edek.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-28 14:17:28	--	zz_NameNotFound is now known as NameNotFound
2015-05-28 14:17:30	<--	dstrbad (dstrbad@moz-stb24m.dsl.iskon.hr) has quit (A TLS packet with unexpected length was received.)
2015-05-28 14:17:35	<--	blank_name (blank_name@moz-tmq.fli.183.192.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 14:18:12	-->	mkpankov` (mkpankov@moz-ejg.3mh.23.84.IP) has joined #rust
2015-05-28 14:18:12	<--	mkpankov (mkpankov@moz-ve0.jvq.149.83.IP) has quit (Connection closed)
2015-05-28 14:20:23	<--	rudolph (rudolph@moz-q5b.rfa.152.37.IP) has quit (Connection closed)
2015-05-28 14:20:40	-->	lorenzb (textual@moz-p6jb5i.ethz.ch) has joined #rust
2015-05-28 14:20:45	-->	rudolph (rudolph@moz-7fg.0cr.201.199.IP) has joined #rust
2015-05-28 14:22:06	-->	Shackra (Jorge@moz-7bh.ng6.177.186.IP) has joined #rust
2015-05-28 14:22:11	<--	summerlight_ (summerlight@moz-99k.2mj.130.121.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 14:22:12	<--	nott (nott@moz-to4.06o.57.86.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 14:23:57	-->	blank_name (blank_name@moz-fc8n1s.mi.frontiernet.net) has joined #rust
2015-05-28 14:24:18	-->	EspressoDan (EspressoDan@moz-1kt.vjg.211.140.IP) has joined #rust
2015-05-28 14:24:56	<--	Quxxy (chatzilla@moz-0nv.jkp.167.59.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 14:25:12	<--	EspressoDan (EspressoDan@moz-1kt.vjg.211.140.IP) has quit (Client exited)
2015-05-28 14:25:22	dkreuter	If I have an expression like [subexpr1, subexpr2, subexpr3][selector], how can I make sure that the temporary array doesn't actually get allocated anywhere?
2015-05-28 14:25:48	XMPPwocky	dkreuter: it almost certainly will end up being a jump table
2015-05-28 14:25:57	XMPPwocky	but it's probably more idiomatic to write a match
2015-05-28 14:26:01	-->	avikpal (avikpal@moz-6n1.loq.194.117.IP) has joined #rust
2015-05-28 14:26:10	XMPPwocky	match selector { 0 => subexpr1, 1 => subexpr2, 2 => subexpr3 ... }
2015-05-28 14:26:52	dkreuter	I thought it would be more compact syntactically, if I wrote it like this.
2015-05-28 14:27:11	XMPPwocky	well
2015-05-28 14:27:22	XMPPwocky	i mean, that temporary array needs to end up *somewhere*
2015-05-28 14:27:53	-->	lenstr (lenstr@moz-csu.vju.25.171.IP) has joined #rust
2015-05-28 14:28:22	<--	Guest (textual@moz-rtn.fg7.77.192.IP) has quit (Connection closed)
2015-05-28 14:28:28	-->	Guest (textual@moz-rtn.fg7.77.192.IP) has joined #rust
2015-05-28 14:29:45	-->	Binero (jeroen@moz-91joat.69vi.s4ge.1810.2a02.IP) has joined #rust
2015-05-28 14:29:59	<--	p32blo (p32blo@moz-qr0u8a.dsl.telepac.pt) has quit (Ping timeout: 121 seconds)
2015-05-28 14:30:15	<--	wei2912 (wei2912@moz-qcm.2f6.156.175.IP) has quit (Quit: Lost terminal)
2015-05-28 14:30:46	<--	avikpal (avikpal@moz-6n1.loq.194.117.IP) has quit (Connection closed)
2015-05-28 14:31:18	XMPPwocky	http://is.gd/eTZlwO
2015-05-28 14:31:20	XMPPwocky	lol
2015-05-28 14:31:26	-->	brson (brson@moz-48fqub.res.rr.com) has joined #rust
2015-05-28 14:31:26	--	Mode #rust [+ao brson brson] by ChanServ
2015-05-28 14:31:28	XMPPwocky	emits multi-gb binary
2015-05-28 14:31:31	-->	Jesse (jruderman@moz-36amo0.ujol.1ibb.0101.2620.IP) has joined #rust
2015-05-28 14:31:42	XMPPwocky	in release it optimizes out, though
2015-05-28 14:32:02	dkreuter	:/
2015-05-28 14:32:15	dkreuter	I was hoping to do something like
2015-05-28 14:32:16	bluss	XMPPwocky: is that more worrying than your semicolon style?
2015-05-28 14:32:49	XMPPwocky	bluss: what's wrong with my semicolon style
2015-05-28 14:32:49	XMPPwocky	?
2015-05-28 14:32:50	-->	flacko (chatzilla@moz-iprvq7.cgates.lt) has joined #rust
2015-05-28 14:32:58	thelink2012	should I use extern "C" or extern?
2015-05-28 14:32:59	bluss	hanging ; are not pretty
2015-05-28 14:33:25	flacko	Is there single line command argument parser? Like, if I have command "ls -lh" I'd like to receive array of ["ls","-lh"]
2015-05-28 14:33:36	XMPPwocky	thelink2012: extern, theyre the same tihng
2015-05-28 14:33:40	-->	harrisonclarke (harrisoncla@moz-6v8.jf9.227.142.IP) has joined #rust
2015-05-28 14:33:48	seanmonstar	flacko: std::env::args()?
2015-05-28 14:33:57	bluss	flacko: I don't think there is
2015-05-28 14:34:21	flacko	seanmonstar: No, I mean I receive raw string from third party, not args to the rust program
2015-05-28 14:34:42	&mbrubeck	Maybe one of the people writing a shell in Rust has written code for that...
2015-05-28 14:34:43	seanmonstar	oh
2015-05-28 14:34:44	<--	arBmind (Andreas@moz-gu3v12.adsl.alicedsl.de) has quit (Quit: Leaving.)
2015-05-28 14:34:51	bluss	flacko: it's not completely trivial to do it right
2015-05-28 14:35:05	-->	thlst (thelost@moz-3dp82k.fittelecom.com.br) has joined #rust
2015-05-28 14:35:18	flacko	bluss: Actually, I need just to launch that command on shell as it is, I have a string and I need to run it, but current process wants me to chunk it into executable name, args and etc.
2015-05-28 14:35:19	-->	arBmind (Andreas@moz-gu3v12.adsl.alicedsl.de) has joined #rust
2015-05-28 14:35:27	<--	arBmind (Andreas@moz-gu3v12.adsl.alicedsl.de) has quit (Quit: Leaving.)
2015-05-28 14:35:30	seanmonstar	the naive way is to split on ' '
2015-05-28 14:35:51	seanmonstar	though if an arg is quoted and has a space, you're broken
2015-05-28 14:35:52	flacko	Yeah, I wrote a regex, but If I have space in single arguments and they are in quotes it fails
2015-05-28 14:36:43	-->	daschl (Adium@moz-oirn1i.vie.surfer.at) has joined #rust
2015-05-28 14:36:47	&mbrubeck	I wrote a command-line parser in Haskell/Parsec... :) https://github.com/mbrubeck/compleat/blob/master/Tokenize.hs
2015-05-28 14:36:59	flacko	Can I just rather launch process just passing in "ls -lh" to the shell rather than give it chunked to std::process::Command
2015-05-28 14:37:01	bluss	flacko: you can pass the command to sh
2015-05-28 14:37:06	seanmonstar	https://crates.io/crates/pirate ?
2015-05-28 14:37:34	dkreuter	Is there any way I can avoid allocating memory for the array in "fn extract_from_enum<Aspect>(e: &EnumX, a: &Aspect) -> Aspect::Output { match *e { Case1(x, y) => a.extract([x,y]), Case2(x, y, z) => a.extract([x, y, z]) } }" with "LenAspect<T>::extract(&[T])->usize" that returns slice length and "NthItemAspect<T>::extract(&[T])->T" that returns a specific item from the list.
2015-05-28 14:37:47	-->	saterus (saterus@moz-o5jn2e.res.rr.com) has joined #rust
2015-05-28 14:38:00	futile	dkreuter: can you paste that in a pastebin or something? for example the rust playground
2015-05-28 14:38:12	-->	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has joined #rust
2015-05-28 14:38:18	<--	goyox86 (textual@moz-qfs.570.70.83.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 14:38:25	flacko	seanmonstar: Hm, that seems to deal with env::args
2015-05-28 14:38:25	dkreuter	futile, for indentation yes, but it's not runnable atm
2015-05-28 14:38:43	futile	yeah, just for formatting/readability
2015-05-28 14:38:51	futile	also so that more discussion won't push it away :)
2015-05-28 14:39:42	flacko	bluss: After reading your answer I didn't get it at first, but now it makes sense, thanks!
2015-05-28 14:40:04	seanmonstar	dkreuter: you mean allocating [x, y, z]?
2015-05-28 14:40:11	bluss	flacko: you were thinking the same thing, running sh -c ?
2015-05-28 14:40:17	geri	what will i need to assign data here? http://is.gd/DkVU3q
2015-05-28 14:40:24	dkreuter	seanmonstar, yes
2015-05-28 14:40:31	-->	nodweber (nodweber@moz-knt.fgq.178.5.IP) has joined #rust
2015-05-28 14:40:34	seanmonstar	dkreuter: on the stack?
2015-05-28 14:40:40	<--	rudolph (rudolph@moz-7fg.0cr.201.199.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-28 14:41:03	-->	rudolph (rudolph@moz-s6bjv9.o3k5.dsq9.010d.2620.IP) has joined #rust
2015-05-28 14:41:14	dkreuter	it would be nice if it had the same performance characteristics as match index {0=>subexpr1, 1=>subexpr2, 2=>subexpr3}
2015-05-28 14:41:18	dkreuter	so nothing on the stack or heap
2015-05-28 14:41:34	flacko	bluss: No, I was think chunking arguments manually which would be a pain, your solution is way superior
2015-05-28 14:42:04	talchas	geri: http://is.gd/Ux6Ha0 for null
2015-05-28 14:42:12	seanmonstar	dkreuter: can you change your enums to `Case1([T; 2]), Case2([T; 3])`?
2015-05-28 14:42:38	dkreuter	seanmonstar, I intend them to be named later, so rather not
2015-05-28 14:42:43	dkreuter	(else it would be easy)
2015-05-28 14:42:56	seanmonstar	i'd say you could maybe transmute, but im not sure tuple layout and array layout match
2015-05-28 14:43:18	<--	harrisonclarke (harrisoncla@moz-6v8.jf9.227.142.IP) has quit (Connection closed)
2015-05-28 14:43:28	seanmonstar	or hm.. as an enum, even the smaller variant has the same size as the bigger array, huh
2015-05-28 14:44:08	-->	harrisonclarke (harrisoncla@moz-6v8.jf9.227.142.IP) has joined #rust
2015-05-28 14:44:39	<--	nodweber (nodweber@moz-knt.fgq.178.5.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 14:45:36	<--	vmeson (rmacleod@moz-hq5.1km.224.128.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 14:46:54	<--	mindtree (Mitch@moz-7je6p0.iprimus.net.au) has quit (Ping timeout: 121 seconds)
2015-05-28 14:47:17	<--	dkreuter (knizz@moz-ahcrr8.qm40.8r0u.0858.2001.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 14:48:25	<--	partkyle (partkyle@moz-e8m.r65.206.12.IP) has quit (Client exited)
2015-05-28 14:48:25	<--	thlst (thelost@moz-3dp82k.fittelecom.com.br) has quit (Connection closed)
2015-05-28 14:48:33	<--	durka42 (Adium@moz-nbnmpt.wireless-pennnet.upenn.edu) has quit (Quit: Leaving.)
2015-05-28 14:48:40	<--	lenstr (lenstr@moz-csu.vju.25.171.IP) has quit (Quit: Leaving...)
2015-05-28 14:49:15	<--	pgonda (peter@moz-s36.0tp.134.75.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 14:49:34	<--	CMCDragonkai (nobody@moz-v01.321.218.216.IP) has left #rust
2015-05-28 14:49:40	-->	CMCDragonkai (nobody@moz-v01.321.218.216.IP) has joined #rust
2015-05-28 14:49:48	-->	thlst (thelost@moz-3dp82k.fittelecom.com.br) has joined #rust
2015-05-28 14:50:22	-->	arBmind (Andreas@moz-kq8aqi.adsl.alicedsl.de) has joined #rust
2015-05-28 14:50:58	<--	fabiand (fabiand@moz-kum6nk.dip0.t-ipconnect.de) has quit (Quit: Verlassend)
2015-05-28 14:51:44	<--	kngl (Adium@moz-m3a3bq.ipv4.evonet.be) has quit (Ping timeout: 121 seconds)
2015-05-28 14:51:47	-->	tilde (namidasshu@moz-3gs.igt.238.95.IP) has joined #rust
2015-05-28 14:51:52	<--	gingermusketeer (gingermuske@moz-6ocrkk.compute.amazonaws.com) has quit (Connection closed)
2015-05-28 14:52:04	-->	gingermusketeer (gingermuske@moz-soim45.compute.amazonaws.com) has joined #rust
2015-05-28 14:52:46	-->	gsingh93 (gulshan@moz-ln1ktu.st3l.iv8o.0004.2601.IP) has joined #rust
2015-05-28 14:54:05	<--	rudolph (rudolph@moz-s6bjv9.o3k5.dsq9.010d.2620.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 14:54:20	-->	Jackneill (Jackneill@moz-spruc7.pool.digikabel.hu) has joined #rust
2015-05-28 14:55:08	<--	brson (brson@moz-48fqub.res.rr.com) has quit (Quit: leaving)
2015-05-28 14:56:21	<--	fabianvf (fabianvf@moz-fjqmui.va.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-28 14:56:22	-->	arBmind1 (Andreas@moz-kq8aqi.adsl.alicedsl.de) has joined #rust
2015-05-28 14:56:26	<--	jiojiajiu (Guro@moz-trc2j7.asianet.co.th) has quit (Connection closed)
2015-05-28 14:56:28	<--	Havvy (Havvy@moz-epv20b.wa.comcast.net) has quit (Connection closed)
2015-05-28 14:56:32	-->	jiojiajiu (Guro@moz-trc2j7.asianet.co.th) has joined #rust
2015-05-28 14:56:54	-->	Havvy (Havvy@moz-2v0ao2.5euu.k9bm.0007.2601.IP) has joined #rust
2015-05-28 14:57:24	-->	SneakySnake (nya@moz-i9is4u.pool.telekom.hu) has joined #rust
2015-05-28 14:57:49	-->	mgottschlag (quassel@moz-8uvcc8.hsi15.kabel-badenwuerttemberg.de) has joined #rust
2015-05-28 14:57:55	<--	arBmind (Andreas@moz-kq8aqi.adsl.alicedsl.de) has quit (Ping timeout: 121 seconds)
2015-05-28 14:58:51	-->	pohl (textual@moz-rln.lhm.51.74.IP) has joined #rust
2015-05-28 14:59:07	-->	fede (fede@moz-p7rudj.8bad.idsi.8109.2a02.IP) has joined #rust
2015-05-28 14:59:31	-->	fabianvf (fabianvf@moz-fjqmui.va.comcast.net) has joined #rust
2015-05-28 14:59:41	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Connection closed)
2015-05-28 14:59:46	-->	dkreuter (knizz@moz-fes.iga.129.213.IP) has joined #rust
2015-05-28 15:00:02	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-28 15:01:17	--	AutomatedTester|AFK is now known as AutomatedTester
2015-05-28 15:01:18	<--	thlst (thelost@moz-3dp82k.fittelecom.com.br) has quit (Connection closed)
2015-05-28 15:02:34	seanmonstar	hm, is there a way to conditionally include a part of the docs?
2015-05-28 15:02:51	-->	thlst (thelost@moz-3dp82k.fittelecom.com.br) has joined #rust
2015-05-28 15:03:04	seanmonstar	say, a method only exists if cfg(feature = "foo"), and the top level docs show using that method..
2015-05-28 15:03:13	-->	dstrbad (dstrbad@moz-stb24m.dsl.iskon.hr) has joined #rust
2015-05-28 15:03:19	<--	Guest38 (textual@moz-4hh.6p3.217.74.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-28 15:03:21	-->	jacor_m (jacor_m@moz-vemspr.or.comcast.net) has joined #rust
2015-05-28 15:04:04	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Ping timeout: 121 seconds)
2015-05-28 15:04:06	<--	TheHydroImpulse (TheHydroImp@moz-r25mqk.ed.shawcable.net) has quit (Ping timeout: 121 seconds)
2015-05-28 15:04:13	-->	turtil_ (turtil@moz-gfc.es4.23.103.IP) has joined #rust
2015-05-28 15:04:27	SpaceManiac	seanmonstar: you could probably #[cfg_attr(..., doc(...))]
2015-05-28 15:04:53	-->	fabianvf_ (fabianvf@moz-fjqmui.va.comcast.net) has joined #rust
2015-05-28 15:04:53	<--	fabianvf (fabianvf@moz-fjqmui.va.comcast.net) has quit (Connection closed)
2015-05-28 15:05:01	XMPPwocky	does rustdoc know about cfg_attr?
2015-05-28 15:05:04	<--	chc4 (chc4@moz-pdo0at.ma.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-28 15:05:25	-->	grodan (Mibbit@moz-o5eg8b.bredband.comhem.se) has joined #rust
2015-05-28 15:05:53	-->	partkyle (partkyle@moz-e8m.r65.206.12.IP) has joined #rust
2015-05-28 15:05:58	-->	dfinninger (dfinninger@moz-fe6.5n7.235.207.IP) has joined #rust
2015-05-28 15:07:42	<--	harrisonclarke (harrisoncla@moz-6v8.jf9.227.142.IP) has quit (Connection closed)
2015-05-28 15:07:51	-->	harrisonclarke (harrisoncla@moz-6v8.jf9.227.142.IP) has joined #rust
2015-05-28 15:08:01	-->	cteef (derrick@moz-vno.jt7.17.184.IP) has joined #rust
2015-05-28 15:08:07	SpaceManiac	seems so, yes
2015-05-28 15:09:03	-->	Blei (philipp@moz-k6lbjp.dynamic.hispeed.ch) has joined #rust
2015-05-28 15:09:22	<--	futile (felix@moz-cmcd12.unity-media.net) has quit (Quit: WeeChat 1.2-rc1)
2015-05-28 15:09:49	-->	lucian (lucian@moz-2c3pda.cable.virginm.net) has joined #rust
2015-05-28 15:10:19	<--	partkyle (partkyle@moz-e8m.r65.206.12.IP) has quit (Quit: Textual IRC Client: www.textualapp.com)
2015-05-28 15:10:27	-->	niconii (nicole@moz-fdmjth.frgo.qwest.net) has joined #rust
2015-05-28 15:10:27	--	Mode #rust [+o niconii] by ChanServ
2015-05-28 15:11:27	-->	bur_sangjun (bur_sangjun@moz-7rlpks.range86-156.btcentralplus.com) has joined #rust
2015-05-28 15:11:28	-->	TheHydroImpulse (TheHydroImp@moz-r25mqk.ed.shawcable.net) has joined #rust
2015-05-28 15:11:31	<--	jjthrash (jjthrash@moz-la0q45.res.rr.com) has quit (Quit: Leaving...)
2015-05-28 15:12:01	-->	circ-user-nEhEa (circuser-nE@moz-e8m.r65.206.12.IP) has joined #rust
2015-05-28 15:12:03	<--	cteef (derrick@moz-vno.jt7.17.184.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 15:12:37	<--	circ-user-nEhEa (circuser-nE@moz-e8m.r65.206.12.IP) has quit (Connection closed)
2015-05-28 15:12:41	-->	vmeson (rmacleod@moz-hs5cri.cable.teksavvy.com) has joined #rust
2015-05-28 15:12:47	-->	circ-user-LuWly (circuser-Lu@moz-e8m.r65.206.12.IP) has joined #rust
2015-05-28 15:13:19	<--	amnn (amnn@moz-ro1qqu.ox.ac.uk) has quit (Ping timeout: 121 seconds)
2015-05-28 15:13:51	<--	lucian (lucian@moz-2c3pda.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2015-05-28 15:14:13	<--	Morten (Morten@moz-ouf18k.eduroam.uib.no) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-05-28 15:14:18	--	darkowlzz is now known as darkowlzz|afk
2015-05-28 15:14:25	lorenzb	Does anybody here have experience with contributing to rust's documentation?
2015-05-28 15:14:32	<--	nwin (textual@moz-rmebj6.pools.arcor-ip.net) has quit (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
2015-05-28 15:14:40	--	darkowlzz|afk is now known as darkowlzz
2015-05-28 15:14:59	AutomatedTester	steveklabnik: ^
2015-05-28 15:15:04	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-28 15:15:07	seanmonstar	lorenzb: several do, have a question?
2015-05-28 15:15:15	-->	amnn (amnn@moz-ro1qqu.ox.ac.uk) has joined #rust
2015-05-28 15:15:30	lorenzb	Yes
2015-05-28 15:15:38	lorenzb	I was confused by how something worked and checked the reference (without finding anything). Then I checked the RFCs and found out what's happening.
2015-05-28 15:15:53	@steveklabnik	lorenzb: hi there! thanks for offering.  we're an open book :)
2015-05-28 15:15:55	lorenzb	Should I extend the reference and send a pull request?
2015-05-28 15:15:59	@steveklabnik	yes, that would be great
2015-05-28 15:16:25	@steveklabnik	the reference isn't really complete yet
2015-05-28 15:16:26	-->	durka42 (Adium@moz-2e50jm.o2oh.k96e.f470.2607.IP) has joined #rust
2015-05-28 15:16:39	lorenzb	Ok. I'll give it a go and submit a PR with you as the reviewer if that's all right with you
2015-05-28 15:16:40	<--	Nextra (Nextra@moz-fbamoc.ewe-ip-backbone.de) has quit (Ping timeout: 121 seconds)
2015-05-28 15:16:50	-->	Nextra (Nextra@moz-fbamoc.ewe-ip-backbone.de) has joined #rust
2015-05-28 15:16:58	@steveklabnik	please do!
2015-05-28 15:16:59	<--	thlst (thelost@moz-3dp82k.fittelecom.com.br) has left #rust
2015-05-28 15:17:12	-->	Diggsey (diggsey@moz-9engq5.dsl.pipex.com) has joined #rust
2015-05-28 15:17:55	<--	eric_lagergren (barsonme@moz-hshokg.q6t2.2174.0008.2601.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 15:18:03	<--	fabianvf_ (fabianvf@moz-fjqmui.va.comcast.net) has quit (Connection closed)
2015-05-28 15:18:14	-->	nercury (nercury@moz-8h0btl.static.zebra.lt) has joined #rust
2015-05-28 15:18:18	-->	bhamilton (bhamilton@moz-ogg.q0h.210.105.IP) has joined #rust
2015-05-28 15:18:34	<--	bhamilton (bhamilton@moz-ogg.q0h.210.105.IP) has quit (Connection closed)
2015-05-28 15:18:40	-->	bhamilton (bhamilton@moz-ogg.q0h.210.105.IP) has joined #rust
2015-05-28 15:18:56	<--	durka42 (Adium@moz-2e50jm.o2oh.k96e.f470.2607.IP) has quit (Quit: Leaving.)
2015-05-28 15:18:57	<--	bhamilton (bhamilton@moz-ogg.q0h.210.105.IP) has quit (Connection closed)
2015-05-28 15:19:25	-->	Guest38 (textual@moz-4hh.6p3.217.74.IP) has joined #rust
2015-05-28 15:20:05	filsmick	how can I access a private field of a struct?
2015-05-28 15:20:27	XMPPwocky	filsmick: move your code into the module the struct is defined.
2015-05-28 15:20:34	filsmick	the Reference says it is not unsafe to access a private field: https://doc.rust-lang.org/reference.html#behavior-not-considered-unsafe , but doesn't specify *how* this can be done
2015-05-28 15:21:06	filsmick	XMPPwocky: I'm talking about a different kind of access here, external access 
2015-05-28 15:21:10	<--	Pavel (Pavel@moz-a8qgi0.lidos.cz) has quit (Quit: Leaving)
2015-05-28 15:21:15	Dabo	filsmick, I don't think there's any easy way to do that
2015-05-28 15:21:22	filsmick	reading that part of the reference made me wonder how it could be possible
2015-05-28 15:21:29	XMPPwocky	filsmick: transmutes
2015-05-28 15:21:31	filsmick	why does the current reference mention it?
2015-05-28 15:21:33	-->	ptrfun (Mibbit@moz-tj9lu7.pools.vodafone-ip.de) has joined #rust
2015-05-28 15:21:34	Dabo	that just says that it isn't a bug if it is allowed
2015-05-28 15:21:37	XMPPwocky	pointer hackery
2015-05-28 15:21:51	ptrfun	is there a non-unstable std::intrinsics::init() alternative?
2015-05-28 15:21:58	filsmick	needs a #[repr(C)] I guess
2015-05-28 15:21:59	XMPPwocky	obviously it's unsafe to modify a Vec's capacity
2015-05-28 15:22:02	<--	daschl (Adium@moz-oirn1i.vie.surfer.at) has quit (Quit: Leaving.)
2015-05-28 15:22:11	filsmick	XMPPwocky: this is exactly why this part tickled me
2015-05-28 15:22:13	XMPPwocky	but it's not, like, impossible
2015-05-28 15:22:20	XMPPwocky	or explicitly illegal
2015-05-28 15:22:21	SpaceManiac	ptrfun: maybe std::mem::zeroed() ?
2015-05-28 15:22:43	-->	zakedodead (zakedodead@moz-cg5.c4k.214.206.IP) has joined #rust
2015-05-28 15:22:44	bluss	ptrfun: don't think so, the concept is a bit obsolete
2015-05-28 15:23:08	filsmick	because I was thinking about enlarging a Vec's len / capacity to trick it into reading memory it doesn't own
2015-05-28 15:23:17	filsmick	since the Reference says that's not unsafe, it would be a bug if possible
2015-05-28 15:23:18	ptrfun	SpaceManiac: so code using init() is obsolete and should be updated, right?
2015-05-28 15:23:28	SpaceManiac	I would assume so
2015-05-28 15:23:33	filsmick	and it mentions "std::repr"
2015-05-28 15:23:48	bluss	filsmick: it says reading from private fields, not writing
2015-05-28 15:23:51	filsmick	found it
2015-05-28 15:23:53	filsmick	bluss is right
2015-05-28 15:23:54	filsmick	http://doc.rust-lang.org/std/raw/trait.Repr.html#method.repr
2015-05-28 15:24:14	filsmick	This is a safe method because by default it does not enable write-access to the fields of the return value in safe code.
2015-05-28 15:24:23	bluss	filsmick: not sure it matters, since well that breaks the safety of Vec if you change its private fields
2015-05-28 15:24:34	filsmick	case solved, sorry for the inconvenience, I thought I had discovered a bug :o)
2015-05-28 15:25:35	-->	aochagavia (Mibbit@moz-jgp6eg.static.ziggozakelijk.nl) has joined #rust
2015-05-28 15:26:21	aochagavia	I am writing a toy chat application that works over TCP between a server and multiple clients. Is there a library that makes it easier to (de)serialize the messages that are sent and received?
2015-05-28 15:26:25	-->	kecolus (kecolus@moz-i7cb3r.fios.verizon.net) has joined #rust
2015-05-28 15:26:27	-->	ixti (ixti@moz-i3d.dae.119.188.IP) has joined #rust
2015-05-28 15:26:59	aochagavia	(I don't want to mess with bytes)
2015-05-28 15:27:03	-->	nwin (textual@moz-rmebj6.pools.arcor-ip.net) has joined #rust
2015-05-28 15:27:12	geri	talchas: thx, i also have f: mut fs::OpenOptions in the struct ... how to init that?
2015-05-28 15:27:31	Blei	aochagavia: have you heard of protobufs or capnproto?
2015-05-28 15:28:03	Blei	they are all about defining binary interchange formats and theird decoding and encoding
2015-05-28 15:28:04	kagami	ZeroMQ
2015-05-28 15:28:13	Blei	*their
2015-05-28 15:28:17	<--	Douman (Douman@moz-ak7suh.dynamic.mts-nn.ru) has quit (Quit: )
2015-05-28 15:28:18	aochagavia	Blei: I only know them by name
2015-05-28 15:28:23	-->	Douman (Douman@moz-ak7suh.dynamic.mts-nn.ru) has joined #rust
2015-05-28 15:28:58	aochagavia	Blei: I am affraid they offer a lot of things and I don't know exactly what I need
2015-05-28 15:29:00	-->	willem (willem@moz-facs2s.dynamic.upc.nl) has joined #rust
2015-05-28 15:29:26	aochagavia	Blei: but I'll read the docs and see if I can use them
2015-05-28 15:29:28	<--	Jesin (Jesin@moz-a3uhsd.fios.verizon.net) has quit (Quit: Leaving)
2015-05-28 15:29:39	<--	jaen (jaen@moz-ifmik2.copit.pl) has quit (Quit: WeeChat 1.1.1)
2015-05-28 15:29:54	<--	dstrbad (dstrbad@moz-stb24m.dsl.iskon.hr) has quit (A TLS packet with unexpected length was received.)
2015-05-28 15:29:58	<--	johnsoft (johnsoft@moz-69mrig.res.rr.com) has quit (Ping timeout: 121 seconds)
2015-05-28 15:29:58	kagami	Also, just length-prefixed JSON for simplest case should be enough.
2015-05-28 15:30:00	--	chmanchester is now known as chmanchester|afk
2015-05-28 15:30:01	-->	dstrbad (dstrbad@moz-stb24m.dsl.iskon.hr) has joined #rust
2015-05-28 15:30:05	<--	dstrbad (dstrbad@moz-stb24m.dsl.iskon.hr) has quit (A TLS packet with unexpected length was received.)
2015-05-28 15:30:10	-->	ziocroc (ziocroc@moz-bfu.33o.74.151.IP) has joined #rust
2015-05-28 15:30:22	Blei	aochagavia: what they offer is a way to define messages that are to be sent over the network (or exchanged in other ways) and offer libraries/generated code that de/encodes these messages using the language of your choice
2015-05-28 15:30:24	-->	eric_lagergren (barsonme@moz-hshokg.q6t2.2174.0008.2601.IP) has joined #rust
2015-05-28 15:30:24	-->	johnsoft (johnsoft@moz-69mrig.res.rr.com) has joined #rust
2015-05-28 15:31:00	geri	how can i initialize struct test { f: fs::File, }  ?
2015-05-28 15:31:12	geri	nul?
2015-05-28 15:31:13	<--	TheHydroImpulse (TheHydroImp@moz-r25mqk.ed.shawcable.net) has quit (Client exited)
2015-05-28 15:31:29	<--	hroi (hroi@moz-d273ub.static.netgroup.dk) has quit (Ping timeout: 121 seconds)
2015-05-28 15:31:41	Tari	test { f: some_file_instance }
2015-05-28 15:31:51	aochagavia	Blei: does that always involve code generation?
2015-05-28 15:32:06	geri	Tari: i dont have a file intance at the beginning
2015-05-28 15:32:16	<--	kecolus (kecolus@moz-i7cb3r.fios.verizon.net) has quit (Quit: Leaving)
2015-05-28 15:32:20	-->	Yeti (Mibbit@moz-cb9mg6.ST.HMC.Edu) has joined #rust
2015-05-28 15:32:20	Blei	for protobuf yes, not sure about capnproto but I believe so
2015-05-28 15:32:36	-->	irobevjodu (ident@moz-5bq.k90.254.5.IP) has joined #rust
2015-05-28 15:32:57	dwrensha	did someone say capnproto? :P
2015-05-28 15:33:02	Tari	geri: then you can't make something that contains one
2015-05-28 15:33:03	-->	cteef (derrick@moz-vno.jt7.17.184.IP) has joined #rust
2015-05-28 15:33:06	-->	UberLambda (uber@moz-24qg64.clienti.tiscali.it) has joined #rust
2015-05-28 15:33:09	Yeti	Hey all, how would I use mathematical constants like pi in rust? From what i've found i want something like "let angle: f32 = std::f32::consts::PI;" but that doesn't compile.
2015-05-28 15:33:21	Tari	geri: it sounds like you want Option<test>
2015-05-28 15:33:29	Yeti	uh, "let angle: f32 = std::f32::consts:: PI;" rather haha
2015-05-28 15:33:31	-->	james4k (james@moz-ppe736.consolidated.net) has joined #rust
2015-05-28 15:33:37	-->	kecolus (kecolus@moz-i7cb3r.fios.verizon.net) has joined #rust
2015-05-28 15:34:02	geri	Tari: ?
2015-05-28 15:34:10	-->	hroi (hroi@moz-d273ub.static.netgroup.dk) has joined #rust
2015-05-28 15:34:27	<--	kecolus (kecolus@moz-i7cb3r.fios.verizon.net) has quit (Quit: Leaving)
2015-05-28 15:34:28	aochagavia	Blei: ok, so maybe it is too much overhead for a toy project like this... Thanks anyway!
2015-05-28 15:34:34	-->	kecolus (kecolus@moz-i7cb3r.fios.verizon.net) has joined #rust
2015-05-28 15:34:34	<--	dfinninger (dfinninger@moz-fe6.5n7.235.207.IP) has quit (Connection closed)
2015-05-28 15:34:34	-->	zyphrus (David@moz-1a4.urk.98.101.IP) has joined #rust
2015-05-28 15:34:56	Tari	geri: it's (generally) not allowed to make uninitialized values, so you must have something for the file
2015-05-28 15:35:08	Tari	if you don't have a file you can't make a `test`
2015-05-28 15:35:26	grodan	Yeti: why doesn't it compile? What error do you get?
2015-05-28 15:35:41	Blei	aochagavia: yeah, it might look a bit overwhelming in the beginning :) but once I've used them for a bit, I would never miss something like them for network applications
2015-05-28 15:36:15	Yeti	grodan "use of undeclared type or module 'std::f32::consts'"
2015-05-28 15:36:19	geri	Tari: i would like to set the file later ... not possible?
2015-05-28 15:36:23	<--	mudpit (Mibbit@moz-i7cb3r.fios.verizon.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-28 15:36:32	@steveklabnik	Yeti: ::std...
2015-05-28 15:36:34	@steveklabnik	i'd bet
2015-05-28 15:36:50	Tari	geri: not possible
2015-05-28 15:36:56	Yeti	how do you mean steveklabnik 
2015-05-28 15:37:05	<--	cteef (derrick@moz-vno.jt7.17.184.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 15:37:13	seanmonstar	Yeti: include ::std::f32...
2015-05-28 15:37:17	seanmonstar	the prefixed ::
2015-05-28 15:37:18	Tari	(you could use mem::uninit but that's almost certainly the wrong thing to do)
2015-05-28 15:37:18	@steveklabnik	playbot: let angle: f32 = ::std::f32::consts::PI
2015-05-28 15:37:19	--	Notice(playbot): <anon>:10:5: 10:6 error: expected one of `!`, `.`, `::`, `;`, `{`, or an operator, found `}`
2015-05-28 15:37:19	--	Notice(playbot): <anon>:10     });
2015-05-28 15:37:19	--	Notice(playbot): output truncated; full output at: http://bit.ly/1HPlCHi
2015-05-28 15:37:21	aochagavia	Blei: is cargo able to do the generation automatically?
2015-05-28 15:37:23	@steveklabnik	playbot: let angle: f32 = ::std::f32::consts::PI;
2015-05-28 15:37:24	Yeti	ah seanmonstar thanks that works
2015-05-28 15:37:24	--	Notice(playbot): ()
2015-05-28 15:37:30	@steveklabnik	Yeti: ^
2015-05-28 15:37:49	geri	Tari: http://is.gd/xlCiYh
2015-05-28 15:37:57	Blei	aochagavia: no for protobuf, but IIRC capnproto has some helper functions/macros to add to build.rs scripts to make this easy
2015-05-28 15:37:57	@steveklabnik	Yeti: if you're in a submodule, 'use' is relative, so you have to use :: as a prefix to start at the root
2015-05-28 15:38:05	@steveklabnik	i mean, use always is
2015-05-28 15:38:07	seanmonstar	Yeti: all usages of paths that dont start with '::' look in the current module for the import
2015-05-28 15:38:16	<--	hroi (hroi@moz-d273ub.static.netgroup.dk) has quit (Ping timeout: 121 seconds)
2015-05-28 15:38:21	Tari	geri: "couldn't find the shortened URL"
2015-05-28 15:38:24	geri	Tari: Tari http://is.gd/xICiYh
2015-05-28 15:38:26	geri	sorry
2015-05-28 15:38:26	<--	fede (fede@moz-p7rudj.8bad.idsi.8109.2a02.IP) has quit (Quit: Sto andando via)
2015-05-28 15:38:28	Yeti	gotcha
2015-05-28 15:39:11	-->	Racquetball (namestolenw@moz-dnlovt.cpe.twtelecom.net) has joined #rust
2015-05-28 15:39:11	Tari	geri: so what does it mean to have an fpga_awg without any file?
2015-05-28 15:39:29	Tari	does it do nothing (I'd call that user error), or does it operate differently?
2015-05-28 15:39:37	geri	Tari: that what happens in init
2015-05-28 15:39:41	Blei	aochagavia: dwrensha might be able to tell you all about it, I assume :)
2015-05-28 15:39:52	geri	Tari: i guess i should combine them
2015-05-28 15:39:57	<--	mancman (martin@moz-lp1oib.range86-143.btcentralplus.com) has quit (Connection closed)
2015-05-28 15:40:00	-->	hroi (hroi@moz-d273ub.static.netgroup.dk) has joined #rust
2015-05-28 15:40:08	Tari	geri: I'd agree. If it doesn't make sense to have an uninitialized one, do init in new()
2015-05-28 15:40:21	<--	zyphrus (David@moz-1a4.urk.98.101.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-28 15:40:38	Tari	as you ahve it now, it's unnecessarily unsafe because it would be an error to forget to call init
2015-05-28 15:40:53	talchas	geri: in general, you'd use Option<File>
2015-05-28 15:40:57	Tari	(assuming you made new() legal)
2015-05-28 15:41:12	geri	Tari: what is option?
2015-05-28 15:41:16	talchas	but if you'd only have it None during initialization, it would make sense to just do it in new as Tari says
2015-05-28 15:41:35	-->	zyphrus (David@moz-1a4.urk.98.101.IP) has joined #rust
2015-05-28 15:41:50	aochagavia	Blei: thanks for your advice!
2015-05-28 15:41:54	Tari	geri: Option<T> acts kind of like a nullable pointer to a T
2015-05-28 15:42:17	Blei	aochagavia: you are welcome :) hope it helps
2015-05-28 15:42:20	-->	rudolph (rudolph@moz-ufr9vv.o3k5.dsq9.010d.2620.IP) has joined #rust
2015-05-28 15:42:44	Tari	geri: http://doc.rust-lang.org/std/option/index.html
2015-05-28 15:42:56	<--	Blei (philipp@moz-k6lbjp.dynamic.hispeed.ch) has quit (Quit: WeeChat 1.2)
2015-05-28 15:43:30	-->	osprey44 (Mibbit@moz-0ft.ur1.206.74.IP) has joined #rust
2015-05-28 15:43:58	--	circ-user-LuWly is now known as partkyle
2015-05-28 15:44:02	osprey44	hello?
2015-05-28 15:44:24	@steveklabnik	osprey44: hi
2015-05-28 15:44:28	<--	rbranson (rbranson@moz-i7m.9o0.201.199.IP) has quit (Quit: Computer has gone to sleep.)
2015-05-28 15:44:40	osprey44	do you know bill nye?
2015-05-28 15:44:44	pyon	I want to cast a `&T` to a `*mut T`. (I know what I'm doing.) Why do I need to do it in two steps: to `*const T` and then to `*mut T`?
2015-05-28 15:44:45	-->	ferdinand (Mibbit@moz-e7t4rk.dynamic.kabel-deutschland.de) has joined #rust
2015-05-28 15:45:28	<--	ferdinand (Mibbit@moz-e7t4rk.dynamic.kabel-deutschland.de) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-28 15:45:44	-->	pgonda (peter@moz-s36.0tp.134.75.IP) has joined #rust
2015-05-28 15:45:59	<--	flacko (chatzilla@moz-iprvq7.cgates.lt) has quit (Connection closed)
2015-05-28 15:46:28	--	darkowlzz is now known as darkowlzz|afk
2015-05-28 15:47:18	<--	nwin (textual@moz-rmebj6.pools.arcor-ip.net) has quit (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
2015-05-28 15:47:47	GGist	Is it good practice to stick use statements inside macros that need to import types? Or is there another way to do that?
2015-05-28 15:47:55	<--	pohl (textual@moz-rln.lhm.51.74.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 15:47:59	pyon	Actually, it's not even like that, I want to cast a `&T` to a `*mut U`.
2015-05-28 15:48:27	talchas	GGist: the other option is to use fully qualified types
2015-05-28 15:48:52	cholcombe	does the rust json autoserializer work?  There's a note about it failing orphan checking in the docs
2015-05-28 15:48:52	-->	nott (nott@moz-to4.06o.57.86.IP) has joined #rust
2015-05-28 15:48:53	<--	kaeluka (kaeluka@moz-tn3lqd.cust.bredbandsbolaget.se) has quit (Client exited)
2015-05-28 15:48:54	<--	essem2 (Thunderbird@moz-0g3v4k.biz.rr.com) has quit (Client exited)
2015-05-28 15:48:58	<--	eric_lagergren (barsonme@moz-hshokg.q6t2.2174.0008.2601.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 15:49:02	-->	debuuux (debu@moz-f1pg07.dyn.telefonica.de) has joined #rust
2015-05-28 15:49:13	GGist	talchas: Ok, thanks
2015-05-28 15:49:15	-->	kngl (Adium@moz-rmgnkh.dynamic.voo.be) has joined #rust
2015-05-28 15:49:22	-->	lucian (lucian@moz-2c3pda.cable.virginm.net) has joined #rust
2015-05-28 15:49:38	<--	dkreuter (knizz@moz-fes.iga.129.213.IP) has quit (Quit: Ex-Chat)
2015-05-28 15:49:38	<--	saterus (saterus@moz-o5jn2e.res.rr.com) has quit (Connection closed)
2015-05-28 15:49:48	<--	dfockler (dfockler@moz-etoj16.hfc.comcastbusiness.net) has quit (Connection closed)
2015-05-28 15:49:49	<--	sternmull (kringel@moz-u264n1.dip0.t-ipconnect.de) has left #rust
2015-05-28 15:49:50	-->	TheHydroImpulse (TheHydroImp@moz-r25mqk.ed.shawcable.net) has joined #rust
2015-05-28 15:49:55	<--	pgonda (peter@moz-s36.0tp.134.75.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 15:51:00	-->	kaeluka (kaeluka@moz-tn3lqd.cust.bredbandsbolaget.se) has joined #rust
2015-05-28 15:51:41	<--	ziocroc (ziocroc@moz-bfu.33o.74.151.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 15:51:49	<--	kamilc__ (kamil@moz-q1fkf8.play-internet.pl) has quit (Quit: Linkinus - http://linkinus.com)
2015-05-28 15:52:08	<--	Jesse (jruderman@moz-36amo0.ujol.1ibb.0101.2620.IP) has quit (Client exited)
2015-05-28 15:52:15	-->	saterus (saterus@moz-o5jn2e.res.rr.com) has joined #rust
2015-05-28 15:52:19	-->	ziocroc (ziocroc@moz-bfu.33o.74.151.IP) has joined #rust
2015-05-28 15:52:33	filsmick	is there a simple way to pretty-print XML?
2015-05-28 15:52:51	<--	harrisonclarke (harrisoncla@moz-6v8.jf9.227.142.IP) has quit (Connection closed)
2015-05-28 15:53:59	bfrog	filsmick: xmllint
2015-05-28 15:54:35	filsmick	bfrog: thanks!
2015-05-28 15:54:54	<--	lorenzb (textual@moz-p6jb5i.ethz.ch) has quit (Quit: Textual IRC Client: www.textualapp.com)
2015-05-28 15:54:55	<--	lucian (lucian@moz-2c3pda.cable.virginm.net) has quit (Quit: Leaving...)
2015-05-28 15:55:39	-->	chippers (chip@moz-26d.2gk.254.199.IP) has joined #rust
2015-05-28 15:56:10	-->	nodweber (nodweber@moz-knt.fgq.178.5.IP) has joined #rust
2015-05-28 15:56:53	geri	Tari: can you see if the lifetime of f and data i correctly passed to the struct? http://is.gd/eHjnDk
2015-05-28 15:57:40	-->	laumann (thomas@moz-n9e72h.0.fullrate.dk) has joined #rust
2015-05-28 15:58:25	<--	wolfviking0 (wolfviking0@moz-8hd.3b6.246.162.IP) has quit (Client exited)
2015-05-28 15:58:39	<--	Binero (jeroen@moz-91joat.69vi.s4ge.1810.2a02.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 15:58:40	<--	dalarmmst (dalarmmst@moz-oiceaa.cust.bredbandsbolaget.se) has quit (Ping timeout: 121 seconds)
2015-05-28 15:58:59	-->	zmack (zmack@moz-htpein.home.aster.pl) has joined #rust
2015-05-28 15:59:05	-->	norf (Mibbit@moz-3v79ke.dyn.grandenetworks.net) has joined #rust
2015-05-28 15:59:43	-->	w4ffles (textual@moz-g7g.toe.144.12.IP) has joined #rust
2015-05-28 15:59:58	<--	filsmick (filsmick@moz-0svev4.abo.wanadoo.fr) has quit (Quit: )
2015-05-28 16:00:04	<--	kgrandon (Adium@moz-4qc9b1.hfc.comcastbusiness.net) has quit (Quit: Leaving.)
2015-05-28 16:00:21	-->	Matthias247 (Miranda@moz-49li60.hsi14.kabel-badenwuerttemberg.de) has joined #rust
2015-05-28 16:00:26	<--	nodweber (nodweber@moz-knt.fgq.178.5.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 16:00:29	cholcombe	how do you parse a string into a usize?  from_str::<usize>("1") seems to not resolve
2015-05-28 16:00:44	-->	cakecatz (cakecatz@moz-avgcr3.access-internet.ne.jp) has joined #rust
2015-05-28 16:00:48	<--	Yeti (Mibbit@moz-cb9mg6.ST.HMC.Edu) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-28 16:00:53	-->	larhat (Adium@moz-vlo5br.cable.virginm.net) has joined #rust
2015-05-28 16:00:53	<--	duncan (paul@moz-9vabq7.sgnwmi.sbcglobal.net) has left #rust
2015-05-28 16:01:06	bluss	cholcombe: you can use "1".parse::<usize>() now
2015-05-28 16:01:08	@steveklabnik	playbot:let x: i32 =  "1".parse(); x
2015-05-28 16:01:14	@steveklabnik	playbot: let x: i32 =  "1".parse(); x
2015-05-28 16:01:15	--	Notice(playbot): <anon>:9:23: 9:34 error: mismatched types:
2015-05-28 16:01:16	--	Notice(playbot):  expected `i32`,
2015-05-28 16:01:16	--	Notice(playbot): output truncated; full output at: http://bit.ly/1FjkZ2Y
2015-05-28 16:01:18	-->	eric_lagergren (barsonme@moz-hshokg.q6t2.2174.0008.2601.IP) has joined #rust
2015-05-28 16:01:19	cholcombe	bluss: oh cool  :)
2015-05-28 16:01:21	-->	Jesse (jruderman@moz-cfhap5.mtv2.mozilla.com) has joined #rust
2015-05-28 16:02:07	<--	Soulfoam (User@moz-f6sd9k.custommoversservices.com) has quit (Ping timeout: 121 seconds)
2015-05-28 16:03:01	<--	zmack (zmack@moz-htpein.home.aster.pl) has quit (Ping timeout: 121 seconds)
2015-05-28 16:03:10	<--	kaksmet (kaksmet@moz-n1sp9f.se.alltele.net) has quit (Connection closed)
2015-05-28 16:03:56	<--	jacor_m (jacor_m@moz-vemspr.or.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-28 16:04:08	<--	gopar (gopar@moz-5039uj.ca.comcast.net) has quit (A TLS packet with unexpected length was received.)
2015-05-28 16:04:48	<--	cakecatz (cakecatz@moz-avgcr3.access-internet.ne.jp) has quit (Ping timeout: 121 seconds)
2015-05-28 16:05:11	--	darkowlzz|afk is now known as darkowlzz
2015-05-28 16:06:01	-->	tilde` (namidasshu@moz-3gs.igt.238.95.IP) has joined #rust
2015-05-28 16:06:15	norf	So why does io::stdin() need to be assigned to a variable when using .lock()? Borrow checker gets angry at me when using io::stdin().lock().lines()...
2015-05-28 16:06:23	<--	grodan (Mibbit@moz-o5eg8b.bredband.comhem.se) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-28 16:06:49	-->	durka42 (Adium@moz-qsuual.pa.comcast.net) has joined #rust
2015-05-28 16:07:08	@steveklabnik	a temporary would go away at the end of the expression
2015-05-28 16:07:42	<--	Fiveside (fiveside@moz-t2eatg.vsp.com) has quit (Ping timeout: 121 seconds)
2015-05-28 16:07:43	@steveklabnik	putting it in a variable binding extends it's life from a temporary to a real binding that lasts the rest of the scope
2015-05-28 16:07:46	@steveklabnik	does that make sense?
2015-05-28 16:08:57	<--	tilde (namidasshu@moz-3gs.igt.238.95.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 16:09:00	norf	yeah, it still weirds me out that it becomes invalid in the middle of a line though
2015-05-28 16:09:22	rillian	steveklabnik: so the problem is that the Lines iterator doesn't hold the guard, it needs to have a separate lifetime?
2015-05-28 16:09:33	-->	chc4 (chc4@moz-pdo0at.ma.comcast.net) has joined #rust
2015-05-28 16:09:54	<--	aochagavia (Mibbit@moz-jgp6eg.static.ziggozakelijk.nl) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-28 16:10:25	@steveklabnik	it's just the way temporarires in general work
2015-05-28 16:10:46	<--	nano (nano@moz-00j6et.dynamic.kabel-deutschland.de) has quit (Connection closed)
2015-05-28 16:11:29	<--	eric_lagergren (barsonme@moz-hshokg.q6t2.2174.0008.2601.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 16:12:00	<--	partkyle (circuser-Lu@moz-e8m.r65.206.12.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 16:13:26	kimundi	norf: Afaik it does not get invalid in the middle of a line, but at the end of it, which makes it error if you have a value that borrows it
2015-05-28 16:14:05	-->	EspressoDan (EspressoDan@moz-14q.853.211.140.IP) has joined #rust
2015-05-28 16:14:15	<--	turtil_ (turtil@moz-gfc.es4.23.103.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 16:14:41	-->	pgonda (peter@moz-s36.0tp.134.75.IP) has joined #rust
2015-05-28 16:15:25	-->	huddler (Mibbit@moz-0qbe11.dynamic.avangarddsl.ru) has joined #rust
2015-05-28 16:15:39	-->	mib_1rfz3o (Mibbit@moz-dmi.nhl.10.176.IP) has joined #rust
2015-05-28 16:16:29	-->	kkoski (kkoski@moz-on4hbe.cray.com) has joined #rust
2015-05-28 16:16:32	-->	harrisonclarke (harrisoncla@moz-6v8.jf9.227.142.IP) has joined #rust
2015-05-28 16:16:32	<--	SneakySnake (nya@moz-i9is4u.pool.telekom.hu) has quit (Quit: Leaving)
2015-05-28 16:16:38	-->	jacor_m (jacor_m@moz-vemspr.or.comcast.net) has joined #rust
2015-05-28 16:16:41	<--	kkoski (kkoski@moz-on4hbe.cray.com) has left #rust ("Leaving...")
2015-05-28 16:16:52	<--	mcarton (martin@moz-r1020l.bde.inp-toulouse.fr) has quit (Ping timeout: 121 seconds)
2015-05-28 16:17:22	<--	rudolph (rudolph@moz-ufr9vv.o3k5.dsq9.010d.2620.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 16:17:36	rillian	steveklabnik: temporaries and the standard library. Surely the lines() could be implemented on the StdinLock<> in a way that carried ownership. It does makes more sense not to
2015-05-28 16:17:38	norf	kimundi: odd. borrow checker and iterators get all kinds of weird
2015-05-28 16:18:23	-->	turtil_ (turtil@moz-gfc.es4.23.103.IP) has joined #rust
2015-05-28 16:19:40	-->	mib_36lnnu (Mibbit@moz-mhnbsd.adsl.solnet.ch) has joined #rust
2015-05-28 16:20:11	-->	A205B064 (A205B064@moz-9s9nhk.nap.wideopenwest.com) has joined #rust
2015-05-28 16:20:12	rillian	playbot: use std::io; use std::io::BufRead; let lines = io::stdin().lock; for line in lines { match line { Ok(line) => println!("{}", line), _ => () } }
2015-05-28 16:20:13	--	Notice(playbot): output truncated; full output at: http://bit.ly/1Fjnjab
2015-05-28 16:20:23	<--	mib_36lnnu (Mibbit@moz-mhnbsd.adsl.solnet.ch) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-28 16:20:57	-->	rudolph (rudolph@moz-ufr9vv.o3k5.dsq9.010d.2620.IP) has joined #rust
2015-05-28 16:21:10	rillian	playbot: use std::io; use std::io::BufRead; let lines = io::stdin().lock(); for line in lines { match line { Ok(line) => println!("{}", line), _ => () } }
2015-05-28 16:21:12	--	Notice(playbot): output truncated; full output at: http://bit.ly/1HPs01l
2015-05-28 16:21:42	rillian	norf: I get error: the trait `core::iter::Iterator` is not implemented for the type `std::io::stdio::StdinLock<'_>`
2015-05-28 16:21:46	<--	munksgaard (munksgaard@moz-478pev.u.parknet.dk) has quit (Ping timeout: 121 seconds)
2015-05-28 16:22:03	rillian	but docs say lines() -> Lines<T> returns an iterator?
2015-05-28 16:22:41	<--	irobevjodu (ident@moz-5bq.k90.254.5.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 16:23:04	Dabo	rillian, stdin = io::stdin().lock(); for line in stdin.lines() should work
2015-05-28 16:23:17	Dabo	Lines is the iterator, not StdinLock
2015-05-28 16:23:45	-->	fabianvf (fabianvf@moz-fjqmui.va.comcast.net) has joined #rust
2015-05-28 16:23:49	-->	eric_lagergren (barsonme@moz-hshokg.q6t2.2174.0008.2601.IP) has joined #rust
2015-05-28 16:23:57	<--	mayeko (mayeko@moz-ishpc0.ovr0.0mfe.0e35.2a01.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 16:24:19	-->	dmu (dmu@moz-eam.eti.221.66.IP) has joined #rust
2015-05-28 16:24:22	-->	mayeko (mayeko@moz-6ui5kq.ovr0.0mfe.0e35.2a01.IP) has joined #rust
2015-05-28 16:24:23	cholcombe	anyone know when PathExt might go stable?   I could really use the exists function
2015-05-28 16:24:32	&mbrubeck	cholcombe: For now you can use fs::metadata
2015-05-28 16:24:37	cholcombe	ok
2015-05-28 16:24:39	&mbrubeck	http://doc.rust-lang.org/std/fs/fn.metadata.html
2015-05-28 16:24:39	-->	irobevjodu (ident@moz-5bq.k90.254.5.IP) has joined #rust
2015-05-28 16:25:08	-->	nodweber (nodweber@moz-knt.fgq.178.5.IP) has joined #rust
2015-05-28 16:25:12	--	NameNotFound is now known as zz_NameNotFound
2015-05-28 16:25:22	cholcombe	mbrubeck: I think is_file might work fine for what i need :)
2015-05-28 16:25:29	<--	irobevjodu (ident@moz-5bq.k90.254.5.IP) has quit (Client exited)
2015-05-28 16:25:58	&mbrubeck	cholcombe: If the path does not exist, metadata will return an error
2015-05-28 16:26:05	cholcombe	ok great
2015-05-28 16:26:07	cholcombe	that'll work
2015-05-28 16:26:26	rillian	Dabo: d'oh. thanks
2015-05-28 16:26:51	<--	ray (bernhard@moz-grjf0o.dynamic.surfer.at) has quit (Quit: Leaving.)
2015-05-28 16:26:53	<--	rudolph (rudolph@moz-ufr9vv.o3k5.dsq9.010d.2620.IP) has quit (Connection closed)
2015-05-28 16:27:05	-->	rudolph (rudolph@moz-q5b.rfa.152.37.IP) has joined #rust
2015-05-28 16:27:06	-->	wolfviking0 (wolfviking0@moz-8hd.3b6.246.162.IP) has joined #rust
2015-05-28 16:27:30	-->	vindelschtuffen (vindelschtu@moz-dd7efh.res.rr.com) has joined #rust
2015-05-28 16:27:32	durka42	yeah, I saw somewhere that Metadata::is_dir (or is_file) is the answer, but you don't even get that far
2015-05-28 16:27:47	<--	fabianvf (fabianvf@moz-fjqmui.va.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-28 16:28:39	-->	Citiral (Mibbit@moz-qmv0nh.access.telenet.be) has joined #rust
2015-05-28 16:28:43	<--	osprey44 (Mibbit@moz-0ft.ur1.206.74.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-28 16:29:11	-->	irobevjodu (ident@moz-mikldi.static-ro.twistednetworks.net) has joined #rust
2015-05-28 16:29:12	rillian	Dabo, norf: in fact, it's io::stdin() which needs to live for the entire block. let input = io::stdin(); for line in input.lock().lines() { ... } works.
2015-05-28 16:29:36	Dabo	ah, that works
2015-05-28 16:32:17	-->	naerbnic (naerbnic@moz-nl3.4ra.239.216.IP) has joined #rust
2015-05-28 16:32:21	-->	Kurufu (Kurufu@moz-pvv8b5.res.rr.com) has joined #rust
2015-05-28 16:32:34	<--	joh (uid13099@moz-2c7ap3.ealing.irccloud.com) has quit (Quit: Connection closed for inactivity)
2015-05-28 16:32:42	-->	mujou (mujou@moz-rko6lo.ocn.ne.jp) has joined #rust
2015-05-28 16:32:48	<--	blank_name (blank_name@moz-fc8n1s.mi.frontiernet.net) has quit (Ping timeout: 121 seconds)
2015-05-28 16:33:21	Citiral	I am writing a struct which I want to expose in the API, so you can have trait objects for it, but I don't want the struct to be reimplementable. Is there a proper way to do this, or should I just use trait inheritance, and put the functions in a non public trait that is inherited?
2015-05-28 16:33:22	<--	jnvsor (j@moz-1o1jrn.dynamic.ziggo.nl) has quit (Ping timeout: 121 seconds)
2015-05-28 16:34:17	<--	nbg (nbg@moz-gen.aeo.146.5.IP) has quit (Quit: WeeChat 1.2)
2015-05-28 16:34:25	<--	mib_1rfz3o (Mibbit@moz-dmi.nhl.10.176.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-28 16:35:05	<--	nott (nott@moz-to4.06o.57.86.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 16:35:19	<--	mujou (mujou@moz-rko6lo.ocn.ne.jp) has quit (Quit: Leaving...)
2015-05-28 16:36:06	<--	iu (iu@moz-6263qv.cc.cmu.edu) has quit (Quit: )
2015-05-28 16:36:16	<--	EspressoDan (EspressoDan@moz-14q.853.211.140.IP) has quit (Client exited)
2015-05-28 16:36:35	-->	EspressoDan (EspressoDan@moz-14q.853.211.140.IP) has joined #rust
2015-05-28 16:37:18	--	chmanchester|afk is now known as chmanchester
2015-05-28 16:37:50	-->	achernya_ (quassel@moz-i01917.mit.edu) has joined #rust
2015-05-28 16:37:52	@steveklabnik	what does 'the struct to be reimplementable' mean?
2015-05-28 16:38:08	c_wraith	traits are not objects.
2015-05-28 16:38:11	<--	nercury (nercury@moz-8h0btl.static.zebra.lt) has quit (Client exited)
2015-05-28 16:38:11	<--	achernya (quassel@moz-8tbl8i.6686.inna.4830.2001.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 16:38:19	XMPPwocky	i think they meant s/struct/trait/
2015-05-28 16:38:27	Citiral	woops, I meant trait, not struct
2015-05-28 16:38:39	-->	quaddle (Mibbit@moz-84song.dip0.t-ipconnect.de) has joined #rust
2015-05-28 16:39:10	-->	blank_name (blank_name@moz-7j6.fli.183.192.IP) has joined #rust
2015-05-28 16:39:53	<--	giucam (giucam@moz-iv0nnc.bb.dnainternet.fi) has quit (Ping timeout: 121 seconds)
2015-05-28 16:39:53	@steveklabnik	c_wraith: 'trait objects' are a thing though
2015-05-28 16:39:58	Citiral	I have images that can be bound to be drawn on, so I have a "Drawable" trait, but I want the trait to be only implementable inside the crate. Other parts of the code need to be able to work with generic reference sto Drawable  objects
2015-05-28 16:40:30	@steveklabnik	i don't think it's strictly possible to make someone not be able to implement Drawable
2015-05-28 16:40:33	@steveklabnik	but i could be wrong
2015-05-28 16:40:58	quaddle	just a module which is not pub does not work?
2015-05-28 16:41:05	<--	andre_ (andre@moz-rnd.3qv.76.201.IP) has quit (Quit: leaving)
2015-05-28 16:41:27	<--	Guest (textual@moz-rtn.fg7.77.192.IP) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-28 16:41:49	Citiral	But the drawable object should be exposed, outside of the crate you'd need to be able to work with Drawable objects
2015-05-28 16:42:18	<--	ygrek (user@moz-8j9aeu.org.ua) has quit (Ping timeout: 121 seconds)
2015-05-28 16:42:23	Citiral	what I have no is the Drawable struct that does nothing, but also inherits the Bindable trait, whic is not public. But this feels too much like a hack to me, and I don't know if this is going to mess with me later
2015-05-28 16:42:42	-->	paupau (grrrr@moz-7l1.1cg.90.208.IP) has joined #rust
2015-05-28 16:44:25	<--	Ms2ger (Ms2ger@moz-15i.9ho.190.193.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 16:44:25	<--	ptrfun (Mibbit@moz-tj9lu7.pools.vodafone-ip.de) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-28 16:45:00	Citiral	Or perhaps i'm thinking in too much of an OO mindset.
2015-05-28 16:45:04	@niconii	c_wraith: http://doc.rust-lang.org/book/trait-objects.html
2015-05-28 16:45:57	<--	durka42 (Adium@moz-qsuual.pa.comcast.net) has left #rust
2015-05-28 16:46:38	<--	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-28 16:46:56	quaddle	if the trait is visible to the outside, it means that it can be implemented as well in the outside, I would guess. but Im a noob. In Java its like this. dont know any language where you can restrict implementation of an interface, if the interface is visible.
2015-05-28 16:47:17	<--	__mark__ (mark@moz-udut16.dynamic.chello.pl) has quit (Client exited)
2015-05-28 16:49:24	-->	rbranson (rbranson@moz-i7m.9o0.201.199.IP) has joined #rust
2015-05-28 16:49:28	<--	EspressoDan (EspressoDan@moz-14q.853.211.140.IP) has quit (Client exited)
2015-05-28 16:49:56	-->	mcarton (martin@moz-ag64s6.rev.sfr.net) has joined #rust
2015-05-28 16:50:24	-->	guycook (quassel@moz-rpa0ek.snap.net.nz) has joined #rust
2015-05-28 16:50:53	--	darkowlzz is now known as darkowlzz|afk
2015-05-28 16:51:50	Dabo	Citiral, why specifically are you wanting it to not be implementable?
2015-05-28 16:52:00	Citiral	I was thinking it'd provide a cleaner API for the crate, and it seemed important since rust seems to be big on seperating code from API, but I guess you're not supposed to
2015-05-28 16:52:08	Citiral	problem solved, then :)
2015-05-28 16:52:12	Dabo	Why not allow other people to implement drawable though?
2015-05-28 16:52:20	Dabo	I mean, is there really a reason to disallow it?
2015-05-28 16:53:13	<--	naerbnic (naerbnic@moz-nl3.4ra.239.216.IP) has quit (Client exited)
2015-05-28 16:53:26	Citiral	It makes the documentation more complex since people shouldn't need to know about the binding, and it's all opengl so it could completely break everything. But come to think of it, it's opengl so they can do that already
2015-05-28 16:54:11	<--	turtil_ (turtil@moz-gfc.es4.23.103.IP) has quit (Quit: WeeChat 1.1.1)
2015-05-28 16:54:12	Citiral	(with just making random opengl calls I mean, i'm not bashing on opengl)
2015-05-28 16:54:19	-->	turtil (turtil@moz-gfc.es4.23.103.IP) has joined #rust
2015-05-28 16:54:32	XMPPwocky	fwiw, consider using Glium or gfx-rs
2015-05-28 16:54:37	XMPPwocky	both are fantastic
2015-05-28 16:54:55	-->	wolfviking0_ (wolfviking0@moz-nb2.8gk.177.166.IP) has joined #rust
2015-05-28 16:55:13	-->	dfockler (dfockler@moz-etoj16.hfc.comcastbusiness.net) has joined #rust
2015-05-28 16:55:19	Citiral	I did, but I wanted to get more familiar with some of the FFI features
2015-05-28 16:55:22	<--	wolfviking0 (wolfviking0@moz-8hd.3b6.246.162.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 16:55:22	--	wolfviking0_ is now known as wolfviking0
2015-05-28 16:55:38	Citiral	If I ever release this i'll make sure to switch to one of those, though
2015-05-28 16:55:44	<--	Jackneill (Jackneill@moz-spruc7.pool.digikabel.hu) has quit (A TLS packet with unexpected length was received.)
2015-05-28 16:55:50	-->	munksgaard (munksgaard@moz-478pev.u.parknet.dk) has joined #rust
2015-05-28 16:56:07	-->	EspressoDan (EspressoDan@moz-14q.853.211.140.IP) has joined #rust
2015-05-28 16:56:38	<--	eckhardt (eckhardt@moz-s9e.ov1.227.199.IP) has quit (Connection closed)
2015-05-28 16:56:39	-->	frogonia (Mibbit@moz-tpjl46.co.comcast.net) has joined #rust
2015-05-28 16:57:18	<--	wolfviking0 (wolfviking0@moz-nb2.8gk.177.166.IP) has quit (Connection closed)
2015-05-28 16:57:20	-->	wolfviking0 (wolfviking0@moz-8hd.3b6.246.162.IP) has joined #rust
2015-05-28 16:57:21	<--	guycook (quassel@moz-rpa0ek.snap.net.nz) has left #rust ("http://quassel-irc.org - Chat comfortably. Anywhere.")
2015-05-28 16:57:23	-->	guycook (quassel@moz-rpa0ek.snap.net.nz) has joined #rust
2015-05-28 16:57:23	<--	ytain (ytain@moz-ffpck2.dsl.teksavvy.com) has quit (Quit: Textual IRC Client: www.textualapp.com)
2015-05-28 16:58:16	<--	Jesse (jruderman@moz-cfhap5.mtv2.mozilla.com) has quit (Client exited)
2015-05-28 16:59:00	-->	James (quassel@moz-q6malq.range86-148.btcentralplus.com) has joined #rust
2015-05-28 17:00:36	<--	harrisonclarke (harrisoncla@moz-6v8.jf9.227.142.IP) has quit (Connection closed)
2015-05-28 17:00:40	-->	hatman (Mibbit@moz-n3ha8l.fios.verizon.net) has joined #rust
2015-05-28 17:00:41	<--	norf (Mibbit@moz-3v79ke.dyn.grandenetworks.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-28 17:01:59	<--	santiago (santiago@moz-ro2mm9.res.rr.com) has quit (Quit: Computer has gone to sleep.)
2015-05-28 17:02:12	<--	jdub (jdub@moz-udlk0m.internode.on.net) has quit (Ping timeout: 121 seconds)
2015-05-28 17:02:14	<--	loyd (loyd@moz-jsb.32f.108.213.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 17:02:31	-->	santiago (santiago@moz-ro2mm9.res.rr.com) has joined #rust
2015-05-28 17:02:41	<--	santiago (santiago@moz-ro2mm9.res.rr.com) has quit (Quit: Computer has gone to sleep.)
2015-05-28 17:03:12	-->	santiago (santiago@moz-ro2mm9.res.rr.com) has joined #rust
2015-05-28 17:03:20	<--	santiago (santiago@moz-ro2mm9.res.rr.com) has quit (Quit: Computer has gone to sleep.)
2015-05-28 17:03:25	<--	wolfviking0 (wolfviking0@moz-8hd.3b6.246.162.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 17:03:36	-->	wolfviking0 (wolfviking0@moz-nb2.8gk.177.166.IP) has joined #rust
2015-05-28 17:03:50	-->	santiago (santiago@moz-ro2mm9.res.rr.com) has joined #rust
2015-05-28 17:03:59	<--	santiago (santiago@moz-ro2mm9.res.rr.com) has quit (Quit: Computer has gone to sleep.)
2015-05-28 17:04:10	<--	munksgaard (munksgaard@moz-478pev.u.parknet.dk) has quit (Ping timeout: 121 seconds)
2015-05-28 17:04:11	<--	TheHydroImpulse (TheHydroImp@moz-r25mqk.ed.shawcable.net) has quit (Ping timeout: 121 seconds)
2015-05-28 17:04:25	-->	sjaensch (sjaensch@moz-ancpq7.dip0.t-ipconnect.de) has joined #rust
2015-05-28 17:04:29	-->	santiago (santiago@moz-ro2mm9.res.rr.com) has joined #rust
2015-05-28 17:04:37	<--	santiago (santiago@moz-ro2mm9.res.rr.com) has quit (Quit: Computer has gone to sleep.)
2015-05-28 17:04:38	<--	ikanobori (ikanobori@moz-9qvm1d.b585.9mbl.b0c0.2a03.IP) has quit (Quit: WeeChat 1.0.1)
2015-05-28 17:04:44	-->	mkpankov (mkpankov@moz-aj0.k4a.16.195.IP) has joined #rust
2015-05-28 17:04:56	<--	mkpankov` (mkpankov@moz-ejg.3mh.23.84.IP) has quit (Connection closed)
2015-05-28 17:05:05	<--	jiojiajiu (Guro@moz-trc2j7.asianet.co.th) has quit (Connection closed)
2015-05-28 17:05:43	-->	ctennis (ctennis@moz-vcpg3c.in.comcast.net) has joined #rust
2015-05-28 17:05:43	<--	mkpankov (mkpankov@moz-aj0.k4a.16.195.IP) has quit (Connection closed)
2015-05-28 17:05:49	-->	jiojiajiu (Guro@moz-trc2j7.asianet.co.th) has joined #rust
2015-05-28 17:05:58	-->	mkpankov (mkpankov@moz-ejg.3mh.23.84.IP) has joined #rust
2015-05-28 17:06:56	-->	nbg (nbg@moz-gen.aeo.146.5.IP) has joined #rust
2015-05-28 17:07:02	<--	Guest38 (textual@moz-4hh.6p3.217.74.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-28 17:07:05	-->	amindfv (user@moz-n3ha8l.fios.verizon.net) has joined #rust
2015-05-28 17:07:22	<--	jgallagher (john@moz-d5e8oc.hfc.comcastbusiness.net) has quit (Client exited)
2015-05-28 17:07:36	<--	amindfv (user@moz-n3ha8l.fios.verizon.net) has quit (Connection closed)
2015-05-28 17:07:40	<--	wolfviking0 (wolfviking0@moz-nb2.8gk.177.166.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 17:07:40	-->	amindfv (user@moz-n3ha8l.fios.verizon.net) has joined #rust
2015-05-28 17:07:48	-->	eckhardt (eckhardt@moz-s9e.ov1.227.199.IP) has joined #rust
2015-05-28 17:08:00	ebfull	is SliceConcatExt going to go away?
2015-05-28 17:08:34	<--	eckhardt (eckhardt@moz-s9e.ov1.227.199.IP) has quit (Connection closed)
2015-05-28 17:08:43	-->	zmack (zmack@moz-htpein.home.aster.pl) has joined #rust
2015-05-28 17:08:50	bluss	ebfull: the methods are stable, they will stay
2015-05-28 17:08:52	<--	hatman (Mibbit@moz-n3ha8l.fios.verizon.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-28 17:08:56	-->	eckhardt (eckhardt@moz-s9e.ov1.227.199.IP) has joined #rust
2015-05-28 17:09:44	<--	kecolus (kecolus@moz-i7cb3r.fios.verizon.net) has quit (Quit: Leaving)
2015-05-28 17:09:50	-->	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has joined #rust
2015-05-28 17:09:53	-->	kecolus (kecolus@moz-i7cb3r.fios.verizon.net) has joined #rust
2015-05-28 17:09:59	<--	kecolus (kecolus@moz-i7cb3r.fios.verizon.net) has quit (Quit: Leaving)
2015-05-28 17:10:00	<--	JuggleTux (tux@moz-ho0t1f.adslplus.ch) has quit (Ping timeout: 121 seconds)
2015-05-28 17:10:17	<--	guycook (quassel@moz-rpa0ek.snap.net.nz) has left #rust ("http://quassel-irc.org - Chat comfortably. Anywhere.")
2015-05-28 17:10:29	<--	ai (ai@moz-pqofrl.sunline.net.ua) has quit (Quit: Leaving.)
2015-05-28 17:10:37	-->	Guest38 (textual@moz-4hh.6p3.217.74.IP) has joined #rust
2015-05-28 17:11:08	-->	ismaelga (ismaelga@moz-m9v.8r3.251.188.IP) has joined #rust
2015-05-28 17:11:13	-->	harrisonclarke (harrisoncla@moz-6v8.jf9.227.142.IP) has joined #rust
2015-05-28 17:12:18	-->	nercury (nercury@moz-8h0btl.static.zebra.lt) has joined #rust
2015-05-28 17:12:45	<--	zmack (zmack@moz-htpein.home.aster.pl) has quit (Ping timeout: 121 seconds)
2015-05-28 17:12:48	-->	espadrine (tyl@moz-l019mn.fbx.proxad.net) has joined #rust
2015-05-28 17:13:15	-->	jdub (jdub@moz-agrbt8.internode.on.net) has joined #rust
2015-05-28 17:13:54	<--	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-28 17:13:58	<--	nercury (nercury@moz-8h0btl.static.zebra.lt) has quit (Client exited)
2015-05-28 17:14:03	<--	EspressoDan (EspressoDan@moz-14q.853.211.140.IP) has quit (Client exited)
2015-05-28 17:14:11	-->	nercury (nercury@moz-8h0btl.static.zebra.lt) has joined #rust
2015-05-28 17:14:24	-->	dalarmmst (dalarmmst@moz-mb21j4.bredband.comhem.se) has joined #rust
2015-05-28 17:15:11	-->	Dekker (Dekker@moz-qc61ff.tbcn.telia.com) has joined #rust
2015-05-28 17:15:20	-->	EspressoDan (EspressoDan@moz-14q.853.211.140.IP) has joined #rust
2015-05-28 17:15:33	-->	Jesse (jruderman@moz-cfhap5.mtv2.mozilla.com) has joined #rust
2015-05-28 17:16:02	<--	rudolph (rudolph@moz-q5b.rfa.152.37.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-28 17:16:33	--	ahal is now known as ahal|afk
2015-05-28 17:17:18	<--	saterus (saterus@moz-o5jn2e.res.rr.com) has quit (Connection closed)
2015-05-28 17:17:32	<--	sjaensch (sjaensch@moz-ancpq7.dip0.t-ipconnect.de) has quit (Quit: Leaving...)
2015-05-28 17:17:47	-->	_Vi (vi@moz-bbs.vhj.131.104.IP) has joined #rust
2015-05-28 17:18:10	<--	EspressoDan (EspressoDan@moz-14q.853.211.140.IP) has quit (Client exited)
2015-05-28 17:18:31	-->	cteef (derrick@moz-vno.jt7.17.184.IP) has joined #rust
2015-05-28 17:19:32	-->	kgrandon (Adium@moz-i0u8p7.hfc.comcastbusiness.net) has joined #rust
2015-05-28 17:19:33	-->	wolfviking0 (wolfviking0@moz-8hd.3b6.246.162.IP) has joined #rust
2015-05-28 17:19:40	<--	jdm (jdm@moz-i5m.05u.207.66.IP) has quit (Quit: )
2015-05-28 17:19:43	<--	harrisonclarke (harrisoncla@moz-6v8.jf9.227.142.IP) has quit (Connection closed)
2015-05-28 17:19:58	<--	Kroisse (Kroisse@moz-t75tk5.krois.se) has quit (Quit: Good bye :))
2015-05-28 17:20:01	<--	ty (ty@moz-i6c4to.wa.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-28 17:20:13	-->	EspressoDan (EspressoDan@moz-14q.853.211.140.IP) has joined #rust
2015-05-28 17:20:20	<--	nercury (nercury@moz-8h0btl.static.zebra.lt) has quit (Client exited)
2015-05-28 17:20:22	--	AutomatedTester is now known as AutomatedTester|AFK
2015-05-28 17:20:36	<--	Guest38 (textual@moz-4hh.6p3.217.74.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-28 17:20:40	-->	Guest38 (textual@moz-4hh.6p3.217.74.IP) has joined #rust
2015-05-28 17:20:46	<--	UberLambda (uber@moz-24qg64.clienti.tiscali.it) has quit (Quit: Leaving)
2015-05-28 17:20:53	<--	pgonda (peter@moz-s36.0tp.134.75.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 17:21:37	<--	minot2 (kkus@moz-baj4jj.74.srtnet.com) has quit (Ping timeout: 121 seconds)
2015-05-28 17:21:40	<--	ismaelga (ismaelga@moz-m9v.8r3.251.188.IP) has quit (Connection closed)
2015-05-28 17:22:03	-->	ty (ty@moz-i6c4to.wa.comcast.net) has joined #rust
2015-05-28 17:22:57	-->	rudolph (rudolph@moz-q5b.rfa.152.37.IP) has joined #rust
2015-05-28 17:23:10	-->	errordeveloper (ilya@moz-ono.0eu.201.90.IP) has joined #rust
2015-05-28 17:23:16	-->	ismaelga (ismaelga@moz-m9v.8r3.251.188.IP) has joined #rust
2015-05-28 17:23:20	-->	minot2 (kkus@moz-baj4jj.74.srtnet.com) has joined #rust
2015-05-28 17:23:41	-->	ygrek (user@moz-sam.jpq.59.108.IP) has joined #rust
2015-05-28 17:25:57	<--	EspressoDan (EspressoDan@moz-14q.853.211.140.IP) has quit (Client exited)
2015-05-28 17:26:24	<--	rudolph (rudolph@moz-q5b.rfa.152.37.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-28 17:27:05	-->	naerbnic (naerbnic@moz-nl3.4ra.239.216.IP) has joined #rust
2015-05-28 17:27:33	-->	rudolph (rudolph@moz-q5b.rfa.152.37.IP) has joined #rust
2015-05-28 17:28:11	<--	jacor_m (jacor_m@moz-vemspr.or.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-28 17:28:36	<--	Guest67 (textual@moz-8aocg9.ri.cox.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-28 17:28:48	<--	tytouf (tytouf@moz-84u6a1.rev.sfr.net) has quit (Ping timeout: 121 seconds)
2015-05-28 17:28:48	<--	jarrednicholls (uid19542@moz-cmdbn3.highgate.irccloud.com) has quit (Quit: Connection closed for inactivity)
2015-05-28 17:29:10	<--	huddler (Mibbit@moz-0qbe11.dynamic.avangarddsl.ru) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-28 17:29:17	-->	arielb1 (Ariel@moz-9he9ta.red.bezeqint.net) has joined #rust
2015-05-28 17:29:24	arielb1	can you have conditions in macros?
2015-05-28 17:30:21	<--	kushal (kdas@moz-0bg.hkq.143.114.IP) has quit (Quit: Leaving)
2015-05-28 17:31:16	<--	ismaelga (ismaelga@moz-m9v.8r3.251.188.IP) has quit (Connection closed)
2015-05-28 17:31:18	-->	EspressoDan (EspressoDan@moz-14q.853.211.140.IP) has joined #rust
2015-05-28 17:31:28	-->	partkyle (partkyle@moz-e8m.r65.206.12.IP) has joined #rust
2015-05-28 17:31:44	-->	santiago (santiago@moz-8th.j2e.167.12.IP) has joined #rust
2015-05-28 17:34:16	<--	minot2 (kkus@moz-baj4jj.74.srtnet.com) has quit (Ping timeout: 121 seconds)
2015-05-28 17:34:35	-->	ismaelga (ismaelga@moz-m9v.8r3.251.188.IP) has joined #rust
2015-05-28 17:37:04	-->	JuggleTux (tux@moz-ho0t1f.adslplus.ch) has joined #rust
2015-05-28 17:37:22	--	irc: disconnected from server
2015-05-28 17:37:34	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-28 17:37:34	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-28 17:37:34	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-28 17:37:34	--	Channel #rust: 1020 nicks (14 ops, 0 halfops, 1 voice, 1005 normals)
2015-05-28 17:37:36	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-28 17:37:38	<--	ismaelga (ismaelga@moz-m9v.8r3.251.188.IP) has quit (Connection closed)
2015-05-28 17:38:07	<--	wipeD (wipeD@moz-o7jhfk.dip0.t-ipconnect.de) has quit (Connection closed)
2015-05-28 17:39:14	-->	ismaelga (ismaelga@moz-m9v.8r3.251.188.IP) has joined #rust
2015-05-28 17:39:17	<--	killercup (killercup@moz-723bo4.dip0.t-ipconnect.de) has quit (Quit: Bye)
2015-05-28 17:40:34	--	irc: disconnected from server
2015-05-28 17:40:46	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-28 17:40:46	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-28 17:40:46	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-28 17:40:46	--	Channel #rust: 1018 nicks (14 ops, 0 halfops, 1 voice, 1003 normals)
2015-05-28 17:40:48	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-28 17:41:15	<--	jiojiajiu (Guro@moz-trc2j7.asianet.co.th) has quit (Connection closed)
2015-05-28 17:41:18	-->	jiojiajiu (Guro@moz-trc2j7.asianet.co.th) has joined #rust
2015-05-28 17:43:28	<--	niconii (nicole@moz-fdmjth.frgo.qwest.net) has quit (Ping timeout: 121 seconds)
2015-05-28 17:43:51	-->	Fiveside (fiveside@moz-t2eatg.vsp.com) has joined #rust
2015-05-28 17:44:32	-->	genbattle (genbattle@moz-4v0.gkd.16.182.IP) has joined #rust
2015-05-28 17:45:12	richo	I feel like I'm doing this fundamentally wrong. Is Vec::with_capacity(huge); <foo as Read>.read(&mut vec.as_mut_slice()) not the right way to read into a giant heap allocated buffer?
2015-05-28 17:45:24	richo	(dynamically sized, heap allocated buffer)
2015-05-28 17:45:31	-->	niconii (nicole@moz-pp1ulm.frgo.qwest.net) has joined #rust
2015-05-28 17:45:36	-->	jbomo (dkd@moz-uol4mm.fios.verizon.net) has joined #rust
2015-05-28 17:45:43	<--	w4ffles (textual@moz-g7g.toe.144.12.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-28 17:46:19	bluss	richo: sure it should be fine. read might return after just one read though
2015-05-28 17:46:20	-->	Guest58 (textual@moz-tb1fm9.us.xo.net) has joined #rust
2015-05-28 17:46:29	bluss	richo: .as_mut_slice() is probably redundant
2015-05-28 17:46:33	bluss	do you want .read_to_end?
2015-05-28 17:47:25	<--	nodweber (nodweber@moz-knt.fgq.178.5.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-28 17:47:29	richo	I know exactly how much I want to read (I'm parsing a TLV file format)
2015-05-28 17:47:34	richo	read is returning Ok(0)
2015-05-28 17:48:28	<--	JuggleTux (tux@moz-ho0t1f.adslplus.ch) has quit (Ping timeout: 121 seconds)
2015-05-28 17:48:28	<--	Diggsey (diggsey@moz-9engq5.dsl.pipex.com) has quit (Ping timeout: 121 seconds)
2015-05-28 17:48:29	-->	JuggleTux (tux@moz-ho0t1f.adslplus.ch) has joined #rust
2015-05-28 17:48:37	-->	rkruppe (chatzilla@moz-3nj.rnu.131.95.IP) has joined #rust
2015-05-28 17:48:38	<--	Cindela (cindela@moz-dlkpia.bb.dnainternet.fi) has quit (Ping timeout: 121 seconds)
2015-05-28 17:48:46	<--	Kurufu (Kurufu@moz-pvv8b5.res.rr.com) has left #rust
2015-05-28 17:49:26	&mbrubeck	richo: Vec::with_capacity does not set the *length* of the vector
2015-05-28 17:49:31	&mbrubeck	so you are still passing in a zero-length slice.
2015-05-28 17:49:32	richo	Oooh, I see what I've done
2015-05-28 17:49:41	-->	Diggsey (diggsey@moz-9s9ol4.dsl.pipex.com) has joined #rust
2015-05-28 17:50:01	bluss	oh
2015-05-28 17:50:11	richo	yeah, I believed it was a zero length slice, just not why
2015-05-28 17:50:13	&mbrubeck	`vec![0; huge]` would work
2015-05-28 17:50:13	richo	thanks!
2015-05-28 17:50:27	&mbrubeck	or use a fixed-length array if `huge` is constant.
2015-05-28 17:50:41	&mbrubeck	(but fits on the stack)
2015-05-28 17:50:54	<--	gandalf (zbraniecki@moz-cp7c4m.ca.comcast.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-28 17:51:07	richo	Brilliant!
2015-05-28 17:51:13	-->	orangeshark (erik@moz-222eh1.44tj.56ot.0306.2602.IP) has joined #rust
2015-05-28 17:51:15	richo	yeah even if it would fit on the stack, and was constant, that would make me very sad
2015-05-28 17:51:19	--	Mode #rust [+o niconii] by ChanServ
2015-05-28 17:51:23	richo	I didn't know about that form for vec! though
2015-05-28 17:51:32	-->	Guest67 (textual@moz-gfs9v0.fios.verizon.net) has joined #rust
2015-05-28 17:51:40	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Connection closed)
2015-05-28 17:52:12	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-28 17:52:22	-->	Morten (Morten@moz-75skp6.bb.online.no) has joined #rust
2015-05-28 17:52:39	&mbrubeck	It's from the best-named RFC, https://github.com/rust-lang/rfcs/blob/master/text/0832-from-elem-with-love.md :)
2015-05-28 17:52:57	<--	larhat (Adium@moz-vlo5br.cable.virginm.net) has quit (Quit: Leaving.)
2015-05-28 17:52:58	richo	heh, fascinatingly now I'm getting Some(20) back
2015-05-28 17:53:09	richo	is that expected.. it's a bizarre number of bytes for read(2) to return
2015-05-28 17:53:12	XMPPwocky	richo: why fascinatingly
2015-05-28 17:53:16	XMPPwocky	richo: how big's the Vec
2015-05-28 17:53:44	-->	basicdays (basicdays@moz-vreeoj.cable.rcn.com) has joined #rust
2015-05-28 17:54:00	bluss	If you want to read into a vec, and know how much you want to read I think (&mut foo).take(n).read_to_end(&mut vec)  is fine
2015-05-28 17:54:07	<--	ismaelga (ismaelga@moz-m9v.8r3.251.188.IP) has quit (Connection closed)
2015-05-28 17:54:22	bluss	I guess our read loop API is a bit lacking
2015-05-28 17:54:24	richo	the data is 28 bytes long, vec.len() returns 28
2015-05-28 17:54:31	<--	ziocroc (ziocroc@moz-bfu.33o.74.151.IP) has quit (Client exited)
2015-05-28 17:55:14	-->	fabianvf (fabianvf@moz-fjqmui.va.comcast.net) has joined #rust
2015-05-28 17:55:55	<--	tomprogrammer (thomas@moz-fun1th.tr5r.qept.4dd0.2001.IP) has quit (Quit: WeeChat 1.2)
2015-05-28 17:56:28	-->	niconii_ (nicole@moz-qipo4g.frgo.qwest.net) has joined #rust
2015-05-28 17:56:43	<--	coryforsyth (coryforsyth@moz-hpsim2.fios.verizon.net) has quit (Client exited)
2015-05-28 17:57:04	<--	niconii (nicole@moz-pp1ulm.frgo.qwest.net) has quit (NickServ (RECOVER command used by niconii_))
2015-05-28 17:57:04	--	niconii_ is now known as niconii
2015-05-28 17:57:04	--	Mode #rust [+o niconii] by ChanServ
2015-05-28 17:58:16	-->	skade (skade@moz-eetliv.pools.vodafone-ip.de) has joined #rust
2015-05-28 19:15:20	--	irc: disconnected from server
2015-05-28 19:16:31	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-28 19:16:31	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-28 19:16:31	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-28 19:16:31	--	Channel #rust: 992 nicks (12 ops, 0 halfops, 1 voice, 979 normals)
2015-05-28 19:16:33	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-28 19:16:51	<--	jacor (jacor@moz-aq6q4f.ant0.oo2o.0007.2601.IP) has quit (Connection closed)
2015-05-28 19:16:54	<--	alaska (alaska@moz-8bdjem.fios.verizon.net) has quit (A TLS packet with unexpected length was received.)
2015-05-28 19:17:31	--	irc: disconnected from server
2015-05-28 19:17:42	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-28 19:17:42	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-28 19:17:42	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-28 19:17:42	--	Channel #rust: 991 nicks (12 ops, 0 halfops, 1 voice, 978 normals)
2015-05-28 19:17:44	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-28 19:17:49	-->	nodweber (nodweber@moz-knt.fgq.178.5.IP) has joined #rust
2015-05-28 19:18:07	<--	Douman (Douman@moz-ak7suh.dynamic.mts-nn.ru) has quit (Quit: )
2015-05-28 19:18:11	<--	cakecatz (cakecatz@moz-edrvuc.sannet.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-28 19:18:11	<--	fabianvf (fabianvf@moz-fjqmui.va.comcast.net) has quit (Connection closed)
2015-05-28 19:18:22	-->	lenstr (lenstr@moz-csu.vju.25.171.IP) has joined #rust
2015-05-28 19:19:32	@steveklabnik	ugh my wifi is terrible
2015-05-28 19:19:42	<--	jbomo (dkd@moz-uol4mm.fios.verizon.net) has quit (Quit: )
2015-05-28 19:19:53	geri	steveklabnik: overloaded with google io? ^^
2015-05-28 19:20:02	burntsushi	isagalaev: yes.
2015-05-28 19:20:14	burntsushi	cholcombe: `regex` works on stable but `regex_macros` does not.
2015-05-28 19:20:19	@steveklabnik	hehe no i'm at jsconf actually
2015-05-28 19:20:42	--	irc: disconnected from server
2015-05-28 19:20:53	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-28 19:20:53	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-28 19:20:53	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-28 19:20:53	--	Channel #rust: 989 nicks (12 ops, 0 halfops, 1 voice, 976 normals)
2015-05-28 19:20:55	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-28 19:21:28	burntsushi	cholcombe: oh. can you just not enable the `pattern` feature?
2015-05-28 19:21:35	<--	vikaton (uid59278@moz-0a9h81.ealing.irccloud.com) has quit (Quit: )
2015-05-28 19:21:38	cholcombe	i have no idea :) haha
2015-05-28 19:21:46	burntsushi	cholcombe: link me to the crate?
2015-05-28 19:21:50	isagalaev	burntsushi: thanks! I'm actually trying to turn it into a unicode char, so next thing I'm doing is calling char::from_u32. But may be there's something in std that already does all that in one call?
2015-05-28 19:22:02	cholcombe	burntsushi: https://crates.io/crates/yaml
2015-05-28 19:22:08	burntsushi	isagalaev: i don't think so. from_str_radix and them from_u32 sounds right to me.
2015-05-28 19:22:09	<--	nodweber (nodweber@moz-knt.fgq.178.5.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 19:22:09	<--	godlikesme (godlikesme@moz-2a2.dsd.174.79.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 19:22:19	isagalaev	burntsushi: thanks!
2015-05-28 19:23:26	@steveklabnik	geri: was hoping to have this fixed for you already, but i seemingly can't update the registry :(
2015-05-28 19:23:33	<--	nicknikolov (nicknikolov@moz-ko7.r6m.215.90.IP) has quit (Connection closed)
2015-05-28 19:23:34	sam113101	how do I get the number of cores/cpus there is?
2015-05-28 19:23:46	burntsushi	sam113101: use `num_cpus` on crates.io
2015-05-28 19:23:51	-->	wohiler (wohiler@moz-8id.6e1.62.133.IP) has joined #rust
2015-05-28 19:23:58	<--	meh (meh@moz-e56g7l.42-151.net24.it) has quit (Quit: I don't want to live on this planet anymore.)
2015-05-28 19:24:08	@steveklabnik	sam113101: so that question is acatually kinda hard. there's a crate.... oh burntsushi beat me to it ;)
2015-05-28 19:24:17	burntsushi	:P
2015-05-28 19:24:29	-->	dhole_ (dhole@moz-22n.slc.218.87.IP) has joined #rust
2015-05-28 19:25:06	burntsushi	cholcombe: that yaml crate depends on `regex_macros`, which is what's enabling the `pattern` feature.
2015-05-28 19:25:53	--	irc: disconnected from server
2015-05-28 19:26:04	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-28 19:26:04	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-28 19:26:04	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-28 19:26:04	--	Channel #rust: 987 nicks (12 ops, 0 halfops, 1 voice, 974 normals)
2015-05-28 19:26:06	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-28 19:26:07	burntsushi	cholcombe: release every 6 weeks.
2015-05-28 19:26:10	<--	dhole (dhole@moz-sd8kul.dynamic.jazztel.es) has quit (Ping timeout: 121 seconds)
2015-05-28 19:26:13	cholcombe	ok 
2015-05-28 19:26:23	cholcombe	yeah i'll try to figure out a way around this until it goes stable
2015-05-28 19:26:32	burntsushi	cholcombe: unless you want to invest some effort fixing up the `yaml` crate, you'll need to use the nightly compiler unfortunately.
2015-05-28 19:26:53	cholcombe	i think that's over my head at the moment.  i just started rust last week
2015-05-28 19:27:03	-->	gopar (gopar@moz-5039uj.ca.comcast.net) has joined #rust
2015-05-28 19:27:17	burntsushi	cholcombe: gotya. having fun? :-)
2015-05-28 19:27:20	@steveklabnik	geri: ah it finally grabbed it all
2015-05-28 19:27:48	cholcombe	yeah i'd say so.  it's about as compact as python but has all the type safety that i like
2015-05-28 19:28:09	cholcombe	feels like C but without the string handling nightmares 
2015-05-28 19:28:12	<--	willem (willem@moz-facs2s.dynamic.upc.nl) has quit (Quit: leaving)
2015-05-28 19:28:20	burntsushi	cholcombe: i <3 Rust's strings.
2015-05-28 19:28:27	cholcombe	yeah they're great
2015-05-28 19:28:46	geri	steveklabnik: u need to delete the .cargo folder ...
2015-05-28 19:29:08	chippers	esclear_, i just successfully built racer with the latest nightly
2015-05-28 19:29:30	-->	nicknikolov (nicknikolov@moz-ko7.r6m.215.90.IP) has joined #rust
2015-05-28 19:29:53	chippers	the syntex_syntax took longer compared to other crates, but it finished fine
2015-05-28 19:30:00	<--	isagalaev (Thunderbird@moz-qpq.tv0.34.50.IP) has left #rust
2015-05-28 19:30:43	<--	blank_name (blank_name@moz-7j6.fli.183.192.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 19:30:52	@steveklabnik	geri: https://github.com/Arnold1/rust_test/pull/1
2015-05-28 19:31:24	@steveklabnik	you should REALLY reconsider naming your struct the same thing as the module and giving it a snake_case name rather than a CamelCase name
2015-05-28 19:32:04	--	irc: disconnected from server
2015-05-28 19:32:15	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-28 19:32:15	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-28 19:32:15	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-28 19:32:15	--	Channel #rust: 985 nicks (12 ops, 0 halfops, 1 voice, 972 normals)
2015-05-28 19:32:17	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-28 19:32:52	-->	jadbaires (jadrian@moz-1jqrs9.dsl.telepac.pt) has joined #rust
2015-05-28 19:33:41	<--	jauhien (jauhien@moz-5d7eof.95.16clouds.com) has quit (Ping timeout: 121 seconds)
2015-05-28 19:33:44	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Connection closed)
2015-05-28 19:34:05	geri	steveklabnik: ok, i only forgot the use? :D
2015-05-28 19:34:17	<--	hhhhhhhhhh (mike@moz-969kuj.cable.virginm.net) has quit (Quit: WeeChat 1.2)
2015-05-28 19:34:31	@steveklabnik	well yeah, a few things
2015-05-28 19:34:37	@steveklabnik	i had to change the signature of toggle
2015-05-28 19:34:44	@steveklabnik	but mostly it was just using the right things, yeah :)
2015-05-28 19:35:11	<--	James (quassel@moz-q6malq.range86-148.btcentralplus.com) has quit (Connection closed)
2015-05-28 19:35:37	-->	m_khvoinitsky (quassel@moz-bkl6sn.d57a.lq23.04f8.2a01.IP) has joined #rust
2015-05-28 19:36:40	-->	swgillespie (swgillespie@moz-1i5.3un.220.167.IP) has joined #rust
2015-05-28 19:39:07	geri	steveklabnik: ok cool... cant you write use fpga_awg::fpga_awg; ?
2015-05-28 19:39:11	<--	eckhardt (eckhardt@moz-s9e.ov1.227.199.IP) has quit (Connection closed)
2015-05-28 19:39:14	@steveklabnik	you cant
2015-05-28 19:39:19	@steveklabnik	the names conflict
2015-05-28 19:39:20	-->	Wild_Cat (Max@moz-2clr66.dsl.teksavvy.com) has joined #rust
2015-05-28 19:39:26	geri	rename class name?
2015-05-28 19:39:31	geri	fpgaAwg
2015-05-28 19:39:33	@steveklabnik	if it was FpgaAwg, you could use fpga_awg::FpgwAwg
2015-05-28 19:39:40	geri	cool
2015-05-28 19:39:44	@steveklabnik	which is conventionally what it should be named
2015-05-28 19:39:50	<--	pgonda (peter@moz-s36.0tp.134.75.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 19:39:50	<--	hjr3 (hradtke@moz-lei.av4.169.69.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2015-05-28 19:39:57	geri	noted
2015-05-28 19:40:15	--	irc: disconnected from server
2015-05-28 19:40:26	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-28 19:40:26	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-28 19:40:26	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-28 19:40:26	--	Channel #rust: 982 nicks (12 ops, 0 halfops, 1 voice, 969 normals)
2015-05-28 19:40:28	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-28 19:40:38	@steveklabnik	types get CamelCase, modules and variables and functions get snake_case
2015-05-28 19:41:00	<--	idegen (greg@moz-9c4nle.or.frontiernet.net) has quit (Connection closed)
2015-05-28 19:41:29	-->	pcwalton (pcwalton@moz-6kjabm.ca.comcast.net) has joined #rust
2015-05-28 19:41:29	--	Mode #rust [+ao pcwalton pcwalton] by ChanServ
2015-05-28 19:41:47	geri	steveklabnik: ok, need to run out...thx
2015-05-28 19:42:10	-->	pgonda (peter@moz-s36.0tp.134.75.IP) has joined #rust
2015-05-28 19:42:24	-->	blank_name (blank_name@moz-f80.i34.36.50.IP) has joined #rust
2015-05-28 19:42:43	<--	partkyle (partkyle@moz-e8m.r65.206.12.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 19:42:55	-->	idegen (greg@moz-9c4nle.or.frontiernet.net) has joined #rust
2015-05-28 19:43:29	-->	eckhardt (eckhardt@moz-s9e.ov1.227.199.IP) has joined #rust
2015-05-28 19:43:54	<--	bfrog (tburdick@moz-hde.5e5.136.67.IP) has quit (Quit: WeeChat 1.2)
2015-05-28 19:44:03	<--	eckhardt (eckhardt@moz-s9e.ov1.227.199.IP) has quit (Connection closed)
2015-05-28 19:44:07	<--	pcwalton (pcwalton@moz-6kjabm.ca.comcast.net) has quit (Client exited)
2015-05-28 19:44:09	-->	eckhardt (eckhardt@moz-s9e.ov1.227.199.IP) has joined #rust
2015-05-28 19:44:26	-->	pcwalton (pcwalton@moz-6kjabm.ca.comcast.net) has joined #rust
2015-05-28 19:44:27	--	Mode #rust [+ao pcwalton pcwalton] by ChanServ
2015-05-28 19:44:41	@steveklabnik	np :)
2015-05-28 19:44:54	<--	GGist (Mibbit@moz-07kde0.seattleu.edu) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-28 19:47:13	-->	Guest58 (textual@moz-70hlaj.austtx.sbcglobal.net) has joined #rust
2015-05-28 19:47:13	<--	choplin (choplin@moz-7rpl67.t6mc.g9m6.001a.240d.IP) has quit (Connection closed)
2015-05-28 19:47:17	<--	Nextra (Nextra@moz-fbamoc.ewe-ip-backbone.de) has quit (Connection closed)
2015-05-28 19:47:19	<--	Guest58 (textual@moz-70hlaj.austtx.sbcglobal.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-28 19:47:45	<--	geri (Mibbit@moz-22clac.highway.telekom.at) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-28 19:48:36	-->	choplin (choplin@moz-7rpl67.t6mc.g9m6.001a.240d.IP) has joined #rust
2015-05-28 19:48:53	<--	lenstr (lenstr@moz-csu.vju.25.171.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-28 19:49:02	<--	mkpankov (mkpankov@moz-ejg.3mh.23.84.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 19:49:28	&pcwalton	has anyone tried https://code.google.com/p/gperftools/ with rust?
2015-05-28 19:49:31	-->	lorenzb (textual@moz-5ev.5pk.144.213.IP) has joined #rust
2015-05-28 19:50:05	-->	fengshaun (fengshaun@moz-oagll1.cpe.pppoe.ca) has joined #rust
2015-05-28 19:50:17	<--	lorenzb (textual@moz-5ev.5pk.144.213.IP) has quit (Quit: Textual IRC Client: www.textualapp.com)
2015-05-28 19:50:21	-->	lorenzb (textual@moz-5ev.5pk.144.213.IP) has joined #rust
2015-05-28 19:51:06	<--	harrisonclarke (harrisoncla@moz-530kut.eastlink.ca) has quit (Connection closed)
2015-05-28 19:51:23	-->	partkyle (partkyle@moz-e8m.r65.206.12.IP) has joined #rust
2015-05-28 19:51:27	-->	harrisonclarke (harrisoncla@moz-530kut.eastlink.ca) has joined #rust
2015-05-28 19:53:26	--	irc: disconnected from server
2015-05-28 19:53:37	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-28 19:53:37	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-28 19:53:37	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-28 19:53:37	--	Channel #rust: 982 nicks (13 ops, 0 halfops, 1 voice, 968 normals)
2015-05-28 19:53:39	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-28 19:54:37	--	irc: disconnected from server
2015-05-28 19:54:48	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-28 19:54:48	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-28 19:54:48	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-28 19:54:48	--	Channel #rust: 980 nicks (13 ops, 0 halfops, 1 voice, 966 normals)
2015-05-28 19:54:50	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-28 19:55:50	<--	harrisonclarke (harrisoncla@moz-530kut.eastlink.ca) has quit (Ping timeout: 121 seconds)
2015-05-28 19:56:21	-->	tikue (tim@moz-g5n.ha3.38.65.IP) has joined #rust
2015-05-28 19:56:32	Havvy	ogham:  Ping
2015-05-28 19:56:36	<--	choplin (choplin@moz-7rpl67.t6mc.g9m6.001a.240d.IP) has quit (Connection closed)
2015-05-28 19:56:40	ogham	ow
2015-05-28 19:57:11	Havvy	I'm looking at the ansi-term code, and I'm wondering why Style is an enum instead of just a struct of the last variant?
2015-05-28 19:57:27	-->	Guest__ (textual@moz-rtn.fg7.77.192.IP) has joined #rust
2015-05-28 19:58:02	-->	isagalaev (Thunderbird@moz-qpq.tv0.34.50.IP) has joined #rust
2015-05-28 19:58:43	ogham	It could probably be made into a struct with not much loss
2015-05-28 19:58:58	ogham	But initially it was because I made it for exa, and in exa, 90% of the time I needed Plain or just a foreground colour
2015-05-28 19:59:03	<--	dfockler (dfockler@moz-etoj16.hfc.comcastbusiness.net) has quit (Connection closed)
2015-05-28 19:59:34	Havvy	for `Plain`, that would just be Style::default().
2015-05-28 19:59:36	-->	Izacht13 (Izacht13@moz-gee645.atsnmeam.ccmaine.net) has joined #rust
2015-05-28 19:59:48	ogham	yeah
2015-05-28 20:00:52	<--	panicbit (panicbit@moz-trnuar.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2015-05-28 20:01:34	<--	nicknikolov (nicknikolov@moz-ko7.r6m.215.90.IP) has quit (Connection closed)
2015-05-28 20:01:49	ogham	it was my thinking - over a year ago, at least, when I didn't know much Rust - that I could make the program slightly faster by optimising for the case where it was just a foreground colour for output
2015-05-28 20:01:54	Havvy	Alright, gonna send in a PR that turns the enum into a struct.
2015-05-28 20:01:56	isagalaev	Stuck again with parsing :-) I'm looping through a char iterator with `while let` and I want to read next N chars inside the loop and treat it as &str. Doing `chars.take(4).collect()` moves `chars` and out of `while let`, though. Simplified example: http://is.gd/9f9ilb
2015-05-28 20:02:01	<--	loz (quassel@moz-0m7tp3.tpgi.com.au) has quit (Connection closed)
2015-05-28 20:02:05	ogham	I'd :+1: it!
2015-05-28 20:02:11	<--	lorenzb (textual@moz-5ev.5pk.144.213.IP) has quit (Quit: Bye bye)
2015-05-28 20:02:18	-->	lorenzb (lorenzb@moz-5ev.5pk.144.213.IP) has joined #rust
2015-05-28 20:02:23	isagalaev	What am I doing wrong? ©
2015-05-28 20:02:24	-->	hjr3 (hradtke@moz-lei.av4.169.69.IP) has joined #rust
2015-05-28 20:02:35	ogham	There really is no reason other than "I just did it that way", which isn't much of a reason
2015-05-28 20:02:49	--	nsm is now known as nsm|away
2015-05-28 20:02:59	-->	nicknikolov (nicknikolov@moz-ko7.r6m.215.90.IP) has joined #rust
2015-05-28 20:03:17	-->	logan_e (logan_e@moz-ltn.qg3.218.73.IP) has joined #rust
2015-05-28 20:03:24	Havvy	And after that I'm going to add `dimmed` to the struct.
2015-05-28 20:03:27	<--	nicknikolov (nicknikolov@moz-ko7.r6m.215.90.IP) has quit (Connection closed)
2015-05-28 20:03:28	<--	tikue (tim@moz-g5n.ha3.38.65.IP) has quit (Connection closed)
2015-05-28 20:04:48	ogham	isagalaev: You can use a reference to the struct with by_ref, like this: http://is.gd/u4W48m
2015-05-28 20:04:57	ogham	But I don't think the output is what you intended...
2015-05-28 20:05:38	Havvy	"error: aborting due to 40 previous errors"  Woo...
2015-05-28 20:05:38	<--	swgillespie (swgillespie@moz-1i5.3un.220.167.IP) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-28 20:06:00	XMPPwocky	Havvy: achievement unlocked!
2015-05-28 20:06:09	-->	niconii (nicole@moz-r8dlmh.frgo.qwest.net) has joined #rust
2015-05-28 20:06:09	--	Mode #rust [+o niconii] by ChanServ
2015-05-28 20:06:11	isagalaev	ogham: don't mind the output :-) What I'm really doing is parsing "\u1234" into unicode chars, hence the desire to read 4 characters after "u".
2015-05-28 20:06:23	ogham	ah
2015-05-28 20:06:39	-->	loz (quassel@moz-0m7tp3.tpgi.com.au) has joined #rust
2015-05-28 20:06:41	XMPPwocky	isagalaev: chars.by_ref().take(4).collect() may work
2015-05-28 20:06:44	ogham	Havvy: it's only a problem if the errors start to saturate your terminal's scrollback
2015-05-28 20:07:10	Havvy	ogham:  Which is what happened.
2015-05-28 20:07:18	Havvy	It's actually smaller than I expected.
2015-05-28 20:07:23	-->	mib_vma6qy (Mibbit@moz-utfmb0.ma.comcast.net) has joined #rust
2015-05-28 20:07:27	<--	mib_vma6qy (Mibbit@moz-utfmb0.ma.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-28 20:07:29	isagalaev	ogham: so I don't really need a whole String there, but I couldn't find any other way to turn .take(4) into &str except from a temp String, which sucks :-(
2015-05-28 20:07:37	ogham	heh, some terminals have a default one of like 100 or something tiny
2015-05-28 20:07:42	Havvy	Here's the new implementation for the `bold` method:  `Style { bold: true, .. self }`
2015-05-28 20:07:47	<--	godlikesme (godlikesme@moz-2a2.dsd.174.79.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 20:07:56	ogham	Havvy: !! you can do that!
2015-05-28 20:07:59	XMPPwocky	isagalaev: you may want to write something on top of a Reader
2015-05-28 20:07:59	ogham	I had no idea.
2015-05-28 20:08:15	Havvy	You can with structs, but not with enums.
2015-05-28 20:08:15	<--	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-28 20:08:19	XMPPwocky	specifically something over a Cursor<Vec<u8>>, actually
2015-05-28 20:08:20	ogham	ahh
2015-05-28 20:08:28	Havvy	!learn update syntax = https://doc.rust-lang.org/book/structs.html#update-syntax
2015-05-28 20:08:28	+rustbot	Learned factoid 'update syntax'.
2015-05-28 20:08:30	-->	Guest38 (textual@moz-4hh.6p3.217.74.IP) has joined #rust
2015-05-28 20:08:32	XMPPwocky	Havvy: well, you can with tuple variants iirc
2015-05-28 20:08:35	Havvy	!learn struct update syntax = https://doc.rust-lang.org/book/structs.html#update-syntax
2015-05-28 20:08:35	+rustbot	Learned factoid 'struct update syntax'.
2015-05-28 20:08:41	Havvy	!learn update syntax @= struct update syntax
2015-05-28 20:08:42	+rustbot	Learned alias 'update syntax' => 'struct update syntax'.
2015-05-28 20:08:45	XMPPwocky	rusti: let x = (0, 1, 2); let y = (3, 4, ..x)
2015-05-28 20:08:46	--	Notice(playbot): <anon>:10:5: 10:6 error: expected one of `.`, `;`, or an operator, found `}`
2015-05-28 20:08:46	--	Notice(playbot): <anon>:10     });
2015-05-28 20:08:46	--	Notice(playbot): output truncated; full output at: http://bit.ly/1FGjIW0
2015-05-28 20:08:46	XMPPwocky	rusti: let x = (0, 1, 2); let y = (3, 4, ..x);
2015-05-28 20:08:48	--	Notice(playbot): ()
2015-05-28 20:08:48	isagalaev	XMPPwocky: hmm… I'll look into that, thanks.
2015-05-28 20:08:51	XMPPwocky	rusti: let x = (0, 1, 2); let y = (3, 4, ..x); y
2015-05-28 20:08:52	--	Notice(playbot): (3, 4, ..(0, 1, 2))
2015-05-28 20:08:54	XMPPwocky	what
2015-05-28 20:08:59	XMPPwocky	wtf is THAT
2015-05-28 20:09:20	-->	jauhien (jauhien@moz-5d7eof.95.16clouds.com) has joined #rust
2015-05-28 20:09:22	<--	gsingh93 (gulshan@moz-ln1ktu.st3l.iv8o.0004.2601.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 20:09:24	ogham	XMPPwocky: You mean a Read?
2015-05-28 20:09:28	@niconii	XMPPwocky: ranges can store just about anything :D
2015-05-28 20:09:29	XMPPwocky	Oh, it's a range
2015-05-28 20:09:34	XMPPwocky	rusti: let x = (0, 1, 2); let y = (3, 4, ...x); y
2015-05-28 20:09:35	--	Notice(playbot): <anon>:9:43: 9:46 error: unexpected token: `...`
2015-05-28 20:09:35	ogham	also it's a range to x
2015-05-28 20:09:35	--	Notice(playbot): <anon>:9         let x = (0, 1, 2); let y = (3, 4, ...x); y
2015-05-28 20:09:35	--	Notice(playbot): output truncated; full output at: http://bit.ly/1dAKjL7
2015-05-28 20:09:39	XMPPwocky	drat
2015-05-28 20:09:42	Havvy	ogham:  I'm also making it take `self` by reference since it doesn't actually need to consume the old style.
2015-05-28 20:09:47	XMPPwocky	that was really confusing :P
2015-05-28 20:09:58	XMPPwocky	ogham: "a read" sounds silly
2015-05-28 20:10:02	XMPPwocky	but yes
2015-05-28 20:10:37	<--	jimb (user@moz-09a.i8g.126.207.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 20:10:54	ogham	I stress that point because yesterday I was trying to work out how to read strings a byte at a time, and found loads of references to Readers and stuff
2015-05-28 20:10:59	ogham	and was like, that's not there anymore, grrrrr
2015-05-28 20:11:17	ogham	it does sound silly though.
2015-05-28 20:11:36	-->	bfrog (tburdick@moz-hde.5e5.136.67.IP) has joined #rust
2015-05-28 20:11:43	bfrog	can I do type specialization in rust?
2015-05-28 20:12:05	&mbrubeck	The docs for Read use "reader" to mean "something that implements the Read trait"
2015-05-28 20:12:23	XMPPwocky	bfrog: if you mean what I think you mean, no
2015-05-28 20:12:27	-->	andreabedini (andreabedin@moz-2lt49q.unimelb.edu.au) has joined #rust
2015-05-28 20:12:28	bfrog	or I guess I could use traits here
2015-05-28 20:12:35	XMPPwocky	bfrog: that's the spirit! :P
2015-05-28 20:12:50	bfrog	since they can have static dispatch anyways right :-)
2015-05-28 20:13:21	ogham	was there an 'official' reason for going Reader -> Read?
2015-05-28 20:13:23	@niconii	bfrog: to be clear, what do you mean by type specialization? not <T: Trait>, right?
2015-05-28 20:13:25	ogham	or deriving -> derive, for that matter
2015-05-28 20:13:39	@niconii	ogham: to better match with other traits like Display, Add, etc.
2015-05-28 20:13:45	@niconii	ogham: which are verbs
2015-05-28 20:13:49	XMPPwocky	yeah, apparently traits are supposed to be infinitive verbs
2015-05-28 20:13:50	ogham	ah, that figures
2015-05-28 20:14:14	ogham	I'd much rather have that than Defaultable, Addable, etc
2015-05-28 20:15:01	&mbrubeck	So instead of Monad we'll have Bind?  :)
2015-05-28 20:15:04	XMPPwocky	MultiplicativeIteratable
2015-05-28 20:15:06	hroi	typo in http://doc.rust-lang.org/std/ third section mentions 'Iterater'
2015-05-28 20:15:13	@niconii	hroi: fixed on nightly
2015-05-28 20:15:15	-->	mkpankov (mkpankov@moz-n4e.83e.23.84.IP) has joined #rust
2015-05-28 20:15:23	ogham	Iterater? I 'ardly...
2015-05-28 20:15:31	XMPPwocky	there's the iterater and the iteratee
2015-05-28 20:15:33	@steveklabnik	hroi: i _think_ that got fixed on master, checking....
2015-05-28 20:15:48	-->	gandalf (zbraniecki@moz-cp7c4m.ca.comcast.net) has joined #rust
2015-05-28 20:15:50	@steveklabnik	yes, it is
2015-05-28 20:15:50	@steveklabnik	:)
2015-05-28 20:15:53	@steveklabnik	http://doc.rust-lang.org/nightly/std/ <-
2015-05-28 20:16:14	ogham	mbrubeck: I wouldn't mind that!
2015-05-28 20:16:37	bfrog	I want to create a specialization of a b+tree node based on type
2015-05-28 20:16:39	ogham	Map instead of Functor, too.
2015-05-28 20:16:44	-->	ytain (ytain@moz-ffpck2.dsl.teksavvy.com) has joined #rust
2015-05-28 20:16:51	bfrog	if the key and/or value types are fixed in size, I can do some nice things
2015-05-28 20:17:03	XMPPwocky	bfrog: ... all Rust types are fixed in size, though?
2015-05-28 20:17:11	XMPPwocky	well, all the useful ones
2015-05-28 20:17:14	bfrog	a strings aren't fixed size
2015-05-28 20:17:19	-->	alaska (alaska@moz-8bdjem.fios.verizon.net) has joined #rust
2015-05-28 20:17:21	XMPPwocky	i see what you mean
2015-05-28 20:17:36	<--	spider-mario (spidermario@moz-meu9c6.wb.wifirst.net) has quit (A TLS packet with unexpected length was received.)
2015-05-28 20:17:41	bfrog	if I have basically the equivalent of a persistent Map<str,str> saved to disk, I can't know that each str is only N bytes
2015-05-28 20:18:20	bfrog	but if I have Map<u8,u8> I mean, I can do some really fun things to make compact and fast
2015-05-28 20:18:41	XMPPwocky	bfrog: then yeah, have a trait
2015-05-28 20:18:54	-->	nodweber (nodweber@moz-knt.fgq.178.5.IP) has joined #rust
2015-05-28 20:19:01	-->	aatch (james@moz-is4j4r.cable.telstraclear.net) has joined #rust
2015-05-28 20:19:02	XMPPwocky	but make sure it's a public one
2015-05-28 20:19:06	bfrog	yeah, I'm thinking I'll have a trait basically representing a LeafNode and BranchNode
2015-05-28 20:19:08	XMPPwocky	users might need to implement it manually
2015-05-28 20:19:15	<--	davebettin (davebettin@moz-hde.5e5.136.67.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 20:19:15	XMPPwocky	you can also make use of associated types
2015-05-28 20:19:27	XMPPwocky	if implementing it manually is too common, expose a macro too
2015-05-28 20:19:31	stringy	does anyone know if the evaluation order is guaranteed for tuple construction? is (foo(), foo()) guaranteed to put the result of the first invocation of foo as .0 ?
2015-05-28 20:19:59	<--	ismaelga (ismaelga@moz-m9v.8r3.251.188.IP) has quit (Connection closed)
2015-05-28 20:20:02	<--	hjr3 (hradtke@moz-lei.av4.169.69.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2015-05-28 20:20:04	<--	Izacht13 (Izacht13@moz-gee645.atsnmeam.ccmaine.net) has quit (Quit: Leaving)
2015-05-28 20:20:11	<--	}ls{ (uhelp@moz-h21541.dip0.t-ipconnect.de) has quit (Quit: User terminated by real life interrupt)
2015-05-28 20:20:21	-->	ismaelga (ismaelga@moz-m9v.8r3.251.188.IP) has joined #rust
2015-05-28 20:20:28	stringy	https://github.com/rust-lang/rust/issues/15300 seems to be related, but not specifically about tuples
2015-05-28 20:20:36	<--	rillian (giles@moz-84unpo.osuosl.org) has quit (Ping timeout: 121 seconds)
2015-05-28 20:20:42	aatch	stringy, the evaluation order of non-dependent expressions isn't strictly guaranteed.
2015-05-28 20:21:43	stringy	ah, ok, thanks :)
2015-05-28 20:21:58	-->	ismaelga_ (ismaelga@moz-m9v.8r3.251.188.IP) has joined #rust
2015-05-28 20:22:10	<--	ismaelga (ismaelga@moz-m9v.8r3.251.188.IP) has quit (Connection closed)
2015-05-28 20:22:16	<--	alaska (alaska@moz-8bdjem.fios.verizon.net) has quit (Ping timeout: 121 seconds)
2015-05-28 20:22:18	stringy	I assumed as much so I always introduced bindings first, but I felt it might be a little easier to read without them
2015-05-28 20:23:02	<--	ahal|afk (ahal@moz-b8e0a0.cpe.pppoe.ca) has quit (A TLS packet with unexpected length was received.)
2015-05-28 20:23:14	<--	nodweber (nodweber@moz-knt.fgq.178.5.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 20:23:17	aatch	stringy, as a general rule, expressions are evaluated in a left-to-right order. That issue exposes the fact that "evaluating" a identifier expression doesn't actually do anything.
2015-05-28 20:23:33	<--	lorenzb (lorenzb@moz-5ev.5pk.144.213.IP) has quit (Quit: Bye bye)
2015-05-28 20:24:28	<--	demilux (demilux@moz-fk1.kt4.14.64.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-28 20:25:31	stringy	so, lets say in my case I have a vector of enumerated types; if I do `if let (VariantA(a), VariantB(b)) = (vec.pop(), vec.pop()) { /* */ }` is a guaranteed to be popped first, then b?
2015-05-28 20:25:38	<--	bfrog (tburdick@moz-hde.5e5.136.67.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 20:25:41	-->	SerialVelocity (SerialVeloc@moz-attia0.cable.virginm.net) has joined #rust
2015-05-28 20:26:20	-->	minot2 (kkus@moz-baj4jj.74.srtnet.com) has joined #rust
2015-05-28 20:26:45	<--	Simplebrain (Simplebrain@moz-6h4u6b.skybroadband.com) has quit (Connection closed)
2015-05-28 20:26:59	aatch	stringy, it's not *actually* guaranteed, but it's the current behaviour and I'd be surprised if it changed.
2015-05-28 20:27:30	-->	Simplebrain (Simplebrain@moz-6h4u6b.skybroadband.com) has joined #rust
2015-05-28 20:27:34	stringy	because now I do `let a = vec.pop(); let b = vec.pop(); if let (VariantA(a), VariantB(b)) = (a, b) { /* */ }` because I am gunshy about undefined behavior related to e.g. sequence points in C++
2015-05-28 20:27:49	stringy	I'll probably stick to the extra bindings anyway for now
2015-05-28 20:27:50	bluss	not sure how it could change, when you factor in move semantics and borrowing it only works in left to right order
2015-05-28 20:28:03	bluss	for example this
2015-05-28 20:28:03	-->	godlikesme (godlikesme@moz-2a2.dsd.174.79.IP) has joined #rust
2015-05-28 20:28:08	bluss	playbot: let v = vec![1,2]; (v.len(), drop(v))
2015-05-28 20:28:09	--	Notice(playbot): (2, ())
2015-05-28 20:28:15	bluss	maybe that's too simple to be interesting
2015-05-28 20:28:32	aatch	bluss, well, we could construct the CFG in a different order and change trans to match.
2015-05-28 20:28:46	stringy	playbot: let v = vec![1,2]; (drop(v), v.len())
2015-05-28 20:28:47	--	Notice(playbot): <anon>:9:38: 9:39 error: use of moved value: `v`
2015-05-28 20:28:47	--	Notice(playbot): <anon>:9         let v = vec![1,2]; (drop(v), v.len())
2015-05-28 20:28:47	--	Notice(playbot): output truncated; full output at: http://bit.ly/1FGlQNC
2015-05-28 20:28:50	aatch	bluss, it's just that would be stupid.
2015-05-28 20:28:59	-->	copycat (Thunderbird@moz-dpm.8hc.223.111.IP) has joined #rust
2015-05-28 20:29:14	<--	isagalaev (Thunderbird@moz-qpq.tv0.34.50.IP) has left #rust
2015-05-28 20:29:30	bluss	I'm not sure it would be sound
2015-05-28 20:29:31	<--	Ralith (ralith@moz-miv.lne.251.63.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 20:29:42	-->	Guest5707 (Azdle@moz-fv6arh.mn.comcast.net) has joined #rust
2015-05-28 20:30:08	aatch	moving and borrowing use dataflow analysis on a CFG, for straight-line code, like function arguments, we just process the args left-to-right.
2015-05-28 20:30:41	<--	fabianvf (fabianvf@moz-fjqmui.va.comcast.net) has quit (Connection closed)
2015-05-28 20:30:42	stringy	if the behavior were to change would it be considered breaking?
2015-05-28 20:30:44	aatch	bluss, don't see why it wouldn't be. Confusing, definitely.
2015-05-28 20:30:55	@steveklabnik	stringy: probably, yes
2015-05-28 20:31:10	<--	ytain (ytain@moz-ffpck2.dsl.teksavvy.com) has quit (Quit: Textual IRC Client: www.textualapp.com)
2015-05-28 20:31:13	@steveklabnik	stringy: given https://github.com/rust-lang/rfcs/pull/1122
2015-05-28 20:31:22	-->	fabianvf (fabianvf@moz-fjqmui.va.comcast.net) has joined #rust
2015-05-28 20:31:29	<--	rmgk_ (ragnar@moz-ajvat8.dyn.telefonica.de) has quit (Quit: No Ping reply in 180 seconds.)
2015-05-28 20:31:42	-->	p1start (p1start@moz-nftjhe.org) has joined #rust
2015-05-28 20:31:59	@steveklabnik	oh wow that rfc has changed lately
2015-05-28 20:32:05	aatch	It's also just a bad idea all around. While cases like https://github.com/rust-lang/rust/issues/15300 expose some implementation details, it's also not code most people are going to write.
2015-05-28 20:32:29	<--	amnn (amnn@moz-ro1qqu.ox.ac.uk) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-28 20:33:45	-->	rmgk (ragnar@moz-ajvat8.dyn.telefonica.de) has joined #rust
2015-05-28 20:33:57	stringy	also, and this isn't as important right now, but how likely is it that the temporary tuple I construct in my `if let` binding is optimized out?
2015-05-28 20:34:18	-->	c_wraith (c_wraith@moz-7i8.v6v.191.131.IP) has joined #rust
2015-05-28 20:34:23	aatch	That behaves the way it does because we translate to a "Datum" which may be an rvalue *or* an lvalue. If it's an lvalue, it's some sort of pointer, and we don't actually load the value until after we've translated both sides of the operator.
2015-05-28 20:34:26	<--	rbranson (rbranson@moz-i7m.9o0.201.199.IP) has quit (Quit: Computer has gone to sleep.)
2015-05-28 20:34:39	aatch	stringy, pretty likely.
2015-05-28 20:34:39	bluss	immediately following `if let` is a pattern, not a temporary tuple
2015-05-28 20:34:40	<--	logan_e (logan_e@moz-ltn.qg3.218.73.IP) has quit (Client exited)
2015-05-28 20:34:46	<--	copycat (Thunderbird@moz-dpm.8hc.223.111.IP) has quit (Client exited)
2015-05-28 20:34:56	<--	c_wraith (c_wraith@moz-7i8.v6v.191.131.IP) has quit (Connection closed)
2015-05-28 20:35:00	-->	jmb (Mibbit@moz-vmka28.ma.comcast.net) has joined #rust
2015-05-28 20:35:09	stringy	bluss: I mean the bit on the right side of the =
2015-05-28 20:35:20	stringy	that's a temporary tuple I deconstruct immediately on the left of the =, right?
2015-05-28 20:35:23	bluss	aha
2015-05-28 20:35:40	-->	c_wraith (c_wraith@moz-7i8.v6v.191.131.IP) has joined #rust
2015-05-28 20:35:52	-->	JuggleTux (tux@moz-ho0t1f.adslplus.ch) has joined #rust
2015-05-28 20:36:06	<--	Gabriel_7 (Gabriel@moz-c16mlm.mtgr.92aj.0e35.2a01.IP) has quit (Connection closed)
2015-05-28 20:36:29	stringy	lol, I've always found lvalue and rvalue funny, that they have no better name than just left or right
2015-05-28 20:36:29	-->	copycat (Thunderbird@moz-dpm.8hc.223.111.IP) has joined #rust
2015-05-28 20:36:50	stringy	thank you all, I think I'm going to leave in the potentially superfluous bindings for now
2015-05-28 20:36:52	aatch	stringy, there's a pass in LLVM called "scalar replacement of aggregates" which replaces aggregate types (like structs/tuples) with scalars of the contents.
2015-05-28 20:38:16	stringy	awesome; it's just a nice way to express the condition, very concise
2015-05-28 20:38:20	aatch	stringy, which opens up additional optmisations. Like if you never use a field in an on-stack value, SROA will allow that field to be removed.
2015-05-28 20:38:54	stringy	woah, so the actual space allocated to the type shrinks?
2015-05-28 20:39:10	stringy	err, to that value on the stack
2015-05-28 20:39:40	aatch	stringy, well the type is replaced with a set of values for each field.
2015-05-28 20:39:45	<--	bluss (bluss@moz-ec5o68.cust.bredbandsbolaget.se) has quit (Ping timeout: 121 seconds)
2015-05-28 20:39:53	-->	choplin (choplin@moz-aac0o0.dion.ne.jp) has joined #rust
2015-05-28 20:40:04	stringy	ah, and so it can choose to allocate only fields which are used?
2015-05-28 20:40:06	<--	dirvine (dirvine@moz-42j0at.cable.virginm.net) has quit (Quit: Changing server)
2015-05-28 20:40:33	aatch	stringy, so `let a = MyStruct::new()` will be replaced with `let a_0 = MyStruct_field0; let a_1 = ...`
2015-05-28 20:40:36	<--	choplin (choplin@moz-aac0o0.dion.ne.jp) has quit (Connection closed)
2015-05-28 20:40:50	kimundi	stringy: yes
2015-05-28 20:40:58	<--	hroi (hroi@moz-d273ub.static.netgroup.dk) has quit (Ping timeout: 121 seconds)
2015-05-28 20:41:03	<--	mayeko (mayeko@moz-6ui5kq.ovr0.0mfe.0e35.2a01.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 20:41:11	-->	rbranson (rbranson@moz-i7m.9o0.201.199.IP) has joined #rust
2015-05-28 20:41:14	aatch	stringy, at which point unused values can be removed from the function and the associated allocas can be too.
2015-05-28 20:41:16	<--	copycat (Thunderbird@moz-dpm.8hc.223.111.IP) has quit (Client exited)
2015-05-28 20:41:28	-->	choplin (choplin@moz-aac0o0.dion.ne.jp) has joined #rust
2015-05-28 20:41:29	<--	choplin (choplin@moz-aac0o0.dion.ne.jp) has quit (Connection closed)
2015-05-28 20:41:31	-->	choplin (choplin@moz-aac0o0.dion.ne.jp) has joined #rust
2015-05-28 20:41:38	<--	colinsurprenant (colin@moz-rmn4e2.169.electronicbox.net) has quit (Client exited)
2015-05-28 20:42:00	aatch	stringy, SROA is a bit like inlining in that it's not a particularly powerful optimisation by itself, but opens up more optimisations to do work.
2015-05-28 20:43:27	-->	logan_e (logan_e@moz-ltn.qg3.218.73.IP) has joined #rust
2015-05-28 20:43:35	-->	grant (grant@moz-jfh.0nq.187.64.IP) has joined #rust
2015-05-28 20:44:52	<--	Fiveside (fiveside@moz-t2eatg.vsp.com) has quit (Ping timeout: 121 seconds)
2015-05-28 20:44:54	<--	grant (grant@moz-jfh.0nq.187.64.IP) has quit (Connection closed)
2015-05-28 20:45:13	<--	erz (erz@moz-fiq1tl.broadband.corbina.ru) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-28 20:45:23	Moonlightning	playbot: format!("{:?<}", 4)
2015-05-28 20:45:25	--	Notice(playbot): "4"
2015-05-28 20:45:39	Moonlightning	playbot: format!("{:?<4}", "")
2015-05-28 20:45:41	--	Notice(playbot): "????"
2015-05-28 20:46:29	<--	p1start (p1start@moz-nftjhe.org) has quit (Ping timeout: 121 seconds)
2015-05-28 20:47:05	<--	logan_e (logan_e@moz-ltn.qg3.218.73.IP) has quit (Client exited)
2015-05-28 20:47:18	Dabo	wat
2015-05-28 20:47:23	Dabo	????
2015-05-28 20:47:32	-->	p1start (p1start@moz-nftjhe.org) has joined #rust
2015-05-28 20:48:19	<--	wolfviking0 (wolfviking0@moz-8hd.3b6.246.162.IP) has quit (Client exited)
2015-05-28 20:48:29	kimundi	playbot: format!("{:?<4}", "12")
2015-05-28 20:48:30	--	Notice(playbot): "12??"
2015-05-28 20:48:36	kimundi	Dabo: ^ padding
2015-05-28 20:48:48	Dabo	hm, strange
2015-05-28 20:48:48	Dabo	ok
2015-05-28 20:49:21	@niconii	playbot: format!("{:A<4}", 4)
2015-05-28 20:49:22	--	Notice(playbot): "4AAA"
2015-05-28 20:49:22	Moonlightning	Actually, I'm abusing it to get a string of one character, repeated
2015-05-28 20:49:38	@niconii	{:?<} isn't related to {:?} syntax
2015-05-28 20:49:43	<--	thelink2012 (Mibbit@moz-e4c.6b2.214.186.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-28 20:49:47	-->	lenstr (lenstr@moz-csu.vju.25.171.IP) has joined #rust
2015-05-28 20:50:26	Moonlightning	It's a coincidence that the character I wanted was '?'
2015-05-28 20:50:28	Moonlightning	playbot: format!("{:.<4}", "")
2015-05-28 20:50:29	--	Notice(playbot): "...."
2015-05-28 20:51:26	<--	ChrisMorgan (ChrisMorgan@moz-g6osuq.tpgi.com.au) has quit (Ping timeout: 121 seconds)
2015-05-28 20:51:32	@niconii	{:X<8} just means left-align and pad to 8 characters using 'X', for instance
2015-05-28 20:52:29	Dabo	 format!("{: >20}", "a ok")
2015-05-28 20:52:34	Dabo	er
2015-05-28 20:52:38	Dabo	playbot, format!("{: >20}", "a ok")
2015-05-28 20:52:39	--	Notice(playbot): "                a ok"
2015-05-28 20:52:40	Dabo	ok
2015-05-28 20:53:12	<--	jmb (Mibbit@moz-vmka28.ma.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-28 20:53:42	-->	blank_na1e (blank_name@moz-pah0nm.mi.frontiernet.net) has joined #rust
2015-05-28 20:53:53	<--	lenstr (lenstr@moz-csu.vju.25.171.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 20:54:37	Moonlightning	Speaking of, is there a better way to do that?
2015-05-28 20:54:41	aatch	stringy, fwiw: https://github.com/rust-lang/rust/issues/15384#issuecomment-106643546 I can fix it pretty easily, it's the whole "visible change in behaviour" thing.
2015-05-28 20:54:56	sam113101	does anyone know how to use docopt? I want a flag to have a default, but applied dynamically instead of statically, and I don't know what the best way to accomplish that
2015-05-28 20:54:57	-->	maralla (uid69246@moz-mq40mv.brockwell.irccloud.com) has joined #rust
2015-05-28 20:55:06	aatch	playbot, repeat('?').take(4).collect::<String>()
2015-05-28 20:55:07	--	Notice(playbot): <anon>:9:9: 9:15 error: unresolved name `repeat`
2015-05-28 20:55:07	--	Notice(playbot): <anon>:9         repeat('?').take(4).collect::<String>()
2015-05-28 20:55:07	--	Notice(playbot): output truncated; full output at: http://bit.ly/1Jad3Wr
2015-05-28 20:55:14	aatch	playbot, std::iter::repeat('?').take(4).collect::<String>()
2015-05-28 20:55:16	--	Notice(playbot): "????"
2015-05-28 20:55:20	aatch	Moonlightning, ^^
2015-05-28 20:55:30	<--	ismaelga_ (ismaelga@moz-m9v.8r3.251.188.IP) has quit (Connection closed)
2015-05-28 20:55:30	aji	Moonlightning: fancy seeing you here
2015-05-28 20:55:44	-->	copycat (Thunderbird@moz-dpm.8hc.223.111.IP) has joined #rust
2015-05-28 20:56:24	<--	blank_name (blank_name@moz-f80.i34.36.50.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 20:56:38	Moonlightning	Hello, aji. :3
2015-05-28 20:56:40	<--	partkyle (partkyle@moz-e8m.r65.206.12.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 20:56:44	Moonlightning	I'm trying to get into Rust. xD
2015-05-28 20:56:49	Moonlightning	playbot: ["foo"; 3].connect(" ")
2015-05-28 20:56:51	--	Notice(playbot): "foo foo foo"
2015-05-28 20:57:19	 *	Moonlightning blinkblinks.
2015-05-28 20:57:26	Moonlightning	I was fully expecting that to fail for at least two reasons.
2015-05-28 20:57:29	sam113101	playbot: ["foo"; 3].join(" ")
2015-05-28 20:57:31	--	Notice(playbot): <anon>:9:20: 9:29 error: type `[&str; 3]` does not implement any method in scope named `join`
2015-05-28 20:57:31	--	Notice(playbot): <anon>:9         ["foo"; 3].join(" ")
2015-05-28 20:57:31	--	Notice(playbot): output truncated; full output at: http://bit.ly/1FGofb8
2015-05-28 20:57:43	stringy	aatch: yeah, I don't have an particular stance on what the correct behavior should be, and I understand not making a change like this as it really should be marked as breaking, I was just wondering if the exact ordering was easily known in my case; I tend to not trust the ordering of non interdependent expressions, as you said, coming form languages like C and C++
2015-05-28 20:57:47	sam113101	I thought there was going to be an alias
2015-05-28 20:58:19	-->	rillian (giles@moz-84unpo.osuosl.org) has joined #rust
2015-05-28 20:58:28	Moonlightning	I know join is implemented the other way around in Python (i.e. on the string type, so you use it `' '.join(['foo', 'foo', 'foo'])`
2015-05-28 20:58:31	sam113101	playbot: ["foo"; 3].concat()
2015-05-28 20:58:33	--	Notice(playbot): "foofoofoo"
2015-05-28 20:58:43	Moonlightning	Is it the same in other languages? If so, using `connect` instead might be a good way to distance from that convention
2015-05-28 20:59:05	-->	tschottdorf (tobias@moz-d021av.aipg.hajb.2000.2604.IP) has joined #rust
2015-05-28 20:59:26	sam113101	Moonlightning: not in every language, no, ruby does [].join('') for example
2015-05-28 20:59:34	Moonlightning	Hm.
2015-05-28 20:59:44	sam113101	I think actionscript does it the same way as python
2015-05-28 20:59:56	stringy	aatch: also thank you, you've been very helpful in explaining this to me in terms I can understand
2015-05-28 21:00:07	Moonlightning	playbot: "foo".join(" ")
2015-05-28 21:00:08	--	Notice(playbot): <anon>:9:15: 9:24 error: type `&'static str` does not implement any method in scope named `join`
2015-05-28 21:00:08	--	Notice(playbot): <anon>:9         "foo".join(" ")
2015-05-28 21:00:08	--	Notice(playbot): output truncated; full output at: http://bit.ly/1JadHTN
2015-05-28 21:00:18	Moonlightning	playbot: "foo".to_string().join(" ")
2015-05-28 21:00:19	--	Notice(playbot): <anon>:9:27: 9:36 error: type `collections::string::String` does not implement any method in scope named `join`
2015-05-28 21:00:20	--	Notice(playbot): <anon>:9         "foo".to_string().join(" ")
2015-05-28 21:00:20	--	Notice(playbot): output truncated; full output at: http://bit.ly/1FGou61
2015-05-28 21:00:42	-->	Ralith (ralith@moz-tiaj7p.customer.broadstripe.net) has joined #rust
2015-05-28 21:01:05	sam113101	in my opinion, array.join(string) makes more sense
2015-05-28 21:01:25	sam113101	https://github.com/barosl/rust-rfcs/blob/rename-connect-to-join/text/0000-rename-connect-to-join.md
2015-05-28 21:01:33	-->	swgillespie (swgillespie@moz-rn1.vmq.232.104.IP) has joined #rust
2015-05-28 21:01:52	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-28 21:02:00	aatch	stringy, no problem.
2015-05-28 21:02:06	--	kimundi is now known as zz_kimundi
2015-05-28 21:02:07	<--	masonl (masonl@moz-cnt.haj.125.74.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 21:02:47	-->	SiegeLord (sl@moz-9jtaei.ca.comcast.net) has joined #rust
2015-05-28 21:03:42	sam113101	discussion: https://github.com/rust-lang/rfcs/pull/1102
2015-05-28 21:03:51	-->	fyolnish (fyolnish@moz-rv32aj.ocn.ne.jp) has joined #rust
2015-05-28 21:04:06	<--	fyolnish (fyolnish@moz-rv32aj.ocn.ne.jp) has quit (Connection closed)
2015-05-28 21:04:07	-->	fyolnish (fyolnish@moz-rv32aj.ocn.ne.jp) has joined #rust
2015-05-28 21:05:05	aatch	sam113101, agreed, the Python way always throws me off. I'm "join"-ing together the elements of a collection with a given string. The Python version seems backwards, since you're normally more interested in your list than in the string separating elements.
2015-05-28 21:05:31	<--	lov2cod (Adium@moz-of7l8d.eodv.k60l.0119.2620.IP) has quit (Quit: Leaving.)
2015-05-28 21:05:50	Moonlightning	At the same time, it's structurally cleaner. xD
2015-05-28 21:05:54	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Ping timeout: 121 seconds)
2015-05-28 21:06:01	<--	jadbaires (jadrian@moz-1jqrs9.dsl.telepac.pt) has quit (Ping timeout: 121 seconds)
2015-05-28 21:06:04	Moonlightning	…maybe not, actually
2015-05-28 21:06:05	aatch	Moonlightning, how so?
2015-05-28 21:06:27	Moonlightning	Python has no mechanism for implementing a method on e.g. iterables of strings
2015-05-28 21:06:40	<--	swgillespie (swgillespie@moz-rn1.vmq.232.104.IP) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-28 21:06:44	Moonlightning	Probably because things just don't work that way. There's nothing enforcing types most of the time.
2015-05-28 21:06:54	<--	santiago (santiago@moz-8th.j2e.167.12.IP) has quit (Quit: Computer has gone to sleep.)
2015-05-28 21:07:12	<--	acrichto (acrichto@moz-u3dg2t.sfo1.mozilla.com) has quit (Ping timeout: 121 seconds)
2015-05-28 21:07:58	aatch	Moonlightning, ah, so the reason for the Python way is that it's not practical to have `list.join(str)` because that would force `join` to be a "magic" method on anything iterable?
2015-05-28 21:08:15	c_wraith	It wouldn't need to be magic, it would just need to be implemented
2015-05-28 21:08:51	c_wraith	And in python, the slogan is "There's only one way to do it"
2015-05-28 21:08:54	Havvy	ogham:  What's the reason for the "Difference" type?
2015-05-28 21:09:03	c_wraith	So they picked one way, instead of having the option of 10 ways
2015-05-28 21:09:30	sam113101	turns out it's array.join(string) in actionscript, I don't know where I got the idea that it was the opposite
2015-05-28 21:10:01	-->	zhuli (zhuli@moz-d2d.7sg.64.112.IP) has joined #rust
2015-05-28 21:10:14	Moonlightning	aatch: I'm saying it's because you can't `def join<str>(joiner: str)`
2015-05-28 21:10:21	<--	eric_lagergren (barsonme@moz-hshokg.q6t2.2174.0008.2601.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 21:11:13	-->	tamird (textual@moz-gg3hct.res.rr.com) has joined #rust
2015-05-28 21:11:24	-->	jgallagher (john@moz-6ge.dhn.131.24.IP) has joined #rust
2015-05-28 21:11:40	<--	rbranson (rbranson@moz-i7m.9o0.201.199.IP) has quit (Quit: Computer has gone to sleep.)
2015-05-28 21:12:07	aatch	Moonlightning, well you can't statically enforce that in Python now, I can do `str.join(list)` and... get and runtime type error? (I don't actually know what it would do).
2015-05-28 21:12:29	XMPPwocky	aatch: doesn't python 3 have optional ytping
2015-05-28 21:12:32	aminb	can someone with edit access on mozilla bugzilla please assign this to me? https://bugzil.la/1167360
2015-05-28 21:12:36	aatch	XMPPwocky, does it?
2015-05-28 21:12:43	Moonlightning	XMPPwocky: Python 3.4 (IIRC) introduced type annotations
2015-05-28 21:12:46	Moonlightning	But they don't do anything.
2015-05-28 21:13:01	Moonlightning	They're advisory, intended mainly for things like documentation generation
2015-05-28 21:13:03	aatch	aminb, wrong place to ask.
2015-05-28 21:13:08	aminb	I asked on #mobile too but it's quite in there
2015-05-28 21:13:40	aminb	aatch: yeah I know, I thought I'd give it a shot. thanks anyways :)
2015-05-28 21:13:41	XMPPwocky	idk what super toast is but it sounds delicious
2015-05-28 21:13:44	Moonlightning	You can't use them to enforce anything.
2015-05-28 21:13:48	XMPPwocky	Moonlightning: oh, huh.
2015-05-28 21:14:05	Moonlightning	and yes, str.join() with an argument that didn't make sense would raise an exception at runtime.
2015-05-28 21:14:07	aatch	aminb, there's only a handful of Mozilla employees here, and I'm not sure if any of them have the authority to assign tickets on Bugzilla.
2015-05-28 21:14:20	<--	Savago (Savago@moz-8hd.3b6.246.162.IP) has quit (Client exited)
2015-05-28 21:14:50	-->	acrichto (acrichto@moz-u3dg2t.sfo1.mozilla.com) has joined #rust
2015-05-28 21:14:51	--	Mode #rust [+o acrichto] by ChanServ
2015-05-28 21:15:04	-->	esclear (esclear@moz-djivev.dip0.t-ipconnect.de) has joined #rust
2015-05-28 21:15:30	aminb	XMPPwocky: haha, toasts are android's pop up messages
2015-05-28 21:16:09	aminb	aatch: good to know, thank you, I'll wait then :)
2015-05-28 21:16:36	Moonlightning	Things like `["foo"; 3]` just make one static "foo" and refers to it three times, right?
2015-05-28 21:17:05	aatch	Moonlightning, yep.
2015-05-28 21:17:09	-->	iu (iu@moz-6263qv.cc.cmu.edu) has joined #rust
2015-05-28 21:17:11	<--	pcwalton (pcwalton@moz-6kjabm.ca.comcast.net) has quit (Client exited)
2015-05-28 21:17:34	<--	kwantam (kwantam@moz-1adqok.DYNAPOOL.NYU.EDU) has quit (Quit: WeeChat 1.1.1)
2015-05-28 21:17:41	XMPPwocky	Moonlightning: in the case of a string literal, yes
2015-05-28 21:17:46	<--	esclear_ (esclear@moz-v6bkcv.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2015-05-28 21:17:48	-->	jbomo (dkd@moz-uol4mm.fios.verizon.net) has joined #rust
2015-05-28 21:18:24	iu	I’d like to create a String from *const c_char. I do `String::from(str::from_utf8(CStr::from_ptr(foo).to_bytes()).unwrap())`. Am I doing it correctly? Feels kind of too cumbersome.
2015-05-28 21:18:51	Moonlightning	XMPPwocky: and in the general case?
2015-05-28 21:18:58	-->	thethirdone (Mibbit@moz-31ltvd.irvnca.sbcglobal.net) has joined #rust
2015-05-28 21:19:02	<--	godlikesme (godlikesme@moz-2a2.dsd.174.79.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 21:19:27	XMPPwocky	Moonlightning: like, [ [ 0u8; 256 ]; 4] is 4096 bytes. it may not occupy that much space in the binary, but it certainly will at runtime
2015-05-28 21:20:00	Moonlightning	I see. Is there an alternative that I should use in this case, if I only need to iterate over it once?
2015-05-28 21:20:04	XMPPwocky	string literals are *references* (and shared), so they can all point to the same thing
2015-05-28 21:20:11	aatch	let x = [b"foo"; 3]; println!("{:p} {:p} {:p}", &x[0][0], &x[1][0], &x[2][0]);
2015-05-28 21:20:16	aatch	playbot, let x = [b"foo"; 3]; println!("{:p} {:p} {:p}", &x[0][0], &x[1][0], &x[2][0]);
2015-05-28 21:20:17	--	Notice(playbot): 0x7f39f5f782c1 0x7f39f5f782c1 0x7f39f5f782c1
2015-05-28 21:20:18	--	Notice(playbot): ()
2015-05-28 21:20:27	-->	saterus (saterus@moz-rutqj0.res.rr.com) has joined #rust
2015-05-28 21:20:28	-->	Nashenas88 (Nashenas88@moz-of81j9.miamfl.sbcglobal.net) has joined #rust
2015-05-28 21:20:32	-->	demilux (demilux@moz-73qa6c.wa.comcast.net) has joined #rust
2015-05-28 21:21:04	aatch	(using byte-strings, because doing it with normal strings is harder, same principle applies though).
2015-05-28 21:21:43	XMPPwocky	playbot, let x = [ &[42u8; 8192]; 3]; println!("{:p} {:p} {:p}", &x[0][0], &x[1][0], &x[2][0]);
2015-05-28 21:21:44	--	Notice(playbot): <anon>:9:20: 9:32 error: borrowed value does not live long enough
2015-05-28 21:21:44	--	Notice(playbot): <anon>:9         let x = [ &[42u8; 8192]; 3]; println!("{:p} {:p} {:p}", &x[0][0], &x[1][0], &x[2][0]);
2015-05-28 21:21:44	--	Notice(playbot): output truncated; full output at: http://bit.ly/1JagOLJ
2015-05-28 21:21:48	XMPPwocky	blah
2015-05-28 21:22:14	<--	Guest38 (textual@moz-4hh.6p3.217.74.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-28 21:22:38	XMPPwocky	(it isn't as impressive if i put the inner thing into a temporary variable, because then they're all just references to "obviously" the same thing)
2015-05-28 21:22:51	-->	fkaa (tundmatu@moz-501od2.business.telia.com) has joined #rust
2015-05-28 21:22:55	XMPPwocky	i seem to recall llvm coalescing identical constants/statics
2015-05-28 21:23:15	-->	erz (erz@moz-fiq1tl.broadband.corbina.ru) has joined #rust
2015-05-28 21:23:34	<--	thethirdone (Mibbit@moz-31ltvd.irvnca.sbcglobal.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-28 21:23:53	aatch	XMPPwocky, yep, we apply the "address insignifcant" attribute to pretty much everything we can. Of course, two mutable statics can't be merged though.
2015-05-28 21:23:55	-->	Lee1092 (uid13277@moz-p2e1ii.brockwell.irccloud.com) has joined #rust
2015-05-28 21:24:12	desophos	why is the serialize crate unstable?
2015-05-28 21:24:17	aatch	Or a mutable and immutable one, for that matter.
2015-05-28 21:24:52	_Vi	Can Debug trait be like Send/Sized (i.e. implemented by default if possible unless explicit "impl !Debug for")?
2015-05-28 21:24:54	-->	colinsurprenant (colin@moz-q9ee1n.74.electronicbox.net) has joined #rust
2015-05-28 21:24:57	XMPPwocky	desophos: iiuc, you aren't actually supposed to use that
2015-05-28 21:25:05	XMPPwocky	desophos: you're supposed to use rustc_serialize in Cargo
2015-05-28 21:25:11	XMPPwocky	!crate rustc_serialize
2015-05-28 21:25:12	+rustbot	rustc-serialize (0.3.14) - Generic serialization/deserialization support corresponding to the`derive(RustcEncodable, RustcDecodable)` mode in the compiler. Also includessupport for hex, base64, and json encoding and decoding. -> https://crates.io/crates/rustc-serialize
2015-05-28 21:25:18	Moonlightning	I guess I use Repeat and take() XD
2015-05-28 21:25:42	desophos	ah ok, thanks XMPPwocky 
2015-05-28 21:25:58	aatch	Moonlightning, repeat is probably more clear anyway.
2015-05-28 21:26:03	Moonlightning	playbot: std::iter::Repeat("foo").take(3).connect(" ")
2015-05-28 21:26:04	--	Notice(playbot): <anon>:9:9: 9:26 error: unresolved name `std::iter::Repeat`
2015-05-28 21:26:04	--	Notice(playbot): <anon>:9         std::iter::Repeat("foo").take(3).connect(" ")
2015-05-28 21:26:04	--	Notice(playbot): output truncated; full output at: http://bit.ly/1FGqf30
2015-05-28 21:26:05	<--	c_wraith (c_wraith@moz-7i8.v6v.191.131.IP) has quit (Quit: Leaving)
2015-05-28 21:26:08	mcpherrin	q
2015-05-28 21:26:13	<--	colinsurprenant (colin@moz-q9ee1n.74.electronicbox.net) has quit (Client exited)
2015-05-28 21:26:39	Moonlightning	playbot: std::iter::repeat("foo").take(3).connect(" ")
2015-05-28 21:26:40	--	Notice(playbot): <anon>:9:42: 9:54 error: type `core::iter::Take<core::iter::Repeat<&str>>` does not implement any method in scope named `connect`
2015-05-28 21:26:40	--	Notice(playbot): <anon>:9         std::iter::repeat("foo").take(3).connect(" ")
2015-05-28 21:26:40	--	Notice(playbot): output truncated; full output at: http://bit.ly/1Jahsc0
2015-05-28 21:27:40	@niconii	playbot: std::iter::repeat("foo").take(3).collect::<Vec<&str>>().connect(" ")
2015-05-28 21:27:42	--	Notice(playbot): "foo foo foo"
2015-05-28 21:27:49	Moonlightning	…ew.
2015-05-28 21:28:06	-->	colinsurprenant (colin@moz-q9ee1n.74.electronicbox.net) has joined #rust
2015-05-28 21:28:27	Moonlightning	Shouldn't there be an `impl` for iterators over `&str`s?
2015-05-28 21:28:49	--	chmanchester is now known as chmanchester|afk
2015-05-28 21:29:36	-->	c_wraith (c_wraith@moz-7i8.v6v.191.131.IP) has joined #rust
2015-05-28 21:30:04	-->	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has joined #rust
2015-05-28 21:30:25	@niconii	would be nice to have
2015-05-28 21:31:27	<--	zhuli (zhuli@moz-d2d.7sg.64.112.IP) has quit (Quit: WeeChat 0.4.2)
2015-05-28 21:31:51	@niconii	maybe something you could file an issue about, or something?
2015-05-28 21:32:06	Kovensky	playbot: let x: 'a = [ &'a [42u8; 8192]; 3];
2015-05-28 21:32:07	--	Notice(playbot): <anon>:9:16: 9:18 error: expected type, found `'a`
2015-05-28 21:32:08	--	Notice(playbot): <anon>:9         let x: 'a = [ &'a [42u8; 8192]; 3];
2015-05-28 21:32:08	--	Notice(playbot): output truncated; full output at: http://bit.ly/1Jai29D
2015-05-28 21:33:06	Kovensky	hm
2015-05-28 21:33:12	SpaceManiac	Kovensky: what are you trying to do?
2015-05-28 21:33:31	Kovensky	just seeing if there was a way to tie the lifetime of the inner reference to the containing array
2015-05-28 21:33:46	Kovensky	that way it would live long enough (see XMPPwocky's line a few minutes ago)
2015-05-28 21:33:52	mcpherrin	lib.rs:2:1: 2:27 error: allow_internal_unstable side-steps feature gating and stability checks
2015-05-28 21:33:55	mcpherrin	Aww
2015-05-28 21:34:03	mcpherrin	can I side step the check that's not letting me side-step the check?
2015-05-28 21:34:17	-->	Anoobis (Mibbit@moz-9a61d0.sub-174-238-34.myvzw.com) has joined #rust
2015-05-28 21:34:22	mcpherrin	having to install a new rustc to use unstable features is no fun
2015-05-28 21:35:34	@steveklabnik	you cannot
2015-05-28 21:35:37	@steveklabnik	gotta use nightly
2015-05-28 21:37:02	mfs	mcpherrin: multirust makes managing nightly, beta and stable very easy.
2015-05-28 21:37:05	-->	v21 (vee@moz-07pghd.asianet.co.th) has joined #rust
2015-05-28 21:37:18	mcpherrin	I don't have that kind of disk space :(
2015-05-28 21:37:56	<--	Jesin (Jesin@moz-u7t8t5.mobility.exede.net) has quit (Ping timeout: 121 seconds)
2015-05-28 21:38:23	<--	ogham (rally@moz-95g.2nj.199.138.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-28 21:38:32	-->	zhuli (zhuli@moz-d2d.7sg.64.112.IP) has joined #rust
2015-05-28 21:39:17	mfs	ah, that sucks.
2015-05-28 21:39:25	mcpherrin	Am trying to do stuff in an embedded system
2015-05-28 21:39:58	<--	zhuli (zhuli@moz-d2d.7sg.64.112.IP) has quit (Quit: WeeChat 0.4.2)
2015-05-28 21:40:02	mcpherrin	is okay, I'll just rip the code I need out of librustc
2015-05-28 21:40:12	mcpherrin	a lot of work to get around feature gates :(
2015-05-28 21:40:33	<--	iu (iu@moz-6263qv.cc.cmu.edu) has quit (Quit: )
2015-05-28 21:40:39	-->	Jesin (Jesin@moz-u7t8t5.mobility.exede.net) has joined #rust
2015-05-28 21:41:26	<--	Guest5707 (Azdle@moz-fv6arh.mn.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-28 21:41:27	mcpherrin	oh well
2015-05-28 21:43:42	-->	Guest58 (textual@moz-70hlaj.austtx.sbcglobal.net) has joined #rust
2015-05-28 21:44:20	<--	joel (joel@moz-j311fe.cust.bahnhof.se) has quit (Ping timeout: 121 seconds)
2015-05-28 21:44:31	-->	joel (joel@moz-j311fe.cust.bahnhof.se) has joined #rust
2015-05-28 21:44:49	<--	Cork (Cork@moz-rmmud5.priv.bahnhof.se) has quit (Ping timeout: 121 seconds)
2015-05-28 21:45:05	<--	ugglan (ugglan@moz-rjubsq.priv.bahnhof.se) has quit (Ping timeout: 121 seconds)
2015-05-28 21:45:17	SpaceManiac	can't you just use nightly exclusively?
2015-05-28 21:45:36	-->	ugglan (ugglan@moz-rjubsq.priv.bahnhof.se) has joined #rust
2015-05-28 21:46:34	-->	Cork (Cork@moz-rmmud5.priv.bahnhof.se) has joined #rust
2015-05-28 21:47:02	mcpherrin	SpaceManiac: Well that's what I'll have to do :)
2015-05-28 21:47:05	-->	zyphrus (David@moz-1a4.urk.98.101.IP) has joined #rust
2015-05-28 21:47:12	mcpherrin	ideally I'd use stable so it continues to be supported
2015-05-28 21:47:20	estabroo	is there a way to view what variables are active and their lifetimes in a running program
2015-05-28 21:47:21	mcpherrin	(except of course the library using librustc)
2015-05-28 21:47:32	Mutabah	estabroo: lifetimes are a compile-time concept
2015-05-28 21:47:46	Mutabah	estabroo: And variables are compiled down into stack slots and maybe just registers
2015-05-28 21:48:00	Mutabah	(that said, gdb can probably tell you the values of variables)
2015-05-28 21:52:13	Dabo	_Vi, it wouldn't entirely make sense to do that, as a lot of structs hold data that just doesn't make sense when displayed - also, it adds functions to the struct instead of affecting how the compiler treats it.
2015-05-28 21:52:41	<--	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-28 21:54:10	<--	mkpankov (mkpankov@moz-n4e.83e.23.84.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 21:54:53	-->	Kroisse (Kroisse@moz-t75tk5.krois.se) has joined #rust
2015-05-28 21:55:19	-->	godlikesme (godlikesme@moz-2a2.dsd.174.79.IP) has joined #rust
2015-05-28 21:55:22	-->	rouma (zack@moz-p8e0re.res.rr.com) has joined #rust
2015-05-28 21:55:41	-->	Guest96 (textual@moz-4tt.fb4.7.61.IP) has joined #rust
2015-05-28 21:56:03	<--	johnsoft (johnsoft@moz-69mrig.res.rr.com) has quit (Ping timeout: 121 seconds)
2015-05-28 21:56:19	-->	johnsoft (johnsoft@moz-69mrig.res.rr.com) has joined #rust
2015-05-28 21:56:20	-->	santiago (santiago@moz-ro2mm9.res.rr.com) has joined #rust
2015-05-28 21:56:28	-->	Guest5707 (Azdle@moz-fv6arh.mn.comcast.net) has joined #rust
2015-05-28 21:56:36	<--	SerialVelocity (SerialVeloc@moz-attia0.cable.virginm.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-28 21:57:16	-->	m_kato (m_kato@moz-86b4bs.bitcat.net) has joined #rust
2015-05-28 21:57:27	<--	naerbnic (naerbnic@moz-nl3.4ra.239.216.IP) has quit (Client exited)
2015-05-28 21:57:51	sam113101	should rust warn about unnecessary casts?
2015-05-28 21:57:56	<--	mcarton (martin@moz-ag64s6.rev.sfr.net) has quit (Ping timeout: 121 seconds)
2015-05-28 21:58:02	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-28 21:58:07	<--	Jesse (jruderman@moz-cfhap5.mtv2.mozilla.com) has quit (Client exited)
2015-05-28 21:58:11	sam113101	rustbot: let x = 0u8 as u8 as u8 as u8; println!("{}", x);
2015-05-28 21:58:18	<--	rmdashrf (rmdashrf@moz-ecr.kjm.54.128.IP) has quit (Quit: WeeChat 0.4.2)
2015-05-28 21:58:32	sam113101	playbot: let x = 0u8 as u8 as u8 as u8; println!("{}", x);
2015-05-28 21:58:33	--	Notice(playbot): 0
2015-05-28 21:58:33	--	Notice(playbot): ()
2015-05-28 21:58:42	<--	posborne (posborne@moz-9hioom.mn.comcast.net) has quit (Connection closed)
2015-05-28 21:59:06	Dabo	playbot-mini, fn main() { let x = 0u8 as u8 as u8 as u8; println!("{}", x); }
2015-05-28 21:59:07	--	Notice(playbot-mini): 0
2015-05-28 21:59:12	Dabo	hm, yeah
2015-05-28 21:59:15	<--	gandalf (zbraniecki@moz-cp7c4m.ca.comcast.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-28 21:59:18	klutzy	sam113101: -W trivial-numeric-casts
2015-05-28 21:59:20	Dabo	that seems like something it might point out
2015-05-28 21:59:30	klutzy	(the lint is allowed as default)
2015-05-28 21:59:51	Kovensky	what's the difference between playbot and playbot-mini
2015-05-28 22:00:08	@huon	playbot: has a template
2015-05-28 22:00:09	--	Notice(playbot): <anon>:9:13: 9:14 error: expected one of `!`, `.`, `::`, `;`, `{`, `}`, or an operator, found `a`
2015-05-28 22:00:09	--	Notice(playbot): <anon>:9         has a template
2015-05-28 22:00:09	--	Notice(playbot): output truncated; full output at: http://bit.ly/1Jale57
2015-05-28 22:00:17	<--	Altazimuth (Altazimuth@moz-rb7u6p.skybroadband.com) has quit (Ping timeout: 121 seconds)
2015-05-28 22:00:19	-->	jeffasinger (jeff@moz-b6rfi7.res.rr.com) has joined #rust
2015-05-28 22:00:19	@huon	whereas playbot-mini just feeds the raw input to the compiler
2015-05-28 22:00:21	-->	rovar_ (rovar@moz-96effg.dyn.optonline.net) has joined #rust
2015-05-28 22:00:25	@huon	(click that bit.ly link to see the template)
2015-05-28 22:00:31	Kovensky	oic
2015-05-28 22:00:33	--	rovar is now known as Guest60769
2015-05-28 22:00:33	--	rovar_ is now known as rovar
2015-05-28 22:00:33	<--	tmtwd (tmtwd@moz-0kkm5n.cable.rogers.com) has quit (Quit: Leaving)
2015-05-28 22:00:48	estabroo	so what would cause the virtual memory usage of a rust program to go way up, but resident stay fairly small?  have a toy tcp server resident memory is at about 4k, virtual 3GB with only about 20 connections to the server
2015-05-28 22:01:19	estabroo	on connect it does a clone of the tcp stream to split rx/tx and creates a thread for rx and tx
2015-05-28 22:01:25	-->	playjax (chatzilla@moz-5d5guj.optusnet.com.au) has joined #rust
2015-05-28 22:01:31	@huon	allocations where most of the memory is never touched
2015-05-28 22:01:41	@huon	e.g. spawning threads that don't use much stack space
2015-05-28 22:01:42	estabroo	doesn't matter if the connections are concurrent or 20 connect/disconnects
2015-05-28 22:02:04	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Ping timeout: 121 seconds)
2015-05-28 22:02:08	<--	fabianvf (fabianvf@moz-fjqmui.va.comcast.net) has quit (Connection closed)
2015-05-28 22:02:49	-->	zhuli (zhuli@moz-d2d.7sg.64.112.IP) has joined #rust
2015-05-28 22:04:14	sam113101	klutzy: should be enabled by default IMO, also, how do I pass arbitrary flags to rustc using cargo? "cargo run -W trivial-numeric-casts" doesn't work for example
2015-05-28 22:04:49	-->	flabbergaster (Mibbit@moz-12vuek.cable.rogers.com) has joined #rust
2015-05-28 22:05:04	<--	johnsoft (johnsoft@moz-69mrig.res.rr.com) has quit (Ping timeout: 121 seconds)
2015-05-28 22:05:13	njn	the first link at http://doc.rust-lang.org/alloc/boxed/struct.Box.html?search=malloc is broken
2015-05-28 22:05:17	-->	johnsoft (johnsoft@moz-69mrig.res.rr.com) has joined #rust
2015-05-28 22:05:19	<--	flabbergaster (Mibbit@moz-12vuek.cable.rogers.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-28 22:06:07	<--	zhuli (zhuli@moz-d2d.7sg.64.112.IP) has quit (Quit: WeeChat 0.4.2)
2015-05-28 22:06:09	-->	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has joined #rust
2015-05-28 22:06:24	-->	zhuli (zhuli@moz-d2d.7sg.64.112.IP) has joined #rust
2015-05-28 22:06:46	-->	nyx (nyx@moz-ivelpd.res.rr.com) has joined #rust
2015-05-28 22:07:23	-->	GGist (Mibbit@moz-st7v59.wa.comcast.net) has joined #rust
2015-05-28 22:07:57	-->	c74d3 (c74d3a4ebb6@moz-rhs0n6.mggc.hibn.4404.2002.IP) has joined #rust
2015-05-28 22:08:32	<--	dpc (dpc@moz-t6gr4b.ca.comcast.net) has quit (Connection closed)
2015-05-28 22:09:04	estabroo	huon, yeah that's kind of the odd part, nothing is getting allocated, that I'm aware of that would take up that space
2015-05-28 22:09:21	-->	robdubya (robdubya@moz-8kejh2.sntcca.sbcglobal.net) has joined #rust
2015-05-28 22:09:24	<--	c74d (c74d3a4ebb6@moz-0ersgu.oc.cox.net) has quit (Ping timeout: 121 seconds)
2015-05-28 22:09:28	<--	mark_edward (mark@moz-dg4mrp.in.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-28 22:09:43	--	c74d3 is now known as c74d
2015-05-28 22:09:45	-->	mkpankov (mkpankov@moz-q7a.u5t.23.84.IP) has joined #rust
2015-05-28 22:10:00	stringy	is there any intention for From/Into to be implemented for primitive integer types?
2015-05-28 22:10:13	@huon	estabroo: but you said "creates a thread"?
2015-05-28 22:10:31	@huon	estabroo: spawning a thread allocates space for the stack
2015-05-28 22:10:50	estabroo	and never releases it when the thread goes away?
2015-05-28 22:10:50	-->	dpc (dpc@moz-t6gr4b.ca.comcast.net) has joined #rust
2015-05-28 22:11:02	@huon	it should, although maybe they're cached
2015-05-28 22:11:04	 *	huon doesn't know
2015-05-28 22:11:41	<--	godlikesme (godlikesme@moz-2a2.dsd.174.79.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 22:11:56	estabroo	and 3GB for 40 threads seems a bit excessive
2015-05-28 22:12:22	-->	ismaelga (ismaelga@moz-qp42vg.rev.vodafone.pt) has joined #rust
2015-05-28 22:12:30	Mutabah	estabroo: valgrind might help in tracing what allocates
2015-05-28 22:12:40	Mutabah	(does valgrind work well with jemalloc?)
2015-05-28 22:12:53	njn	Mutabah: yes, jemalloc has Valgrind annotations
2015-05-28 22:12:53	@huon	playbot: 40 * (2 << 20)
2015-05-28 22:12:55	--	Notice(playbot): 83886080
2015-05-28 22:13:01	<--	zhuli (zhuli@moz-d2d.7sg.64.112.IP) has quit (Quit: WeeChat 0.4.2)
2015-05-28 22:13:11	@huon	estabroo: I agree
2015-05-28 22:14:33	-->	zhuli (zhuli@moz-d2d.7sg.64.112.IP) has joined #rust
2015-05-28 22:14:47	-->	Tuba (Tobba@moz-o13d22.bredband.telia.com) has joined #rust
2015-05-28 22:14:55	<--	zhuli (zhuli@moz-d2d.7sg.64.112.IP) has quit (Quit: WeeChat 0.4.2)
2015-05-28 22:15:24	-->	chao-tic (chao@moz-258.4aj.101.218.IP) has joined #rust
2015-05-28 22:16:14	-->	zhuli (zhuli@moz-d2d.7sg.64.112.IP) has joined #rust
2015-05-28 22:17:07	<--	Tobba (Tobba@moz-o13d22.bredband.telia.com) has quit (Ping timeout: 121 seconds)
2015-05-28 22:17:21	-->	dcb (textual@moz-j72nfe.ca.comcast.net) has joined #rust
2015-05-28 22:18:04	-->	mark_edward (mark@moz-dg4mrp.in.comcast.net) has joined #rust
2015-05-28 22:18:20	<--	tilde (namidasshu@moz-3gs.igt.238.95.IP) has quit (Quit: Leaving)
2015-05-28 22:18:37	<--	vindelschtuffen (vindelschtu@moz-dd7efh.res.rr.com) has quit (Ping timeout: 121 seconds)
2015-05-28 22:19:07	<--	minot2 (kkus@moz-baj4jj.74.srtnet.com) has quit (Connection closed)
2015-05-28 22:20:02	--	Tuba is now known as Tobba
2015-05-28 22:22:15	<--	mark_edward (mark@moz-dg4mrp.in.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-28 22:22:44	njn	how do I define a constant that's shared between several functions?
2015-05-28 22:22:54	njn	top-level |let|s aren't allowed...
2015-05-28 22:23:11	estabroo	it's funny under valgrind it's only taking up 400M virtual for 22 connected clients
2015-05-28 22:23:16	njn	oh, static or const
2015-05-28 22:23:26	<--	ismaelga (ismaelga@moz-qp42vg.rev.vodafone.pt) has quit (Connection closed)
2015-05-28 22:23:40	-->	ismaelga (ismaelga@moz-qp42vg.rev.vodafone.pt) has joined #rust
2015-05-28 22:24:16	<--	robdubya (robdubya@moz-8kejh2.sntcca.sbcglobal.net) has left #rust ("Textual IRC Client: www.textualapp.com")
2015-05-28 22:25:38	-->	hroi (hroi@moz-d273ub.static.netgroup.dk) has joined #rust
2015-05-28 22:27:14	<--	jeffasinger (jeff@moz-b6rfi7.res.rr.com) has quit (Client exited)
2015-05-28 22:29:45	<--	hroi (hroi@moz-d273ub.static.netgroup.dk) has quit (Ping timeout: 121 seconds)
2015-05-28 22:30:23	-->	atomic (atomic@moz-67r1nt.torservers.net) has joined #rust
2015-05-28 22:30:56	-->	aseaday (Mibbit@moz-a76.27h.199.128.IP) has joined #rust
2015-05-28 22:31:25	<--	agile (mike@moz-m71dqt.rcsntx.sbcglobal.net) has quit (Connection closed)
2015-05-28 22:31:32	aseaday	I want to build my kernel without any thing like makefile, could anyone have suggestions?
2015-05-28 22:32:00	Nashenas88	when building rust, is it possible to specify the number of threads to use? like -j with cargo
2015-05-28 22:32:05	<--	ismaelga (ismaelga@moz-qp42vg.rev.vodafone.pt) has quit (Connection closed)
2015-05-28 22:32:52	<--	eckhardt (eckhardt@moz-s9e.ov1.227.199.IP) has quit (Quit: Leaving...)
2015-05-28 22:33:38	Tari	Nashenas88: there's a rustc option to enable some parallel codegen, I don't think cargo exposes it
2015-05-28 22:33:55	<--	playjax (chatzilla@moz-5d5guj.optusnet.com.au) has quit (Quit: ChatZilla 0.9.91.1 [Firefox 32.0.1/20140911151253])
2015-05-28 22:34:00	-->	jeffasinger (jeff@moz-b6rfi7.res.rr.com) has joined #rust
2015-05-28 22:34:02	Tari	last I heard that option was kind of experimental so it was hiding in the -C suboptions or something
2015-05-28 22:34:13	-->	khades (Thunderbird@moz-qgd.3vk.74.212.IP) has joined #rust
2015-05-28 22:34:18	Nashenas88	Tari: Sorry for the confusion. I was asking about when calling `make` for building rust itself.
2015-05-28 22:34:45	-->	rmgk_ (ragnar@moz-7amrg5.dyn.telefonica.de) has joined #rust
2015-05-28 22:35:09	Tari	make -j works to a point
2015-05-28 22:35:09	-->	ismaelga (ismaelga@moz-qp42vg.rev.vodafone.pt) has joined #rust
2015-05-28 22:35:25	Tari	but a lot of the build process is inherently serial
2015-05-28 22:35:34	Dabo	aseaday, I don't know much about kernel development, but I think just using cargo would be sane
2015-05-28 22:35:40	Dabo	w/ Cargo.toml
2015-05-28 22:35:54	-->	mark_edward (mark@moz-dg4mrp.in.comcast.net) has joined #rust
2015-05-28 22:36:11	-->	kwantam (kwantam@moz-1adqok.DYNAPOOL.NYU.EDU) has joined #rust
2015-05-28 22:36:17	<--	ismaelga (ismaelga@moz-qp42vg.rev.vodafone.pt) has quit (Connection closed)
2015-05-28 22:36:28	aseaday	Er...ye, I just want to know how to make Cargo.toml could work as makefile, Because I need to some tools like ld , obj-copy etc 
2015-05-28 22:37:08	Dabo	you could use build scripts to run before building
2015-05-28 22:37:35	Dabo	if you need more than that though, makefile is kind of what you need - or some wrapper to run around Cargo
2015-05-28 22:38:13	<--	rmgk (ragnar@moz-ajvat8.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2015-05-28 22:38:15	aseaday	It is not something nice, Because run script is command syntax not statement syntax. I just think maybe we need a more strong Cargo.toml
2015-05-28 22:38:34	-->	mindtree (Mitch@moz-7je6p0.iprimus.net.au) has joined #rust
2015-05-28 22:38:34	aseaday	thank all the same.
2015-05-28 22:39:48	-->	ismaelga (ismaelga@moz-qp42vg.rev.vodafone.pt) has joined #rust
2015-05-28 22:40:08	Dabo	cargo isn't really meant to be a full build system for everything I don't think - it provides build scripts for code generation and dealing things which link into rust programs, but it doesn't deal with things which you do with those rust programs like packaging or dealing with them afterwards
2015-05-28 22:40:10	-->	starless (starless@moz-u9gmm1.res.rr.com) has joined #rust
2015-05-28 22:40:30	Dabo	I don't think it'd be that hard to build a Makefile which just calls cargo and then calls what else you need afterwards
2015-05-28 22:40:57	-->	jrincayc (jjc@moz-eod3sj.bois.qwest.net) has joined #rust
2015-05-28 22:40:57	-->	Jesse (jruderman@moz-pqc1f5.ca.comcast.net) has joined #rust
2015-05-28 22:41:19	<--	mou (donwilliam@moz-lq9kg8.cpe.webspeed.dk) has quit (Connection closed)
2015-05-28 22:42:01	aatch	Mutabah, I can personally attest to the fact that jemalloc works with Valgrind, it was helpful in finding the source of an issue in Ramp.
2015-05-28 22:42:11	Mutabah	Niice
2015-05-28 22:42:50	<--	est31 (quassel@moz-vjb.r8r.42.192.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 22:43:47	--	bentley|away is now known as bentley
2015-05-28 22:43:56	aatch	Mutabah, the stacktrace (from running trace-sources or whatever the option is) had a call like `jemalloc_valgrind_mark_uninitialized` or something.
2015-05-28 22:44:29	<--	Anoobis (Mibbit@moz-9a61d0.sub-174-238-34.myvzw.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-28 22:44:56	-->	jpernst (jameson@moz-eae.le3.243.162.IP) has joined #rust
2015-05-28 22:45:04	-->	est31 (quassel@moz-skq614.dfri.se) has joined #rust
2015-05-28 22:46:52	chao-tic	Can anybody explaiin to me how Drop trait can be applied to a non-mutable object? Since the drop method takes a mutable reference of Self?
2015-05-28 22:47:10	<--	jrincayc (jjc@moz-eod3sj.bois.qwest.net) has left #rust
2015-05-28 22:47:10	<--	Wild_Cat (Max@moz-2clr66.dsl.teksavvy.com) has quit (Ping timeout: 121 seconds)
2015-05-28 22:47:42	aatch	chao-tic, there's no such thing as a "non-mutable object", mutability is a property of the location a value is stored in.
2015-05-28 22:47:48	aatch	chao-tic, also, Drop is special.
2015-05-28 22:48:20	chao-tic	A non-mutable binding?
2015-05-28 22:48:20	<--	khades (Thunderbird@moz-qgd.3vk.74.212.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 22:49:03	-->	alaska (alaska@moz-8bdjem.fios.verizon.net) has joined #rust
2015-05-28 22:49:08	jpernst	in a macro_rules definition, is it possible to unfold a repition layer more than once?
2015-05-28 22:49:14	jpernst	*repetition
2015-05-28 22:49:53	aatch	chao-tic, well, you can always move from an immutable binding to a mutable one (modulo borrowing rules of course).
2015-05-28 22:50:13	aatch	chao-tic, `let a = foo(); let mut b = a;` works.
2015-05-28 22:50:36	chao-tic	true, you are right
2015-05-28 22:51:07	aatch	chao-tic, so you can just think of Drop as inserting `let mut __val_to_drop = val; val.drop();` at the appropriate places.
2015-05-28 22:51:15	chao-tic	So the compiler is doing something like that behind the back for invoking destructor then
2015-05-28 22:51:49	SpaceManiac	are there any tools for non-blocking io, or io without lots of threads?
2015-05-28 22:51:56	aatch	chao-tic, yeah, it's a bit more complex than that, since it's part of code-generation.
2015-05-28 22:52:02	aatch	SpaceManiac, look at mio
2015-05-28 22:52:05	aatch	!crate mio
2015-05-28 22:52:06	+rustbot	mio (0.3.5) - Lightweight non-blocking IO -> https://crates.io/crates/mio
2015-05-28 22:52:44	<--	dcb (textual@moz-j72nfe.ca.comcast.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-28 22:53:05	<--	alaska (alaska@moz-8bdjem.fios.verizon.net) has quit (Ping timeout: 121 seconds)
2015-05-28 22:53:31	<--	zz_kimundi (kimundi@moz-ch362e.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2015-05-28 22:53:41	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-28 22:53:43	chao-tic	Thanks a lot aatch, that makes sense.
2015-05-28 22:55:37	-->	zz_kimundi (kimundi@moz-68riih.dip0.t-ipconnect.de) has joined #rust
2015-05-28 22:56:06	--	zz_kimundi is now known as kimundi
2015-05-28 22:57:43	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Ping timeout: 121 seconds)
2015-05-28 22:59:54	-->	crisco__ (crisco@moz-7fq.k98.111.114.IP) has joined #rust
2015-05-28 23:00:18	<--	adjivas (adjivas@moz-t655t6.abo.wanadoo.fr) has quit (Ping timeout: 121 seconds)
2015-05-28 23:01:02	-->	davebettin (davebettin@moz-ip635p.or.comcast.net) has joined #rust
2015-05-28 23:01:35	Moonlightning	Hmm
2015-05-28 23:01:56	Moonlightning	So what would an `impl` of SliceConcatExt for iterators over `&str`s look like?
2015-05-28 23:03:06	<--	crisco_ (crisco@moz-ldc.v6g.139.174.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 23:04:19	<--	p1start (p1start@moz-nftjhe.org) has quit (Ping timeout: 121 seconds)
2015-05-28 23:05:01	estabroo	do channels allocate a lot of virtual memory?
2015-05-28 23:05:12	<--	Guest__ (textual@moz-rtn.fg7.77.192.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 23:05:33	-->	Guest (textual@moz-rtn.fg7.77.192.IP) has joined #rust
2015-05-28 23:06:33	<--	tschottdorf (tobias@moz-d021av.aipg.hajb.2000.2604.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 23:06:41	<--	erz (erz@moz-fiq1tl.broadband.corbina.ru) has quit (Connection closed)
2015-05-28 23:07:00	-->	erz (erz@moz-fiq1tl.broadband.corbina.ru) has joined #rust
2015-05-28 23:08:40	-->	gattscha1do (richard@moz-rovjua.dyn.telefonica.de) has joined #rust
2015-05-28 23:09:02	supr	Hi all, how can i expose an array of u64's (stored in a boxed vec) to C api?
2015-05-28 23:09:09	-->	acgtyrant (acgtyrant@moz-0k4.4sk.186.39.IP) has joined #rust
2015-05-28 23:10:44	<--	slurps-mad-rips (slurps-mad-@moz-o2c.uaj.44.17.IP) has quit (Quit: Connection reset by bear)
2015-05-28 23:10:45	<--	turtil (turtil@moz-gfc.es4.23.103.IP) has quit (Quit: WeeChat 1.1.1)
2015-05-28 23:11:10	-->	Azdle (Azdle@moz-fv6arh.mn.comcast.net) has joined #rust
2015-05-28 23:11:30	jethrogb	I'm implementing a struct that stores a type that has a lifetime parameter
2015-05-28 23:11:38	<--	gattschardo (richard@moz-19j1d0.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2015-05-28 23:11:42	jethrogb	is there a way to hide that fact from users of my struct?
2015-05-28 23:13:52	-->	loyd (loyd@moz-jsb.32f.108.213.IP) has joined #rust
2015-05-28 23:14:00	<--	nyx (nyx@moz-ivelpd.res.rr.com) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-28 23:14:28	<--	jeffasinger (jeff@moz-b6rfi7.res.rr.com) has quit (Client exited)
2015-05-28 23:15:04	aji	jethrogb: no
2015-05-28 23:15:09	@niconii	supr: well, my first question is, why is the vec boxed? vectors already store their data on the heap
2015-05-28 23:15:09	aji	not that i know of anyway
2015-05-28 23:15:49	jethrogb	having to specify <'a> everywhere looks pretty ugly
2015-05-28 23:15:56	<--	idegen (greg@moz-9c4nle.or.frontiernet.net) has quit (Quit: Leaving.)
2015-05-28 23:16:03	@niconii	supr: or is it boxed for trait object purposes?
2015-05-28 23:16:15	<--	cholcombe (chris@moz-mtfab9.or.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-28 23:16:21	<--	Tobba (Tobba@moz-o13d22.bredband.telia.com) has quit (Ping timeout: 121 seconds)
2015-05-28 23:17:07	<--	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-28 23:17:28	-->	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has joined #rust
2015-05-28 23:17:56	<--	erz (erz@moz-fiq1tl.broadband.corbina.ru) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-28 23:18:27	-->	dcb (textual@moz-j72nfe.ca.comcast.net) has joined #rust
2015-05-28 23:18:50	aji	jethrogb: with lifetime elision there are some places where you can leave it out
2015-05-28 23:18:51	<--	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-28 23:19:08	starless	estabroo: hey, I tracked down the definition of channel() in the Rust source. Maybe you can do some further investigation based on what it's doing? You'd know better what constitutes "a lot" of virtual memory, anyways: https://github.com/rust-lang/rust/blob/497942332f919b1a952310a730349ca1b9524968/src/libstd/sync/mpsc/mod.rs#L448
2015-05-28 23:20:00	<--	housl (housl@moz-qnjt4k.ut.comcast.net) has quit (Quit: WeeChat 1.2)
2015-05-28 23:20:31	supr	niconii: yes, it is boxed for trait object purposes. But, i guess mine is a generic question
2015-05-28 23:20:39	supr	boxed or nor
2015-05-28 23:20:41	supr	not
2015-05-28 23:20:42	@huon	supr: .as_ptr()
2015-05-28 23:20:54	--	irc: disconnected from server
2015-05-28 23:21:05	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-28 23:21:05	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-28 23:21:05	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-28 23:21:05	--	Channel #rust: 967 nicks (13 ops, 0 halfops, 1 voice, 953 normals)
2015-05-28 23:21:07	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-28 23:21:11	<--	Jesin (Jesin@moz-u7t8t5.mobility.exede.net) has quit (Quit: preparing to land)
2015-05-28 23:22:13	<--	gopar (gopar@moz-5039uj.ca.comcast.net) has quit (A TLS packet with unexpected length was received.)
2015-05-28 23:23:11	--	irc: disconnected from server
2015-05-28 23:23:22	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-28 23:23:22	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-28 23:23:22	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-28 23:23:22	--	Channel #rust: 966 nicks (13 ops, 0 halfops, 1 voice, 952 normals)
2015-05-28 23:23:24	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-28 23:23:58	srjek	I have found a way to get it to compile, but the error still baffles me. ( Like, where does the tuple come from? why is it trying to (effectively) equalSelf::ref_t to Self?)
2015-05-28 23:24:52	XMPPwocky	srjek: what the heck are you doing there?
2015-05-28 23:25:07	XMPPwocky	some no-std stuff?
2015-05-28 23:25:16	srjek	XMPPwocky: Judging from your response, crazy things
2015-05-28 23:25:51	srjek	I'm using some stuff from the std lib, through I think I need the core feature flag for some of the newer stuff
2015-05-28 23:25:55	Mutabah	srjek: By tuple do you mean the thing in FnMut?
2015-05-28 23:26:23	-->	hroi (hroi@moz-d273ub.static.netgroup.dk) has joined #rust
2015-05-28 23:26:24	srjek	Mutabah: Yep. I have no idea where that tuple in FnMut came from,
2015-05-28 23:26:46	Mutabah	srjek: That's how Fn* is defined
2015-05-28 23:27:10	<--	acgtyrant (acgtyrant@moz-0k4.4sk.186.39.IP) has quit (Connection closed)
2015-05-28 23:27:13	Mutabah	srjek: "trait FnMut<A,R> { fn call_mut(args: A) -> R }" - The arguments are passed as a tuple
2015-05-28 23:27:13	srjek	Ah, that explains half of it.
2015-05-28 23:27:16	-->	khades (Thunderbird@moz-ual.b31.186.31.IP) has joined #rust
2015-05-28 23:28:31	srjek	XMPPwocky: (I think) The important parts of that snippet is the BasicSlice trait and Split::new
2015-05-28 23:29:03	-->	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has joined #rust
2015-05-28 23:29:37	srjek	The rest is stuff I didn't cut out because I needed it to compile
2015-05-28 23:29:52	jpernst	hmm, looking at some example macros it seems you can repeat a layer multiple times, but i'm not sure what the rules are since layers don't have names
2015-05-28 23:30:15	jpernst	maybe it's only legal to repeat a macro layer if the macro arm has only one layer in it?
2015-05-28 23:30:29	<--	hroi (hroi@moz-d273ub.static.netgroup.dk) has quit (Ping timeout: 121 seconds)
2015-05-28 23:30:53	Mutabah	jpernst: When a repetion is encountered in the expansion, rustc counts the number of sub-matches (i.e. how many times matches within it were matched)
2015-05-28 23:31:34	jpernst	interesting
2015-05-28 23:31:38	<--	desophos (desophos@moz-u5lokk.98ku.27p0.6000.2606.IP) has quit (Connection closed)
2015-05-28 23:31:43	Mutabah	jpernst: e.g. for "$($a $b)*" it will count how many times a was matched (and check that it's the same as b) and repeat that many times
2015-05-28 23:31:44	srjek	XMPPwocky: If you want what I'm actually doing overall, I made a TraitSlice struct, and was implementing all the slice functions I could for it when I ran into this.
2015-05-28 23:31:51	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-28 23:32:20	<--	dcb (textual@moz-j72nfe.ca.comcast.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-28 23:33:24	jpernst	well, what i mean is, if i have a repetition in my pattern, say a list of comma separated ints, and i want to expand that list multiple times in the transform
2015-05-28 23:33:29	-->	desophos (desophos@moz-dsfvso.98ku.27p0.6000.2606.IP) has joined #rust
2015-05-28 23:33:52	jpernst	the repetition itself doesn't have a name, only the elements within it do
2015-05-28 23:34:01	-->	morphy (textual@moz-c70.u5s.65.112.IP) has joined #rust
2015-05-28 23:34:32	darkfox	What would be the best way to handle getting a 'uniform/random' number from a range (kinda like a pool of numbers). 
2015-05-28 23:34:58	<--	pgonda (peter@moz-s36.0tp.134.75.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 23:35:37	XMPPwocky	darkfox: http://doc.rust-lang.org/rand/rand/struct.Closed01.html
2015-05-28 23:35:51	XMPPwocky	or OpenO1
2015-05-28 23:35:56	XMPPwocky	wait, no
2015-05-28 23:36:16	XMPPwocky	ah  it's a *distribution*
2015-05-28 23:36:29	XMPPwocky	http://doc.rust-lang.org/rand/rand/distributions/range/struct.Range.html
2015-05-28 23:36:37	Mutabah	jpernst: You can do that
2015-05-28 23:36:47	darkfox	XMPPwocky: I don't think I was clear on the point; that the pool would be shared, and random numbers are pulled from the pool for usage and then returned when 'unlocked'.
2015-05-28 23:36:56	-->	nott (nott@moz-to4.06o.57.86.IP) has joined #rust
2015-05-28 23:37:26	Mutabah	jpernst: When you have $() in the expansion, it will start iterating over the contained elements. You can have as many of these blocks as you like
2015-05-28 23:37:46	XMPPwocky	darkfox: oh! in that case, the simplest solution is just a Mutex around a Vec of numbers
2015-05-28 23:37:47	darkfox	XMPPwocky: I might need to wrap that rand/distributions/range to allow for locking/unlocking each value.
2015-05-28 23:38:05	XMPPwocky	darkfox: generate a random index into that Vec, then you're golden
2015-05-28 23:38:12	jpernst	Mutabah, but what if there are multiple repetitions in the pattern? how does it know which repetition i'm expanding?
2015-05-28 23:38:22	jpernst	perhaps by the names used?
2015-05-28 23:38:23	darkfox	XMPPwocky: example?
2015-05-28 23:38:57	Mutabah	jpernst: It uses the contained names, yes
2015-05-28 23:39:05	<--	ygrek (user@moz-sam.jpq.59.108.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 23:39:17	-->	flyfische (flyfische@moz-rvrfnn.sth3.ptd.net) has joined #rust
2015-05-28 23:39:23	<--	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-28 23:39:24	darkfox	XMPPwocky: It must be uniformly distributed and unique as it can only be assigned to one at any point in time, and returned when unlocked.
2015-05-28 23:39:46	jpernst	Mutabah, ah, ok. so it would be an error if ends up being ambiguous?
2015-05-28 23:40:10	flyfische	I have a question about enums.  Is there a way to make them behave like enums in C, where I can treat the enum itself like an integer?  So if I reference enum::name, I get an integer instead of the enum type?
2015-05-28 23:40:10	Mutabah	jpernst: For the iteration count, yes. If $a and $b repeat different amounts, it's an error
2015-05-28 23:40:24	XMPPwocky	darkfox: http://is.gd/q5fQ0c
2015-05-28 23:40:27	flyfische	I don't really know how else to explain it.
2015-05-28 23:40:31	Mutabah	flyfische: #[repr(C)]
2015-05-28 23:40:33	XMPPwocky	darkfox: that, but put a mutex around everything
2015-05-28 23:40:50	XMPPwocky	darkfox: of course, with a Vec you'll copy half the elements every time you generate
2015-05-28 23:40:53	flyfische	Mutabah: I don't understand?
2015-05-28 23:40:56	XMPPwocky	if that's an issue use a HashSet or something
2015-05-28 23:41:23	SpaceManiac	flyfische: you can cast `Enum::Name as i32` or whatever type you want
2015-05-28 23:41:26	Mutabah	flyfische: When expanding the macro, when a $( is hit, it pushes : the current position, the number of iterations, and a current iteration (0)
2015-05-28 23:41:33	darkfox	XMPPwocky: Hmm
2015-05-28 23:41:38	darkfox	XMPPwocky: That could work
2015-05-28 23:41:46	jpernst	Mutabah: ok, thanks, i think it's starting to make sense
2015-05-28 23:41:48	Mutabah	flyfische: When the closing ) is seen, the current iteration is incremented, and if smaller than the count, it restarts at the beginning
2015-05-28 23:41:56	XMPPwocky	not actually sure on the best data structure
2015-05-28 23:41:59	SpaceManiac	flyfische: you can also add #[repr(C)] or #[repr( an_integral_type )] to change its representation
2015-05-28 23:42:00	darkfox	XMPPwocky: Yea; I was thinking of a hashset
2015-05-28 23:42:03	<--	psy (psy@moz-7vh.hr7.224.43.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 23:42:13	XMPPwocky	i think a DList might even win, since all you're doing is one traversal, then an insert/remove
2015-05-28 23:42:16	darkfox	Or bitset; not sure for the difference to decide which
2015-05-28 23:42:20	XMPPwocky	if you care, bench it
2015-05-28 23:42:29	XMPPwocky	if you care a little, i'd say hashset
2015-05-28 23:42:38	XMPPwocky	if you don't care, Vec and get it over with :P
2015-05-28 23:42:52	XMPPwocky	actually, you can't do access into a hashset by index like that, can you'
2015-05-28 23:43:08	flyfische	SpaceManiac: where do I add that though?  Right before the enum is declared?
2015-05-28 23:43:14	SpaceManiac	righto
2015-05-28 23:43:20	flyfische	Awesome, thanks.
2015-05-28 23:43:21	Moonlightning	…wait a sec. You can't use a plain Iterator for concat() because you can only iterate over it once. You'd have to collect() all the elements anyway.
2015-05-28 23:43:33	Moonlightning	You can if you have a RandomAccessIterator, though.
2015-05-28 23:43:58	darkfox	XMPPwocky: I really care as this will be extracting/injecting quite frequently... One thing I'm not sure about is that the object must be manually returned... Hence, as I said eariler; might need to have a wrapper - like with a drop implementation to handle the pushing back.
2015-05-28 23:44:30	XMPPwocky	darkfox: you can do that, but it'll have to lock a mutex in its destructor or something
2015-05-28 23:44:55	darkfox	IF it isn't returned by chance, then the vector pool would start to shrink.
2015-05-28 23:45:15	--	bentley is now known as bentley|away
2015-05-28 23:46:10	darkfox	XMPPwocky: Anything wrong with that?
2015-05-28 23:46:27	XMPPwocky	darkfox: it's potentially surprising, and you'd have to watch for deadlock
2015-05-28 23:46:36	darkfox	:/
2015-05-28 23:46:37	XMPPwocky	it should be OK if you don't use the mutex anywhere else
2015-05-28 23:46:49	-->	Moose (Mibbit@moz-btfkho.cnpn.hctcnetworks.net) has joined #rust
2015-05-28 23:46:54	XMPPwocky	you definitely don't want to be hanging in a destructor, though, that's no fun
2015-05-28 23:47:42	<--	annodomini (lambda@moz-hceqmj.hfc.comcastbusiness.net) has quit (Client exited)
2015-05-28 23:48:22	darkfox	What I'm thinking the usage will be is as follows.. The pool exists and is populated with all numbers 0..2^16 (u16), when required, one can be randomally used as a key in a hashmap; which when that hashmap entry gets removed should return the value back to the pool.
2015-05-28 23:48:59	-->	crisco (crisco@moz-7fq.k98.111.114.IP) has joined #rust
2015-05-28 23:49:20	darkfox	Here the mutex should only lock when removing or pushing values from the pool.
2015-05-28 23:49:30	<--	ismaelga (ismaelga@moz-qp42vg.rev.vodafone.pt) has quit (Connection closed)
2015-05-28 23:50:15	-->	nodweber (nodweber@moz-knt.fgq.178.5.IP) has joined #rust
2015-05-28 23:51:02	-->	lenstr (lenstr@moz-csu.vju.25.171.IP) has joined #rust
2015-05-28 23:51:09	<--	crisco__ (crisco@moz-7fq.k98.111.114.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 23:52:31	darkfox	XMPPwocky: Should that be fine and scale at large?
2015-05-28 23:52:56	XMPPwocky	darkfox: well, eventually you'll start to contend on the mutex, which isn't great
2015-05-28 23:52:59	pyon	Does rustdoc ignore doc-comments for non-pub definitions?
2015-05-28 23:53:29	Moonlightning	…wait, no you can't. You need an iterator that's both peekable /and/ random-access.
2015-05-28 23:53:35	<--	johnsoft (johnsoft@moz-69mrig.res.rr.com) has quit (Ping timeout: 121 seconds)
2015-05-28 23:53:35	Moonlightning	…is there even such a thing?
2015-05-28 23:53:38	<--	dpc (dpc@moz-t6gr4b.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-28 23:53:47	<--	dpc_ (dpc@moz-t6gr4b.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-28 23:53:54	-->	johnsoft (johnsoft@moz-69mrig.res.rr.com) has joined #rust
2015-05-28 23:54:18	darkfox	XMPPwocky: contend?
2015-05-28 23:54:25	<--	nodweber (nodweber@moz-knt.fgq.178.5.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 23:54:40	SpaceManiac	pyon: I don't know the exact behavior, but the comments don't seem to end up rendered
2015-05-28 23:54:46	pyon	Ah!
2015-05-28 23:55:05	<--	lenstr (lenstr@moz-csu.vju.25.171.IP) has quit (Ping timeout: 121 seconds)
2015-05-28 23:55:19	amstrad	XMPPwocky: dong anything interesting with Rust?
2015-05-28 23:55:23	<--	Sgeo (Sgeo@moz-mo8ath.dyn.optonline.net) has quit (Quit: Leaving)
2015-05-28 23:55:34	XMPPwocky	amstrad: a few interesting things that i haven't had time for recently
2015-05-28 23:55:52	amstrad	XMPPwocky: oh?
2015-05-28 23:56:10	XMPPwocky	http://github.com/xmppwocky/vel0city
2015-05-28 23:56:15	amstrad	XMPPwocky: i suppose the community needs to step up and write a whole lot of things for Rust now
2015-05-28 23:56:18	pyon	Are there any major features implemented in nightlies that aren't in the stable release?
2015-05-28 23:56:34	amstrad	XMPPwocky: nice
2015-05-28 23:56:36	XMPPwocky	pyon: well, "implemented" or "actually marked stable"
2015-05-28 23:56:43	pyon	Just implemented.
2015-05-28 23:57:00	amstrad	XMPPwocky: in your opinion, where does Rust stand as being something you can pick up and roll with for projects
2015-05-28 23:57:07	amstrad	XMPPwocky: i need a project to work on
2015-05-28 23:57:08	pyon	For now, I'm okay with a buggy implementation that will actually destroy all my data instead of doing anything useful.
2015-05-28 23:57:24	amstrad	XMPPwocky: something to sink my teeth into, and get down with the language
2015-05-28 23:57:30	XMPPwocky	pyon: i can't think of any off the top of my head; stuff like OIBITs isn't stable yet
2015-05-28 23:57:36	pyon	OIBIT?
2015-05-28 23:57:39	amstrad	XMPPwocky: its funny that Rust HTTP is still a ways off
2015-05-28 23:57:43	XMPPwocky	amstrad: that's pretty much what I did
2015-05-28 23:58:07	XMPPwocky	pyon: https://github.com/rust-lang/rfcs/blob/master/text/0019-opt-in-builtin-traits.md  as in, "be vewwy vewwy quiet, i'm hunting OIBITS"
2015-05-28 23:58:08	amstrad	XMPPwocky: well, last time i asked that question, seems a lot of people had already gone for the low hanging fruit
2015-05-28 23:58:09	pyon	Checking.
2015-05-28 23:58:16	pyon	lol
2015-05-28 23:58:26	-->	Sgeo (Sgeo@moz-mo8ath.dyn.optonline.net) has joined #rust
2015-05-28 23:58:42	amstrad	XMPPwocky: but checking the state of things now, there doesn't seem to be too much out there in terms of quick, "goto" libraries for various things
2015-05-28 23:58:44	darkfox	XMPPwocky: That name sounds like derive?
2015-05-28 23:58:45	XMPPwocky	amstrad: well, for learning projects, it doesn't matter that much if you write something actually unique
2015-05-28 23:58:47	amstrad	which is nice
2015-05-28 23:59:03	amstrad	XMPPwocky: i suppose
2015-05-28 23:59:07	XMPPwocky	https://github.com/xmppwocky/nofunbot one of the first things i wrote
2015-05-28 23:59:16	XMPPwocky	an irc modbot
2015-05-28 23:59:44	XMPPwocky	you can see me trying to write more standard OOP code and failing :P
2015-05-29 00:00:35	XMPPwocky	that project helped a lot, i think
2015-05-29 00:00:35	<--	kgrandon (Adium@moz-i0u8p7.hfc.comcastbusiness.net) has quit (Quit: Leaving.)
2015-05-29 00:00:39	<--	crisco (crisco@moz-7fq.k98.111.114.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 00:00:39	amstrad	XMPPwocky: yeah, so you have made the switch to some other pattern / way of thinking
2015-05-29 00:00:44	XMPPwocky	rust hasn't changed *that* much since i wrote it
2015-05-29 00:00:46	XMPPwocky	which is nice
2015-05-29 00:00:56	XMPPwocky	iirc it was just barely on the edge of the ~ to Box shift
2015-05-29 00:01:01	<--	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-29 00:01:03	amstrad	XMPPwocky: the problem i am having is im trying to jump in the deep end
2015-05-29 00:01:05	SpaceManiac	amstrad: I've been learning partially by finding subpar libraries for things and fixing them
2015-05-29 00:02:03	amstrad	XMPPwocky: writing concurrent code is hard, writing concurrent code in a language like Rust is crazy without first jumping through the hoops doing the basics
2015-05-29 00:02:12	amstrad	XMPPwocky: i need to "unlearn" a lot of stuff
2015-05-29 00:02:51	-->	gandalf (zbraniecki@moz-cp7c4m.ca.comcast.net) has joined #rust
2015-05-29 00:03:08	amstrad	XMPPwocky: i think tag that with the evolving language (most of the stuff i was trying to do was where Rust was changing the most) has proved challenging, i must have relearnt things several times over
2015-05-29 00:03:23	XMPPwocky	amstrad: yeah, i had to keep rewriting stuff
2015-05-29 00:03:27	XMPPwocky	otoh, i learned a lot :P
2015-05-29 00:04:22	--	irc: disconnected from server
2015-05-29 00:04:33	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-29 00:04:33	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-29 00:04:33	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-29 00:04:33	--	Channel #rust: 961 nicks (13 ops, 0 halfops, 1 voice, 947 normals)
2015-05-29 00:04:35	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-29 00:04:37	XMPPwocky	tragically abandoned
2015-05-29 00:06:01	XMPPwocky	amstrad: i can see that; i think the core language had been stable for a while even before 1.0, which helped
2015-05-29 00:06:10	aatch	I remember when iteration was sugar for passing a closure to a function.
2015-05-29 00:06:28	XMPPwocky	when i first looked at rust, i was like, "okay, there's an optional GC, so it's pretty obvious that that's what everybody uses in practice" and skipped it
2015-05-29 00:06:41	XMPPwocky	then i came back when ~ was removed because it seemed much more C++y
2015-05-29 00:06:44	XMPPwocky	in a good way
2015-05-29 00:06:49	amstrad	XMPPwocky: yeah
2015-05-29 00:07:02	amstrad	XMPPwocky: there were things like the old_io stuff
2015-05-29 00:07:17	amstrad	XMPPwocky: i mean, that is specifically where i needed to use Rust
2015-05-29 00:07:20	XMPPwocky	and like built-in channels
2015-05-29 00:07:21	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Connection closed)
2015-05-29 00:07:37	<--	phynx (chatzilla@moz-mg4atb.dsl.scarlet.be) has quit (Ping timeout: 121 seconds)
2015-05-29 00:07:40	SpaceManiac	It seems std::sync::mpsc doesn't require Send on its content types. Is it implicit somehow?
2015-05-29 00:07:40	amstrad	and it felt in flux, as were the types and Box -> thing inference and a few other things
2015-05-29 00:07:43	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-29 00:07:52	Havvy	XMPPwocky:  An optional but unused GC. :P
2015-05-29 00:08:14	aatch	When I started with Rust, we didn't have trait objects!
2015-05-29 00:08:26	XMPPwocky	i think that the number of things that are built-in to the core language roughly inversely correlates with the power of the language
2015-05-29 00:08:36	<--	starless (starless@moz-u9gmm1.res.rr.com) has quit (Quit: Leaving)
2015-05-29 00:08:41	aatch	You want dynamic dispatch? Roll your own vtable, maggot!
2015-05-29 00:08:43	XMPPwocky	SpaceManiac: so the clever part is
2015-05-29 00:08:57	XMPPwocky	SpaceManiac: you can't Send a Sender<T> if T isn't Send
2015-05-29 00:09:07	XMPPwocky	that's just a part of normal rules for how Send works
2015-05-29 00:09:08	-->	harikb (Adium@moz-9d64rs.ca.comcast.net) has joined #rust
2015-05-29 00:09:15	XMPPwocky	> impl<T: Send> Send for Sender<T>
2015-05-29 00:09:28	XMPPwocky	and if the Sender can't be Sent, then it's still safe to send things on the same thread
2015-05-29 00:09:31	XMPPwocky	not very useful, but sfae
2015-05-29 00:09:34	SpaceManiac	Ah! I saw that listed, but it hadn't clicked. I see now.
2015-05-29 00:09:47	aatch	I'm also vaguely aware of the old region-pointer syntax: `&str/static` (or something).
2015-05-29 00:09:52	SpaceManiac	Clever indeed
2015-05-29 00:09:52	Mutabah	Yeah, it allos mpsc to be used in a single-threaded context if needed
2015-05-29 00:10:33	--	irc: disconnected from server
2015-05-29 00:10:44	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-29 00:10:44	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-29 00:10:44	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-29 00:10:44	--	Channel #rust: 960 nicks (13 ops, 0 halfops, 1 voice, 946 normals)
2015-05-29 00:10:46	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-29 00:11:11	XMPPwocky	"Snapshot (nee Freeze), which defines logical immutability rather than physical immutability. Rc<int>, for example, would be considered Snapshot. Snapshot could be useful because Snapshot+Clone indicates a type whose value can be safely "preserved" by cloning it."
2015-05-29 00:11:19	XMPPwocky	i forgot how old that RFC was
2015-05-29 00:11:47	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Ping timeout: 121 seconds)
2015-05-29 00:12:22	<--	orangeshark (erik@moz-222eh1.44tj.56ot.0306.2602.IP) has quit (Quit: Leaving)
2015-05-29 00:13:03	<--	jpernst (jameson@moz-eae.le3.243.162.IP) has left #rust ("Leaving")
2015-05-29 00:13:22	-->	Quxxy (chatzilla@moz-efh10q.internode.on.net) has joined #rust
2015-05-29 00:14:43	<--	JuggleTux (tux@moz-ho0t1f.adslplus.ch) has quit (Ping timeout: 121 seconds)
2015-05-29 00:15:18	<--	chao-tic (chao@moz-258.4aj.101.218.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 00:15:47	-->	coryforsyth (coryforsyth@moz-hpsim2.fios.verizon.net) has joined #rust
2015-05-29 00:16:01	-->	acgtyrant (acgtyrant@moz-3kd.b79.160.124.IP) has joined #rust
2015-05-29 00:16:08	-->	gsingh93 (gulshan@moz-ln1ktu.st3l.iv8o.0004.2601.IP) has joined #rust
2015-05-29 00:17:03	-->	jyeo (jyeo@moz-trr.kso.189.118.IP) has joined #rust
2015-05-29 00:17:14	-->	frecel (quassel@moz-qme.p1t.254.162.IP) has joined #rust
2015-05-29 00:17:45	<--	frecel (quassel@moz-qme.p1t.254.162.IP) has quit (Connection closed)
2015-05-29 00:18:46	-->	frecel (quassel@moz-qme.p1t.254.162.IP) has joined #rust
2015-05-29 00:18:51	<--	kanru (kanru@moz-aj9ejj.HINET-IP.hinet.net) has quit (Ping timeout: 121 seconds)
2015-05-29 00:20:10	<--	Guest (textual@moz-rtn.fg7.77.192.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 00:20:11	-->	kanru (kanru@moz-aj9ejj.HINET-IP.hinet.net) has joined #rust
2015-05-29 00:21:01	<--	harikb (Adium@moz-9d64rs.ca.comcast.net) has left #rust
2015-05-29 00:21:03	-->	Guest (textual@moz-rtn.fg7.77.192.IP) has joined #rust
2015-05-29 00:21:09	<--	zhuli (zhuli@moz-d2d.7sg.64.112.IP) has quit (Quit: WeeChat 0.4.2)
2015-05-29 00:21:19	<--	paupau (grrrr@moz-7l1.1cg.90.208.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 00:23:55	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-29 00:24:34	<--	carols10cents (carols10cen@moz-7pm0e0.fios.verizon.net) has quit (Ping timeout: 121 seconds)
2015-05-29 00:24:40	<--	shep-home (shep@moz-7pm0e0.fios.verizon.net) has quit (Ping timeout: 121 seconds)
2015-05-29 00:25:21	<--	acgtyrant (acgtyrant@moz-3kd.b79.160.124.IP) has quit (Connection closed)
2015-05-29 00:25:56	-->	acgtyrant (acgtyrant@moz-3kd.b79.160.124.IP) has joined #rust
2015-05-29 00:26:08	<--	Azdle (Azdle@moz-fv6arh.mn.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-29 00:26:38	-->	carols10cents (carols10cen@moz-7pm0e0.fios.verizon.net) has joined #rust
2015-05-29 00:26:41	-->	shep-home (shep@moz-7pm0e0.fios.verizon.net) has joined #rust
2015-05-29 00:27:42	<--	nott (nott@moz-to4.06o.57.86.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 00:28:41	-->	p1start (p1start@moz-nftjhe.org) has joined #rust
2015-05-29 00:30:31	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Connection closed)
2015-05-29 00:31:13	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-29 00:33:49	-->	chao-tic (chao@moz-258.4aj.101.218.IP) has joined #rust
2015-05-29 00:34:13	-->	masonl (masonl@moz-cnt.haj.125.74.IP) has joined #rust
2015-05-29 00:34:15	<--	masonl (masonl@moz-cnt.haj.125.74.IP) has quit (Quit: leaving)
2015-05-29 00:34:22	-->	masonl (masonl@moz-cnt.haj.125.74.IP) has joined #rust
2015-05-29 00:35:16	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Ping timeout: 121 seconds)
2015-05-29 00:35:41	-->	Feyn (Feyn@moz-cjr.3q3.115.42.IP) has joined #rust
2015-05-29 00:37:27	-->	zhuli (zhuli@moz-d2d.7sg.64.112.IP) has joined #rust
2015-05-29 00:38:00	<--	Shackra (Jorge@moz-7bh.ng6.177.186.IP) has quit (Connection closed)
2015-05-29 00:38:22	<--	zhuli (zhuli@moz-d2d.7sg.64.112.IP) has quit (Quit: WeeChat 1.3-dev)
2015-05-29 00:38:25	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-29 00:40:12	--	darkowlzz|afk is now known as darkowlzz
2015-05-29 00:40:13	-->	nogbit (nogbit@moz-ska.er2.10.184.IP) has joined #rust
2015-05-29 00:42:21	aji	just to confirm something,
2015-05-29 00:42:40	-->	zhuli (zhuli@moz-d2d.7sg.64.112.IP) has joined #rust
2015-05-29 00:42:46	aji	if i have a struct with a &mut field, do i need a &mut on the struct to be able to modify the referred value?
2015-05-29 00:43:08	_habnabit	if i'm using rust ffi to call into a library that uses aligned(32) structs, is there a way to tell rust about the alignment requirement? the best i found was rt::heap::allocate, which appears to be unstable
2015-05-29 00:43:13	aji	i didn't think you did, but it's fixing a particular error i'm having with pattern matching
2015-05-29 00:43:19	Kovensky	IIRC you can't have mut fields; mut is a property of the binding, not of the object
2015-05-29 00:43:27	@niconii	aji: nope, if you own the struct, you can mutate it
2015-05-29 00:43:39	@niconii	aji: what sort of error is it?
2015-05-29 00:44:04	_habnabit	Kovensky, &mut is a mutable reference, though; a struct can hold mutable or immutable references to a thing
2015-05-29 00:44:20	XMPPwocky	aji: you do, yes.
2015-05-29 00:44:22	XMPPwocky	wel
2015-05-29 00:44:25	XMPPwocky	an & won't work
2015-05-29 00:44:31	XMPPwocky	but owning it or having an &mut will
2015-05-29 00:44:31	aji	just a borrow error
2015-05-29 00:44:37	aji	https://gist.github.com/aji/616b1586638a5605d424
2015-05-29 00:44:38	XMPPwocky	the point is, & is shared
2015-05-29 00:44:46	<--	coryforsyth (coryforsyth@moz-hpsim2.fios.verizon.net) has quit (Client exited)
2015-05-29 00:44:51	<--	chao-tic (chao@moz-258.4aj.101.218.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 00:44:54	aji	i'm matching on a &mut field of a &
2015-05-29 00:44:59	aji	IrcClient is an enum
2015-05-29 00:45:00	XMPPwocky	aji: yeah, you can't use that
2015-05-29 00:45:11	@niconii	irc: oh, wait, you're saying &mut Struct vs. &Struct?
2015-05-29 00:45:13	@niconii	er
2015-05-29 00:45:15	XMPPwocky	lol
2015-05-29 00:45:15	@niconii	aji
2015-05-29 00:45:20	-->	dcb (textual@moz-j72nfe.ca.comcast.net) has joined #rust
2015-05-29 00:45:22	@niconii	don't know why i wrote "irc"...
2015-05-29 00:45:27	aji	lol
2015-05-29 00:45:36	geofft	_habnabit: I _think_ there isn't anything stable 
2015-05-29 00:45:42	_habnabit	geofft, drat
2015-05-29 00:45:45	XMPPwocky	Three-letter Acronyms Attack
2015-05-29 00:45:50	@niconii	aji: anyway, sorry, i thought you meant &mut Struct vs. just owning the Struct
2015-05-29 00:45:54	aji	i have a &-ref to a struct with a &mut-ref field to an enum
2015-05-29 00:46:04	geofft	the hokey thing you could probably do if you want to avoid unstable is to FFI into jemalloc 
2015-05-29 00:46:05	XMPPwocky	aji: &mut needs to be unique
2015-05-29 00:46:09	_habnabit	geofft, i guess i could ffi to aligned_alloc, haha
2015-05-29 00:46:09	aji	yes, it is unique
2015-05-29 00:46:15	Mutabah	aji: If you don't have an &mut path to a &mut, you can only get an & out of it
2015-05-29 00:46:20	XMPPwocky	if it could be used through a shared reference, it wouldn't be safe
2015-05-29 00:46:21	<--	v21 (vee@moz-07pghd.asianet.co.th) has quit (Quit: Leaving)
2015-05-29 00:46:27	aji	so every deref along the path to the ref needs to be mut? good to know
2015-05-29 00:46:33	aji	i thought it was just the last one
2015-05-29 00:46:36	geofft	it's always amusing to me how much you can do through unsafe to bypass unstable :) 
2015-05-29 00:46:36	@niconii	aji: it's not unique if you have multiple & pointers to the struct, is the issue
2015-05-29 00:46:42	aji	ah!
2015-05-29 00:46:50	geofft	but I guess that's actually fairly sensible 
2015-05-29 00:47:15	_habnabit	geofft, i was slightly concerned agout ffi-ing to jemalloc just because i didn't know how 'internal' that was considered. like, if it's likely to change
2015-05-29 00:47:29	-->	rmdashrf (rmdashrf@moz-ecr.kjm.54.128.IP) has joined #rust
2015-05-29 00:47:52	<--	zhuli (zhuli@moz-d2d.7sg.64.112.IP) has quit (Quit: leaving)
2015-05-29 00:47:55	<--	nogbit (nogbit@moz-ska.er2.10.184.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 00:48:01	geofft	yeah, I would certainly not expect Rust's usual stability guarantees there. 
2015-05-29 00:48:16	-->	zynisch_o7 (zynisch_o7@moz-6eh1ju.dyn.optonline.net) has joined #rust
2015-05-29 00:48:37	<--	Guest58 (textual@moz-70hlaj.austtx.sbcglobal.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-29 00:49:28	-->	zeittunnel (2342342342@moz-p5a62o.dip0.t-ipconnect.de) has joined #rust
2015-05-29 00:49:45	-->	nogbit (nogbit@moz-ska.er2.10.184.IP) has joined #rust
2015-05-29 00:50:32	-->	frangio (frangio@moz-04sgf8.fibertel.com.ar) has joined #rust
2015-05-29 00:50:35	nogbit	anyone on Arch using rust, specifically the https://aur.archlinux.org/packages/rust-nightly-bin/
2015-05-29 00:50:48	-->	nodweber (nodweber@moz-knt.fgq.178.5.IP) has joined #rust
2015-05-29 00:51:42	_habnabit	geofft, i think i'll go with aligned_alloc then. thanks though!
2015-05-29 00:52:33	-->	lenstr (lenstr@moz-csu.vju.25.171.IP) has joined #rust
2015-05-29 00:52:57	-->	keenan (keenan@moz-es1.bb3.240.23.IP) has joined #rust
2015-05-29 00:53:38	-->	LtHummus (chairman@moz-ictopv.hfc.comcastbusiness.net) has joined #rust
2015-05-29 00:54:01	<--	maralla (uid69246@moz-mq40mv.brockwell.irccloud.com) has quit (Quit: Connection closed for inactivity)
2015-05-29 00:55:00	<--	nodweber (nodweber@moz-knt.fgq.178.5.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 00:55:01	-->	davebettin_ (davebettin@moz-ip635p.or.comcast.net) has joined #rust
2015-05-29 00:55:49	Moonlightning	Isn't the get() method (as in slice types) part of a trait?
2015-05-29 00:56:35	<--	lenstr (lenstr@moz-csu.vju.25.171.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 00:57:06	<--	w4ffles (textual@moz-34v1r4.res.rr.com) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-29 00:58:06	<--	davebettin (davebettin@moz-ip635p.or.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-29 00:58:19	_habnabit	so if i do my own allocation for a struct, another struct can't own that struct, right? i.e. it has to be a `*mut Struct`, and i can't convert that to a `Struct`, because otherwise rust would think it needs to deallocate it
2015-05-29 00:58:20	<--	Guest (textual@moz-rtn.fg7.77.192.IP) has quit (Connection closed)
2015-05-29 00:58:56	_habnabit	i think that also means i have to put all accesses in unsafe blocks too :(
2015-05-29 01:00:11	<--	ellinokon (ellinokon@moz-gh5.r2h.62.178.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-29 01:00:11	geofft	a Struct is just going to be a member of the other struct 
2015-05-29 01:00:14	-->	ellinokon (ellinokon@moz-gh5.r2h.62.178.IP) has joined #rust
2015-05-29 01:00:20	_habnabit	ah, right
2015-05-29 01:00:25	supr	Hi, I have an custom iterator that returns u16s on each iteration, I am trying to return a pointer to vector, like so MyType.collect::<Vec<u16>>().as_ptr(). To a c function. But, the other side only see's null values. But, if i return a vec![1,2u16].as_ptr(), they seem to work fine. What am i missing?
2015-05-29 01:00:39	Moonlightning	Oh, hello, _habnabit :p
2015-05-29 01:00:41	_habnabit	hi
2015-05-29 01:02:18	--	darkowlzz is now known as darkowlzz|afk
2015-05-29 01:02:32	geofft	Moonlightning: looks like get() is part of the `impl<T> [T]` (i.e, just the impl for the type, not a trait impl) 
2015-05-29 01:02:36	geofft	https://doc.rust-lang.org/std/primitive.slice.html#method.get 
2015-05-29 01:02:45	_habnabit	is there a standard type for an opaque C pointer in rust?
2015-05-29 01:02:47	_habnabit	a la void *
2015-05-29 01:03:01	-->	hjr3 (hradtke@moz-e235ok.fios.verizon.net) has joined #rust
2015-05-29 01:03:19	geofft	*mut libc::c_void 
2015-05-29 01:03:22	Moonlightning	_habnabit: Shouldn't such a thing, if it existed, be buried in the FFI/C crates? >.>
2015-05-29 01:03:24	<--	saterus (saterus@moz-rutqj0.res.rr.com) has quit (Connection closed)
2015-05-29 01:03:33	-->	Guest (textual@moz-rtn.fg7.77.192.IP) has joined #rust
2015-05-29 01:03:34	_habnabit	actually crap now i can't remember if you can reliably convert between a void * and a struct pointer
2015-05-29 01:03:49	geofft	standard C lets you convert between any data pointer and a void * 
2015-05-29 01:03:49	-->	annodomini (lambda@moz-qgii5v.ma.comcast.net) has joined #rust
2015-05-29 01:03:54	_habnabit	okay
2015-05-29 01:04:03	_habnabit	i know function pointers are special but i couldn't remember if struct pointers were too
2015-05-29 01:04:03	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Connection closed)
2015-05-29 01:04:21	geofft	yeah, structs are just data, functions are (can be) weird 
2015-05-29 01:04:25	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-29 01:04:53	geofft	that said, secretly, any platform with a compliant dlsym() is required to let you convert between void * and a function pointer 
2015-05-29 01:05:00	_habnabit	heh yeah
2015-05-29 01:05:29	geofft	so this only affects the nonexistent Rust port to DOS 
2015-05-29 01:05:33	_habnabit	iirc windows does it the other way, and dlsym returns a void(*)(void) that you have to cast to a data pointer
2015-05-29 01:05:50	geofft	C:\RUST>CARGO NEW /BIN 
2015-05-29 01:05:54	_habnabit	hahaha
2015-05-29 01:06:40	-->	dstrbad (dstrbad@moz-vfo5vo.cable.xnet.hr) has joined #rust
2015-05-29 01:07:38	<--	jyeo (jyeo@moz-trr.kso.189.118.IP) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-05-29 01:07:51	<--	loyd (loyd@moz-jsb.32f.108.213.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 01:08:27	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Ping timeout: 121 seconds)
2015-05-29 01:09:15	-->	kamilc__ (kamil@moz-lrfgjm.play-internet.pl) has joined #rust
2015-05-29 01:09:48	-->	partkyle (partkyle@moz-smkka5.res.rr.com) has joined #rust
2015-05-29 01:10:03	darkfox	XMPPwocky: If your still there - how about a set of the range, shuffled to a random seed and drained until zero; then populate with all that were released.
2015-05-29 01:10:07	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-29 01:10:28	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Connection closed)
2015-05-29 01:10:28	<--	srjek (srjek@moz-gg7i72.ece.uic.edu) has quit (Connection closed)
2015-05-29 01:10:29	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-29 01:10:30	-->	srjek (srjek@moz-gg7i72.ece.uic.edu) has joined #rust
2015-05-29 01:11:35	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Connection closed)
2015-05-29 01:11:38	-->	jnvsor (j@moz-1o1jrn.dynamic.ziggo.nl) has joined #rust
2015-05-29 01:12:06	Moonlightning	…HAH
2015-05-29 01:12:08	Moonlightning	I just got it.
2015-05-29 01:13:31	-->	hiring (Mibbit@moz-g77l04.ca.comcast.net) has joined #rust
2015-05-29 01:13:34	-->	c74d3 (c74d3a4ebb6@moz-0ersgu.oc.cox.net) has joined #rust
2015-05-29 01:13:35	-->	chippers_ (chip@moz-26d.2gk.254.199.IP) has joined #rust
2015-05-29 01:13:54	aaronm04	Hi, why do I get "error: use of moved value: `background`" on line 68 when I compile http://sprunge.us/jOXO with `rustc -O --crate-type lib -o rust.o --emit obj rust.rs`?
2015-05-29 01:14:44	<--	c74d (c74d3a4ebb6@moz-rhs0n6.mggc.hibn.4404.2002.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 01:15:00	amstrad	hey all
2015-05-29 01:15:04	amstrad	so, http://is.gd/v0bbn0
2015-05-29 01:15:17	amstrad	Rust expects a constant size
2015-05-29 01:15:20	--	c74d3 is now known as c74d
2015-05-29 01:15:21	-->	hroi (hroi@moz-d273ub.static.netgroup.dk) has joined #rust
2015-05-29 01:15:29	Sgeo	amstrad, Vec<Box<Fn()>>
2015-05-29 01:15:34	Mutabah	aaronm04: First off, why do you still have a custom Option type there?
2015-05-29 01:15:40	amstrad	Sgeo: so, i need to Box it?
2015-05-29 01:15:51	amstrad	Sgeo: are you sure?
2015-05-29 01:15:52	<--	c_wraith (c_wraith@moz-7i8.v6v.191.131.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 01:16:02	Mutabah	aaronm04: Also - That should error, as Copy requires Clone
2015-05-29 01:16:08	<--	O01eg (o01eg@moz-qi2pml.uea1.4n8f.2698.2a02.IP) has quit (Client exited)
2015-05-29 01:16:16	Sgeo	Or put it behind a pointer of some sort. Fn() is a trait, and closures of all different sizes can implement it
2015-05-29 01:16:28	<--	chippers (chip@moz-26d.2gk.254.199.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 01:16:29	<--	hiring (Mibbit@moz-g77l04.ca.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-29 01:16:34	Sgeo	To get a "any item that implements this trait" thing, you need to have a pointer to it
2015-05-29 01:16:41	--	chippers_ is now known as chippers
2015-05-29 01:16:50	amstrad	Sgeo: hmm, ok, thanks
2015-05-29 01:16:58	aaronm04	Mutabah: 1) I left the Option in there because I assume if it was already defined in core, it would give an error, and 2) that does give an error, but taking out that #[derive(Copy)] line gives the error I specified
2015-05-29 01:17:17	<--	flyfische (flyfische@moz-rvrfnn.sth3.ptd.net) has quit (Ping timeout: 121 seconds)
2015-05-29 01:17:22	Mutabah	aaronm04: yes, Copy requires Clone, so use derive(Copy,Clone)
2015-05-29 01:17:23	<--	ctennis (ctennis@moz-vcpg3c.in.comcast.net) has quit (Connection closed)
2015-05-29 01:17:32	Mutabah	aaronm04: Also, put 'use core::prelude::*'
2015-05-29 01:17:36	Mutabah	at the top of the file
2015-05-29 01:17:37	<--	lurk_ (chatzilla@moz-qm19cj.in.comcast.net) has quit (Connection closed)
2015-05-29 01:17:48	Mutabah	(that imports core's prelude, which contains the libcore defined parts of the std prelude
2015-05-29 01:18:04	-->	paupau (grrrr@moz-rc7fph.static.monkeybrains.net) has joined #rust
2015-05-29 01:18:15	_habnabit	so, does a panic leave a thread in an undefined state? i.e. if i'm writing a rust library and call into it from C, and use std::rt::unwind::try to protect panics from bubbling up into C frames, is it safe to call back into rust code again later?
2015-05-29 01:18:31	Mutabah	aaronm04: If derive gives you errors about wanting std::clone etc, then you'll want to make a dummy std module that contains re-exports of those names
2015-05-29 01:18:42	aaronm04	Mutabah: it compiles :D thanks; i'll try the use core::prelude::* now
2015-05-29 01:19:01	nogbit	This book (and the language) are very well done, I'm enjoying going through it http://doc.rust-lang.org/stable/book/
2015-05-29 01:19:02	<--	dyoung (dyoung@moz-gvp7mr.il.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-29 01:19:20	Mutabah	_habnabit: Umm... depends, panics poison mutexex etc, so that might cause problems
2015-05-29 01:19:28	<--	hroi (hroi@moz-d273ub.static.netgroup.dk) has quit (Ping timeout: 121 seconds)
2015-05-29 01:19:31	<--	dinfuehr (dinfuehr@moz-c25.u8s.112.91.IP) has quit (Connection closed)
2015-05-29 01:19:36	_habnabit	Mutabah, yeah, it's the 'etc.' i'm wondering about
2015-05-29 01:19:43	Mutabah	but I think it's safe to call back in (if you're a c-called rust library, and return errors when rust panics)
2015-05-29 01:20:03	Mutabah	_habnabit: mutexes and rwlocks are "poisoned" if the owner of the lock panics
2015-05-29 01:20:11	Mutabah	this causes subsequent lock attempts to fail
2015-05-29 01:20:24	aaronm04	Mutabah: here's what I ended up with (this compiles): http://sprunge.us/LOCC   Thanks for your help!
2015-05-29 01:20:30	_habnabit	Mutabah, i saw that, but it's the only thing in the stdlib i can remember seeing anything about panics affecting
2015-05-29 01:20:40	<--	mark_edward (mark@moz-dg4mrp.in.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-29 01:20:58	Mutabah	aaronm04: No prob, no_std is quirky still
2015-05-29 01:21:09	Mutabah	and rustboot wasn't the best way of doing it originally
2015-05-29 01:21:10	<--	nham (nham@moz-lglsfe.il.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-29 01:21:21	<--	kidnapped_robot (kidnapped_r@moz-en3d16.il.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-29 01:21:42	Mutabah	(Oh, now that you have libcore, you can use the Iterator trait and all other fun things, even the range syntax)
2015-05-29 01:21:56	aaronm04	Mutabah: my ultimate goal is to replace as many asm parts of BareMetal OS with Rust as possible, while also adding features
2015-05-29 01:22:00	<--	dalarmmst (dalarmmst@moz-mb21j4.bredband.comhem.se) has quit (Ping timeout: 121 seconds)
2015-05-29 01:22:15	<--	paupau (grrrr@moz-rc7fph.static.monkeybrains.net) has quit (Ping timeout: 121 seconds)
2015-05-29 01:22:31	_habnabit	also, just to be sure, Drop is the trait i want to implement if i allocated some memory via ffi and need to release it later
2015-05-29 01:23:11	Mutabah	_habnabit: Yes, drop gives you a destructor
2015-05-29 01:23:12	-->	nham (nham@moz-lglsfe.il.comcast.net) has joined #rust
2015-05-29 01:23:18	-->	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has joined #rust
2015-05-29 01:23:24	_habnabit	a'ight cool
2015-05-29 01:23:26	<--	stjahns (stjahns@moz-usjrqa.gv.shawcable.net) has quit (Connection closed)
2015-05-29 01:23:58	-->	brendan (brendaneich@moz-ooj7cv.ca.comcast.net) has joined #rust
2015-05-29 01:24:05	Mutabah	aaronm04: Give this a try: "for x in 0 .. 80*25 { ... }" in place of that match loop
2015-05-29 01:24:06	-->	lurk_ (chatzilla@moz-qm19cj.in.comcast.net) has joined #rust
2015-05-29 01:24:11	-->	bfrog (tburdick@moz-0khsrg.war.clearwire-wmx.net) has joined #rust
2015-05-29 01:24:19	Mutabah	(and bask in the freestanding glory of libcore)
2015-05-29 01:24:39	-->	kidnapped_robot (kidnapped_r@moz-en3d16.il.comcast.net) has joined #rust
2015-05-29 01:25:54	-->	ptstomp (paul@moz-rn5jn1.exetel.com.au) has joined #rust
2015-05-29 01:26:20	-->	saterus (saterus@moz-rutqj0.res.rr.com) has joined #rust
2015-05-29 01:27:04	-->	jensnockert (jensnockert@moz-0rd3rj.siw.siwnet.net) has joined #rust
2015-05-29 01:27:07	<--	Dylan16807 (dylan@moz-62uibl.cntmoh.sbcglobal.net) has quit (Quit: )
2015-05-29 01:28:58	Kurufu	so im not seeing it in the docs but how am i supposed to fill a sized slice with data from an unsized slice? Do I have to manually iterate across one is there no way to simply assign?
2015-05-29 01:29:16	<--	partkyle (partkyle@moz-smkka5.res.rr.com) has quit (Ping timeout: 121 seconds)
2015-05-29 01:29:32	Mutabah	Kurufu: There's a .clone_from method iirc
2015-05-29 01:29:50	Kurufu	alternately can i get a sized slice from slice::from_raw_parts? I mean i am providing it a size...
2015-05-29 01:29:55	Mutabah	Kurufu: http://doc.rust-lang.org/std/primitive.slice.html#method.clone_from_slice
2015-05-29 01:30:24	Mutabah	Kurufu: That is something that would be nice, but the lack of type-level intergers makes creating such a method challenging
2015-05-29 01:30:33	<--	brendan (brendaneich@moz-ooj7cv.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-29 01:30:42	Mutabah	(well, you could make your own, but it would be ugly)
2015-05-29 01:30:42	<--	jensnockert (jensnockert@moz-0rd3rj.siw.siwnet.net) has quit (Connection closed)
2015-05-29 01:30:43	-->	skade (skade@moz-eetliv.pools.vodafone-ip.de) has joined #rust
2015-05-29 01:30:44	--	irc: disconnected from server
2015-05-29 11:55:42	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-29 11:55:42	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-29 11:55:42	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-29 11:55:42	--	Channel #rust: 1030 nicks (13 ops, 0 halfops, 1 voice, 1016 normals)
2015-05-29 11:55:44	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-29 11:56:42	--	irc: disconnected from server
2015-05-29 11:56:54	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-29 11:56:54	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-29 11:56:54	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-29 11:56:54	--	Channel #rust: 1028 nicks (13 ops, 0 halfops, 1 voice, 1014 normals)
2015-05-29 11:56:56	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-29 11:56:57	@steveklabnik	it panics
2015-05-29 11:57:00	Douman	it will panic
2015-05-29 11:57:02	cholcombe	oh haha
2015-05-29 11:57:06	cholcombe	alright i'll keep that in mind
2015-05-29 11:57:13	Douman	unwrap_or if unsure
2015-05-29 11:57:15	cholcombe	that might not always be what i want
2015-05-29 11:57:28	@steveklabnik	cholcombe: 
2015-05-29 11:57:30	@steveklabnik	https://github.com/rust-lang/rust/blob/master/src/libcore/option.rs#L359-L364
2015-05-29 11:57:33	-->	charset (Mibbit@moz-tj9lu7.pools.vodafone-ip.de) has joined #rust
2015-05-29 11:57:41	anoobis	WindowsBunny also it's worth noting that, before I installed windows 10, rust took ~3min to uninstall when i upgraded
2015-05-29 11:58:00	<--	dstrbad (dstrbad@moz-vfo5vo.cable.xnet.hr) has quit (A TLS packet with unexpected length was received.)
2015-05-29 11:58:15	WindowsBunny	anoobis: yeah, I have no idea
2015-05-29 11:58:54	--	irc: disconnected from server
2015-05-29 11:59:06	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-29 11:59:06	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-29 11:59:06	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-29 11:59:06	--	Channel #rust: 1030 nicks (13 ops, 0 halfops, 1 voice, 1016 normals)
2015-05-29 11:59:07	anoobis	Douman: oh no? why won't it work?
2015-05-29 11:59:08	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-29 11:59:10	--	darkowlzz is now known as darkowlzz|afk
2015-05-29 11:59:16	charset	how do I link against DbgHelp.dll? cargo always tells me "note: ld: cannot find -ldbghelp"
2015-05-29 11:59:19	Douman	error: linking with `gcc` failed: exit code: 1
2015-05-29 11:59:25	-->	fabianvf (fabianvf@moz-fjqmui.va.comcast.net) has joined #rust
2015-05-29 11:59:36	-->	Kynes (Kynes@moz-j2us35.mit.edu) has joined #rust
2015-05-29 11:59:42	cholcombe	steveklabnik: thanks
2015-05-29 11:59:51	<--	[o__o] ([o__o]@moz-4s2t5k.compute-1.amazonaws.com) has quit (A TLS packet with unexpected length was received.)
2015-05-29 12:00:43	anoobis	Douman: why does it use gcc for linking? i have VS2013 installed, couldn't it link with link.exe?
2015-05-29 12:00:54	Douman	well... i have no c++ compiler at all... :)
2015-05-29 12:01:04	Douman	but by default it looks for mingw i think
2015-05-29 12:01:10	WindowsBunny	anoobis: no
2015-05-29 12:01:13	Douman	if it needs compiler
2015-05-29 12:01:24	Douman	i think
2015-05-29 12:01:28	WindowsBunny	anoobis: msvc is an entirely different target
2015-05-29 12:01:38	Douman	anyway without serious hacks you will not make it work
2015-05-29 12:01:43	geri	is abs still experimental?
2015-05-29 12:01:48	WindowsBunny	anoobis: and support for that is very work in progress
2015-05-29 12:02:03	-->	[o__o] ([o__o]@moz-4s2t5k.compute-1.amazonaws.com) has joined #rust
2015-05-29 12:02:09	anoobis	WindowsBunny: if i emitted an object file, could I link by hand?
2015-05-29 12:02:13	<--	hroi (hroi@moz-92kqno.ngdc.dk) has quit (Ping timeout: 121 seconds)
2015-05-29 12:02:18	anoobis	WindowsBunny: we just have Win32 deps right?
2015-05-29 12:02:32	anoobis	WindowsBunny: no msvcrt silliness?
2015-05-29 12:02:40	anoobis	hah I'm saying "we" already
2015-05-29 12:02:40	posix4e	Does anyone want to help edit my rust podcast
2015-05-29 12:02:42	WindowsBunny	anoobis: there is msvcrt silliness
2015-05-29 12:02:50	anoobis	WindowsBunny: :'(
2015-05-29 12:03:05	-->	daschl (Adium@moz-7plvne.public.telering.at) has joined #rust
2015-05-29 12:03:17	WindowsBunny	anoobis: If you want to use msvc, you have to build rust from source for the msvc target triple
2015-05-29 12:04:06	--	irc: disconnected from server
2015-05-29 12:04:18	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-29 12:04:18	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-29 12:04:18	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-29 12:04:18	--	Channel #rust: 1032 nicks (13 ops, 0 halfops, 1 voice, 1018 normals)
2015-05-29 12:04:19	@steveklabnik	geri: shouldn't be
2015-05-29 12:04:20	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-29 12:04:23	anoobis	but it would be awesome if I could install an mscv target triple into the "rustlib" folder
2015-05-29 12:04:39	-->	gandalf (zbraniecki@moz-cp7c4m.ca.comcast.net) has joined #rust
2015-05-29 12:04:39	anoobis	Douman: actually, why doesn't it use the 32-bit gcc?
2015-05-29 12:05:04	WindowsBunny	anoobis: At the moment its easier to just install full separate toolchains, and then adjust your PATH when you want to change targets
2015-05-29 12:05:15	geri	steveklabnik: which lib is it in?
2015-05-29 12:05:39	WindowsBunny	anoobis: If you do want to build rust from source for msvc, configure with these flags: --build=x86_64-pc-windows-gnu --host=x86_64-pc-windows-msvc,x86_64-pc-windows-gnu --target=x86_64-pc-windows-msvc
2015-05-29 12:06:05	@steveklabnik	geri: it's an inherent method on each type
2015-05-29 12:06:14	@steveklabnik	http://doc.rust-lang.org/stable/std/?search=abs
2015-05-29 12:06:22	<--	grant (grant@moz-jfh.0nq.187.64.IP) has quit (Client exited)
2015-05-29 12:06:30	-->	Rym (y@moz-h2o.mso.205.31.IP) has joined #rust
2015-05-29 12:07:06	<--	Ms2ger (Ms2ger@moz-15i.9ho.190.193.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 12:07:25	-->	demilux (demilux@moz-fk1.kt4.14.64.IP) has joined #rust
2015-05-29 12:07:48	-->	demilux_ (demilux@moz-fk1.kt4.14.64.IP) has joined #rust
2015-05-29 12:07:48	<--	demilux (demilux@moz-fk1.kt4.14.64.IP) has quit (Connection closed)
2015-05-29 12:07:55	anoobis	WindowsBunny: makes sense.
2015-05-29 12:08:47	<--	Guest58 (textual@moz-tb1fm9.us.xo.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-29 12:09:04	-->	eerie (eerie@moz-ja0t6l.red.bezeqint.net) has joined #rust
2015-05-29 12:09:35	<--	kimwonyong (kimwonyong@moz-gfp.vhi.163.221.IP) has quit (Connection closed)
2015-05-29 12:09:37	<--	Ralith (ralith@moz-tiaj7p.customer.broadstripe.net) has quit (Ping timeout: 121 seconds)
2015-05-29 12:09:42	<--	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-29 12:09:45	-->	kimwonyong (kimwonyong@moz-gfp.vhi.163.221.IP) has joined #rust
2015-05-29 12:09:46	-->	Guest58 (textual@moz-tb1fm9.us.xo.net) has joined #rust
2015-05-29 12:09:55	-->	crisco_ (crisco@moz-f5a.efk.198.67.IP) has joined #rust
2015-05-29 12:10:39	<--	skade (skade@moz-0djl38.boh1-r2.syseleven.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-29 12:10:40	WindowsBunny	anoobis: at the moment the msvc target is missing exception handling so if your code panics, it'll just abort
2015-05-29 12:10:41	<--	thiblahute (tsaunier@moz-68f5rr.rev.sfr.net) has quit (Ping timeout: 121 seconds)
2015-05-29 12:10:51	-->	Guest35953 (Jorge@moz-7bh.ng6.177.186.IP) has joined #rust
2015-05-29 12:11:01	<--	Rym (y@moz-h2o.mso.205.31.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 12:11:03	-->	dfockler (dfockler@moz-etoj16.hfc.comcastbusiness.net) has joined #rust
2015-05-29 12:11:26	<--	nodweber (nodweber@moz-knt.fgq.178.5.IP) has quit (Connection closed)
2015-05-29 12:12:18	--	irc: disconnected from server
2015-05-29 12:12:30	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-29 12:12:30	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-29 12:12:30	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-29 12:12:31	--	Channel #rust: 1032 nicks (13 ops, 0 halfops, 1 voice, 1018 normals)
2015-05-29 12:12:32	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-29 12:12:41	anoobis	WindowsBunny like panicking from another thread?
2015-05-29 12:12:53	<--	crisco (crisco@moz-7fq.k98.111.114.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 12:13:11	<--	daschl (Adium@moz-7plvne.public.telering.at) has quit (Ping timeout: 121 seconds)
2015-05-29 12:13:12	<--	iu (iu@moz-6263qv.cc.cmu.edu) has quit (Connection closed)
2015-05-29 12:13:19	<--	Gabriel_7 (Gabriel@moz-nmerfh.mtgr.92aj.0e35.2a01.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 12:13:19	<--	eerie (eerie@moz-ja0t6l.red.bezeqint.net) has quit (Ping timeout: 121 seconds)
2015-05-29 12:13:25	WindowsBunny	as in, the entire process will abort
2015-05-29 12:13:43	<--	summerlight_ (summerlight@moz-99k.2mj.130.121.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 12:13:52	Douman	crash :)
2015-05-29 12:14:30	--	irc: disconnected from server
2015-05-29 12:14:42	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-29 12:14:42	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-29 12:14:42	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-29 12:14:42	--	Channel #rust: 1026 nicks (13 ops, 0 halfops, 1 voice, 1012 normals)
2015-05-29 12:14:43	anoobis	lol
2015-05-29 12:14:44	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-29 12:14:45	Douman	i remember i made to crash rust programm, but not dont remember how
2015-05-29 12:14:56	-->	daschl (Adium@moz-1i4q42.public.t-mobile.at) has joined #rust
2015-05-29 12:15:19	anoobis	WindowsBunny: it seems like a bug that rustc uses the x86_64 gcc for the i686 target, though
2015-05-29 12:15:31	<--	pyon (pyon@moz-b0l.mdl.7.179.IP) has quit (Quit: I have irrefutable proof that D < 0. It follows trivially from 2D > 3D, which is obviously true.)
2015-05-29 12:15:37	-->	Guest22 (textual@moz-rfh.k0b.235.201.IP) has joined #rust
2015-05-29 12:15:41	<--	DerisiveLogic (smuxi@moz-g93io6.res.rr.com) has quit (Ping timeout: 121 seconds)
2015-05-29 12:16:16	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-29 12:16:23	<--	ismaelga (ismaelga@moz-0r94oo.cpe.netcabo.pt) has quit (Connection closed)
2015-05-29 12:16:27	anoobis	Douman: so calling i686 gcc manually works!
2015-05-29 12:16:31	-->	nham (nham@moz-lglsfe.il.comcast.net) has joined #rust
2015-05-29 12:16:41	<--	eric_lagergren (barsonme@moz-lr1hrn.wa.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-29 12:16:46	Douman	good for you :) i don't have it on my pc :)
2015-05-29 12:16:48	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-29 12:17:01	anoobis	rustc prints the gcc invocation it tried, and i just copied that into the terminal and changed the "gcc" to the full path of i686's gcc
2015-05-29 12:17:07	-->	M6dEEp (M6dEEp@moz-v2q.jdh.210.66.IP) has joined #rust
2015-05-29 12:17:22	anoobis	can someone open a bug for this?
2015-05-29 12:17:31	-->	lutter1 (lutter@moz-7v7ueu.PUBLIC.monkeybrains.net) has joined #rust
2015-05-29 12:17:39	-->	mbudde (mbudde@moz-vmd8oc.customer.tdc.net) has joined #rust
2015-05-29 12:17:41	anoobis	because unzipping i686 would be flawless otherwise
2015-05-29 12:17:50	<--	Wilduck (erik@moz-q7f.8fo.42.70.IP) has quit (Client exited)
2015-05-29 12:18:09	<--	maraoz (maraoz@moz-k72c1e.fibertel.com.ar) has quit (Ping timeout: 121 seconds)
2015-05-29 12:18:24	-->	Wilduck (erik@moz-q7f.8fo.42.70.IP) has joined #rust
2015-05-29 12:19:04	Douman	is your gcc in PATH?
2015-05-29 12:19:53	-->	summerlight_ (summerlight@moz-99k.2mj.130.121.IP) has joined #rust
2015-05-29 12:20:06	anoobis	Douman: no, but the 64-bit gcc isn't it my path either
2015-05-29 12:20:37	--	darkowlzz|afk is now known as darkowlzz
2015-05-29 12:20:47	<--	Wilduck (erik@moz-q7f.8fo.42.70.IP) has quit (Client exited)
2015-05-29 12:21:03	-->	Rym (y@moz-h2o.mso.205.31.IP) has joined #rust
2015-05-29 12:21:04	anoobis	Douman: shouldn't it just use the global path? like DirOfRustc/rustlib/i686-pc-windows-gnu/bin/gcc.exe
2015-05-29 12:21:19	rovar	is there a way to constrain the lifetime of a Boxed Closure?
2015-05-29 12:21:50	<--	south_fish (south_fish@moz-v21.spo.147.217.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 12:22:30	Douman	rust should be in path with correct gcc
2015-05-29 12:22:36	Douman	i think...
2015-05-29 12:22:37	-->	Gabriel_7 (Gabriel@moz-nmerfh.mtgr.92aj.0e35.2a01.IP) has joined #rust
2015-05-29 12:23:08	anoobis	Douman: i'm not sure about that
2015-05-29 12:23:15	RC9	how do i compile a cargo project with the equivalent of calling rustc -g
2015-05-29 12:23:22	anoobis	Douman: rust/bin/ only has two exes, rustc and rustdoc
2015-05-29 12:23:27	@steveklabnik	RC9: happens automatically on cargo build
2015-05-29 12:23:36	@steveklabnik	RC9: cargo build --release adds -O3 and removes -g
2015-05-29 12:23:51	RC9	oh ok so debug build has -g?
2015-05-29 12:23:54	@steveklabnik	yup
2015-05-29 12:23:56	<--	_ixti_ (ixti@moz-i3d.dae.119.188.IP) has quit (Quit: WeeChat 1.1.1)
2015-05-29 12:23:58	Douman	anoobis: im not sure too so ask someone smart'
2015-05-29 12:24:00	@steveklabnik	cargo build --verbose will show you the rustc commands
2015-05-29 12:24:01	anoobis	Douman: rust/bin/rustlib/x86_64-etc/bin/ has 5 MinGW-looking binaries
2015-05-29 12:24:01	-->	ixti (ixti@moz-i3d.dae.119.188.IP) has joined #rust
2015-05-29 12:24:03	@steveklabnik	if you want to verify
2015-05-29 12:24:06	<--	jnvsor (j@moz-1o1jrn.dynamic.ziggo.nl) has quit (Quit: Lost terminal)
2015-05-29 12:24:11	<--	summerlight_ (summerlight@moz-99k.2mj.130.121.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 12:24:12	anoobis	lol
2015-05-29 12:24:43	XMPPwocky	WindowsBunny: you can doo that?
2015-05-29 12:24:44	XMPPwocky	ooh
2015-05-29 12:24:55	cholcombe	i'm not sure what the compiler means when it says chained comparison operators require parentheses 
2015-05-29 12:24:58	-->	Wilduck (erik@moz-q7f.8fo.42.70.IP) has joined #rust
2015-05-29 12:25:44	--	irc: disconnected from server
2015-05-29 12:25:56	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-29 12:25:56	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-29 12:25:56	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-29 12:25:56	--	Channel #rust: 1026 nicks (13 ops, 0 halfops, 1 voice, 1012 normals)
2015-05-29 12:25:58	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-29 12:26:07	tilpner	cholcombe - It's a parsing uglyness, needed to allow for context-free parsing. Or something like that...
2015-05-29 12:26:27	cholcombe	ok :)
2015-05-29 12:26:31	-->	ismaelga (ismaelga@moz-0r94oo.cpe.netcabo.pt) has joined #rust
2015-05-29 12:26:32	tilpner	cholcombe - Otherwise, one would need to know if "get" is a function or a binding, to know what < does.
2015-05-29 12:26:42	cholcombe	yeah that's true
2015-05-29 12:26:44	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-29 12:26:47	-->	det (chris@moz-6q2one.lv.cox.net) has joined #rust
2015-05-29 12:27:13	WindowsBunny	XMPPwocky: wat?
2015-05-29 12:27:16	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-29 12:27:16	Gankro	frankmcsherry: I definitely accept anonymous wire transfers. I accept usd and cad.
2015-05-29 12:27:20	XMPPwocky	WindowsBunny: nvm was lagging
2015-05-29 12:27:25	rovar	I guess if I put this another way.  I have an API which takes a Box<FnMut> I want that fnmut to be able to close over local variables. How can I declare that the scope of the Box<FnMut> shouldn't outlive the current calling scope?
2015-05-29 12:27:25	-->	kngl (Adium@moz-m3a3bq.ipv4.evonet.be) has joined #rust
2015-05-29 12:27:52	bluss	rovar: give it a lifetime, Box<FnMut(...) -> R + 'a>
2015-05-29 12:27:54	<--	flyfische (flyfische@moz-rvrfnn.sth3.ptd.net) has quit (Quit: WeeChat 1.1.1)
2015-05-29 12:27:55	-->	flyfische (flyfische@moz-rvrfnn.sth3.ptd.net) has joined #rust
2015-05-29 12:28:11	rovar	in the type declaration?
2015-05-29 12:28:31	cholcombe	tilpner: looks like BTreeMap doesn't like my hint to go to Vec<PathBuf> i think it can only handle Vec<String>
2015-05-29 12:28:51	tilpner	Uhh.
2015-05-29 12:29:06	<--	Funkill[wrk] (Funkill@moz-pmt.89o.175.79.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 12:29:23	-->	jviereck (Adium@moz-pqri8u.dclient.hispeed.ch) has joined #rust
2015-05-29 12:29:56	cholcombe	get seems to return static str even though i asked for it for a vector
2015-05-29 12:29:59	<--	kaeluka (kaeluka@moz-tn3lqd.cust.bredbandsbolaget.se) has quit (Client exited)
2015-05-29 12:30:04	-->	phore (phore@moz-p8hanb.cable.rogers.com) has joined #rust
2015-05-29 12:30:05	tilpner	cholcombe - The type parameter for get is the type of the key, not the return type, if that's what you mean.
2015-05-29 12:30:12	cholcombe	oh..
2015-05-29 12:30:12	-->	Fiveside (fiveside@moz-t2eatg.vsp.com) has joined #rust
2015-05-29 12:30:14	cholcombe	haha
2015-05-29 12:30:19	<--	frankmcsherry (frankmcsher@moz-i3sjud.dynamic.kabel-deutschland.de) has quit (Connection closed)
2015-05-29 12:30:25	cholcombe	ok i completely misunderstood that
2015-05-29 12:30:32	<--	gthank (gthank@moz-5sim0m.ga.charter.com) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-29 12:31:23	-->	slomo (slomo@moz-p8m0g2.net) has joined #rust
2015-05-29 12:31:56	--	irc: disconnected from server
2015-05-29 12:32:08	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-29 12:32:08	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-29 12:32:08	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-29 12:32:08	--	Channel #rust: 1026 nicks (13 ops, 0 halfops, 1 voice, 1012 normals)
2015-05-29 12:32:10	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-29 12:32:28	<--	M6dEEp (M6dEEp@moz-v2q.jdh.210.66.IP) has quit (Connection closed)
2015-05-29 12:32:49	-->	M6dEEp (M6dEEp@moz-v2q.jdh.210.66.IP) has joined #rust
2015-05-29 12:32:57	bur_sangjun	You index with type usize, is usize also the type of the length of vectors?
2015-05-29 12:33:02	anoobis	WindowsBunny: is there a way to build without a libgcc_s_dw2-1.dll dependency? actually i don't want any dll dependencies
2015-05-29 12:33:02	<--	Kynes (Kynes@moz-j2us35.mit.edu) has quit (Quit: Leaving)
2015-05-29 12:33:09	@steveklabnik	bur_sangjun: yes
2015-05-29 12:33:31	bluss	rovar: yes
2015-05-29 12:33:55	anoobis	WindowsBunny: when I compile "fn main() { }" and run the exe, I get "The program can't start because libgcc_s_dw2-1.dll" is missing from you computer."
2015-05-29 12:34:02	bluss	rovar: the default for Box<Trait> is Box<Trait + 'static> which is too restrictive
2015-05-29 12:34:19	WindowsBunny	anoobis: We rely on libgcc for unwinding in the mingw version
2015-05-29 12:34:25	<--	vmx (vmx@moz-3rq9n0.dip0.t-ipconnect.de) has quit (Quit: Leaving)
2015-05-29 12:34:26	<--	eternaleye (eternaleye@moz-7ps.ehi.245.50.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 12:34:28	WindowsBunny	anoobis: In 64-bit it is statically linked
2015-05-29 12:34:38	WindowsBunny	in 32-bit it is dynamically linked due to license blah
2015-05-29 12:34:48	anoobis	WindowsBunny: wat
2015-05-29 12:35:01	<--	aepsil0n (eduard@moz-6491ha.mv2h.pepi.8071.2a02.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 12:35:06	<--	ogeon (ogeon@moz-sptr4e.se.alltele.net) has quit (Ping timeout: 121 seconds)
2015-05-29 12:35:30	WindowsBunny	in order to have panic! work correctly, it needs to unwind, and we use libgcc for that
2015-05-29 12:35:40	-->	Rym (y@moz-h2o.mso.205.31.IP) has joined #rust
2015-05-29 12:35:43	-->	Cindela (cindela@moz-dlkpia.bb.dnainternet.fi) has joined #rust
2015-05-29 12:35:45	WindowsBunny	and due to licensing issues, libgcc has to be dynamically linked for 32-bit
2015-05-29 12:35:47	-->	aepsil0n (eduard@moz-6491ha.mv2h.pepi.8071.2a02.IP) has joined #rust
2015-05-29 12:35:50	anoobis	wat@dynamically linked due to license blah
2015-05-29 12:35:58	<--	timonv (timonv@moz-7btgcn.dynamic.ziggo.nl) has quit (Ping timeout: 121 seconds)
2015-05-29 12:36:06	anoobis	tie my hands, why don't you
2015-05-29 12:36:16	WindowsBunny	Hence why I recommend 64-bit
2015-05-29 12:36:21	WindowsBunny	since it doesn't have that issue :P
2015-05-29 12:36:39	anoobis	right, but we have loads of 32-bit clients :P
2015-05-29 12:36:47	anoobis	most of them, i think
2015-05-29 12:36:48	WindowsBunny	anoobis: We're working on getting msvc unwinding working which won't depend on libgcc
2015-05-29 12:37:04	rovar	bluss, when I declare the type with  Box<ConnHandler + 'a> rustc says expected reference to a trait
2015-05-29 12:37:12	WindowsBunny	It depends on llvm support though, which was only added very recently
2015-05-29 12:37:20	rovar	ConnHandler is just a type = FnMut() -> T
2015-05-29 12:37:21	RC9	i suppose i should ask
2015-05-29 12:37:24	-->	infinigon (x@moz-d2l494.cam.ac.uk) has joined #rust
2015-05-29 12:37:31	<--	phore (phore@moz-p8hanb.cable.rogers.com) has quit (Quit: if you're seeing this, i ran out of coffee. send help.)
2015-05-29 12:37:35	RC9	how can i run a rust program to debug it
2015-05-29 12:37:39	RC9	with gdb or lldb
2015-05-29 12:37:48	RC9	i found a stackoverflow on it but that's >year out of date
2015-05-29 12:37:54	anoobis	WindowsBunny: awesome! the msvc target won't require an msvcrtXYZ.dll right?
2015-05-29 12:38:03	@steveklabnik	RC9: we have a rust-lldb and rust-gdb script that are distributed with rust that adds pretty printing
2015-05-29 12:38:10	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-29 12:38:22	rovar	pub type ConnHandler = FnMut(ConnResult) -> Option<Box<Context>> to be specific
2015-05-29 12:38:24	WindowsBunny	anoobis: it will
2015-05-29 12:38:27	RC9	i found that too but my command line tells me it can't find em
2015-05-29 12:38:30	WindowsBunny	anoobis: unless you statically link it
2015-05-29 12:38:30	-->	alaska (alaska@moz-8bdjem.fios.verizon.net) has joined #rust
2015-05-29 12:38:38	-->	kgrandon (Adium@moz-4qc9b1.hfc.comcastbusiness.net) has joined #rust
2015-05-29 12:38:39	--	bentley is now known as bentley|away
2015-05-29 12:38:41	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-29 12:38:49	-->	eternaleye (eternaleye@moz-7ps.ehi.245.50.IP) has joined #rust
2015-05-29 12:38:50	WindowsBunny	anoobis: which I'll make sure is an easy option
2015-05-29 12:39:35	--	irc: disconnected from server
2015-05-29 12:39:47	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-29 12:39:47	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-29 12:39:47	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-29 12:39:47	--	Channel #rust: 1025 nicks (13 ops, 0 halfops, 1 voice, 1011 normals)
2015-05-29 12:39:49	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-29 12:39:52	-->	jedireza (jedireza@moz-ungcc1.dsl.ovh.fr) has joined #rust
2015-05-29 12:40:11	<--	Rym (y@moz-h2o.mso.205.31.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 12:40:47	--	irc: disconnected from server
2015-05-29 12:41:19	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-29 12:41:19	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-29 12:41:19	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-29 12:41:19	--	Channel #rust: 1024 nicks (13 ops, 0 halfops, 1 voice, 1010 normals)
2015-05-29 12:41:21	-->	Gyro (gyro@moz-38c.96l.252.66.IP) has joined #rust
2015-05-29 12:41:21	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-29 12:41:35	anoobis	(even when that meant #defining away the half the C library...)
2015-05-29 12:41:56	WindowsBunny	anoobis: The entry point is in msvcrt
2015-05-29 12:43:19	--	irc: disconnected from server
2015-05-29 12:43:31	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-29 12:43:31	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-29 12:43:31	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-29 12:43:31	--	Channel #rust: 1024 nicks (13 ops, 0 halfops, 1 voice, 1010 normals)
2015-05-29 12:43:33	<--	tcard (tcard@moz-5eb1g3.staticIP.rima-tde.net) has quit (Client exited)
2015-05-29 12:43:33	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-29 12:43:38	anoobis	WindowsBunny: shoot, i always thought the entry was in something like crt0.o
2015-05-29 12:44:03	anoobis	WindowsBunny: too bad we can't just write our own shims. i'm even noticing a liblibc-blah.rlib
2015-05-29 12:44:24	<--	zcourts (zcourts@moz-7ms809.cable.virginm.net) has quit (Client exited)
2015-05-29 12:44:25	WindowsBunny	liblibc is just bindings
2015-05-29 12:44:28	<--	Havvy (Havvy@moz-2v0ao2.5euu.k9bm.0007.2601.IP) has quit (Connection closed)
2015-05-29 12:44:41	<--	v21 (vee@moz-3ug.hk0.230.49.IP) has quit (Quit: Leaving)
2015-05-29 12:44:46	WindowsBunny	not all of it is libc
2015-05-29 12:44:50	WindowsBunny	some of it is win32 stuff
2015-05-29 12:44:53	RC9	steveklabnik, i can't find any in my windows install from nightly
2015-05-29 12:44:54	WindowsBunny	its a mess
2015-05-29 12:44:59	RC9	unless the scripts are really new
2015-05-29 12:45:02	RC9	my nightly is a bit old
2015-05-29 12:45:13	RC9	(rust-gdb or rust-lldb)
2015-05-29 12:45:24	Douman	it is sad that there is no way to make a pure rust without using some old c trash
2015-05-29 12:45:29	-->	DerisiveLogic (smuxi@moz-1jqqlg.biz.rr.com) has joined #rust
2015-05-29 12:46:27	anoobis	lol msvcrt always is
2015-05-29 12:46:44	-->	jvance (jvance@moz-mi6.72d.252.50.IP) has joined #rust
2015-05-29 12:46:48	anoobis	could some of the bindings be rewritten to call Win32 stuff?
2015-05-29 12:46:50	--	nsm|away is now known as nsm
2015-05-29 12:46:54	<--	Porkepix (Porkepix@moz-q59.m4a.208.91.IP) has quit (Quit: My laptop has gone to sleep. ZZZzzz…)
2015-05-29 12:47:15	@steveklabnik	RC9: hmmmm, i wonder if maybe the windows installer doesn't install it or something
2015-05-29 12:47:30	<--	laumann (thomas@moz-gqpfnm.science.ku.dk) has quit (Ping timeout: 121 seconds)
2015-05-29 12:47:34	anoobis	WindowsBunny: since they're just for Rust, they wouldn't need C symbol names, so you could still link msvcrtXYZ.dll if you were also linking C stuff
2015-05-29 12:47:41	@steveklabnik	they're at least 5 months old: https://github.com/rust-lang/rust/tree/master/src/etc <- 
2015-05-29 12:48:09	-->	wolfviking0 (wolfviking0@moz-8hd.3b6.246.162.IP) has joined #rust
2015-05-29 12:48:17	<--	bfrog (tburdick@moz-hde.5e5.136.67.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 12:48:31	WindowsBunny	anoobis: The goal is to eventually provide more options with regards to linking or not linking the CRT
2015-05-29 12:49:08	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-29 12:49:12	-->	ismaelga_ (ismaelga@moz-0r94oo.cpe.netcabo.pt) has joined #rust
2015-05-29 12:49:19	<--	gonzaloserrano (Adium@moz-1nv.3t7.97.62.IP) has quit (Quit: Leaving.)
2015-05-29 12:49:21	<--	jvance (jvance@moz-mi6.72d.252.50.IP) has quit (Quit: So long, and thanks for all the fish ¯\_(ツ)_/¯)
2015-05-29 12:49:32	-->	laumann (thomas@moz-1f0.hq0.225.130.IP) has joined #rust
2015-05-29 12:49:39	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-29 12:49:56	anoobis	WindowsBunny: as in, if you're not linking to any C dlls, to use an entrypoint that isn't in msvcrt?
2015-05-29 12:50:12	-->	Rym (y@moz-h2o.mso.205.31.IP) has joined #rust
2015-05-29 12:50:42	<--	ismaelga (ismaelga@moz-0r94oo.cpe.netcabo.pt) has quit (Ping timeout: 121 seconds)
2015-05-29 12:51:16	anoobis	but to address more immediate needs, is there a way to compile *without* any unwinding?
2015-05-29 12:51:16	-->	ogeon (ogeon@moz-no4od9.mobileonline.telia.com) has joined #rust
2015-05-29 12:51:44	<--	pancake (pancake@moz-30m5j6.dynamicIP.rima-tde.net) has quit (Quit: Lost terminal)
2015-05-29 12:51:48	WindowsBunny	anoobis: If you're linking to a C DLL you don't need the CRT in the Rust part
2015-05-29 12:52:02	WindowsBunny	Its if you're linking to C statically that you need the CRT
2015-05-29 12:52:03	<--	kimwonyong (kimwonyong@moz-gfp.vhi.163.221.IP) has quit (Connection closed)
2015-05-29 12:52:19	@steveklabnik	RC9: that's just pretty printing though, so using plain old gdb will _work_ for some definition of work ;)
2015-05-29 12:52:26	WindowsBunny	anoobis: the msvc version doesn't have unwinding :P
2015-05-29 12:52:44	-->	copycat (Thunderbird@moz-mm4e60.singnet.com.sg) has joined #rust
2015-05-29 12:53:04	<--	daschl (Adium@moz-1i4q42.public.t-mobile.at) has quit (Connection closed)
2015-05-29 12:53:36	anoobis	hah well that's convenient
2015-05-29 12:54:10	-->	zcourts (zcourts@moz-7ms809.cable.virginm.net) has joined #rust
2015-05-29 12:54:22	<--	charset (Mibbit@moz-tj9lu7.pools.vodafone-ip.de) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-29 12:54:31	<--	jedireza (jedireza@moz-ungcc1.dsl.ovh.fr) has quit (Quit: Textual IRC Client: www.textualapp.com)
2015-05-29 12:54:35	anoobis	brb
2015-05-29 12:54:38	-->	GGist (Mibbit@moz-kl9hvd.seattleu.edu) has joined #rust
2015-05-29 12:54:45	<--	Rym (y@moz-h2o.mso.205.31.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 12:54:49	cholcombe	if i have a function that returns a <&'a Vec<String>> how can I use that in a struct? 
2015-05-29 12:55:03	cholcombe	the compiler is asking for lifetime specifiers but i'm not sure what to do
2015-05-29 12:55:52	-->	Rym (y@moz-h2o.mso.205.31.IP) has joined #rust
2015-05-29 12:55:59	dkreuter	If I return a Option<u16> from a function, where does the data end up n x86_64?
2015-05-29 12:56:01	dkreuter	registers?
2015-05-29 12:56:17	dkreuter	or does the function get a pointer to where it should write the return value.
2015-05-29 12:56:17	<--	ramn (ramn@moz-90g.f30.25.185.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 12:56:27	dkreuter	*on
2015-05-29 12:56:41	<--	csherratt (textual@moz-357qdq.cable.teksavvy.com) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-29 12:56:47	@steveklabnik	cholcombe: why &Vec rather than just Vec?
2015-05-29 12:56:59	cholcombe	i'm using someone elses library that does that
2015-05-29 12:57:03	<--	silven (quassel@moz-0roor3.priv.bahnhof.se) has quit (Ping timeout: 121 seconds)
2015-05-29 12:57:04	cholcombe	http://serde-rs.github.io/serde/serde/json/value/enum.Value.html
2015-05-29 12:57:05	@steveklabnik	weird
2015-05-29 12:57:20	cholcombe	yeah if you look at as_array 
2015-05-29 12:57:23	-->	silven (quassel@moz-0roor3.priv.bahnhof.se) has joined #rust
2015-05-29 12:57:24	<--	partkyle (partkyle@moz-e8m.r65.206.12.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 12:57:25	@steveklabnik	ahhh
2015-05-29 12:57:30	cholcombe	Option<&'a Vec<Value>>
2015-05-29 12:57:34	@steveklabnik	that's still a bit strange imho
2015-05-29 12:57:35	cholcombe	i'm not sure what to do with that :)
2015-05-29 12:57:48	cholcombe	yeah it should be returning <Vec<Value>> right?
2015-05-29 12:57:50	@steveklabnik	so, you'd use it like any other reference in a struct
2015-05-29 12:57:50	cholcombe	without the pointer
2015-05-29 12:57:54	@steveklabnik	well
2015-05-29 12:57:55	cholcombe	yeah
2015-05-29 12:57:57	@steveklabnik	it could be a &Vec
2015-05-29 12:58:01	@steveklabnik	err
2015-05-29 12:58:02	@steveklabnik	a Vec
2015-05-29 12:58:07	@steveklabnik	but it could also just be a &[T]
2015-05-29 12:58:13	@steveklabnik	anyway
2015-05-29 12:58:24	-->	jnicklas (jonasnickla@moz-0ou5lc.bredband.comhem.se) has joined #rust
2015-05-29 12:58:26	@steveklabnik	playbot: struct Foo<'a> { x: &'a Vec<i32> }
2015-05-29 12:58:27	--	Notice(playbot): ()
2015-05-29 12:58:49	@steveklabnik	http://doc.rust-lang.org/stable/book/lifetimes.html :-
2015-05-29 12:58:50	@steveklabnik	;)
2015-05-29 12:58:52	-->	modulus (chatzilla@moz-8mpjls.dynamic.mundo-r.com) has joined #rust
2015-05-29 12:59:03	<--	lov2cod (Adium@moz-of7l8d.eodv.k60l.0119.2620.IP) has quit (Quit: Leaving.)
2015-05-29 12:59:06	cholcombe	yeah i need to walk through that again
2015-05-29 12:59:12	cholcombe	i've read it a few times but i don't exactly get what it's modifying
2015-05-29 12:59:25	-->	kimwonyong (kimwonyong@moz-gfp.vhi.163.221.IP) has joined #rust
2015-05-29 12:59:36	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-29 12:59:56	modulus	Hi there. Another question. So I'm trying to have a function that writes messages to IRC with the irc crate. If I do something like:
2015-05-29 12:59:58	modulus	fn channel_send<T,U>(mut c: String, m: String, s: Arc<irc::client::server::IrcServer<T, U>>) {
2015-05-29 13:00:04	-->	daschl (Adium@moz-7plvne.public.telering.at) has joined #rust
2015-05-29 13:00:06	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-29 13:00:23	<--	Rym (y@moz-h2o.mso.205.31.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 13:00:37	modulus	Let's say the type checker really does not like this at all. Any shortcuts here? Typing the specific IrcWriter and IrcReader instead of T U also does not help, as the compiler says size not known at compile time.
2015-05-29 13:00:40	<--	tytouf (tytouf@moz-84u6a1.rev.sfr.net) has quit (Ping timeout: 121 seconds)
2015-05-29 13:00:41	@steveklabnik	every reference technically has a lifetime. just we let you elide them in function arguments sometimes
2015-05-29 13:00:45	@steveklabnik	struct defintions do not
2015-05-29 13:00:57	talchas	modulus: I haven't looked at the irc crate, but I'm guessing that the issue is that IrcServer is not threadsafe
2015-05-29 13:01:00	@steveklabnik	so, that definition says "vec is alive at least as long as the struct is alive"
2015-05-29 13:01:07	-->	loyd (loyd@moz-jsb.32f.108.213.IP) has joined #rust
2015-05-29 13:01:13	modulus	No, IrcServer is thread-safe.
2015-05-29 13:01:14	cholcombe	oh i see
2015-05-29 13:01:16	cholcombe	that makes sense
2015-05-29 13:01:34	modulus	I'm passing it with an Arc elsewhere and works fine.
2015-05-29 13:01:38	<--	fabianvf (fabianvf@moz-fjqmui.va.comcast.net) has quit (Connection closed)
2015-05-29 13:01:43	-->	Ms2ger (Ms2ger@moz-15i.9ho.190.193.IP) has joined #rust
2015-05-29 13:01:50	-->	kinson (Mibbit@moz-rj2.r6t.134.134.IP) has joined #rust
2015-05-29 13:01:53	-->	fabianvf (fabianvf@moz-fjqmui.va.comcast.net) has joined #rust
2015-05-29 13:01:54	-->	lov2cod (Adium@moz-40l.ob1.22.8.IP) has joined #rust
2015-05-29 13:02:06	-->	gopar (gopar@moz-5039uj.ca.comcast.net) has joined #rust
2015-05-29 13:02:08	bluss	rovar: hm, maybe rustc doesn't treat it as a trait if you use a type alias like that
2015-05-29 13:02:27	rovar	bluss, yea,  I added a lifetime param to the type and that worked.. 
2015-05-29 13:02:32	rovar	but now I have a new problem
2015-05-29 13:02:33	talchas	modulus: hmm, yeah, it does look like it
2015-05-29 13:02:45	-->	lenstr (lenstr@moz-lhu.vju.25.171.IP) has joined #rust
2015-05-29 13:02:46	talchas	what's the first couple errors you get?
2015-05-29 13:02:56	modulus	sec
2015-05-29 13:02:56	rovar	I've effectively tied the lifetimes of the boxed closures to the containing struct, but now I have a mutual lifetime conflict
2015-05-29 13:03:11	rovar	this is troubling:  https://github.com/rrichardson/reactor/blob/master/examples/echo.rs#L47
2015-05-29 13:03:22	kinson	Hello, I'm trying to implement a linked list in rust as practice, I'm not sure how to iterate over the list though, if someone could look at the print_list method in my implementation and give me some feedback, that'd be awesome. https://gist.github.com/kinson/244fbef0ad28f23ef7b3
2015-05-29 13:03:24	rovar	if I declare r before server/client, then server/client don't live long enough
2015-05-29 13:03:31	modulus	error: the trait `std::io::BufRead` is not implemented for the type `T` [E0277]
2015-05-29 13:03:32	rovar	if I declare it after, then r doesn't live long enough
2015-05-29 13:03:35	<--	flyfische (flyfische@moz-rvrfnn.sth3.ptd.net) has quit (Quit: WeeChat 1.1.1)
2015-05-29 13:03:47	rovar	r should depend on client/server,  but client/server shouldn't depend on r
2015-05-29 13:03:54	mib_irkcqy	are there any tutorials you guys would recommend me for starting with rust? 
2015-05-29 13:03:58	talchas	modulus: ah, right
2015-05-29 13:04:10	modulus	and error: the trait `core::marker::Send` is not implemented for the type `T`[E0277]
2015-05-29 13:04:17	@steveklabnik	mib_irkcqy: the book and rust by example are the two official ones. they're the most complete and most up to date
2015-05-29 13:04:18	<--	Wilduck (erik@moz-q7f.8fo.42.70.IP) has quit (Connection closed)
2015-05-29 13:04:24	talchas	modulus: IrcServer requires T and U implement IrcRead and IrcWrite
2015-05-29 13:04:28	rovar	https://github.com/rrichardson/reactor/blob/master/src/reactor.rs#L80
2015-05-29 13:04:30	mib_irkcqy	thank you very much
2015-05-29 13:04:32	talchas	but your function allows arbitrary T and U
2015-05-29 13:04:34	bluss	rovar: probably shouldn't tie the lifetime to anything else. Where is the definition of the box?
2015-05-29 13:04:39	<--	Guest22 (textual@moz-rfh.k0b.235.201.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-29 13:04:54	modulus	ok, just a sec. i tried before with IrcWriter and IrcReader and still didn't work.
2015-05-29 13:04:56	talchas	and it will give you an error rather than infer the requirements silently (becasue function prototypes are required to be complete)
2015-05-29 13:05:26	-->	__mark__ (mark@moz-udut16.dynamic.chello.pl) has joined #rust
2015-05-29 13:05:45	rovar	bluss, https://github.com/rrichardson/reactor/blob/master/src/reactor_ctrl.rs#L31
2015-05-29 13:06:11	bluss	rovar: Isn't 'a too much?
2015-05-29 13:06:23	rovar	bluss, I tied it to the scope of the struct, since I didn't think I could get away with tying it to the scope of the function call..
2015-05-29 13:06:25	bluss	rovar: what happens if you use 'b instead
2015-05-29 13:06:30	-->	Guest38 (textual@moz-4hh.6p3.217.74.IP) has joined #rust
2015-05-29 13:06:45	--	chmanchester|afk is now known as chmanchester
2015-05-29 13:06:49	-->	Guest23 (textual@moz-nd2iqs.fl.atlanticbb.net) has joined #rust
2015-05-29 13:07:15	<--	zcourts (zcourts@moz-7ms809.cable.virginm.net) has quit (Client exited)
2015-05-29 13:07:20	<--	deadc0de (chsitter@moz-lrh.035.31.94.IP) has quit (Quit: leaving)
2015-05-29 13:07:22	<--	FreeFull (freefull@moz-f65lp3.skybroadband.com) has quit (Quit: )
2015-05-29 13:07:42	rovar	hmm..
2015-05-29 13:08:02	cholcombe	steveklabnik: ok i had the compiler smack me a few more times and i think i get this lifetimes thing
2015-05-29 13:08:10	cholcombe	i'm not sure i can make this code work though
2015-05-29 13:08:23	modulus	So now I get: error: the trait `core::marker::Sized` is not implemented for the type `irc::client::data::kinds::IrcRead` [E0277]
2015-05-29 13:08:30	rovar	bluss, I get a bunch of other timeout conflicts, but perhaps I don't need them if I can just constrain the handler directly
2015-05-29 13:08:44	rovar	and not tie it to the lifetime of the Reactor/ReactorCtrl
2015-05-29 13:08:45	-->	eckhardt (eckhardt@moz-s9e.ov1.227.199.IP) has joined #rust
2015-05-29 13:09:05	-->	Ralith (ralith@moz-miv.lne.251.63.IP) has joined #rust
2015-05-29 13:09:19	rovar	I assumed the container of the reactor ctrl would have to be constrained by the same lifetime
2015-05-29 13:09:24	<--	copycat (Thunderbird@moz-mm4e60.singnet.com.sg) has quit (Client exited)
2015-05-29 13:09:27	rovar	err container of the Box<handler>
2015-05-29 13:09:53	@steveklabnik	cholcombe: if you don't mind paying the overhead of a copy, you can just copy it to get an owned value, and then you don't have to worry about dealing with the lifetime stuff
2015-05-29 13:10:06	cholcombe	yeah i was thinking that would be the answer
2015-05-29 13:10:17	cholcombe	the clone() function on the Vec is unstable though it looks like
2015-05-29 13:10:19	-->	eerie (eerie@moz-ja0t6l.red.bezeqint.net) has joined #rust
2015-05-29 13:10:25	-->	Rym (y@moz-h2o.mso.205.31.IP) has joined #rust
2015-05-29 13:10:32	Ms2ger	It isn't
2015-05-29 13:10:33	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-29 13:10:37	-->	Wilduck (erik@moz-q7f.8fo.42.70.IP) has joined #rust
2015-05-29 13:11:04	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-29 13:11:12	cholcombe	steveklabnik: here's my crazy code if that helps: https://play.rust-lang.org/?gist=e7b86b82124ed2583425&version=stable
2015-05-29 13:11:20	<--	arBmind (Andreas@moz-7to8dk.dyn.telefonica.de) has quit (Quit: Leaving.)
2015-05-29 13:11:32	cholcombe	i think the data variable doesn't live long enough
2015-05-29 13:11:40	cholcombe	i should just copy the vector.  it's not going to be large
2015-05-29 13:12:42	<--	Wilduck (erik@moz-q7f.8fo.42.70.IP) has quit (Connection closed)
2015-05-29 13:13:01	bluss	rovar: I think that's right. Just not what I thought from the beginning with capturing locals
2015-05-29 13:13:12	talchas	modulus: that sounds like somehow you're using IrcRead as a trait object somewhere, but it should be unrelated to the type signature of channel_send
2015-05-29 13:13:35	-->	kecolus (kecolus@moz-i7cb3r.fios.verizon.net) has joined #rust
2015-05-29 13:13:48	-->	ygrek (user@moz-8j9aeu.org.ua) has joined #rust
2015-05-29 13:13:53	modulus	well, because i had to declare fn channel_send(mut c: String, m: String, s: Arc<irc::client::server::IrcServer<irc::client::data::kinds::IrcRead, irc::client::data::kinds::IrcWrite>>)
2015-05-29 13:13:57	cholcombe	steveklabnik: got it :).  clone() works.  i don't know what i was reading that said it was unstable
2015-05-29 13:14:09	talchas	modulus: oh, no, don't do that
2015-05-29 13:14:18	modulus	what do I do instead?
2015-05-29 13:14:20	talchas	that's saying it takes the trait objects specifically
2015-05-29 13:14:23	<--	Guest38 (textual@moz-4hh.6p3.217.74.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-29 13:14:24	-->	Wilduck (erik@moz-q7f.8fo.42.70.IP) has joined #rust
2015-05-29 13:14:26	<--	eerie (eerie@moz-ja0t6l.red.bezeqint.net) has quit (Ping timeout: 121 seconds)
2015-05-29 13:14:37	talchas	you want to do fn<T: IrcRead, U: IrcWrite>(your old signature)
2015-05-29 13:14:38	<--	areski (areski@moz-5mpvkv.dynamicIP.rima-tde.net) has quit (Ping timeout: 121 seconds)
2015-05-29 13:14:58	<--	Rym (y@moz-h2o.mso.205.31.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 13:14:59	<--	Guest58 (textual@moz-tb1fm9.us.xo.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-29 13:15:11	modulus	Ahhh, I will try that one.
2015-05-29 13:15:41	-->	copycat (Thunderbird@moz-mm4e60.singnet.com.sg) has joined #rust
2015-05-29 13:15:56	<--	copycat (Thunderbird@moz-mm4e60.singnet.com.sg) has quit (Client exited)
2015-05-29 13:16:38	<--	espadrine (tyl@moz-qfr4fg.abo.wanadoo.fr) has quit (Ping timeout: 121 seconds)
2015-05-29 13:17:22	<--	jviereck (Adium@moz-pqri8u.dclient.hispeed.ch) has quit (Quit: Leaving.)
2015-05-29 13:17:25	pylbrecht	hi guys, i'm new to rust and having a hard time letting a function return two elements of a vector created inside the function.
2015-05-29 13:17:39	-->	Guest38 (textual@moz-4hh.6p3.217.74.IP) has joined #rust
2015-05-29 13:17:47	VShell	pylbrecht: what code have you got?
2015-05-29 13:18:00	pylbrecht	VShell: i'll paste, just a moment..
2015-05-29 13:18:33	<--	lenstr (lenstr@moz-lhu.vju.25.171.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-29 13:19:41	--	darkowlzz is now known as darkowlzz|afk
2015-05-29 13:19:53	modulus	talchas: - thanks, that worked! I was confused on how to declare generic functions I guess. Didn't know the traits worked like that.
2015-05-29 13:20:01	-->	hohoho (hohoho@moz-jlf4am.pools.vodafone-ip.de) has joined #rust
2015-05-29 13:20:07	pylbrecht	 use std::env;                                                                   
2015-05-29 13:20:07	pylbrecht	  2 use std::process;                                                               
2015-05-29 13:20:07	-->	rbranson (rbranson@moz-i7m.9o0.201.199.IP) has joined #rust
2015-05-29 13:20:10	pylbrecht	  3                                                                                 
2015-05-29 13:20:23	pylbrecht	grrr, c/p -.-
2015-05-29 13:20:34	-->	tytouf (tytouf@moz-84u6a1.rev.sfr.net) has joined #rust
2015-05-29 13:20:44	pylbrecht	http://pastebin.com/2EU3jD2A
2015-05-29 13:20:49	<--	Fiveside (fiveside@moz-t2eatg.vsp.com) has quit (Connection closed)
2015-05-29 13:20:49	pylbrecht	there u go VShell 
2015-05-29 13:20:53	-->	lenstr (lenstr@moz-lhu.vju.25.171.IP) has joined #rust
2015-05-29 13:20:55	talchas	modulus: yeah, using a trait as a type directly means making a trait object, which is virtual calls like in C++ and such
2015-05-29 13:21:30	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-29 13:21:32	pylbrecht	well one line is not correct: return (args[1], args[0])
2015-05-29 13:21:55	-->	phore (phore@moz-p8hanb.cable.rogers.com) has joined #rust
2015-05-29 13:22:00	talchas	and those need to be on the other side of a pointer, so IrcServer<Box<IrcRead>, Box<IrcWrite>> might work, but would be unusual
2015-05-29 13:22:02	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-29 13:22:03	-->	paupau (grrrr@moz-rc7fph.static.monkeybrains.net) has joined #rust
2015-05-29 13:22:52	GGist	pylbrecht: You have to remove the elements at those indices, indexing in to them gets you a &String not a String
2015-05-29 13:23:04	-->	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has joined #rust
2015-05-29 13:23:34	-->	fengshaun (fengshaun@moz-oagll1.cpe.pppoe.ca) has joined #rust
2015-05-29 13:24:18	<--	dkreuter (knizz@moz-fes.iga.129.213.IP) has quit (Quit: Ex-Chat)
2015-05-29 13:24:19	-->	desophos (desophos@moz-pfg3h5.98ku.27p0.6000.2606.IP) has joined #rust
2015-05-29 13:24:21	pylbrecht	GGist: ok. would it be possible as well to change the return type to (&String, &String)?
2015-05-29 13:24:33	modulus	Hmm so what are trait objects for, deciding what function to dispatch or such?
2015-05-29 13:25:02	-->	Rym (y@moz-h2o.mso.205.31.IP) has joined #rust
2015-05-29 13:25:02	<--	Wilduck (erik@moz-q7f.8fo.42.70.IP) has quit (Client exited)
2015-05-29 13:25:07	VShell	pylbrecht: it wouldn't, because the references don't live long enough.
2015-05-29 13:25:09	-->	James (quassel@moz-q6malq.range86-148.btcentralplus.com) has joined #rust
2015-05-29 13:25:13	GGist	pylbrecht: Not currently since those references would only be valid for the lifetime of args which is destroyed when the function returns.
2015-05-29 13:25:25	@steveklabnik	modulus: virtual dispatch as opposed to static
2015-05-29 13:25:48	@steveklabnik	modulus: http://doc.rust-lang.org/stable/book/trait-objects.html
2015-05-29 13:25:50	<--	Guest23 (textual@moz-nd2iqs.fl.atlanticbb.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2015-05-29 13:25:53	pylbrecht	alright, thanks VShell, GGist!
2015-05-29 13:26:10	rovar	bluss,  I undid and re-did the lifetimes.  I still can't get  server/client to be not mutually exclusive with r
2015-05-29 13:26:27	modulus	steveklabnik: - thanks
2015-05-29 13:27:03	@steveklabnik	np
2015-05-29 13:27:11	<--	paupau (grrrr@moz-rc7fph.static.monkeybrains.net) has quit (Ping timeout: 121 seconds)
2015-05-29 13:27:28	VShell	pylbrecht: you could make the last line be return (args.swap_remove(1), args.swap_remove(3)), I think that'd work.
2015-05-29 13:27:49	VShell	(or something like that.)
2015-05-29 13:27:51	-->	kent (kent@moz-nd2iqs.fl.atlanticbb.net) has joined #rust
2015-05-29 13:28:12	<--	Guest38 (textual@moz-4hh.6p3.217.74.IP) has quit (Quit: Textual IRC Client: www.textualapp.com)
2015-05-29 13:28:13	-->	bfrog (tburdick@moz-hde.5e5.136.67.IP) has joined #rust
2015-05-29 13:28:15	 *	VShell hmms.
2015-05-29 13:28:20	-->	Guest38 (textual@moz-4hh.6p3.217.74.IP) has joined #rust
2015-05-29 13:28:32	<--	coryforsyth (coryforsyth@moz-ha4269.static.cosmoweb.net) has quit (Client exited)
2015-05-29 13:28:40	pylbrecht	VShell: i tried args.remove() but that gave me "cannot borrow immutable local variable args as mutable"
2015-05-29 13:28:57	VShell	pylbrecht: that'd be because local variable args is not mut.
2015-05-29 13:29:03	VShell	remove() modifies the vec.
2015-05-29 13:29:31	<--	Rym (y@moz-h2o.mso.205.31.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 13:29:36	-->	__mark___ (mark@moz-udut16.dynamic.chello.pl) has joined #rust
2015-05-29 13:29:38	<--	__mark__ (mark@moz-udut16.dynamic.chello.pl) has quit (Ping timeout: 121 seconds)
2015-05-29 13:30:04	pylbrecht	VShell: thanks, that did it.
2015-05-29 13:30:05	-->	errordeveloper (ilya@moz-ono.0eu.201.90.IP) has joined #rust
2015-05-29 13:30:30	<--	jj2baile (jon@moz-rog.f0k.97.129.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 13:31:16	<--	tbelaire (tbelaire@moz-e3f93l.csclub.uwaterloo.ca) has quit (Ping timeout: 121 seconds)
2015-05-29 13:31:45	-->	Porkepix (Porkepix@moz-e1bv2v.rev.sfr.net) has joined #rust
2015-05-29 13:32:26	-->	xrl (uid1091@moz-f0543s.brockwell.irccloud.com) has joined #rust
2015-05-29 13:32:28	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-29 13:32:43	Ms2ger	pure fn pure_length<T: copy>(ls: @list<T>) -> uint {
2015-05-29 13:32:58	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-29 13:33:29	pylbrecht	VShell GGist: is there another way without modifying the vec?
2015-05-29 13:33:32	-->	kaeluka (kaeluka@moz-tn3lqd.cust.bredbandsbolaget.se) has joined #rust
2015-05-29 13:33:38	<--	__mark___ (mark@moz-udut16.dynamic.chello.pl) has quit (Ping timeout: 121 seconds)
2015-05-29 13:33:39	-->	SpaceManiac (Tad@moz-ichs44.dyn.suddenlink.net) has joined #rust
2015-05-29 13:34:20	-->	eric_lagergren (barsonme@moz-hshokg.q6t2.2174.0008.2601.IP) has joined #rust
2015-05-29 13:34:22	Ms2ger	pylbrecht, for http://pastebin.com/2EU3jD2A ?
2015-05-29 13:34:23	pylbrecht	like transfering ownership
2015-05-29 13:34:29	pylbrecht	Ms2ger: yeah.
2015-05-29 13:34:34	-->	xcombelle (xcombelle@moz-o9pb7i.abo.wanadoo.fr) has joined #rust
2015-05-29 13:34:37	-->	mib_0u4cou (Mibbit@moz-0qbe11.dynamic.avangarddsl.ru) has joined #rust
2015-05-29 13:34:53	<--	Lilly (Lilly@moz-pfkvo9.bredband.comhem.se) has quit (Quit: bajs)
2015-05-29 13:35:01	<--	phore (phore@moz-p8hanb.cable.rogers.com) has quit (Quit: if you're seeing this, i ran out of coffee. send help.)
2015-05-29 13:35:16	Ms2ger	let mut iter = args.into_iter(); (iter.next().unwrap(), iter.next().unwrap())
2015-05-29 13:35:42	-->	phore (phore@moz-p8hanb.cable.rogers.com) has joined #rust
2015-05-29 13:35:56	pylbrecht	holy hell. as a rust newb this looks pretty frightening.
2015-05-29 13:36:34	pylbrecht	isn't there a way to transfer ownership of a vec's element?
2015-05-29 13:37:03	XMPPwocky	.remove
2015-05-29 13:37:19	<--	errordeveloper (ilya@moz-ono.0eu.201.90.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 13:37:32	-->	errordeveloper (ilya@moz-ono.0eu.201.90.IP) has joined #rust
2015-05-29 13:37:40	pylbrecht	XMPPwocky: without modifying the vec?
2015-05-29 13:37:46	jwilm	plybrecht: yes but the vec must be mutable
2015-05-29 13:38:14	Ms2ger	pylbrecht, you can't keep the Vec around and still move things out of it
2015-05-29 13:38:23	jwilm	plybrecht: Then you would have two owners for that element which isn't allowed
2015-05-29 13:38:39	pylbrecht	ok.
2015-05-29 13:38:57	VShell	pylbrecht: well, no, because how is the borrow checker supposed to make sure you don't do vec.get_owned(1); twice?
2015-05-29 13:39:34	-->	Rym (y@moz-h2o.mso.205.31.IP) has joined #rust
2015-05-29 13:39:54	pylbrecht	VShell: i don't know. i'm just fiddling around with rust since a few hours. i read/watched alot about it but didn't get my hands dirty yet
2015-05-29 13:40:02	rovar	someone want to help me track down a lifetime conflict?  I am pretty sure my code is correct, but the borrow checker disagrees. 
2015-05-29 13:40:07	<--	fabianvf (fabianvf@moz-fjqmui.va.comcast.net) has quit (Connection closed)
2015-05-29 13:40:12	Ms2ger	rovar, show us :)
2015-05-29 13:40:19	rovar	https://github.com/rrichardson/reactor/blob/master/examples/echo.rs#L45-L47
2015-05-29 13:40:43	<--	_Vi (vi@moz-bbs.vhj.131.104.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 13:40:44	<--	laumann (thomas@moz-1f0.hq0.225.130.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 13:40:49	rovar	if I declare r after client/server, it says r doesn't live long enough,  if I put r first, it says client/server doesn't live long enough
2015-05-29 13:41:13	VShell	pylbrecht: you can do something along the lines of http://is.gd/jhyXKu , like Ms2ger suggested. but yeah - basically the
2015-05-29 13:41:22	rovar	Ms2ger, the closure at line 49 is tied to the lifetime of r. 
2015-05-29 13:41:28	rovar	the closure references server
2015-05-29 13:41:36	<--	rudolph (rudolph@moz-ce0j93.qdet.dsq9.010d.2620.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-29 13:41:40	VShell	basically the only way to move things out of the vec is to actually move them out.
2015-05-29 13:41:41	rovar	so server should need to live as least as long as r
2015-05-29 13:41:47	VShell	anything else is unsafe.
2015-05-29 13:41:52	Ms2ger	Mm
2015-05-29 13:42:05	rkruppe	rovar: Long story short, the borrow checker is correct. server and client are created before r, so they are destroyed later
2015-05-29 13:42:11	rovar	but nowhere that I can tell am I telling rustc that r needs to live as long as r
2015-05-29 13:42:11	pylbrecht	VShell: ok thanks.
2015-05-29 13:42:19	<--	Luqman (laden@moz-bjmiqc.csclub.uwaterloo.ca) has quit (Ping timeout: 121 seconds)
2015-05-29 13:42:19	-->	dpc (dpc@moz-t6gr4b.ca.comcast.net) has joined #rust
2015-05-29 13:42:29	-->	dpc_ (dpc@moz-t6gr4b.ca.comcast.net) has joined #rust
2015-05-29 13:42:32	GGist	pylbrecht: You could also do this without having to allocate a Vec http://is.gd/gIDDPb
2015-05-29 13:42:40	rovar	rkruppe, but server and client don't depend on r, only the other way around, so as long as r gets destroyed first, it should be fine
2015-05-29 13:42:56	<--	kamilc__ (kamil@moz-lrfgjm.play-internet.pl) has quit (Quit: Leaving...)
2015-05-29 13:43:01	rovar	rkruppe, or at least that's my reality. I may have told the borrow checker something different, but I can't tell how
2015-05-29 13:43:13	<--	lenstr (lenstr@moz-lhu.vju.25.171.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-29 13:43:24	rkruppe	rovar: If a Token has a reference to r and use it when dropping, then dropping client/server touches r after it's been destroyed
2015-05-29 13:43:27	modulus	Ok, so every time I use a function that write to irc I have to pass it an Arc. So every call I need to clone the Arc. Is this expensive?
2015-05-29 13:43:36	<--	lukes386 (uid17144@moz-31nhqa.highgate.irccloud.com) has quit (Quit: Connection closed for inactivity)
2015-05-29 13:43:37	rkruppe	Maybe they don't do that but the borrow checker has no way to know that
2015-05-29 13:43:52	<--	findow (Mibbit@moz-1072lv.dsl.as9105.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-29 13:43:53	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-29 13:43:58	rovar	rkruppe, Token is just a uint, it shouldn't contain any reference
2015-05-29 13:44:00	XMPPwocky	modulus: cloning an Arc isn't totally free, but it's pretty darn cheap
2015-05-29 13:44:05	<--	Rym (y@moz-h2o.mso.205.31.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 13:44:12	modulus	Ok, so just don't worry about it I guess?
2015-05-29 13:44:24	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-29 13:44:39	pylbrecht	GGist: this actually looks pretty cool.
2015-05-29 13:44:47	_td	BTreeMap being ordered means that if it's key'd by an enum, one variant of which carries only a usize, if I iterate and filter to only include keys of that variant, the keys will be ordered by the usizes. Correct?
2015-05-29 13:44:57	-->	Guest58 (textual@moz-70hlaj.austtx.sbcglobal.net) has joined #rust
2015-05-29 13:45:11	-->	qard (qard@moz-nekdha.vc.shawcable.net) has joined #rust
2015-05-29 13:45:42	rkruppe	rovar: It may very well be that the code is actually safe, but in any case the compiler won't accept it (and it's not easy to change that without introducing soundness holes)
2015-05-29 13:45:51	rkruppe	rovar: Just declare them other way around
2015-05-29 13:46:01	-->	lenstr (lenstr@moz-lhu.vju.25.171.IP) has joined #rust
2015-05-29 13:46:16	rkruppe	_td: It depends on the Ord impl, but if it's #[derive]'d then yes
2015-05-29 13:46:27	_td	rkruppe, great, thanks!
2015-05-29 13:46:29	rovar	rkruppe, then it complains that client/server do not live long enough
2015-05-29 13:46:39	rkruppe	rovar: Oh, hmm
2015-05-29 13:47:16	rkruppe	rovar: let (mut client, mut server, r); r = Reactor::new(); may fix that
2015-05-29 13:47:22	rkruppe	Then they all have the same lifetime
2015-05-29 13:47:38	GGist	pylbrecht: I always like using match statements like that, if you wanted to make sure they didnt add more than 3 args http://is.gd/98o3d9
2015-05-29 13:47:41	rovar	oy
2015-05-29 13:48:06	GGist	err 2
2015-05-29 13:48:23	-->	Wilduck (erik@moz-q7f.8fo.42.70.IP) has joined #rust
2015-05-29 13:48:46	-->	laumann (thomas@moz-1f0.hq0.225.130.IP) has joined #rust
2015-05-29 13:48:49	<--	GGist (Mibbit@moz-kl9hvd.seattleu.edu) has left #rust
2015-05-29 13:48:56	pylbrecht	GGist: cool. thanks :)
2015-05-29 13:49:22	rovar	rkruppe, I'll give that a go, but that's not a tractible solution going forward.  Making users of this API put all their state in the same lifetime is probably a non-starter
2015-05-29 13:49:25	<--	Dekker (Dekker@moz-qc61ff.tbcn.telia.com) has quit (Quit: Textual IRC Client: www.textualapp.com)
2015-05-29 13:49:43	<--	demilux_ (demilux@moz-fk1.kt4.14.64.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-29 13:49:55	-->	Boddlnagg (Patrick@moz-qc3ib5.dyn.telefonica.de) has joined #rust
2015-05-29 13:50:22	rkruppe	rovar: I'm starting to get out of my depth. All I can say that limitations of the borrow checker probably aren't the root of *all* your problems, try to find a different design that doesn't "hurt when I do this"
2015-05-29 13:51:12	<--	ogham (rally@moz-02j.06e.6.31.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 13:51:23	<--	psd (psd@moz-5h74fr.mtnl.net.in) has quit (Quit: Leaving)
2015-05-29 13:52:00	-->	jwatt (roslea@jwatt.irc.users.mozilla.org) has joined #rust
2015-05-29 13:52:03	-->	Luqman (laden@moz-bjmiqc.csclub.uwaterloo.ca) has joined #rust
2015-05-29 13:52:07	rovar	rkruppe, heh.. indeed :)   It is a very precarious intertwining of objects and lifetimes.  I only added explicit lifetimes because I needed to guarantee that boxed closures don't outlive their scope (and they don't need to outlive their container either)
2015-05-29 13:53:17	-->	ogham (rally@moz-91e3hp.cable.virginm.net) has joined #rust
2015-05-29 13:53:34	bluss	rovar: consider using Box< + 'static> for now?
2015-05-29 13:53:54	bluss	rovar: that still allows captures by value
2015-05-29 13:54:00	<--	maralla (uid69246@moz-mq40mv.brockwell.irccloud.com) has quit (Quit: Connection closed for inactivity)
2015-05-29 13:54:05	<--	kaeluka (kaeluka@moz-tn3lqd.cust.bredbandsbolaget.se) has quit (Client exited)
2015-05-29 13:54:09	-->	Rym (y@moz-h2o.mso.205.31.IP) has joined #rust
2015-05-29 13:54:11	Gankro	Is there really no way to coerce rust's fmt stuff to print leading zeros on numbers?
2015-05-29 13:54:15	-->	jj2baile (jon@moz-e3f93l.csclub.uwaterloo.ca) has joined #rust
2015-05-29 13:54:18	-->	tbelaire (tbelaire@moz-e3f93l.csclub.uwaterloo.ca) has joined #rust
2015-05-29 13:54:29	<--	aepsil0n (eduard@moz-6491ha.mv2h.pepi.8071.2a02.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 13:54:50	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-29 13:55:21	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-29 13:55:49	<--	mindtree (Mitch@moz-njqlhh.iprimus.net.au) has quit (Ping timeout: 121 seconds)
2015-05-29 13:56:00	-->	tcard (tcard@moz-jdrdbk.ddns.jazztel.es) has joined #rust
2015-05-29 13:56:11	<--	harrisonclarke (harrisoncla@moz-6v8.jf9.227.142.IP) has quit (Connection closed)
2015-05-29 13:56:25	-->	essem2 (Thunderbird@moz-0g3v4k.biz.rr.com) has joined #rust
2015-05-29 13:56:56	rovar	bluss,  I don't think that will fly.  I think I need to somehow make the lifetime of r more flexible.. maybe I need yet another lifetime :/
2015-05-29 13:57:20	-->	gizmo (Mibbit@moz-h57t82.starlink.ru) has joined #rust
2015-05-29 13:57:20	<--	ogeon (ogeon@moz-no4od9.mobileonline.telia.com) has quit (Connection closed)
2015-05-29 13:57:28	Gankro	aha, found it
2015-05-29 13:57:29	bluss	playbot: format!("{:06.x}", 2) // Gankro 
2015-05-29 13:57:30	--	Notice(playbot): "000002"
2015-05-29 13:57:31	-->	ogeon (ogeon@moz-5lkqp9.priv.bahnhof.se) has joined #rust
2015-05-29 13:57:38	Gankro	0>8, obviously
2015-05-29 13:57:42	gizmo	Hi, everyone!
2015-05-29 13:57:48	bluss	hm
2015-05-29 13:57:58	gizmo	Have anybody used glutin recently?
2015-05-29 13:58:12	gizmo	Have trouble with compiling it
2015-05-29 13:58:13	-->	harrisonclarke (harrisoncla@moz-6v8.jf9.227.142.IP) has joined #rust
2015-05-29 13:58:16	-->	playjax (chatzilla@moz-r0982v.optusnet.com.au) has joined #rust
2015-05-29 13:58:19	cholcombe	is there a way to indicate in a match block to do nothing on certain matches?
2015-05-29 13:58:20	Gankro	bluss: Huh, guess I don't need the >...?
2015-05-29 13:58:22	rovar	not I. what errors are you getting?
2015-05-29 13:58:34	rovar	gizmo, also there is #rust-gamedev which might have more glutin users
2015-05-29 13:58:40	<--	Rym (y@moz-h2o.mso.205.31.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 13:58:41	bluss	rovar: I don't have full overview of your program
2015-05-29 13:58:42	--	zz_NameNotFound is now known as NameNotFound
2015-05-29 13:58:44	gizmo	Basically, it errors on lack of feature(convert) in dependencies
2015-05-29 13:58:50	bluss	rovar: so it's hard to say
2015-05-29 13:58:59	<--	lov2cod (Adium@moz-40l.ob1.22.8.IP) has quit (Quit: Leaving.)
2015-05-29 13:59:20	bluss	Gankro: > is a good default
2015-05-29 13:59:21	gizmo	Pages on gh says that everything is building
2015-05-29 13:59:30	<--	harrisonclarke (harrisoncla@moz-6v8.jf9.227.142.IP) has quit (Connection closed)
2015-05-29 13:59:45	bluss	playbot: format!("{:0^6}", 2) // imagine this was the default
2015-05-29 13:59:47	--	Notice(playbot): "002000"
2015-05-29 14:00:05	gizmo	@rovar thanks
2015-05-29 14:01:03	rovar	bluss, yea.. it's a bit of a beast,  fully reducing it to an example on play would still be ugly.. I might have to do just that, though. 
2015-05-29 14:01:26	-->	rkruppe_ (chatzilla@moz-3nj.rnu.131.95.IP) has joined #rust
2015-05-29 14:01:38	-->	Rym (y@moz-h2o.mso.205.31.IP) has joined #rust
2015-05-29 14:02:35	<--	rkruppe (chatzilla@moz-3nj.rnu.131.95.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 14:02:38	--	rkruppe_ is now known as rkruppe
2015-05-29 14:03:40	<--	DerisiveLogic (smuxi@moz-1jqqlg.biz.rr.com) has quit (Ping timeout: 121 seconds)
2015-05-29 14:03:51	Gankro	bluss: Who doesn't want centered padding?!
2015-05-29 14:04:22	<--	loyd (loyd@moz-jsb.32f.108.213.IP) has quit (Connection closed)
2015-05-29 14:04:46	bluss	Gankro: without zeros, it's nice to give the numbers some space yeah
2015-05-29 14:04:54	-->	loyd (loyd@moz-jsb.32f.108.213.IP) has joined #rust
2015-05-29 14:05:48	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-29 14:06:04	<--	Morten (Morten@moz-ouf18k.eduroam.uib.no) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-05-29 14:06:19	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-29 14:06:51	jmesmon	Am I right in thinking that in a Decoder's read_seq there isn't any way of predicting the allocation done by `f()` based on `len`? ie: if len is untrusted, there is no way to ensure a rust program won't OOM?
2015-05-29 14:06:52	<--	Slava_I (slava@moz-tia.hi8.135.31.IP) has quit (Connection closed)
2015-05-29 14:07:01	-->	Slava_I (slava@moz-tia.hi8.135.31.IP) has joined #rust
2015-05-29 14:07:30	<--	Guest58 (textual@moz-70hlaj.austtx.sbcglobal.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-29 14:07:49	<--	qard (qard@moz-nekdha.vc.shawcable.net) has left #rust
2015-05-29 14:07:50	-->	DerisiveLogic (smuxi@moz-1jqqlg.biz.rr.com) has joined #rust
2015-05-29 14:08:09	--	NameNotFound is now known as zz_NameNotFound
2015-05-29 14:08:46	<--	tav (tav@moz-ivrq8h.range31-52.btcentralplus.com) has quit (Connection closed)
2015-05-29 14:09:43	-->	tav (tav@moz-ivrq8h.range31-52.btcentralplus.com) has joined #rust
2015-05-29 14:09:51	-->	Dineshs91 (Mibbit@moz-ajp.pla.208.106.IP) has joined #rust
2015-05-29 14:09:54	<--	laumann (thomas@moz-1f0.hq0.225.130.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 14:10:07	-->	laumann (thomas@moz-1f0.hq0.225.130.IP) has joined #rust
2015-05-29 14:10:20	bascule	 _____ ____  ___ ____    _ __   ___ _ _ 
2015-05-29 14:10:23	bascule	|  ___|  _ \|_ _|  _ \  / \\ \ / / | | |
2015-05-29 14:10:26	bascule	| |_  | |_) || || | | |/ _ \\ V /| | | |
2015-05-29 14:10:27	Murarth	C-C-C-COMBO BREAKER!!
2015-05-29 14:10:29	bascule	|  _| |  _ < | || |_| / ___ \| | |_|_|_|
2015-05-29 14:10:32	bascule	|_|   |_| \_\___|____/_/   \_\_| (_|_|_)
2015-05-29 14:10:35	bascule	                                        
2015-05-29 14:11:04	-->	eerie (eerie@moz-ja0t6l.red.bezeqint.net) has joined #rust
2015-05-29 14:11:20	-->	coryforsyth (coryforsyth@moz-ha4269.static.cosmoweb.net) has joined #rust
2015-05-29 14:11:27	geofft	morning bascule 
2015-05-29 14:12:01	-->	demilux (demilux@moz-fk1.kt4.14.64.IP) has joined #rust
2015-05-29 14:12:26	-->	aepsil0n (eduard@moz-pfjhmu.mullvad.net) has joined #rust
2015-05-29 14:12:27	<--	exadeci (uid35778@moz-l8iij7.ealing.irccloud.com) has quit (Quit: Connection closed for inactivity)
2015-05-29 14:12:35	mib_irkcqy	is this our future?
2015-05-29 14:12:37	<--	aepsil0n (eduard@moz-pfjhmu.mullvad.net) has quit (Quit: Leaving.)
2015-05-29 14:13:30	<--	lenstr (lenstr@moz-lhu.vju.25.171.IP) has quit (Quit: Leaving...)
2015-05-29 14:13:46	-->	p32blo (p32blo@moz-v36o87.cpe.netcabo.pt) has joined #rust
2015-05-29 14:14:55	<--	ogeon (ogeon@moz-5lkqp9.priv.bahnhof.se) has quit (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
2015-05-29 14:14:56	leftylink	FRIDAY
2015-05-29 14:14:57	leftylink	sorry
2015-05-29 14:15:13	<--	eerie (eerie@moz-ja0t6l.red.bezeqint.net) has quit (Ping timeout: 121 seconds)
2015-05-29 14:16:00	-->	JagaJaga (JagaJaga@moz-ua8.hhl.62.178.IP) has joined #rust
2015-05-29 14:16:31	-->	ogeon (ogeon@moz-5lkqp9.priv.bahnhof.se) has joined #rust
2015-05-29 14:16:43	<--	SpaceManiac (Tad@moz-ichs44.dyn.suddenlink.net) has quit (Ping timeout: 121 seconds)
2015-05-29 14:16:45	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-29 14:17:05	bascule	geofft: ohai
2015-05-29 14:17:16	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-29 14:17:26	-->	kaeluka (kaeluka@moz-tn3lqd.cust.bredbandsbolaget.se) has joined #rust
2015-05-29 14:17:31	ubeatlenine	#join rust-gamedev
2015-05-29 14:17:39	<--	laumann (thomas@moz-1f0.hq0.225.130.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 14:17:44	-->	laumann (thomas@moz-1f0.hq0.225.130.IP) has joined #rust
2015-05-29 14:18:12	<--	kaeluka (kaeluka@moz-tn3lqd.cust.bredbandsbolaget.se) has quit (Client exited)
2015-05-29 14:18:25	-->	fligabob (Mibbit@moz-50c.dbg.205.31.IP) has joined #rust
2015-05-29 14:19:58	-->	maraoz (maraoz@moz-nsp.46i.103.181.IP) has joined #rust
2015-05-29 14:20:41	fligabob	Hey. I'm trying to get the guessing game from the 1.0 book working, but I keep getting the error that readLine takes 0 parameters. It even fails when I copy the code straight from the website. Anyone got any ideas? Running Windows 8
2015-05-29 14:21:52	-->	basicdays (basicdays@moz-vreeoj.cable.rcn.com) has joined #rust
2015-05-29 14:21:52	<--	p32blo (p32blo@moz-v36o87.cpe.netcabo.pt) has quit (Ping timeout: 121 seconds)
2015-05-29 14:21:53	-->	SneakySnake (nya@moz-i9is4u.pool.telekom.hu) has joined #rust
2015-05-29 14:22:56	-->	kaeluka (kaeluka@moz-tn3lqd.cust.bredbandsbolaget.se) has joined #rust
2015-05-29 14:22:59	<--	vosen (vosen@moz-mtm1g4.dynamic.chello.pl) has quit (Ping timeout: 121 seconds)
2015-05-29 14:23:14	-->	paupau (grrrr@moz-7l1.1cg.90.208.IP) has joined #rust
2015-05-29 14:23:15	<--	nodweber (nodweber@moz-knt.fgq.178.5.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-29 14:23:40	<--	daschl (Adium@moz-7plvne.public.telering.at) has quit (Quit: Leaving.)
2015-05-29 14:24:44	XMPPwocky	fligabob: what version of rust are youu using
2015-05-29 14:25:29	@steveklabnik	(rustc --version will tell you)
2015-05-29 14:25:30	WindowsBunny	fligabob: Update your rust
2015-05-29 14:25:44	fligabob	1.0 stable build. Might be outdated, I download it about a week ago
2015-05-29 14:26:00	fligabob	Ah no, I think I downloaded a nightly build by mistake
2015-05-29 14:26:11	<--	dfockler (dfockler@moz-etoj16.hfc.comcastbusiness.net) has quit (Connection closed)
2015-05-29 14:26:27	WindowsBunny	fligabob: rustc --version
2015-05-29 14:27:06	-->	lov2cod (Adium@moz-40l.ob1.22.8.IP) has joined #rust
2015-05-29 14:27:09	fligabob	1.0.0-nightly
2015-05-29 14:27:13	<--	killercup (killercup@moz-723bo4.dip0.t-ipconnect.de) has quit (Quit: Bye)
2015-05-29 14:27:21	<--	paupau (grrrr@moz-7l1.1cg.90.208.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 14:27:41	-->	vosen (vosen@moz-mtm1g4.dynamic.chello.pl) has joined #rust
2015-05-29 14:27:43	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-29 14:27:48	-->	nano (nano@moz-00j6et.dynamic.kabel-deutschland.de) has joined #rust
2015-05-29 14:27:52	WindowsBunny	fligabob: yeah, too old
2015-05-29 14:28:12	XMPPwocky	the recent nightlies are 1.2
2015-05-29 14:28:15	WindowsBunny	update to 1.0 stable or 1.1 beta or 1.2 nightly
2015-05-29 14:28:21	<--	Wilduck (erik@moz-q7f.8fo.42.70.IP) has quit (Client exited)
2015-05-29 14:28:22	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-29 14:28:30	<--	jnicklas (jonasnickla@moz-0ou5lc.bredband.comhem.se) has quit (Client exited)
2015-05-29 14:28:52	fligabob	Ok, I'm installing 1.0 stable now
2015-05-29 14:29:01	<--	Boddlnagg (Patrick@moz-qc3ib5.dyn.telefonica.de) has quit (Connection closed)
2015-05-29 14:29:19	-->	Boddlnagg (Patrick@moz-qc3ib5.dyn.telefonica.de) has joined #rust
2015-05-29 14:29:21	-->	nodweber (nodweber@moz-knt.fgq.178.5.IP) has joined #rust
2015-05-29 14:29:35	<--	rkruppe (chatzilla@moz-3nj.rnu.131.95.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 14:30:05	-->	ai (ai@moz-pqofrl.sunline.net.ua) has joined #rust
2015-05-29 14:31:32	<--	errordeveloper (ilya@moz-ono.0eu.201.90.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 14:32:08	-->	SpaceManiac (Tad@moz-bd3s4o.dyn.suddenlink.net) has joined #rust
2015-05-29 14:32:11	<--	ismaelga_ (ismaelga@moz-0r94oo.cpe.netcabo.pt) has quit (Connection closed)
2015-05-29 14:32:24	<--	Pavel (Pavel@moz-a8qgi0.lidos.cz) has quit (Ping timeout: 121 seconds)
2015-05-29 14:32:30	-->	daschl (Adium@moz-oirn1i.vie.surfer.at) has joined #rust
2015-05-29 14:33:00	<--	kinson (Mibbit@moz-rj2.r6t.134.134.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-29 14:34:18	-->	Wilduck (erik@moz-q7f.8fo.42.70.IP) has joined #rust
2015-05-29 14:34:57	-->	fkaa_ (tundmatu@moz-501od2.business.telia.com) has joined #rust
2015-05-29 14:36:33	<--	fligabob (Mibbit@moz-50c.dbg.205.31.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-29 14:36:44	<--	modulus (chatzilla@moz-8mpjls.dynamic.mundo-r.com) has quit (Quit: ChatZilla 0.9.91.1 [Firefox 38.0.1/20150513174244])
2015-05-29 14:36:48	-->	dirvine (dirvine@moz-42j0at.cable.virginm.net) has joined #rust
2015-05-29 14:37:11	<--	nano (nano@moz-00j6et.dynamic.kabel-deutschland.de) has quit (Connection closed)
2015-05-29 14:37:24	-->	rkruppe (chatzilla@moz-3nj.rnu.131.95.IP) has joined #rust
2015-05-29 14:37:48	<--	dirvine (dirvine@moz-42j0at.cable.virginm.net) has quit (Quit: leaving)
2015-05-29 14:37:57	<--	fkaa (tundmatu@moz-501od2.business.telia.com) has quit (Ping timeout: 121 seconds)
2015-05-29 14:38:21	<--	laumann (thomas@moz-1f0.hq0.225.130.IP) has quit (Quit: leaving)
2015-05-29 14:38:26	-->	dirvine (dirvine@moz-42j0at.cable.virginm.net) has joined #rust
2015-05-29 14:38:29	<--	gizmo (Mibbit@moz-h57t82.starlink.ru) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-29 14:38:35	<--	eckhardt (eckhardt@moz-s9e.ov1.227.199.IP) has quit (Connection closed)
2015-05-29 14:38:41	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-29 14:38:50	<--	fabiand (fabiand@moz-ft56hm.dip0.t-ipconnect.de) has quit (Quit: Verlassend)
2015-05-29 14:39:12	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-29 14:39:20	-->	jiojiajiu (Guro@moz-trc2j7.asianet.co.th) has joined #rust
2015-05-29 14:40:42	-->	alaska (alaska@moz-8bdjem.fios.verizon.net) has joined #rust
2015-05-29 14:41:08	--	AutomatedTester|AFK is now known as AutomatedTester
2015-05-29 14:41:39	<--	jiojiajiu (Guro@moz-trc2j7.asianet.co.th) has quit (Connection closed)
2015-05-29 14:41:54	-->	rudolph (rudolph@moz-2j5.b3k.89.195.IP) has joined #rust
2015-05-29 14:42:34	-->	][ (Mibbit@moz-dfgt5h.apxalarm.com) has joined #rust
2015-05-29 14:42:42	<--	lov2cod (Adium@moz-40l.ob1.22.8.IP) has quit (Quit: Leaving.)
2015-05-29 14:42:47	-->	Havvy (Havvy@moz-2v0ao2.5euu.k9bm.0007.2601.IP) has joined #rust
2015-05-29 14:43:06	-->	Pavel (Pavel@moz-a8qgi0.lidos.cz) has joined #rust
2015-05-29 14:43:19	-->	harrisonclarke (harrisoncla@moz-mh0.9rm.212.173.IP) has joined #rust
2015-05-29 14:44:21	-->	pcwalton (pcwalton@moz-l8ebtf.sfo1.mozilla.com) has joined #rust
2015-05-29 14:44:21	--	Mode #rust [+ao pcwalton pcwalton] by ChanServ
2015-05-29 14:44:35	][	could someone help me understand what tt matches and how the match can be used in the context of macro_rules! ?
2015-05-29 14:44:44	<--	alaska (alaska@moz-8bdjem.fios.verizon.net) has quit (Ping timeout: 121 seconds)
2015-05-29 14:44:45	<--	fkaa_ (tundmatu@moz-501od2.business.telia.com) has quit (Quit: )
2015-05-29 14:44:52	-->	Guest58 (textual@moz-q0f3g0.static.twtelecom.net) has joined #rust
2015-05-29 14:44:52	<--	tcard (tcard@moz-jdrdbk.ddns.jazztel.es) has quit (Client exited)
2015-05-29 14:45:38	-->	fizzbooze (bp@moz-no6phj.sm5k.54kg.0101.2620.IP) has joined #rust
2015-05-29 14:46:57	-->	jshs (jshs@moz-dske9q.dip0.t-ipconnect.de) has joined #rust
2015-05-29 14:46:57	<--	rudolph (rudolph@moz-2j5.b3k.89.195.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 14:47:30	-->	willem (willem@moz-facs2s.dynamic.upc.nl) has joined #rust
2015-05-29 14:48:23	bluss	][: it can only be forwarded to macros
2015-05-29 14:48:23	<--	Wilduck (erik@moz-q7f.8fo.42.70.IP) has quit (Connection closed)
2015-05-29 14:48:28	-->	Wilduck (erik@moz-q7f.8fo.42.70.IP) has joined #rust
2015-05-29 14:48:33	<--	Wilduck (erik@moz-q7f.8fo.42.70.IP) has quit (Client exited)
2015-05-29 14:48:37	bluss	][: so the main use is capturing something to forward or to recurse
2015-05-29 14:48:47	][	that's actually exactly what I want to do with it
2015-05-29 14:49:03	][	but it's not matching in the way I'd expect
2015-05-29 14:49:09	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-29 14:49:15	bluss	tt is a token tree so it matches a token or one entire (...), {...} or [...]
2015-05-29 14:49:29	][	ahhhh
2015-05-29 14:49:31	-->	tcard (tcard@moz-jdrdbk.ddns.jazztel.es) has joined #rust
2015-05-29 14:49:32	-->	fede (fede@moz-cou507.8bad.idsi.8109.2a02.IP) has joined #rust
2015-05-29 14:49:34	][	there's the part I was missing
2015-05-29 14:49:39	jmesmon	Anyone have any ideas about my rustc_serialize issue with untrusted len?
2015-05-29 14:49:50	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-29 14:50:14	-->	Lilly (Lilly@moz-pfkvo9.bredband.comhem.se) has joined #rust
2015-05-29 14:50:33	<--	hjr3 (hradtke@moz-lei.av4.169.69.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2015-05-29 14:50:40	<--	fede (fede@moz-cou507.8bad.idsi.8109.2a02.IP) has quit (Quit: Sto andando via)
2015-05-29 14:50:54	-->	debuuux (debu@moz-f1pg07.dyn.telefonica.de) has joined #rust
2015-05-29 14:51:25	ogeon	jmesmon: Can you please elaborate?
2015-05-29 14:52:51	-->	hjr3 (hradtke@moz-lei.av4.169.69.IP) has joined #rust
2015-05-29 14:53:08	-->	gonzaloserrano (Adium@moz-k8d.6hf.231.77.IP) has joined #rust
2015-05-29 14:53:49	<--	gonzaloserrano (Adium@moz-k8d.6hf.231.77.IP) has quit (Quit: Leaving.)
2015-05-29 14:53:52	<--	gsingh93 (gulshan@moz-ln1ktu.st3l.iv8o.0004.2601.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 14:53:55	-->	nghtshd (Zim@moz-emu1ef.kouu.ct0o.0000.2601.IP) has joined #rust
2015-05-29 14:54:06	<--	poorman (poorman@moz-sdl0oq.res.rr.com) has quit (A TLS packet with unexpected length was received.)
2015-05-29 14:54:58	<--	Dineshs91 (Mibbit@moz-ajp.pla.208.106.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-29 14:55:28	-->	debuuu (debu@moz-am6epb.dyn.telefonica.de) has joined #rust
2015-05-29 14:56:07	-->	poorman (poorman@moz-sdl0oq.res.rr.com) has joined #rust
2015-05-29 14:56:55	Gankro	I have been told that there are *several* markdown parsers written in Rust. Which is the best, and why aren't we using it in rustdoc!
2015-05-29 14:57:31	<--	logan_e (logan_e@moz-ltn.qg3.218.73.IP) has quit (Client exited)
2015-05-29 14:57:36	<--	Rym (y@moz-h2o.mso.205.31.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 14:58:40	<--	kgrandon (Adium@moz-4qc9b1.hfc.comcastbusiness.net) has quit (Quit: Leaving.)
2015-05-29 14:58:47	<--	debuuux (debu@moz-f1pg07.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2015-05-29 14:59:30	<--	O01eg (o01eg@moz-8p1van.34rt.4n8f.2698.2a02.IP) has quit (Client exited)
2015-05-29 14:59:52	<--	nwin (textual@moz-rmebj6.pools.arcor-ip.net) has quit (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
2015-05-29 14:59:57	<--	Quxxy (chatzilla@moz-efh10q.internode.on.net) has quit (Ping timeout: 121 seconds)
2015-05-29 15:00:00	<--	hjr3 (hradtke@moz-lei.av4.169.69.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2015-05-29 15:00:09	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-29 15:00:38	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-29 15:01:16	-->	kgrandon (Adium@moz-4qc9b1.hfc.comcastbusiness.net) has joined #rust
2015-05-29 15:01:30	-->	fabianvf (fabianvf@moz-fjqmui.va.comcast.net) has joined #rust
2015-05-29 15:01:43	<--	tkellen (tkellen@moz-f5ji1n.vt.comcast.net) has quit (Client exited)
2015-05-29 15:02:17	<--	mib_0u4cou (Mibbit@moz-0qbe11.dynamic.avangarddsl.ru) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-29 15:02:29	<--	tcard (tcard@moz-jdrdbk.ddns.jazztel.es) has quit (Client exited)
2015-05-29 15:03:20	-->	areski (areski@moz-qrjahi.user.ono.com) has joined #rust
2015-05-29 15:03:31	-->	lorenzb (lorenzb@moz-vp0hu9.ethz.ch) has joined #rust
2015-05-29 15:04:29	-->	fkaa (tundmatu@moz-501od2.business.telia.com) has joined #rust
2015-05-29 15:04:30	-->	gonzaloserrano (Adium@moz-k8d.6hf.231.77.IP) has joined #rust
2015-05-29 15:04:40	<--	mcarton (martin@moz-hal.ibl.127.147.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 15:04:41	-->	tkellen (tkellen@moz-f5ji1n.vt.comcast.net) has joined #rust
2015-05-29 15:04:44	<--	SpaceManiac (Tad@moz-bd3s4o.dyn.suddenlink.net) has quit (Ping timeout: 121 seconds)
2015-05-29 15:04:46	-->	JuggleTux (tux@moz-ho0t1f.adslplus.ch) has joined #rust
2015-05-29 15:05:02	-->	kinson (Mibbit@moz-5c1k7k.jf.intel.com) has joined #rust
2015-05-29 15:05:20	-->	SpaceManiac (Tad@moz-bd3s4o.dyn.suddenlink.net) has joined #rust
2015-05-29 15:05:21	<--	harrisonclarke (harrisoncla@moz-mh0.9rm.212.173.IP) has quit (Connection closed)
2015-05-29 15:05:26	kinson	Is it possible to match by data type? i32 and String for example.
2015-05-29 15:05:43	<--	Guest38 (textual@moz-4hh.6p3.217.74.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-29 15:05:46	jmesmon	ogeon: Am I right in thinking that in a Decoder's read_seq there isn't any way of predicting the allocation done by `f()` based on `len`? ie: if len is untrusted, there is no way to ensure a rust program won't OOM?
2015-05-29 15:05:48	XMPPwocky	kinson: if you have a Box<Any>, yes
2015-05-29 15:06:02	-->	logan_e (logan_e@moz-ltn.qg3.218.73.IP) has joined #rust
2015-05-29 15:06:05	XMPPwocky	but in general, no. how would you- rust is statically types
2015-05-29 15:06:36	-->	survi (philip@moz-bm6qal.dip0.t-ipconnect.de) has joined #rust
2015-05-29 15:06:41	-->	durka42 (Adium@moz-0l7c54.o2oh.k96e.f470.2607.IP) has joined #rust
2015-05-29 15:06:55	kinson	@XMPPwocky how would you suggest creating a to_string method for a generic type then?
2015-05-29 15:07:15	XMPPwocky	kinson: via traits
2015-05-29 15:07:34	XMPPwocky	specifically, http://doc.rust-lang.org/std/string/trait.ToString.html
2015-05-29 15:07:38	ogeon	jmesmon: no, you can't know if it will OOM if the len is defined externally
2015-05-29 15:07:38	<--	durka42 (Adium@moz-0l7c54.o2oh.k96e.f470.2607.IP) has quit (Quit: Leaving.)
2015-05-29 15:08:44	-->	coryforsyth_ (coryforsyth@moz-q577km.static.cosmoweb.net) has joined #rust
2015-05-29 15:09:11	<--	ytain (ytain@moz-ffpck2.dsl.teksavvy.com) has quit (Quit: Textual IRC Client: www.textualapp.com)
2015-05-29 15:09:16	<--	gopar (gopar@moz-5039uj.ca.comcast.net) has quit (Quit: Leaving)
2015-05-29 15:09:19	<--	survi (philip@moz-bm6qal.dip0.t-ipconnect.de) has quit (Client exited)
2015-05-29 15:09:28	jmesmon	ogeon: so is there any way to use rustc_serialize decoders that have length prefixed seqs on untrusted input? Just sprinkling arbitrary limits everywhere and hoping things work out?
2015-05-29 15:09:50	<--	coryforsyth (coryforsyth@moz-ha4269.static.cosmoweb.net) has quit (Ping timeout: 121 seconds)
2015-05-29 15:09:50	--	coryforsyth_ is now known as coryforsyth
2015-05-29 15:09:53	XMPPwocky	jmesmon: in my experience, using rustc_serialize for anything that's not JSON is a recipe for sadness
2015-05-29 15:10:04	<--	godlikesme (godlikesme@moz-2a2.dsd.174.79.IP) has quit (Connection closed)
2015-05-29 15:10:15	 *	jmesmon wishes he had known earlier
2015-05-29 15:11:05	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-29 15:11:36	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-29 15:11:42	<--	Pavel (Pavel@moz-a8qgi0.lidos.cz) has quit (Quit: Leaving)
2015-05-29 15:11:46	jmesmon	Anyone know if serde does any better in this area? Or am I stuck hand rolling decoders for untrusted binary input?
2015-05-29 15:11:48	<--	johnsoft (johnsoft@moz-69mrig.res.rr.com) has quit (Quit: Leaving)
2015-05-29 15:11:49	-->	eerie (eerie@moz-ja0t6l.red.bezeqint.net) has joined #rust
2015-05-29 15:11:58	-->	johnsoft (johnsoft@moz-69mrig.res.rr.com) has joined #rust
2015-05-29 15:12:15	jmesmon	Or some other serialization/parsing framework?
2015-05-29 15:12:36	ogeon	jmesmon: I'm honestly not sure. I think someone else would be more qualified to answer, since I haven't tried to implement decoding manually, but since f() comes from outside and you can't be sure what it does... No, I don't know. I shouldn't speculate about this. I may be totally wrong.
2015-05-29 15:12:38	-->	spider-mario (spidermario@moz-coblcf.fbx.proxad.net) has joined #rust
2015-05-29 15:12:42	--	zz_NameNotFound is now known as NameNotFound
2015-05-29 15:13:03	<--	jadbaires (jadrian@moz-1jqrs9.dsl.telepac.pt) has quit (Quit: Konversation terminated!)
2015-05-29 15:13:04	kinson	XMPPwocky: how will using a trait allow me to determine whether the generic is a string or int?
2015-05-29 15:13:38	tilpner	kinson - Why do you need to specialise on them?
2015-05-29 15:13:44	XMPPwocky	kinson: it won't. but it'll give you a String regardless.
2015-05-29 15:14:00	tilpner	kinson - Use std::any::TypeId::of, if you have to.
2015-05-29 15:14:03	<--	debuuu (debu@moz-am6epb.dyn.telefonica.de) has quit (Quit: Leaving)
2015-05-29 15:14:12	<--	_adjivas (adjivas@moz-6ck.lpf.210.62.IP) has quit (Quit: WeeChat 1.1.1)
2015-05-29 15:14:15	XMPPwocky	i reallly don't think that's what you want
2015-05-29 15:14:30	geofft	kinson: you can implement the traits differently on the two different types 
2015-05-29 15:15:02	kinson	Are there examples of this anywhere? I'm still trying to wrap my head around Rust.
2015-05-29 15:15:16	-->	survi (philip@moz-bsnd11.dip0.t-ipconnect.de) has joined #rust
2015-05-29 15:15:58	<--	eerie (eerie@moz-ja0t6l.red.bezeqint.net) has quit (Ping timeout: 121 seconds)
2015-05-29 15:16:27	-->	eckhardt (eckhardt@moz-s9e.ov1.227.199.IP) has joined #rust
2015-05-29 15:17:28	-->	Guest38 (textual@moz-4hh.6p3.217.74.IP) has joined #rust
2015-05-29 15:17:30	<--	johnsoft (johnsoft@moz-69mrig.res.rr.com) has quit (Ping timeout: 121 seconds)
2015-05-29 15:17:53	-->	johnsoft (johnsoft@moz-69mrig.res.rr.com) has joined #rust
2015-05-29 15:17:56	ogeon	jmesmon: It looks like you are supposed to pass a size to f. You could check if it's too large or not, but I think it's still hard to predict OOM, because you have to know the size of the element type and so on.
2015-05-29 15:18:06	-->	lov2cod (Adium@moz-40l.ob1.22.8.IP) has joined #rust
2015-05-29 15:18:42	-->	lov2cod1 (Adium@moz-of7l8d.eodv.k60l.0119.2620.IP) has joined #rust
2015-05-29 15:18:42	<--	lov2cod (Adium@moz-40l.ob1.22.8.IP) has quit (Connection closed)
2015-05-29 15:19:07	jmesmon	ogeon: right, f takes the number of elements. But read_seq isn't given the type of the elements, only the type of the container, limiting it's ability to validate the number of elements.
2015-05-29 15:19:19	-->	lukas_ (lukas@moz-3b1uhh.hsi11.unitymediagroup.de) has joined #rust
2015-05-29 15:19:55	<--	pcwalton (pcwalton@moz-l8ebtf.sfo1.mozilla.com) has quit (Client exited)
2015-05-29 15:19:58	jmesmon	If one assumes all encoded/decded sequences are of a single type, a hacky check can be added, but generally people use more than one type :)
2015-05-29 15:20:24	<--	crisco_ (crisco@moz-f5a.efk.198.67.IP) has quit (Connection closed)
2015-05-29 15:20:44	<--	kgrandon (Adium@moz-4qc9b1.hfc.comcastbusiness.net) has quit (Quit: Leaving.)
2015-05-29 15:20:52	@steveklabnik	kinson: http://is.gd/qnPnuZ
2015-05-29 15:20:53	geofft	kinson: here's an example of doing that: http://is.gd/ghCuYs 
2015-05-29 15:21:03	@steveklabnik	geofft: hehe almost the same
2015-05-29 15:21:05	geofft	lol 
2015-05-29 15:21:29	-->	harrisonclarke (harrisoncla@moz-uur7pt.eastlink.ca) has joined #rust
2015-05-29 15:21:50	ogeon	jmesmon: Exactly. It's hard to know how the sequence looks and works. It can be an array, a linked list or anything else. They use memory and allocations in different ways, making it hard to predict.
2015-05-29 15:22:03	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-29 15:22:03	<--	survi (philip@moz-bsnd11.dip0.t-ipconnect.de) has quit (Client exited)
2015-05-29 15:22:05	sam113101	"Also, note that we pub used before we declared our mods. Rust requires that use declarations go first.", is it still valid?
2015-05-29 15:22:10	<--	gingermusketeer (gingermuske@moz-soim45.compute.amazonaws.com) has quit (Connection closed)
2015-05-29 15:22:14	-->	gingermusketeer (gingermuske@moz-g01jko.compute.amazonaws.com) has joined #rust
2015-05-29 15:22:20	XMPPwocky	sam113101: iirc, that got loosened at some point, but there is still some restriction
2015-05-29 15:22:36	-->	Wilduck (erik@moz-q7f.8fo.42.70.IP) has joined #rust
2015-05-29 15:22:42	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-29 15:23:02	jmesmon	ogeon: true, but if we at least had the element type we could guess somewhat accurately. As it is, we can't even make a decent guess about the amount of memory read_seq()'s f() will attempt to allocate
2015-05-29 15:23:07	Havvy	ogham:  https://github.com/ogham/rust-ansi-term/pull/5
2015-05-29 15:23:16	kinson	steveklabnik: geofft: thanks!
2015-05-29 15:23:59	-->	paupau (grrrr@moz-rc7fph.static.monkeybrains.net) has joined #rust
2015-05-29 15:24:09	-->	__mark__ (mark@moz-udut16.dynamic.chello.pl) has joined #rust
2015-05-29 15:24:31	ogham	Havvy: Nice!
2015-05-29 15:24:31	-->	survi (philip@moz-ub651l.dip0.t-ipconnect.de) has joined #rust
2015-05-29 15:24:43	ogham	I'm not really fussed about bikeshedding dimmed vs dim :)
2015-05-29 15:25:00	<--	kaeluka (kaeluka@moz-tn3lqd.cust.bredbandsbolaget.se) has quit (Client exited)
2015-05-29 15:25:07	<--	playjax (chatzilla@moz-r0982v.optusnet.com.au) has quit (Ping timeout: 121 seconds)
2015-05-29 15:25:45	<--	kent (kent@moz-nd2iqs.fl.atlanticbb.net) has quit (Quit: leaving)
2015-05-29 15:25:53	ogeon	jmesmon: True. The problem is just that the sequence type is completely unknown and unbounded. I can see no clues for how to find out anything about it at all. It's just some generic type T.
2015-05-29 15:26:20	-->	kaeluka (kaeluka@moz-tn3lqd.cust.bredbandsbolaget.se) has joined #rust
2015-05-29 15:26:38	ogeon	You may be able to guess something if read_seq_elt is called directly after, but it's still a wild guess.
2015-05-29 15:26:49	-->	kgrandon (Adium@moz-4qc9b1.hfc.comcastbusiness.net) has joined #rust
2015-05-29 15:26:56	@steveklabnik	sam113101: i don't think that's true anymore
2015-05-29 15:27:02	@steveklabnik	sam113101: where is that?
2015-05-29 15:27:19	Havvy	Alright. My next PR is going to be adding a bunch of constructors onto Style so that it can be just Style::bold() instead of Style::default()::bold().
2015-05-29 15:27:39	<--	munksgaard (munksgaard@moz-vj4.hq0.225.130.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 15:27:48	<--	johnsoft (johnsoft@moz-69mrig.res.rr.com) has quit (Quit: Leaving)
2015-05-29 15:27:57	mib_irkcqy	why are properties immutable by default? wouldnt be the exact opposite way more reasonable?
2015-05-29 15:27:58	-->	johnsoft (johnsoft@moz-69mrig.res.rr.com) has joined #rust
2015-05-29 15:28:06	<--	paupau (grrrr@moz-rc7fph.static.monkeybrains.net) has quit (Ping timeout: 121 seconds)
2015-05-29 15:28:16	@steveklabnik	mib_irkcqy: immutable by default is generally considered the correct default by PLT people
2015-05-29 15:28:25	@steveklabnik	immutable has a number of really nice properties
2015-05-29 15:28:26	@steveklabnik	and
2015-05-29 15:28:29	@steveklabnik	it fits. most things are not mutable
2015-05-29 15:28:51	ogham	mib_irkcqy: Many people think it better to give out as little information as you can! Read up on 'information hiding' if you want to see the history
2015-05-29 15:28:53	geofft	there are some historical problems in C with things being mutable by default 
2015-05-29 15:29:07	ogham	mib_irkcqy: Ignore everything I just said. 
2015-05-29 15:29:10	geofft	(and especially with the earliest versions of C not even _having_ const) 
2015-05-29 15:29:19	ogham	I read 'immutable' and got 'private'.
2015-05-29 15:29:28	-->	p32blo (p32blo@moz-v36o87.cpe.netcabo.pt) has joined #rust
2015-05-29 15:29:38	XMPPwocky	what do you mean by "properties"
2015-05-29 15:30:10	geofft	also Rust doesn't let you do multiple mutable borrows at once, for safety reasons, but does let you do multiple immutable borrows at once, so defaulting to immutable is convenient there 
2015-05-29 15:30:16	geofft	otherwise you end up writing "const" everywhere 
2015-05-29 15:30:29	geofft	(which, as it turns out, you sometimes need to do in C) 
2015-05-29 15:30:45	mib_irkcqy	i understand, thanks guys
2015-05-29 15:31:35	geofft	like C's strstr() takes a const pointer and returns a mutable pointer 
2015-05-29 15:31:43	geofft	which is just awful 
2015-05-29 15:31:51	<--	nodweber (nodweber@moz-knt.fgq.178.5.IP) has quit (Connection closed)
2015-05-29 15:32:54	-->	nodweber (nodweber@moz-knt.fgq.178.5.IP) has joined #rust
2015-05-29 15:32:59	<--	survi (philip@moz-ub651l.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2015-05-29 15:33:01	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-29 15:33:11	XMPPwocky	mib_irkcqy: according to git grep, there are 27202 total "let"s in the entire rust source tree
2015-05-29 15:33:18	XMPPwocky	5420 of which are mut
2015-05-29 15:33:30	XMPPwocky	so around 80% of the time, "let" works
2015-05-29 15:33:39	XMPPwocky	(immutable)
2015-05-29 15:33:40	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-29 15:34:29	<--	johnsoft (johnsoft@moz-69mrig.res.rr.com) has quit (Ping timeout: 121 seconds)
2015-05-29 15:34:39	-->	johnsoft (johnsoft@moz-69mrig.res.rr.com) has joined #rust
2015-05-29 15:34:40	<--	fizzbooze (bp@moz-no6phj.sm5k.54kg.0101.2620.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 15:34:48	<--	duncan (paul@moz-dst.ms6.225.173.IP) has quit (Connection closed)
2015-05-29 15:37:41	-->	grodan (Mibbit@moz-9mncl4.business.telia.com) has joined #rust
2015-05-29 15:40:35	<--	spider-mario (spidermario@moz-coblcf.fbx.proxad.net) has quit (A TLS packet with unexpected length was received.)
2015-05-29 15:41:20	ogham	Havvy: Aaaaaaand merged
2015-05-29 15:41:32	Havvy	\o/
2015-05-29 15:41:48	ogham	I tested it by pointing exa to it and seeing if the output was the same
2015-05-29 15:42:00	ogham	apparently I have a bunch of reset characters being printed, even when they're meant to be turned off
2015-05-29 15:42:03	ogham	so that's good to know
2015-05-29 15:42:14	Havvy	Have or had?
2015-05-29 15:42:41	-->	spider-mario (spidermario@moz-coblcf.fbx.proxad.net) has joined #rust
2015-05-29 15:42:41	ogham	have
2015-05-29 15:43:02	ogham	I'm not sure if it's exa's or ansi-term's fault, but it was doing the same even before your changes, so it's definitely not *your* fault
2015-05-29 15:43:25	Havvy	Once I finish this next PR, I'm gonna suggest a new release.  Can you file an issue with the test case of the extraneous reset characters?
2015-05-29 15:43:49	ogham	Once I figure out in which codebase the problem lies, sure
2015-05-29 15:44:09	ogham	this calls for... tea! *tea-making montage*
2015-05-29 15:44:11	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-29 15:44:42	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-29 15:44:46	-->	rkruppe_ (chatzilla@moz-3nj.rnu.131.95.IP) has joined #rust
2015-05-29 15:45:46	-->	tcard (tcard@moz-jdrdbk.ddns.jazztel.es) has joined #rust
2015-05-29 15:46:05	<--	rkruppe (chatzilla@moz-3nj.rnu.131.95.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 15:46:09	<--	Wilduck (erik@moz-q7f.8fo.42.70.IP) has quit (Client exited)
2015-05-29 15:46:12	--	rkruppe_ is now known as rkruppe
2015-05-29 15:46:39	ogham	Ahhh, it is in ansi-term. Line 510, it prints out the reset code every time, even when it ends on a default style
2015-05-29 15:46:57	geri	hi, cool my low level code works
2015-05-29 15:47:12	geri	can someone give me a quick code review?
2015-05-29 15:47:16	<--	tcard (tcard@moz-jdrdbk.ddns.jazztel.es) has quit (Client exited)
2015-05-29 15:50:36	-->	Wilduck (erik@moz-q7f.8fo.42.70.IP) has joined #rust
2015-05-29 15:50:37	<--	mujou (mujou@moz-rko6lo.ocn.ne.jp) has quit (Ping timeout: 121 seconds)
2015-05-29 15:50:40	ogham	geri: I can try
2015-05-29 15:50:50	geri	i ported some C code to rust
2015-05-29 15:51:11	geri	ogham: http://ideone.com/8gV8XL%20http://ideone.com/6NR2bL
2015-05-29 15:51:17	geri	http://ideone.com/8gV8XL http://ideone.com/6NR2bL
2015-05-29 15:51:48	ogham	That... is not C++14
2015-05-29 15:51:55	geri	i know
2015-05-29 15:52:05	geri	rust was not available as an option :D
2015-05-29 15:52:23	geri	how can you improve line 72 - 80?
2015-05-29 15:52:29	-->	Halamix2 (Halamix2@moz-4fhooo.syrion.pl) has joined #rust
2015-05-29 15:53:11	<--	det (chris@moz-6q2one.lv.cox.net) has quit (Connection closed)
2015-05-29 15:53:12	ogham	looks like you're trying to interact with some kinda hardware?
2015-05-29 15:53:25	-->	hjr3 (hradtke@moz-lei.av4.169.69.IP) has joined #rust
2015-05-29 15:53:33	geri	its cross compiled to a arm device
2015-05-29 15:53:43	-->	nwin (textual@moz-rmebj6.pools.arcor-ip.net) has joined #rust
2015-05-29 15:53:44	VShell	how do you think it needs improving?
2015-05-29 15:53:53	geri	line 72 to 80
2015-05-29 15:54:06	VShell	yes, but
2015-05-29 15:54:08	geri	i declare this variable and forward it to the constructor?
2015-05-29 15:54:13	Havvy	It's not possible to have method names on the type and on values?
2015-05-29 15:54:15	geri	idk to be honest
2015-05-29 15:54:30	Ms2ger	No
2015-05-29 15:54:42	<--	Wilduck (erik@moz-q7f.8fo.42.70.IP) has quit (Client exited)
2015-05-29 15:55:09	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-29 15:55:19	geri	VShell: do you see stuff to improve?
2015-05-29 15:55:35	bluss	Havvy: what do you mean?
2015-05-29 15:55:40	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-29 15:55:45	VShell	I think that's reasonably normal. you could just do fpgaAwg { mmap: mmap, data: data, awgReg: unsafe { data.offset(AWG_BASE_ADDR) as *mut awg_reg }, ... } I guess, but not sure it'd be clearer.
2015-05-29 15:55:53	-->	tcard (tcard@moz-jdrdbk.ddns.jazztel.es) has joined #rust
2015-05-29 15:55:57	geri	VShell: not very readable :D
2015-05-29 15:55:58	-->	mib_0sqfyc (Mibbit@moz-0k0.pga.241.69.IP) has joined #rust
2015-05-29 15:56:10	VShell	geri: it's a bit more readable split up over several lines.
2015-05-29 15:56:16	ogham	I always prefer doing it not that way, too. for readability
2015-05-29 15:56:35	-->	Wilduck (erik@moz-q7f.8fo.42.70.IP) has joined #rust
2015-05-29 15:56:39	VShell	but yeah. I don't see much reason to prefer one or the other.
2015-05-29 15:56:44	<--	hjr3 (hradtke@moz-lei.av4.169.69.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2015-05-29 15:56:54	<--	mib_0sqfyc (Mibbit@moz-0k0.pga.241.69.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-29 15:57:07	geri	VShell: what about data: &mut [i32; n] instead of data: *mut [i32; n] 
2015-05-29 15:57:11	Havvy	bluss:  impl for X{ fn m () -> X { X { m: true, .. X::default() } } fn m (&self) -> X { X: { m: true, .. *self } } }
2015-05-29 15:57:44	Havvy	Which would allow both `X::m()` and X::default().m()`
2015-05-29 15:58:01	<--	harrisonclarke (harrisoncla@moz-uur7pt.eastlink.ca) has quit (Connection closed)
2015-05-29 15:58:05	ogham	geri: well, you need to access an area of memory, right? that's a pointer, not a reference
2015-05-29 15:58:07	bluss	aha
2015-05-29 15:58:20	geri	ogham: true
2015-05-29 15:58:30	kinson	https://play.rust-lang.org/?gist=acbdd4176522360b6127&version=stable I'm trying to implement to_string for my Node struct, but I can't figure out what these errors are/how to circumvent them, if someone could glance at this I'm sure the problem's pretty obvious
2015-05-29 15:58:35	bluss	Havvy: I just was in a situation where I wanted to call a static method on a value. Just to resolve it on the right type
2015-05-29 15:58:39	<--	amnn (amnn@moz-ro1qqu.ox.ac.uk) has quit (Ping timeout: 121 seconds)
2015-05-29 15:58:55	-->	hjr3 (hradtke@moz-lei.av4.169.69.IP) has joined #rust
2015-05-29 15:59:08	-->	gopar (gopar@moz-5039uj.ca.comcast.net) has joined #rust
2015-05-29 15:59:18	-->	jmbto (jmbto@moz-qebotu.hca5.8frp.0e35.2a01.IP) has joined #rust
2015-05-29 15:59:44	-->	skade (skade@moz-dn115l.web.vodafone.de) has joined #rust
2015-05-29 15:59:44	SpaceManiac	kinson: "fn to_string(&self) -> i32"
2015-05-29 15:59:58	<--	Defaultti (Defaultti@moz-bmdn13.kapsi.fi) has quit (Quit: Quitting.)
2015-05-29 16:00:14	SpaceManiac	but, std already has a ToString trait which you could probably use.
2015-05-29 16:00:16	-->	not_gavin (gavin@moz-46i.6l4.14.76.IP) has joined #rust
2015-05-29 16:00:26	-->	eibwen (eibwen@moz-4fjp9d.dip0.t-ipconnect.de) has joined #rust
2015-05-29 16:00:46	Havvy	If you want the specific example, Style::bold() should create a new Style with only bold, and `(Style { is_underline: true, .. Style::default() }).bold()` should create a new style that is both bold and underline.  One of them is a static function, the other is a method. But they're both considered methods to impl.
2015-05-29 16:01:04	-->	Defaultti (Defaultti@moz-bmdn13.kapsi.fi) has joined #rust
2015-05-29 16:01:10	@steveklabnik	kinson: yes, SpaceManiac is correct about the ToString trait, but also, the error is that the signatures dont match.the i32 impl returns an i32 not a String
2015-05-29 16:01:19	@steveklabnik	which is what the error is saying
2015-05-29 16:01:21	<--	hjr3 (hradtke@moz-lei.av4.169.69.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2015-05-29 16:01:34	-->	amnn (amnn@moz-ro1qqu.ox.ac.uk) has joined #rust
2015-05-29 16:01:47	-->	djhworld (djhworld@moz-uag.hpf.10.94.IP) has joined #rust
2015-05-29 16:01:51	--	chmanchester is now known as chmanchester|afk
2015-05-29 16:02:36	-->	ramn (ramn@moz-btcndg.customers.ownit.se) has joined #rust
2015-05-29 16:02:48	ogham	geri: Also, just a stylistic thing: I always look at *mut pointers differently from &mut ones
2015-05-29 16:02:57	-->	ChrisHolcombe (chris@moz-mtfab9.or.comcast.net) has joined #rust
2015-05-29 16:03:40	<--	cholcombe (chris@moz-mtfab9.or.comcast.net) has quit (Connection closed)
2015-05-29 16:03:52	-->	sigma (sigma@moz-k1ghg8.range109-153.btcentralplus.com) has joined #rust
2015-05-29 16:04:00	-->	fabiand (fabiand@moz-pl12m9.dip0.t-ipconnect.de) has joined #rust
2015-05-29 16:04:07	kinson	steveklabnik:I changed the return type but encounter more errors with regards to the trait, https://play.rust-lang.org/?gist=7be122bee7b1175e2467&version=stable
2015-05-29 16:04:12	ogham	I mean, unofficially. It makes me think "be careful, you're playing with memory addresses and offsets here"
2015-05-29 16:05:22	<--	aravindavk (aravinda@moz-bg8.u1n.172.122.IP) has quit (Quit: Konversation terminated!)
2015-05-29 16:06:06	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-29 16:06:35	Havvy	ogham:  Okay...I can't seem to do what I wanted with my last PR because Rust semantics don't allow it. :S
2015-05-29 16:06:37	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-29 16:06:38	<--	p32blo (p32blo@moz-v36o87.cpe.netcabo.pt) has quit (Ping timeout: 121 seconds)
2015-05-29 16:06:41	<--	c0a8 (joel@moz-6ampnk.gtri.gatech.edu) has quit (Ping timeout: 121 seconds)
2015-05-29 16:06:46	ogham	Havvy: yeah, I saw that! weird.
2015-05-29 16:06:55	<--	lov2cod1 (Adium@moz-of7l8d.eodv.k60l.0119.2620.IP) has quit (Quit: Leaving.)
2015-05-29 16:07:18	<--	phore (phore@moz-p8hanb.cable.rogers.com) has quit (Quit: if you're seeing this, i ran out of coffee. send help.)
2015-05-29 16:07:40	-->	SpaceManiac_ (Tad@moz-bd3s4o.dyn.suddenlink.net) has joined #rust
2015-05-29 16:07:42	Havvy	Actually, I might as well add Style::new() just for completeness.
2015-05-29 16:08:04	-->	dstrbad (dstrbad@moz-teorbf.dsl.iskon.hr) has joined #rust
2015-05-29 16:08:48	-->	gleb (gleb@moz-3u1drv.rusanovka-net.kiev.ua) has joined #rust
2015-05-29 16:09:05	ogham	Havvy: It really does see it as a duplicate method: https://play.rust-lang.org
2015-05-29 16:09:10	ogham	...that's an unhelpful link.
2015-05-29 16:09:12	-->	det (chris@moz-6q2one.lv.cox.net) has joined #rust
2015-05-29 16:09:15	ogham	http://is.gd/Zt2JQG
2015-05-29 16:10:13	<--	kgrandon (Adium@moz-4qc9b1.hfc.comcastbusiness.net) has quit (Quit: Leaving.)
2015-05-29 16:10:28	-->	zen|merge (quassel@moz-6vk.712.73.109.IP) has joined #rust
2015-05-29 16:10:30	<--	SpaceManiac (Tad@moz-bd3s4o.dyn.suddenlink.net) has quit (Ping timeout: 121 seconds)
2015-05-29 16:10:42	<--	fabiand (fabiand@moz-pl12m9.dip0.t-ipconnect.de) has quit (Quit: Verlassend)
2015-05-29 16:11:08	<--	xcombelle (xcombelle@moz-o9pb7i.abo.wanadoo.fr) has quit (Connection closed)
2015-05-29 16:13:19	-->	kgrandon (Adium@moz-4qc9b1.hfc.comcastbusiness.net) has joined #rust
2015-05-29 16:13:58	-->	pcwalton (pcwalton@moz-l8ebtf.sfo1.mozilla.com) has joined #rust
2015-05-29 16:13:58	--	Mode #rust [+ao pcwalton pcwalton] by ChanServ
2015-05-29 16:14:02	<--	maraoz (maraoz@moz-nsp.46i.103.181.IP) has quit (Quit: Leaving)
2015-05-29 16:14:09	-->	maraoz (maraoz@moz-nsp.46i.103.181.IP) has joined #rust
2015-05-29 16:14:27	Havvy	ogham:  Sent another PR.
2015-05-29 16:14:31	<--	nwin (textual@moz-rmebj6.pools.arcor-ip.net) has quit (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
2015-05-29 16:14:45	Havvy	Just the addition of a `new` method so that `default` doesn't have to be used everywhere.
2015-05-29 16:15:32	--	irc: disconnected from server
2015-05-29 16:15:44	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-29 16:15:44	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-29 16:15:44	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-29 16:15:44	--	Channel #rust: 1026 nicks (14 ops, 0 halfops, 1 voice, 1011 normals)
2015-05-29 16:15:48	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-29 16:15:49	lukas_	regarding the syntax structure I mean
2015-05-29 16:16:12	ogham	Havvy: Merged it before Travis completed! #yolo
2015-05-29 16:16:28	<--	Soulfoam (User@moz-f6sd9k.custommoversservices.com) has quit (Ping timeout: 121 seconds)
2015-05-29 16:16:29	-->	Azdle (Azdle@moz-738.tg8.232.50.IP) has joined #rust
2015-05-29 16:16:29	-->	Hannibal_Smith (nico@moz-itj1vp.retail.telecomitalia.it) has joined #rust
2015-05-29 16:16:30	Havvy	ogham:  The test suite passed on my end. ;)
2015-05-29 16:16:53	ogham	You seem trustworthy!
2015-05-29 16:16:56	Havvy	ogham:  Want to release to Crates.io so that I can remove a TODO from my project?
2015-05-29 16:17:04	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-29 16:17:08	ogham	Sure thing. 0.6.1?
2015-05-29 16:17:28	Havvy	Oh, did you already release with the other features?
2015-05-29 16:17:35	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-29 16:17:39	<--	mbudde (mbudde@moz-vmd8oc.customer.tdc.net) has quit (Ping timeout: 121 seconds)
2015-05-29 16:17:58	ogham	yeah
2015-05-29 16:18:14	<--	fabianvf (fabianvf@moz-fjqmui.va.comcast.net) has quit (Connection closed)
2015-05-29 16:18:18	-->	fabianvf (fabianvf@moz-fjqmui.va.comcast.net) has joined #rust
2015-05-29 16:18:28	ogham	and now I've done another one!
2015-05-29 16:18:38	-->	lenstr (lenstr@moz-lhu.vju.25.171.IP) has joined #rust
2015-05-29 16:19:50	<--	ramn (ramn@moz-btcndg.customers.ownit.se) has quit (Ping timeout: 121 seconds)
2015-05-29 16:19:53	<--	loyd (loyd@moz-jsb.32f.108.213.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 16:21:00	<--	Gyro (gyro@moz-38c.96l.252.66.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 16:21:11	<--	Lee1092 (uid13277@moz-p2e1ii.brockwell.irccloud.com) has quit (Quit: Connection closed for inactivity)
2015-05-29 16:21:43	<--	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-29 16:21:50	jethrogb	is there a way to group multiple items together for purposes of conditional compilation?
2015-05-29 16:22:10	<--	lenstr (lenstr@moz-lhu.vju.25.171.IP) has quit (Quit: Leaving...)
2015-05-29 16:22:13	ogham	jethrogb: Check out features in Cargo
2015-05-29 16:22:34	--	SpaceManiac_ is now known as SpaceManiac
2015-05-29 16:22:38	SpaceManiac	jethrogb: you could put them in a mod
2015-05-29 16:22:43	<--	w4ffles (textual@moz-g7g.toe.144.12.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-29 16:23:21	-->	duesenfranz_ (jona@moz-711djm.tirol.surfer.at) has joined #rust
2015-05-29 16:23:25	-->	w4ffles (textual@moz-g7g.toe.144.12.IP) has joined #rust
2015-05-29 16:23:34	jethrogb	ogham: huh?
2015-05-29 16:24:06	ogham	jethrogb: Sorry, I think I misunderstood the question
2015-05-29 16:24:27	<--	Wilduck (erik@moz-q7f.8fo.42.70.IP) has quit (Client exited)
2015-05-29 16:24:45	ogham	putting them in a module (as SpaceManiac said) then putting #[cfg(your_feature)] at the top of it would make everything in that module optional
2015-05-29 16:25:44	--	irc: disconnected from server
2015-05-29 16:25:56	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-29 16:25:56	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-29 16:25:56	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-29 16:25:56	--	Channel #rust: 1022 nicks (14 ops, 0 halfops, 1 voice, 1007 normals)
2015-05-29 16:26:00	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-29 16:27:15	<--	pcwalton (pcwalton@moz-l8ebtf.sfo1.mozilla.com) has quit (Client exited)
2015-05-29 16:27:29	<--	Lurkin (Lurkin@moz-prcvb7.mpls.qwest.net) has quit (Quit: Leaving)
2015-05-29 16:28:02	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-29 16:28:11	--	NameNotFound is now known as zz_NameNotFound
2015-05-29 16:28:44	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-29 16:29:17	<--	hohoho (hohoho@moz-jlf4am.pools.vodafone-ip.de) has quit (Quit: Leaving)
2015-05-29 16:30:30	--	chmanchester|afk is now known as chmanchester
2015-05-29 16:30:42	-->	zyphrus (David@moz-1a4.urk.98.101.IP) has joined #rust
2015-05-29 16:30:55	-->	pcwalton (pcwalton@moz-l8ebtf.sfo1.mozilla.com) has joined #rust
2015-05-29 16:30:56	--	Mode #rust [+ao pcwalton pcwalton] by ChanServ
2015-05-29 16:31:04	<--	tcard (tcard@moz-jdrdbk.ddns.jazztel.es) has quit (Client exited)
2015-05-29 16:31:41	-->	A205B064 (A205B064@moz-9s9nhk.nap.wideopenwest.com) has joined #rust
2015-05-29 16:32:46	--	zz_NameNotFound is now known as NameNotFound
2015-05-29 16:33:07	<--	Guest38 (textual@moz-4hh.6p3.217.74.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-29 16:34:09	<--	maraoz (maraoz@moz-nsp.46i.103.181.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 16:35:31	@steveklabnik	kinson: right. an i32 is not a Node<T>, so it doesn't have  val
2015-05-29 16:35:39	-->	survi (philip@moz-ub651l.dip0.t-ipconnect.de) has joined #rust
2015-05-29 16:39:00	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-29 16:39:09	<--	swgillespie (swgillespie@moz-rn1.vmq.232.104.IP) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-29 16:39:32	-->	Racquetball (namestolenw@moz-dnlovt.cpe.twtelecom.net) has joined #rust
2015-05-29 16:39:41	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-29 16:39:49	-->	nott (nott@moz-to4.06o.57.86.IP) has joined #rust
2015-05-29 16:40:06	<--	Halamix2 (Halamix2@moz-4fhooo.syrion.pl) has quit (Ping timeout: 121 seconds)
2015-05-29 16:40:22	-->	O01eg (o01eg@moz-stqs0u.1si9.4n8f.2698.2a02.IP) has joined #rust
2015-05-29 16:40:47	<--	survi (philip@moz-ub651l.dip0.t-ipconnect.de) has quit (Client exited)
2015-05-29 16:40:50	@steveklabnik	kinson: i made some changes, this compile: http://is.gd/xxJ4KW
2015-05-29 16:41:03	@steveklabnik	kinson: ToString is already in the standard library and imported by the prelude http://doc.rust-lang.org/stable/std/string/trait.ToString.html
2015-05-29 16:41:15	<--	Savago (Savago@moz-8hd.3b6.246.162.IP) has quit (Client exited)
2015-05-29 16:41:32	-->	gpillow (Mibbit@moz-hd5u4k.pasty.net) has joined #rust
2015-05-29 16:41:33	<--	djhworld (djhworld@moz-uag.hpf.10.94.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-29 16:41:45	<--	daschl (Adium@moz-oirn1i.vie.surfer.at) has quit (Quit: Leaving.)
2015-05-29 16:42:03	-->	alaska (alaska@moz-8bdjem.fios.verizon.net) has joined #rust
2015-05-29 16:42:59	-->	survi (philip@moz-ub651l.dip0.t-ipconnect.de) has joined #rust
2015-05-29 16:43:27	-->	hjr3 (hradtke@moz-lei.av4.169.69.IP) has joined #rust
2015-05-29 16:44:03	<--	Guest58 (textual@moz-q0f3g0.static.twtelecom.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-29 16:45:07	<--	alaska (alaska@moz-8bdjem.fios.verizon.net) has quit (A TLS packet with unexpected length was received.)
2015-05-29 16:45:13	-->	genbattle (genbattle@moz-r09mao.xtra.co.nz) has joined #rust
2015-05-29 16:45:20	-->	alaska (alaska@moz-8bdjem.fios.verizon.net) has joined #rust
2015-05-29 16:45:21	lukas_	sorry to ask, but I can't find any docs on it: Whats the idiomatic way to search a vector for a certain element, getting an index?
2015-05-29 16:45:57	<--	Racquetball (namestolenw@moz-dnlovt.cpe.twtelecom.net) has quit (Quit: leaving)
2015-05-29 16:46:06	lukas_	do I really have to use an iterator over it?
2015-05-29 16:46:14	XMPPwocky	rusti: vec![1, 2, 78, 90, -3].iter().position(|&x| x == 78)
2015-05-29 16:46:15	--	Notice(playbot): Some(2)
2015-05-29 16:46:20	ogham	lukas_: Yeah, iterator#position
2015-05-29 16:46:23	@steveklabnik	lukas_: http://doc.rust-lang.org/stable/std/vec/struct.Vec.html#method.position_elem
2015-05-29 16:46:25	-->	Guest38 (textual@moz-4hh.6p3.217.74.IP) has joined #rust
2015-05-29 16:46:31	-->	jviereck (Adium@moz-8msfvp.dynamic.hispeed.ch) has joined #rust
2015-05-29 16:46:31	@steveklabnik	unstable for now though
2015-05-29 16:46:42	gleb	is it possible to chain a slice of iterators into one iterator? I don't think `chain` would work because its return type depends on the input type
2015-05-29 16:46:50	ogham	steveklabnik: ooh, never seen that before
2015-05-29 16:46:56	rkruppe	lukas_: What's wrong with an iterator?
2015-05-29 16:47:29	XMPPwocky	gleb: look into .flat_map
2015-05-29 16:47:39	gleb	XMPPwocky: thanks
2015-05-29 16:49:28	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-29 16:49:35	<--	johnsoft (johnsoft@moz-69mrig.res.rr.com) has quit (Quit: Leaving)
2015-05-29 16:49:42	-->	johnsoft (johnsoft@moz-69mrig.res.rr.com) has joined #rust
2015-05-29 16:49:44	-->	larhat (Adium@moz-vlo5br.cable.virginm.net) has joined #rust
2015-05-29 16:49:59	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-29 16:50:22	<--	jgallagher (john@moz-d5e8oc.hfc.comcastbusiness.net) has quit (Client exited)
2015-05-29 16:50:51	VShell	vec![1, 42, 63, 56].iter().position(|&x| x == 63) works in stable Rust, I think.
2015-05-29 16:50:54	-->	maraoz (maraoz@moz-fsj.vqe.47.181.IP) has joined #rust
2015-05-29 16:51:09	VShell	oh, someone already said that.
2015-05-29 16:51:14	<--	survi (philip@moz-ub651l.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2015-05-29 16:51:22	-->	survi (philip@moz-ub651l.dip0.t-ipconnect.de) has joined #rust
2015-05-29 16:51:26	Havvy	playbot: vec![1, 42, 63, 56].iter().position(|&x| x == 63)
2015-05-29 16:51:28	--	Notice(playbot): Some(2)
2015-05-29 16:51:32	ogham	Hey #rust, can anyone tell me if Rc pointers are the correct thing to use here? https://github.com/ogham/rust-tz/blob/master/src/lib.rs#L85
2015-05-29 16:52:11	ogham	There are many elements in transitions, and few elements in local_time_types, so I thought it would be better to reference the data instead of cloning it for each element in the first vec.
2015-05-29 16:52:41	<--	grodan (Mibbit@moz-9mncl4.business.telia.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-29 16:53:57	ogham	The other option is to return both vectors, and have one contain indexes into the other, but I'd like to make sure all the indexes are actually in bounds
2015-05-29 16:55:01	Havvy	If you could freeze local_time_types, you could return references.
2015-05-29 16:55:08	lorenzb	Does anybody know where I can find information about higher-ranked types for life times?
2015-05-29 16:55:29	<--	logan_e (logan_e@moz-ltn.qg3.218.73.IP) has quit (Client exited)
2015-05-29 16:55:48	RC9	ogham - unrelated to your question but does exa work on windowas
2015-05-29 16:55:48	ogham	Havvy: freeze?
2015-05-29 16:55:52	<--	survi (philip@moz-ub651l.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2015-05-29 16:55:53	<--	ctennis (ctennis@moz-7lm.a44.102.99.IP) has quit (Quit: Leaving...)
2015-05-29 16:56:10	ogham	RC9: No, sorry :( there's an open bug for it that lists the things I still need to do for windows compatibility
2015-05-29 16:56:22	ogham	https://github.com/ogham/exa/issues/32
2015-05-29 16:56:41	Havvy	Freeze as in make immutable, e.g. by taking a reference to.
2015-05-29 16:56:48	ogham	oh, right
2015-05-29 16:57:07	ogham	well after the first for loop, I'm not mutating it anymore
2015-05-29 16:57:16	<--	jviereck (Adium@moz-8msfvp.dynamic.hispeed.ch) has quit (Quit: Leaving.)
2015-05-29 16:57:37	RC9	ty ogham 
2015-05-29 16:57:41	RC9	il probably just chill mostly
2015-05-29 16:57:51	RC9	windows 10 will be throwing a wrench in with command line anyway
2015-05-29 16:57:59	-->	Racquetball (namestolenw@moz-dnlovt.cpe.twtelecom.net) has joined #rust
2015-05-29 16:58:29	ChrisHolcombe	in general if i'm building a library of functions should I be borrowing values instead of taking ownership?  I built my library with ownership at first and it seems to be complicating things with using it
2015-05-29 16:58:50	<--	Racquetball (namestolenw@moz-dnlovt.cpe.twtelecom.net) has quit (Quit: leaving)
2015-05-29 16:59:54	@bstrie	ChrisHolcombe: if your functions don't need ownership then I'd say have them borrow instead, yes
2015-05-29 17:00:11	<--	__mark__ (mark@moz-udut16.dynamic.chello.pl) has quit (Client exited)
2015-05-29 17:00:21	-->	ramn (ramn@moz-btcndg.customers.ownit.se) has joined #rust
2015-05-29 17:00:24	ChrisHolcombe	i think initially it was hard for me to tell but as i use rust more i think i need ownership less and less
2015-05-29 17:00:26	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-29 17:00:42	santiago	Is there any instructions or a wiki or something on how to get rust set up so you can cross-compile? (build linux binaries on mac)
2015-05-29 17:00:58	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-29 17:01:25	@steveklabnik	ChrisHolcombe: generally the order is &T, &mut T, T
2015-05-29 17:01:34	@steveklabnik	but rules are meant to be broken :)
2015-05-29 17:01:38	ChrisHolcombe	ok yeah i'm thinking the same thing as i use it more
2015-05-29 17:01:39	bluss	ChrisHolcombe: that sounds like a good process if you take better advantage of the language the more you learn it
2015-05-29 17:01:42	ChrisHolcombe	start with &T
2015-05-29 17:02:08	-->	logan_e (logan_e@moz-ltn.qg3.218.73.IP) has joined #rust
2015-05-29 17:02:10	@steveklabnik	santiago: so the documentation for this is terrible and we're generally working on making it more ergomatic
2015-05-29 17:02:32	@steveklabnik	santiago: the short of it is, every rust compiler is a cross compiler, but you also need to have the standard library compiled for your target triple too
2015-05-29 17:02:59	santiago	steveklabnik: Right. I assume I have to build from source or something for this. 
2015-05-29 17:03:01	<--	logan_e (logan_e@moz-ltn.qg3.218.73.IP) has quit (Client exited)
2015-05-29 17:03:07	<--	jml (jml@moz-mqpurn.178.in-addr.arpa) has quit (Ping timeout: 121 seconds)
2015-05-29 17:03:14	@steveklabnik	santiago: https://kwantam.github.io/Rust_cross_bootstrapping.html is a recent post about a new platform, but if you just want to mac -> linux x86, it should be much simpler
2015-05-29 17:04:01	@steveklabnik	https://github.com/rust-lang/rust/issues/15228 is a bug but might have helpful info
2015-05-29 17:04:17	<--	joneshf-laptop (joneshf@moz-l4h.b5s.208.98.IP) has quit (Connection closed)
2015-05-29 17:04:35	santiago	steveklabnik: Wowzers. OK, thanks. 
2015-05-29 17:04:37	<--	nott (nott@moz-to4.06o.57.86.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 17:04:42	@steveklabnik	and https://gist.github.com/mcpherrinm/11239842
2015-05-29 17:04:46	@steveklabnik	which is much shorter
2015-05-29 17:05:06	-->	munksgaard (munksgaard@moz-478pev.u.parknet.dk) has joined #rust
2015-05-29 17:05:10	@steveklabnik	and even though it's a year old, still looks right to me
2015-05-29 17:05:19	@steveklabnik	as i said, docs are terrible :( i apologize
2015-05-29 17:05:39	santiago	steveklabnik: No problem. If I can get this working, I will let you know if I can distill it down into some better docs or something. 
2015-05-29 17:05:46	-->	jml (jml@moz-mqpurn.178.in-addr.arpa) has joined #rust
2015-05-29 17:05:49	mcpherrin	If the gist of mine doesn't work, please let me know -- I don't want wrong informatino online!
2015-05-29 17:06:14	@steveklabnik	that'd be great
2015-05-29 17:06:27	santiago	mcpherrin: Will do, though I am not trying to build for arm, so I don't know if it'll translate directly.
2015-05-29 17:06:31	<--	willem (willem@moz-facs2s.dynamic.upc.nl) has quit (Quit: leaving)
2015-05-29 17:06:44	-->	Rym (y@moz-c2u.sd4.38.217.IP) has joined #rust
2015-05-29 17:06:44	-->	ctennis (ctennis@moz-vcpg3c.in.comcast.net) has joined #rust
2015-05-29 17:06:46	<--	kecolus (kecolus@moz-i7cb3r.fios.verizon.net) has quit (Quit: Leaving)
2015-05-29 17:06:58	mcpherrin	santiago: Oh, I see above you want to build linux binaries from mac
2015-05-29 17:07:17	mcpherrin	santiago: well it so happens I'm on a mac and linux, so I could check if that works!
2015-05-29 17:07:23	<--	ramn (ramn@moz-btcndg.customers.ownit.se) has quit (Ping timeout: 121 seconds)
2015-05-29 17:07:38	mcpherrin	I'm not sure how to get a cross-compiling g++ or clang though
2015-05-29 17:08:00	<--	lorenzb (lorenzb@moz-vp0hu9.ethz.ch) has quit (Quit: Computer went to sleep)
2015-05-29 17:08:11	-->	Guest58 (textual@moz-cdsk1r.res.rr.com) has joined #rust
2015-05-29 17:08:56	--	irc: disconnected from server
2015-05-29 17:09:08	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-29 17:09:08	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-29 17:09:08	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-29 17:09:08	--	Channel #rust: 1018 nicks (14 ops, 0 halfops, 1 voice, 1003 normals)
2015-05-29 17:09:12	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-29 17:09:21	<--	mib_irkcqy (Mibbit@moz-t38o93.highway.telekom.at) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-29 17:09:36	-->	chippers (chip@moz-26d.2gk.254.199.IP) has joined #rust
2015-05-29 17:09:42	santiago	Well I am pretty sure I don't just have that lying around. 
2015-05-29 17:10:00	<--	c_wraith (c_wraith@moz-7i8.v6v.191.131.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 17:10:00	<--	skade (skade@moz-dn115l.web.vodafone.de) has quit (Connection closed)
2015-05-29 17:10:22	--	irc: disconnected from server
2015-05-29 17:10:34	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-29 17:10:34	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-29 17:10:34	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-29 17:10:34	--	Channel #rust: 1016 nicks (14 ops, 0 halfops, 1 voice, 1001 normals)
2015-05-29 17:10:38	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-29 17:11:24	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-29 17:11:43	<--	ChrisHolcombe (chris@moz-mtfab9.or.comcast.net) has quit (A TLS packet with unexpected length was received.)
2015-05-29 17:11:54	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-29 17:11:57	-->	c_wraith (c_wraith@moz-7i8.v6v.191.131.IP) has joined #rust
2015-05-29 17:12:00	-->	cwraith (c_wraith@moz-7i8.v6v.191.131.IP) has joined #rust
2015-05-29 17:12:04	<--	c_wraith (c_wraith@moz-7i8.v6v.191.131.IP) has quit (Quit: Leaving)
2015-05-29 17:12:07	<--	cwraith (c_wraith@moz-7i8.v6v.191.131.IP) has quit (Quit: Leaving)
2015-05-29 17:12:19	-->	cholcombe (chris@moz-mtfab9.or.comcast.net) has joined #rust
2015-05-29 17:14:40	-->	FreeFull (freefull@moz-o5b738.range86-156.btcentralplus.com) has joined #rust
2015-05-29 17:14:41	-->	saterus (saterus@moz-6vv.fih.194.209.IP) has joined #rust
2015-05-29 17:15:07	-->	swgillespie (swgillespie@moz-rn1.vmq.232.104.IP) has joined #rust
2015-05-29 17:15:38	<--	tytouf (tytouf@moz-84u6a1.rev.sfr.net) has quit (Ping timeout: 121 seconds)
2015-05-29 17:16:33	<--	hjr3 (hradtke@moz-lei.av4.169.69.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2015-05-29 17:17:32	<--	nodweber (nodweber@moz-knt.fgq.178.5.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-29 17:17:51	<--	giucam (giucam@moz-iv0nnc.bb.dnainternet.fi) has quit (Ping timeout: 121 seconds)
2015-05-29 17:19:42	<--	maraoz (maraoz@moz-fsj.vqe.47.181.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 17:20:13	<--	areski (areski@moz-qrjahi.user.ono.com) has quit (Ping timeout: 121 seconds)
2015-05-29 17:20:47	-->	hjr3 (hradtke@moz-lei.av4.169.69.IP) has joined #rust
2015-05-29 17:21:48	<--	SneakySnake (nya@moz-i9is4u.pool.telekom.hu) has quit (Quit: Leaving)
2015-05-29 17:22:21	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-29 17:22:37	-->	rudolph (rudolph@moz-2j5.b3k.89.195.IP) has joined #rust
2015-05-29 17:23:02	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-29 17:23:05	<--	rudolph (rudolph@moz-2j5.b3k.89.195.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-29 17:23:16	<--	LRN (LRN@moz-63ipbh.nationalcablenetworks.ru) has quit (Ping timeout: 121 seconds)
2015-05-29 17:23:26	-->	rudolph (rudolph@moz-2j5.b3k.89.195.IP) has joined #rust
2015-05-29 17:23:56	-->	fredrik (fredrik@moz-2b08ue.priv.bahnhof.se) has joined #rust
2015-05-29 17:25:02	<--	kimwonyong (kimwonyong@moz-gfp.vhi.163.221.IP) has quit (Connection closed)
2015-05-29 17:25:30	-->	paupau (grrrr@moz-rc7fph.static.monkeybrains.net) has joined #rust
2015-05-29 17:27:24	<--	jdm (jdm@moz-1s76ai.dsl.teksavvy.com) has quit (Quit: )
2015-05-29 17:27:41	-->	errordeveloper (ilya@moz-ono.0eu.201.90.IP) has joined #rust
2015-05-29 17:28:03	<--	hjr3 (hradtke@moz-lei.av4.169.69.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2015-05-29 17:28:47	-->	nodweber (nodweber@moz-knt.fgq.178.5.IP) has joined #rust
2015-05-29 17:28:51	<--	andre (andre@moz-rnd.3qv.76.201.IP) has quit (Quit: leaving)
2015-05-29 17:29:04	<--	][ (Mibbit@moz-dfgt5h.apxalarm.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-29 17:29:08	<--	jeffasinger (jeff@moz-b6rfi7.res.rr.com) has quit (Client exited)
2015-05-29 17:29:37	<--	paupau (grrrr@moz-rc7fph.static.monkeybrains.net) has quit (Ping timeout: 121 seconds)
2015-05-29 17:29:55	<--	jmbto (jmbto@moz-qebotu.hca5.8frp.0e35.2a01.IP) has quit (Quit: WeeChat 1.1.1)
2015-05-29 17:30:05	-->	mib_3msk22 (Mibbit@moz-44jjpv.nationalcablenetworks.ru) has joined #rust
2015-05-29 17:30:18	<--	mib_3msk22 (Mibbit@moz-44jjpv.nationalcablenetworks.ru) has left #rust
2015-05-29 17:30:31	-->	paupau (grrrr@moz-rc7fph.static.monkeybrains.net) has joined #rust
2015-05-29 17:30:39	<--	Hannibal_Smith (nico@moz-itj1vp.retail.telecomitalia.it) has quit (Quit: Leaving)
2015-05-29 17:31:44	<--	errordeveloper (ilya@moz-ono.0eu.201.90.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 17:32:35	-->	_Vi (vi@moz-bbs.vhj.131.104.IP) has joined #rust
2015-05-29 17:33:13	<--	DerisiveLogic (smuxi@moz-1jqqlg.biz.rr.com) has quit (Ping timeout: 121 seconds)
2015-05-29 17:33:18	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-29 17:33:32	<--	Guest67 (textual@moz-8aocg9.ri.cox.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-29 17:33:48	-->	frankmcsherry (frankmcsher@moz-ng0au8.dyn.telefonica.de) has joined #rust
2015-05-29 17:33:49	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-29 17:33:52	<--	atomic (atomic@moz-67r1nt.torservers.net) has quit (Ping timeout: 121 seconds)
2015-05-29 17:34:44	<--	kmicu (kmicu@moz-uga.edn.218.91.IP) has quit (Client exited)
2015-05-29 17:34:56	geri	steveklabnik: my low level app works great!
2015-05-29 17:35:01	@steveklabnik	geri: :)
2015-05-29 17:37:36	-->	kamilc__ (kamil@moz-lrfgjm.play-internet.pl) has joined #rust
2015-05-29 17:37:36	<--	rudolph (rudolph@moz-2j5.b3k.89.195.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-29 17:38:14	-->	c_wraith (c_wraith@moz-7i8.v6v.191.131.IP) has joined #rust
2015-05-29 17:38:29	<--	anoobis (Mibbit@moz-cf2t5c.hfc.comcastbusiness.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-29 17:38:39	<--	kamilc__ (kamil@moz-lrfgjm.play-internet.pl) has quit (Quit: Linkinus - http://linkinus.com)
2015-05-29 17:38:45	-->	LRN (LRN@moz-63ipbh.nationalcablenetworks.ru) has joined #rust
2015-05-29 17:38:56	-->	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has joined #rust
2015-05-29 17:39:18	-->	DerisiveLogic (smuxi@moz-1jqqlg.biz.rr.com) has joined #rust
2015-05-29 17:39:52	<--	sigma (sigma@moz-k1ghg8.range109-153.btcentralplus.com) has quit (Ping timeout: 121 seconds)
2015-05-29 17:40:44	<--	gopar (gopar@moz-5039uj.ca.comcast.net) has quit (Quit: Leaving)
2015-05-29 17:40:56	-->	mujou (mujou@moz-rko6lo.ocn.ne.jp) has joined #rust
2015-05-29 17:41:20	<--	tkellen (tkellen@moz-f5ji1n.vt.comcast.net) has quit (Client exited)
2015-05-29 17:43:25	-->	rudolph (rudolph@moz-2j5.b3k.89.195.IP) has joined #rust
2015-05-29 17:44:36	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-29 17:45:15	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-29 17:46:08	<--	wipeD (wipeD@moz-on23i5.dip0.t-ipconnect.de) has quit (Connection closed)
2015-05-29 17:46:15	-->	ukarlsson (ukarlsson@moz-d2p.ihp.121.192.IP) has joined #rust
2015-05-29 17:46:24	<--	Racquetball (namestolenw@moz-dnlovt.cpe.twtelecom.net) has quit (Quit: leaving)
2015-05-29 17:46:34	-->	Racquetball (namestolenw@moz-dnlovt.cpe.twtelecom.net) has joined #rust
2015-05-29 17:46:40	<--	kgrandon (Adium@moz-4qc9b1.hfc.comcastbusiness.net) has quit (Quit: Leaving.)
2015-05-29 17:47:02	<--	Racquetball (namestolenw@moz-dnlovt.cpe.twtelecom.net) has quit (Quit: leaving)
2015-05-29 17:47:05	<--	jshs (jshs@moz-dske9q.dip0.t-ipconnect.de) has quit (Client exited)
2015-05-29 17:47:57	<--	ellinokon (ellinokon@moz-gh5.r2h.62.178.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-29 17:48:01	-->	ellinokon (ellinokon@moz-gh5.r2h.62.178.IP) has joined #rust
2015-05-29 17:48:07	-->	Racquetball (namestolenw@moz-dnlovt.cpe.twtelecom.net) has joined #rust
2015-05-29 17:48:27	<--	rudolph (rudolph@moz-2j5.b3k.89.195.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-29 17:48:55	nathan7	mcpherrin: there are things like crosstool to help you there
2015-05-29 17:49:06	nathan7	mcpherrin: if you're willing to deal with Gentoo, crossdev is amazing
2015-05-29 17:49:28	-->	Fiveside (fiveside@moz-t2eatg.vsp.com) has joined #rust
2015-05-29 17:49:40	mcpherrin	nathan7: Unless gentoo works on OS X, I don't think that helps with getting a cross compiler there
2015-05-29 17:49:41	nathan7	mcpherrin: most of my recent cross-compiling has been using Buildroot and OpenWRT's buildroot though
2015-05-29 17:49:44	nathan7	mcpherrin: ah
2015-05-29 17:49:49	mcpherrin	:)
2015-05-29 17:49:59	nathan7	Gentoo works on OS X, I bet q=
2015-05-29 17:50:05	nathan7	Not sure if crossdev does, though
2015-05-29 17:50:35	mcpherrin	nathan7: at that point you may as well just compile GCC -- bringing in a whole OS to avoid doing that is kinda skirting the issue
2015-05-29 17:50:57	<--	munksgaard (munksgaard@moz-478pev.u.parknet.dk) has quit (Ping timeout: 121 seconds)
2015-05-29 17:51:15	<--	Lilly (Lilly@moz-pfkvo9.bredband.comhem.se) has quit (Connection closed)
2015-05-29 17:51:53	<--	ahal (ahal@moz-b8e0a0.cpe.pppoe.ca) has quit (A TLS packet with unexpected length was received.)
2015-05-29 17:52:15	<--	slomo (slomo@moz-p8m0g2.net) has quit (Quit: Ex-Chat)
2015-05-29 17:52:17	-->	harrisonclarke (harrisoncla@moz-uur7pt.eastlink.ca) has joined #rust
2015-05-29 17:52:53	<--	Racquetball (namestolenw@moz-dnlovt.cpe.twtelecom.net) has quit (Quit: leaving)
2015-05-29 17:53:46	<--	tadh (quassel@moz-iq6hhs.biz.rr.com) has quit (Connection closed)
2015-05-29 17:54:06	<--	dstrbad (dstrbad@moz-teorbf.dsl.iskon.hr) has quit (A TLS packet with unexpected length was received.)
2015-05-29 17:54:12	<--	frankmcsherry (frankmcsher@moz-ng0au8.dyn.telefonica.de) has quit (Connection closed)
2015-05-29 17:54:26	geri	steveklabnik: see pm
2015-05-29 17:55:01	<--	saml (saml@moz-0pt9vd.cst.lightpath.net) has quit (Quit: Leaving)
2015-05-29 17:55:15	-->	hjr3 (hradtke@moz-lei.av4.169.69.IP) has joined #rust
2015-05-29 17:55:17	<--	hjr3 (hradtke@moz-lei.av4.169.69.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2015-05-29 17:55:34	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-29 17:56:05	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-29 17:56:08	-->	jnicklas (jonasnickla@moz-0ou5lc.bredband.comhem.se) has joined #rust
2015-05-29 17:56:14	-->	dinfuehr (dinfuehr@moz-4fk061.highway.telekom.at) has joined #rust
2015-05-29 17:56:57	<--	gonzaloserrano (Adium@moz-k8d.6hf.231.77.IP) has quit (Quit: Leaving.)
2015-05-29 17:58:15	-->	Sprog1 (Sprog@moz-u3bo4c.lv.cox.net) has joined #rust
2015-05-29 17:58:51	<--	saterus (saterus@moz-6vv.fih.194.209.IP) has quit (Connection closed)
2015-05-29 17:59:29	<--	hhhhhhhhhh (mike@moz-969kuj.cable.virginm.net) has quit (Quit: WeeChat 1.2)
2015-05-29 18:00:37	nathan7	mcpherrin: sure
2015-05-29 18:00:47	<--	Sprog (Sprog@moz-u3bo4c.lv.cox.net) has quit (Ping timeout: 121 seconds)
2015-05-29 18:00:47	-->	rkruppe_ (chatzilla@moz-3nj.rnu.131.95.IP) has joined #rust
2015-05-29 18:00:50	<--	ygrek (user@moz-8j9aeu.org.ua) has quit (Ping timeout: 121 seconds)
2015-05-29 18:00:57	nathan7	mcpherrin: I bet crosstool or similar works on OS X anyway
2015-05-29 18:01:09	<--	eibwen (eibwen@moz-4fjp9d.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2015-05-29 18:01:44	<--	rbranson (rbranson@moz-i7m.9o0.201.199.IP) has quit (Quit: Computer has gone to sleep.)
2015-05-29 18:01:48	kinson	I'm still struggling to figure out how to use generics and traits for to_string, I thought I fixed it, but I can't figure out why this isn't working https://play.rust-lang.org/?gist=15067144d36515ff5bfc&version=stable
2015-05-29 18:01:51	-->	playjax (chatzilla@moz-rmccb0.optusnet.com.au) has joined #rust
2015-05-29 18:02:03	<--	rkruppe (chatzilla@moz-3nj.rnu.131.95.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 18:02:14	--	rkruppe_ is now known as rkruppe
2015-05-29 18:02:44	-->	atomic (atomic@moz-vo7ult.telostor.ca) has joined #rust
2015-05-29 18:03:00	<--	tav (tav@moz-ivrq8h.range31-52.btcentralplus.com) has quit (Connection closed)
2015-05-29 18:03:15	<--	bfrog (tburdick@moz-hde.5e5.136.67.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 18:05:09	-->	rbranson (rbranson@moz-i7m.9o0.201.199.IP) has joined #rust
2015-05-29 18:05:25	-->	ajhager (aajhager@moz-mcdsgi.iplsin.sbcglobal.net) has joined #rust
2015-05-29 18:06:10	<--	pylbrecht (pylbrecht@moz-b4nhkg.dynamic.kabel-deutschland.de) has quit (Connection closed)
2015-05-29 18:06:14	<--	amnn (amnn@moz-ro1qqu.ox.ac.uk) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-29 18:06:32	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-29 18:07:03	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-29 18:07:23	-->	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has joined #rust
2015-05-29 18:08:40	<--	ziocroc (ziocroc@moz-bfu.33o.74.151.IP) has quit (Client exited)
2015-05-29 18:08:54	<--	XgF (quassel@moz-2vmms7.uk.e43.eu) has quit (Connection closed)
2015-05-29 18:09:00	-->	XgF (quassel@moz-2vmms7.uk.e43.eu) has joined #rust
2015-05-29 18:09:09	-->	tristanseifert (tristanseif@moz-r0t7ns.res.rr.com) has joined #rust
2015-05-29 18:09:13	-->	hroi (hroi@moz-d273ub.static.netgroup.dk) has joined #rust
2015-05-29 18:09:48	-->	thelink2012 (Mibbit@moz-ig7.006.59.187.IP) has joined #rust
2015-05-29 18:09:57	-->	amnn (amnn@moz-ro1qqu.ox.ac.uk) has joined #rust
2015-05-29 18:10:01	santiago	I wonder if rust could be made to work with lld. 
2015-05-29 18:10:29	<--	Boddlnagg (Patrick@moz-qc3ib5.dyn.telefonica.de) has quit (Quit: Leaving.)
2015-05-29 18:10:48	thelink2012	is there a way to do a u32 as u8 that panics if the u32 value isn't in the 0-255 range?
2015-05-29 18:11:08	<--	coryforsyth (coryforsyth@moz-q577km.static.cosmoweb.net) has quit (Client exited)
2015-05-29 18:11:32	-->	EsBe (EsBe@moz-tr2dkp.res.rr.com) has joined #rust
2015-05-29 18:11:58	ogham	kinson: I made some changes and got it to compile: http://is.gd/GoAHPt
2015-05-29 18:12:45	ogham	kinson: Your impls say they work for any T, but you're calling to_string() on Node, which is only implemented for Node<i32> and Node<String>
2015-05-29 18:12:46	bluss	kinson: Your T has no trait bound, so no trait methods are available
2015-05-29 18:13:02	<--	vodik (simon@moz-86ind4.dedicated.allstream.net) has quit (Connection closed)
2015-05-29 18:13:11	ogham	so you need to manually specify that Node<T> implements ToString
2015-05-29 18:14:03	<--	harrisonclarke (harrisoncla@moz-uur7pt.eastlink.ca) has quit (Connection closed)
2015-05-29 18:14:19	kinson	ogham: bluss: thanks! I'll go read about bounds, this is my second day playing around with rust
2015-05-29 18:14:28	<--	duesenfranz_ (jona@moz-711djm.tirol.surfer.at) has quit (Client exited)
2015-05-29 18:15:02	[dmp]	I dont really understand what the compiler is telling me here: https://play.rust-lang.org/?gist=397136aecc416389ba97&version=stable I tried to reread object traits, but guess I dont understand it that well. Any pointers would be appriciated
2015-05-29 18:15:03	Tari	thelink2012: FromPrimitive or such from the `num` crate
2015-05-29 18:15:21	<--	w4ffles (textual@moz-g7g.toe.144.12.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-29 18:16:37	bluss	[dmp]: fyi get_block has no &self parameter ( or &mut self)
2015-05-29 18:17:21	bluss	playbot now links error numbers to the error index? This is off the charts
2015-05-29 18:17:30	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-29 18:17:31	jethrogb	in https://github.com/hyperium/hyper/blob/master/src/net.rs there's trait NetworkStream: Read + Write + Any + Send + Typeable
2015-05-29 18:17:49	jethrogb	later there's impl NetworkStream for HttpStream, but HttpStream does not impl Any, Send or Typeable
2015-05-29 18:18:00	jethrogb	why does that work?
2015-05-29 18:18:09	[dmp]	oh no, i hope not the problem is that simple, bluss  :)
2015-05-29 18:18:10	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-29 18:18:20	<--	jnicklas (jonasnickla@moz-0ou5lc.bredband.comhem.se) has quit (Client exited)
2015-05-29 18:18:49	bluss	[dmp]: maybe it isn't. Your trait wasn't “object safe” and with &self I think it will be
2015-05-29 18:19:29	<--	demilux (demilux@moz-fk1.kt4.14.64.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-29 18:20:20	[dmp]	bluss: it seems to be working. Thanks. The "object safe" didnt really mean anything to be, so I didnt really look at the function signatures
2015-05-29 18:20:27	<--	lutter1 (lutter@moz-7v7ueu.PUBLIC.monkeybrains.net) has quit (Ping timeout: 121 seconds)
2015-05-29 18:21:21	-->	Savago (Savago@moz-28o.4t3.247.50.IP) has joined #rust
2015-05-29 18:22:15	-->	maraoz (maraoz@moz-13a.6d8.109.181.IP) has joined #rust
2015-05-29 18:22:15	bluss	the trait can be used as its object type, i.e &Trait or Box<Trait> and object safety just refers to if it's possible to do this or not
2015-05-29 18:22:28	<--	fabianvf (fabianvf@moz-fjqmui.va.comcast.net) has quit (Connection closed)
2015-05-29 18:22:35	bluss	certain kinds of methods make no sense on the object type, and then they block it from being possible
2015-05-29 18:22:43	<--	essem2 (Thunderbird@moz-0g3v4k.biz.rr.com) has quit (Client exited)
2015-05-29 18:24:26	[dmp]	Ah. That makes sense
2015-05-29 18:25:28	<--	Havvy (Havvy@moz-2v0ao2.5euu.k9bm.0007.2601.IP) has quit (Connection closed)
2015-05-29 18:25:46	<--	nodweber (nodweber@moz-knt.fgq.178.5.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-29 18:26:06	-->	Havvy (Havvy@moz-epv20b.wa.comcast.net) has joined #rust
2015-05-29 18:26:37	-->	phore (phore@moz-p8hanb.cable.rogers.com) has joined #rust
2015-05-29 18:27:05	&pcwalton	how do I specify a custom -L/lib/location when using cargo?
2015-05-29 18:27:19	&pcwalton	specifying it in the attributes of the extern block is OK too
2015-05-29 18:28:14	-->	rudolph (rudolph@moz-q5b.rfa.152.37.IP) has joined #rust
2015-05-29 18:28:27	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-29 18:28:32	Tari	pcwalton: build script?
2015-05-29 18:28:46	&pcwalton	I'll just use link_args
2015-05-29 18:28:59	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-29 18:29:09	<--	fkaa (tundmatu@moz-501od2.business.telia.com) has quit (Ping timeout: 121 seconds)
2015-05-29 18:29:32	-->	gopar (gopar@moz-5039uj.ca.comcast.net) has joined #rust
2015-05-29 18:29:44	-->	fkaa (tundmatu@moz-n4as1f.cust.tele2.se) has joined #rust
2015-05-29 18:30:04	<--	phore (phore@moz-p8hanb.cable.rogers.com) has quit (Quit: if you're seeing this, i ran out of coffee. send help.)
2015-05-29 18:32:09	<--	Cindela (cindela@moz-dlkpia.bb.dnainternet.fi) has quit (Ping timeout: 121 seconds)
2015-05-29 18:32:14	<--	tigrou3tac (fabien@moz-gdonfo.fbx.proxad.net) has quit (Ping timeout: 121 seconds)
2015-05-29 18:32:28	<--	tomprogrammer (thomas@moz-4v7fbd.tr5r.qept.4dd0.2001.IP) has quit (Quit: WeeChat 1.2)
2015-05-29 18:33:22	<--	Ms2ger (Ms2ger@moz-15i.9ho.190.193.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 18:34:01	<--	JagaJaga (JagaJaga@moz-ua8.hhl.62.178.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 18:34:07	<--	fredrik (fredrik@moz-2b08ue.priv.bahnhof.se) has quit (Ping timeout: 121 seconds)
2015-05-29 18:34:19	<--	Gabriel_7 (Gabriel@moz-nmerfh.mtgr.92aj.0e35.2a01.IP) has quit (Connection closed)
2015-05-29 18:35:10	<--	swgillespie (swgillespie@moz-rn1.vmq.232.104.IP) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-29 18:35:51	-->	Morten (Morten@moz-75skp6.bb.online.no) has joined #rust
2015-05-29 18:37:32	<--	Morten (Morten@moz-75skp6.bb.online.no) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-05-29 18:37:34	thelink2012	I know it's undefined behaviour to have 'bool' with a value other than 1 or 0. When I cast a c_int to a bool, does it do a c_int != 0 or just a mov? i.e. will my bool be safe 0/1 or will contain the c_int value (that could be 2,3,4...)
2015-05-29 18:38:31	--	garndt|pto is now known as garndt
2015-05-29 18:38:42	thelink2012	as in 'myint as bool'
2015-05-29 18:38:54	-->	swgillespie (swgillespie@moz-rn1.vmq.232.104.IP) has joined #rust
2015-05-29 18:39:08	<--	ajhager (aajhager@moz-mcdsgi.iplsin.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-29 18:39:25	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-29 18:39:55	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-29 18:40:08	<--	dinfuehr (dinfuehr@moz-4fk061.highway.telekom.at) has quit (Connection closed)
2015-05-29 18:40:26	-->	jdtw (Mibbit@moz-eq5.h8h.107.131.IP) has joined #rust
2015-05-29 18:40:48	thelink2012	ah nevermind I get a error if I try int as bool
2015-05-29 18:41:02	<--	jdtw (Mibbit@moz-eq5.h8h.107.131.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-29 18:41:22	<--	Astrum|Lap (Astrum|Lap@moz-7enfbr.co.comcast.net) has quit (Client exited)
2015-05-29 18:41:48	<--	Nextra (Nextra@moz-77kpkn.ewe-ip-backbone.de) has quit (Quit: Leaving)
2015-05-29 18:42:53	FreeFull	thelink2012: Yeah, "as bool" doesn't work
2015-05-29 18:43:02	FreeFull	!= 0 is the way to do it
2015-05-29 18:44:37	FreeFull	What are the guidelines for making bindings to C libraries?
2015-05-29 18:44:50	thelink2012	why don't rustc let me do something stupid :(
2015-05-29 18:44:52	FreeFull	If I want to put them on crates.io
2015-05-29 18:45:25	FreeFull	thelink2012: I believe if you cast to _Bool in C it will do the conversion to 1
2015-05-29 18:46:32	-->	lutter1 (lutter@moz-7v7ueu.PUBLIC.monkeybrains.net) has joined #rust
2015-05-29 18:46:43	-->	rkruppe_ (chatzilla@moz-3nj.rnu.131.95.IP) has joined #rust
2015-05-29 18:46:53	-->	lutter2 (lutter@moz-7v7ueu.PUBLIC.monkeybrains.net) has joined #rust
2015-05-29 18:46:57	<--	lutter1 (lutter@moz-7v7ueu.PUBLIC.monkeybrains.net) has quit (Connection closed)
2015-05-29 18:47:09	<--	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-29 18:47:44	rillian	FreeFull: try to make a safe wrapper that handles all the ownership semantics of the C library?
2015-05-29 18:48:03	<--	rkruppe (chatzilla@moz-3nj.rnu.131.95.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 18:48:06	FreeFull	rillian: Yeah, I will do that
2015-05-29 18:48:11	--	rkruppe_ is now known as rkruppe
2015-05-29 18:48:49	FreeFull	Specifically, I am going to make bindings to the xmmsclient C library, so I can then make an XMMS2 client
2015-05-29 18:49:13	<--	swgillespie (swgillespie@moz-rn1.vmq.232.104.IP) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-29 18:49:15	rillian	hee :)
2015-05-29 18:49:24	<--	rudolph (rudolph@moz-q5b.rfa.152.37.IP) has quit (Quit: Leaving...)
2015-05-29 18:49:52	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-29 18:49:56	-->	ygrek (user@moz-8j9aeu.org.ua) has joined #rust
2015-05-29 18:50:04	FreeFull	Is rust-bindgen still a thing?
2015-05-29 18:50:31	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-29 18:50:35	<--	lukas_ (lukas@moz-3b1uhh.hsi11.unitymediagroup.de) has quit (Ping timeout: 121 seconds)
2015-05-29 18:51:55	-->	orangeshark (erik@moz-mfqduf.44tj.56ot.0306.2602.IP) has joined #rust
2015-05-29 18:52:40	-->	harrisonclarke (harrisoncla@moz-v2i.4mr.177.142.IP) has joined #rust
2015-05-29 18:53:23	-->	Morten (Morten@moz-75skp6.bb.online.no) has joined #rust
2015-05-29 18:53:26	-->	swgillespie (swgillespie@moz-rn1.vmq.232.104.IP) has joined #rust
2015-05-29 18:53:43	nathan7	FreeFull: yep
2015-05-29 18:53:53	Morten	How do I build windows executables from linux?
2015-05-29 18:53:54	nathan7	FreeFull: it even has a Rust-land API
2015-05-29 18:54:35	nathan7	You'll have to build Rust with that as a target in order to get the stdlib for Windows, Morten 
2015-05-29 18:54:52	<--	swgillespie (swgillespie@moz-rn1.vmq.232.104.IP) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-29 18:54:58	<--	jacor (jacor@moz-aq6q4f.ant0.oo2o.0007.2601.IP) has left #rust ("Leaving")
2015-05-29 18:55:55	<--	Douman (Douman@moz-n9u3al.dynamic.mts-nn.ru) has quit (Quit: )
2015-05-29 18:56:18	-->	djhworld (djhworld@moz-uag.hpf.10.94.IP) has joined #rust
2015-05-29 18:57:04	-->	andars (andars@moz-bsldst.sntcca.sbcglobal.net) has joined #rust
2015-05-29 18:57:27	<--	ZenSword (ZenSword@moz-nim6me.pools.vodafone-ip.de) has quit (Quit: quit)
2015-05-29 18:57:41	-->	w4ffles (textual@moz-34v1r4.res.rr.com) has joined #rust
2015-05-29 19:00:12	<--	vaedd (uid88868@moz-ndthua.charlton.irccloud.com) has quit (Quit: Connection closed for inactivity)
2015-05-29 19:00:23	<--	spider-mario (spidermario@moz-coblcf.fbx.proxad.net) has quit (A TLS packet with unexpected length was received.)
2015-05-29 19:01:12	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-29 19:01:50	-->	alexchandel (Mibbit@moz-lgsu1i.hfc.comcastbusiness.net) has joined #rust
2015-05-29 19:01:51	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-29 19:02:10	-->	tyoverby (tyoverby@moz-fo2liv.cs.washington.edu) has joined #rust
2015-05-29 19:02:12	-->	willem (willem@moz-facs2s.dynamic.upc.nl) has joined #rust
2015-05-29 19:02:18	alexchandel	hey, is it possible to emit a DLL on windows?
2015-05-29 19:03:28	alexchandel	I get a linker error, that symbols like `rust_begin_unwind` are missing
2015-05-29 19:04:07	<--	qwerty_nor (Thunderbird@moz-5ql.sn8.241.50.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 19:04:29	alexchandel	WindowsBunny ever tried this?
2015-05-29 19:05:49	<--	colinsurprenant (colin@moz-rmn4e2.169.electronicbox.net) has quit (Client exited)
2015-05-29 19:06:07	thelink2012	alexchandel: See the last reply and see if that helps https://github.com/rust-lang/rust/issues/18807
2015-05-29 19:06:19	<--	Axord (axo@moz-p6in57.ca.charter.com) has quit (Ping timeout: 121 seconds)
2015-05-29 19:07:20	-->	Axord (axo@moz-p6in57.ca.charter.com) has joined #rust
2015-05-29 19:07:27	<--	Rym (y@moz-c2u.sd4.38.217.IP) has quit (Connection closed)
2015-05-29 19:07:28	thelink2012	alexchandel: if that helps tell me since I'm developing on Windows also, might come to this problem sometime :P
2015-05-29 19:07:30	-->	Rym (y@moz-c2u.sd4.38.217.IP) has joined #rust
2015-05-29 19:07:36	FreeFull	nathan7: Any guide on using it?
2015-05-29 19:07:55	-->	summerlight_ (summerlight@moz-99k.2mj.130.121.IP) has joined #rust
2015-05-29 19:08:02	<--	bur_sangjun (bur_sangjun@moz-stouoi.range165-120.btcentralplus.com) has quit (Quit: Leaving)
2015-05-29 19:08:08	<--	nogbit (nogbit@moz-v1d46c.dhcp4.washington.edu) has quit (Quit: Leaving)
2015-05-29 19:08:51	WindowsBunny	alexchandel: It is possible to emit a DLL
2015-05-29 19:08:52	<--	c_wraith (c_wraith@moz-7i8.v6v.191.131.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 19:09:13	thelink2012	Where can I somewhat find the natural derives I should do in my object? I only know about Debug... And I just rembered about Hash... and Eq... is there somewhere with a proper list with considerations?
2015-05-29 19:09:13	nathan7	FreeFull: the README?
2015-05-29 19:09:32	-->	rkruppe_ (chatzilla@moz-3nj.rnu.131.95.IP) has joined #rust
2015-05-29 19:09:35	-->	wilfredh (uid159@moz-md9so9.brockwell.irccloud.com) has joined #rust
2015-05-29 19:09:38	WindowsBunny	alexchandel: It's just that there's some... issues sometimes
2015-05-29 19:09:44	FreeFull	nathan7: I'm not even sure where rust-bindgen is
2015-05-29 19:09:52	-->	thor1 (thor@moz-n7n1a4.res.rr.com) has joined #rust
2015-05-29 19:10:04	alexchandel	thelink2012: worked!
2015-05-29 19:10:33	alexchandel	WindowsBunny: ;) i'm discovering
2015-05-29 19:10:39	wilfredh	I'm trying to add a method to Iterator, but failing.
2015-05-29 19:10:41	wilfredh	https://gist.github.com/Wilfred/084ed9276a84a4999375
2015-05-29 19:10:53	wilfredh	how do I specify the associated type?
2015-05-29 19:11:04	<--	rkruppe (chatzilla@moz-3nj.rnu.131.95.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 19:11:14	bluss	wilfredh: Iterator<Item=X>
2015-05-29 19:11:22	-->	Chaos`Eternal (chaos@moz-ck0k18.compute-1.amazonaws.com) has joined #rust
2015-05-29 19:11:35	Chaos`Eternal	i am trying to use iron's static file module
2015-05-29 19:11:35	Chaos`Eternal	<Chaos`Eternal> but compilation failed: filetime 0.1.3
2015-05-29 19:11:35	Chaos`Eternal	<Chaos`Eternal> error: type `&std::fs::Metadata` does not implement any method in scope named `as_raw`
2015-05-29 19:11:35	Chaos`Eternal	<Chaos`Eternal> the std::fs::Metadata really doesn't having a method as_raw ...
2015-05-29 19:11:48	bluss	wilfredh: there is a different way to add methods to all iterators,  impl<I> Greet for I where I: Iterator { .. }
2015-05-29 19:12:02	bluss	wilfredh: this would use generics ^
2015-05-29 19:13:27	bluss	wilfredh: see also rust playground https://play.rust-lang.org/?gist=084ed9276a84a4999375
2015-05-29 19:13:28	<--	larhat (Adium@moz-vlo5br.cable.virginm.net) has quit (Quit: Leaving.)
2015-05-29 19:13:29	<--	hroi (hroi@moz-d273ub.static.netgroup.dk) has quit (Quit: Lost terminal)
2015-05-29 19:13:31	<--	djhworld (djhworld@moz-uag.hpf.10.94.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-29 19:13:42	<--	rkruppe_ (chatzilla@moz-3nj.rnu.131.95.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 19:14:12	<--	eckhardt (eckhardt@moz-s9e.ov1.227.199.IP) has quit (Connection closed)
2015-05-29 19:14:27	-->	fabianvf (fabianvf@moz-fjqmui.va.comcast.net) has joined #rust
2015-05-29 19:14:41	andars	mythmon: did you ever get rust working on pebble?
2015-05-29 19:15:06	wilfredh	bluss: I don't see any difference between the playground example and my code, am I missing something?
2015-05-29 19:15:10	thelink2012	I have a crate that uses std::fmt:: in a macro, so I need to use std::fmt, currently I'm doing that inside the macro (yeah pretty bad) is there a way to do something like $crate::std::fmt:: except that I'm not the std crate?
2015-05-29 19:15:21	<--	AustinMatherne (AustinMathe@moz-0te63r.members.linode.com) has quit (A TLS packet with unexpected length was received.)
2015-05-29 19:15:27	-->	futile (felix@moz-cmcd12.unity-media.net) has joined #rust
2015-05-29 19:15:38	wilfredh	using `impl<I> Greet for I where I: Iterator` is giving the same error regarding associated types
2015-05-29 19:15:41	-->	demilux (demilux@moz-fk1.kt4.14.64.IP) has joined #rust
2015-05-29 19:15:53	bluss	wilfredh: I didn't change anything
2015-05-29 19:16:13	alexchandel	WindowsBunny: help, I just looked at the DLL with Depends, and it's linking against something called "libgcc_s_dw2-1.dll"
2015-05-29 19:16:32	-->	p1start (p1start@moz-nftjhe.org) has joined #rust
2015-05-29 19:16:34	WindowsBunny	alexchandel: That's normal
2015-05-29 19:16:39	-->	AustinMatherne (AustinMathe@moz-0te63r.members.linode.com) has joined #rust
2015-05-29 19:16:45	alexchandel	WindowsBunny: No idea how it found that, but I'm positive that isn't on any of our customer's machines
2015-05-29 19:16:49	WindowsBunny	alexchandel: Rust depends on libgcc for unwinding, and on 32-bit it has to be dynamically linked
2015-05-29 19:16:52	nathan7	FreeFull: it generates Rust code from C headers
2015-05-29 19:16:54	WindowsBunny	On 64-bit it is statically linked
2015-05-29 19:17:01	wilfredh	aha, `impl<X> Greet for Iterator<Item=X> {` works, thanks for your help :)
2015-05-29 19:17:12	WindowsBunny	alexchandel: It comes with mingw, including the mingw bundled with rust
2015-05-29 19:17:13	<--	playjax (chatzilla@moz-rmccb0.optusnet.com.au) has quit (Connection closed)
2015-05-29 19:17:21	nathan7	FreeFull: the output will then proceed to scare the living shit out of your sense of aesthetics
2015-05-29 19:17:22	alexchandel	WindowsBunny: ... so one would have to distribute 2 DLLs?
2015-05-29 19:17:37	nathan7	FreeFull: as a side-effect, you may end up with usable unsafe Rust bindings to a piece of C
2015-05-29 19:17:43	FreeFull	nathan7: I said where
2015-05-29 19:17:49	WindowsBunny	alexchandel: You'd have to distribute your binaries + libgcc
2015-05-29 19:17:53	<--	gandalf (zbraniecki@moz-cp7c4m.ca.comcast.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-29 19:17:55	bluss	wilfredh: https://play.rust-lang.org/?gist=a2cd4efa8bd170ad9f1f&version=stable
2015-05-29 19:17:55	thelink2012	alexchandel: WindowsBunny: Those can also be found in the bin directory of the Rust installation (i.e. you have it duplicated in the mingw and the rust install)
2015-05-29 19:18:28	nathan7	FreeFull: http://is.gd/zcJn1U
2015-05-29 19:18:28	<--	fabianvf (fabianvf@moz-fjqmui.va.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-29 19:19:02	FreeFull	nathan7: Yeah, already did that, wasn't sure what was the official place though
2015-05-29 19:19:04	alexchandel	WindowsBunny: i'm pretty sure I will be refused if i propose this :(
2015-05-29 19:19:14	nathan7	FreeFull: that's the one
2015-05-29 19:19:24	nathan7	FreeFull: it's not "official" in any sense
2015-05-29 19:19:28	wilfredh	bluss: thank you :)
2015-05-29 19:19:43	bluss	wilfredh: they have a bit different effect
2015-05-29 19:19:49	nathan7	FreeFull: it's a piece of software someone wrote, it is not endorsed by any organisation in particular
2015-05-29 19:20:23	alexchandel	WindowsBunny: is there any way around this? I'd even take no unwinding / an immediate abort on panic!()
2015-05-29 19:20:39	mythmon	andars: i never got rust to compile for the pebble.
2015-05-29 19:21:05	WindowsBunny	alexchandel: Well, technically the msvc target has no unwinding :P
2015-05-29 19:21:28	WindowsBunny	alexchandel: And it's even statically linking the CRT according to an experiment we ran earlier today
2015-05-29 19:21:50	<--	gleb (gleb@moz-3u1drv.rusanovka-net.kiev.ua) has quit (Ping timeout: 121 seconds)
2015-05-29 19:21:54	WindowsBunny	alexchandel: Of course then you have to build Rust from source, but it does work fairly well
2015-05-29 19:22:57	-->	durka42 (Adium@moz-qsuual.pa.comcast.net) has joined #rust
2015-05-29 19:23:08	FreeFull	nathan7: Are the guidelines on *-sys packages written down somewhere?
2015-05-29 19:23:30	-->	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has joined #rust
2015-05-29 19:24:36	andars	mythmon: if you're still interested, i got something working https://github.com/andars/pebble.rs-template
2015-05-29 19:24:45	-->	ajhager (aajhager@moz-mcdsgi.iplsin.sbcglobal.net) has joined #rust
2015-05-29 19:24:53	alexchandel	WindowsBunny: lol I'd have a hard time convincing people to build from source... why can't libgcc_s just be statically linked like 64-bit?
2015-05-29 19:25:06	WindowsBunny	alexchandel: Because licensing issues
2015-05-29 19:25:09	alexchandel	though statically linking the handful of CRT functions we actually use would be awesome, just to avoid msvcrt.dll
2015-05-29 19:25:46	alexchandel	WindowsBunny: licensing issues that don't exist in the 64-bit version? that only apply to static libraries?
2015-05-29 19:25:54	WindowsBunny	yes
2015-05-29 19:26:09	WindowsBunny	well, that's the explanation I got when I asked about it :P
2015-05-29 19:26:09	alexchandel	WindowsBunny: is there an explication somewhere?
2015-05-29 19:26:18	WindowsBunny	I have no idea
2015-05-29 19:26:32	<--	kinson (Mibbit@moz-5c1k7k.jf.intel.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-29 19:27:52	<--	maraoz (maraoz@moz-13a.6d8.109.181.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 19:28:03	alexchandel	WindowsBunny: so it's claimed to be a copyright violation to statically link libgcc_s under any circumstances??
2015-05-29 19:28:44	<--	ukarlsson (ukarlsson@moz-d2p.ihp.121.192.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 19:29:03	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-29 19:29:34	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-29 19:29:58	alexchandel	WindowsBunny: who'd you ask?
2015-05-29 19:30:44	-->	eckhardt (eckhardt@moz-s9e.ov1.227.199.IP) has joined #rust
2015-05-29 19:31:18	nathan7	FreeFull: http://doc.crates.io/build-script.html#*-sys-packages
2015-05-29 19:31:39	alexchandel	WindowsBunny: for the record, googling the issue yields quite a few websites and SO answers explaining how to statically link libgcc_s
2015-05-29 19:32:03	alexchandel	WindowsBunny: it looks like it is possible
2015-05-29 19:32:07	<--	csoriano_ (csoriano@moz-g6rkdc.net.upcbroadband.cz) has quit (Client exited)
2015-05-29 19:32:58	WindowsBunny	alexchandel: I have no idea
2015-05-29 19:33:21	FreeFull	nathan7: Ah, didn't expect it to be on the build script page
2015-05-29 19:34:03	WindowsBunny	alexchandel: I'm putting you in charge of the investigation to find out why the 32-bit libgcc is being dynamically linked
2015-05-29 19:34:43	<--	kaeluka (kaeluka@moz-tn3lqd.cust.bredbandsbolaget.se) has quit (Client exited)
2015-05-29 19:35:28	<--	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-29 19:35:54	-->	lov2cod (Adium@moz-9utvl5.frokca.sbcglobal.net) has joined #rust
2015-05-29 19:36:24	<--	ogham (rally@moz-91e3hp.cable.virginm.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-29 19:36:26	alexchandel	dies mirabilis!
2015-05-29 19:37:20	jethrogb	this doesn't work: http://is.gd/yebeJv and I understand why it doesn't work, but how do I make something like that work?
2015-05-29 19:37:48	alexchandel	WindowBunny: lol on a side-note, passing rustc `-C link-args="-static-libgcc"` appears to statically link it
2015-05-29 19:38:17	holoway	is there an example anywhere of streaming the output of a std::process::Command?
2015-05-29 19:38:20	alexchandel	s/WindowBunny/WindowsBunny/
2015-05-29 19:38:34	holoway	I'm trying to interleave the output from multiple processes at once
2015-05-29 19:38:38	alexchandel	WindowsBunny: at least it no longer shows up in Depends, haven't tried loading it yet
2015-05-29 19:39:09	holoway	and getting pretty hung up on even trying to get manual access to the parent end of the stdout/stderr pipes
2015-05-29 19:39:18	<--	Kurufu (Kurufu@moz-pvv8b5.res.rr.com) has left #rust
2015-05-29 19:39:18	holoway	much less doing a wait that doesn't block forever
2015-05-29 19:39:23	holoway	which also seems impossible
2015-05-29 19:40:01	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-29 19:40:42	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-29 19:40:44	-->	csherratt (textual@moz-357qdq.cable.teksavvy.com) has joined #rust
2015-05-29 19:41:20	holoway	I could just do it all in unsafe calls to C :)
2015-05-29 19:42:06	durka42	jethrogb: can you use TcpStream::try_clone() to make another one?
2015-05-29 19:42:22	<--	Azdle (Azdle@moz-738.tg8.232.50.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 19:42:23	<--	thor1 (thor@moz-n7n1a4.res.rr.com) has quit (Ping timeout: 121 seconds)
2015-05-29 19:42:28	-->	playjax (chatzilla@moz-rmccb0.optusnet.com.au) has joined #rust
2015-05-29 19:43:44	<--	ajhager (aajhager@moz-mcdsgi.iplsin.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-29 19:43:49	<--	johnsoft (johnsoft@moz-69mrig.res.rr.com) has quit (Ping timeout: 121 seconds)
2015-05-29 19:43:51	<--	eric_lagergren (barsonme@moz-hshokg.q6t2.2174.0008.2601.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 19:44:14	-->	johnsoft (johnsoft@moz-69mrig.res.rr.com) has joined #rust
2015-05-29 19:45:32	<--	Guest58 (textual@moz-cdsk1r.res.rr.com) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-29 19:45:59	<--	Savago (Savago@moz-28o.4t3.247.50.IP) has quit (Client exited)
2015-05-29 19:45:59	-->	bombless (_@moz-n1tjg3.0v2u.0v40.0da8.2001.IP) has joined #rust
2015-05-29 19:46:04	alexchandel	WindowsBunny: my investigation has uncovered evidence to suggest we statically link libgcc :P
2015-05-29 19:46:36	<--	dpc_ (dpc@moz-t6gr4b.ca.comcast.net) has quit (Quit: Leaving)
2015-05-29 19:46:42	alexchandel	WindowsBunny: see https://www.gnu.org/licenses/gcc-exception-faq.html under the FAQ, under "I use GCC in conjunction with proprietary assemblers..."
2015-05-29 19:47:18	<--	RC9 (RCIX@moz-1p1.dfa.8.198.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 19:47:32	alexchandel	WindowsBunny: specifically, "...neither the GPL nor the GCC Runtime Library Exception distinguish between static linking, dynamic linking, and other methods for combining code in their conditions."
2015-05-29 19:47:32	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-29 19:48:08	<--	Balthek (uid5299@moz-2q36dl.brockwell.irccloud.com) has quit (Quit: Connection closed for inactivity)
2015-05-29 19:48:08	<--	ayonix (quassel@moz-63kgq4.cn6d.r4i0.4000.2a03.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-29 19:48:21	jethrogb	durka42: not on a Read+Write...
2015-05-29 19:48:29	<--	DerisiveLogic (smuxi@moz-1jqqlg.biz.rr.com) has quit (A TLS packet with unexpected length was received.)
2015-05-29 19:48:39	-->	ayonix (quassel@moz-63kgq4.cn6d.r4i0.4000.2a03.IP) has joined #rust
2015-05-29 19:48:41	WindowsBunny	alexchandel: I suggest you go ask core team members why we dynamically link it
2015-05-29 19:48:50	WindowsBunny	alexchandel: like maybe acrichto
2015-05-29 19:48:51	<--	davebettin_ (davebettin@moz-hde.5e5.136.67.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 19:49:11	-->	Izacht13 (Izacht13@moz-gee645.atsnmeam.ccmaine.net) has joined #rust
2015-05-29 19:49:47	-->	sag47 (sam@moz-v0fpfq.pa.comcast.net) has joined #rust
2015-05-29 19:49:54	alexchandel	ping acrichto
2015-05-29 19:50:05	-->	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has joined #rust
2015-05-29 19:50:19	<--	ixti (ixti@moz-i3d.dae.119.188.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 19:50:31	FreeFull	/usr/include/xmms2/xmmsclient/xmmsclient.h:20:10: fatal error: 'xmmsc/xmmsc_compiler.h' file not found
2015-05-29 19:50:33	-->	dinfuehr (dinfuehr@moz-4fk061.highway.telekom.at) has joined #rust
2015-05-29 19:50:40	@acrichto	alexchandel: pong
2015-05-29 19:50:49	-->	ytain (ytain@moz-ffpck2.dsl.teksavvy.com) has joined #rust
2015-05-29 19:51:08	FreeFull	Not sure what to do here, xmmsc/ is /usr/include/xmms2/xmmsc/
2015-05-29 19:51:18	FreeFull	This is trying to use bindgen
2015-05-29 19:51:23	-->	ramn (ramn@moz-ku9tbl.mobile.tre.se) has joined #rust
2015-05-29 19:51:52	-->	errordeveloper (ilya@moz-ono.0eu.201.90.IP) has joined #rust
2015-05-29 19:52:05	alexchandel	acrichto: is there an explication somewhere for why libgcc_s_dw2-1.dll is linked on 32-bit windows?
2015-05-29 19:52:25	alexchandel	acrichto: because https://www.gnu.org/licenses/gcc-exception-faq.html suggests that static linking is permitted
2015-05-29 19:52:49	@acrichto	alexchandel: no I'm not sure why we do that
2015-05-29 19:53:23	<--	envi_u (envi@moz-ih5.olo.169.121.IP) has quit (Ping timeout: 121 seconds)
2015-05-29 19:53:26	alexchandel	acrichto: lol I've found it makes distributing 32-bit exes a little painful
2015-05-29 19:53:48	-->	gyro (gyro@moz-ukm.h91.222.64.IP) has joined #rust
2015-05-29 19:53:56	@acrichto	I'd believe it!
2015-05-29 19:54:31	alexchandel	acrichto: there's a line in that GCC Exception FAQ, "...neither the GPL nor the GCC Runtime Library Exception distinguish between static linking, dynamic linking, and other methods for combining code in their conditions."
2015-05-29 19:54:39	<--	dinfuehr (dinfuehr@moz-4fk061.highway.telekom.at) has quit (Ping timeout: 121 seconds)
2015-05-29 19:54:45	sag47	Is anybody generating code coverage reports for rust?  https://github.com/rust-lang/rust/issues/690 which discusses https://github.com/SimonKagstrom/kcov . Does kcov do a decent job of generating coverage?
2015-05-29 19:55:15	<--	genbattle (genbattle@moz-r09mao.xtra.co.nz) has quit (Ping timeout: 121 seconds)
2015-05-29 19:56:02	-->	Astrum|Lap (Astrum|Lap@moz-skcefh.co.comcast.net) has joined #rust
2015-05-29 19:56:07	-->	eric_lagergren (barsonme@moz-hshokg.q6t2.2174.0008.2601.IP) has joined #rust
2015-05-29 19:56:52	sag47	nvm, I found https://users.rust-lang.org/t/tutorial-how-to-collect-test-coverages-for-rust-project/650
2015-05-29 19:56:55	<--	vosen (vosen@moz-mtm1g4.dynamic.chello.pl) has quit (Connection closed)
2015-05-29 19:57:03	<--	FrozenCow (FrozenCow@moz-i2tvv4.chello.nl) has quit (Connection closed)
2015-05-29 19:57:24	sag47	Still interested if anybody is generating coverage reports, though.
2015-05-29 19:59:28	-->	c_wraith (c_wraith@moz-2e872h.click-network.com) has joined #rust
2015-05-29 20:00:35	--	NameNotFound is now known as zz_NameNotFound
2015-05-29 20:01:26	--	nsm is now known as nsm|away
2015-05-29 20:02:13	WindowsBunny	alexchandel: Ah ha!
2015-05-29 20:02:18	WindowsBunny	alexchandel: " In the GCC Linker Options, it says that this is necessary for cross-library exception handling"
2015-05-29 20:02:49	WindowsBunny	alexchandel: So the 32-bit libgcc is dynamically linked for cross-library exception handling, while the 64-bit one has cross-library exception handling regardless of how it is linked
2015-05-29 20:03:27	WindowsBunny	alexchandel: So if you statically link the 32-bit libgcc, if a panic goes across a DLL boundary, you're screwed
2015-05-29 20:03:46	alexchandel	WindowsBunny: I thought libgcc didn't do SEH at all?
2015-05-29 20:04:05	WindowsBunny	alexchandel: libgcc is what we use for unwinding
2015-05-29 20:04:10	WindowsBunny	aka exception handling
2015-05-29 20:04:26	WindowsBunny	in 64-bit it uses SEH and everything is fine and dandy because 64-bit SEH is the only option and it works well
2015-05-29 20:04:33	-->	DerisiveLogic (smuxi@moz-g93io6.res.rr.com) has joined #rust
2015-05-29 20:04:49	alexchandel	alexchandel: but there's no SEH option in 32-bit?
2015-05-29 20:04:57	alexchandel	erm, WindowsBunny
2015-05-29 20:05:00	alexchandel	stupid clipboard
2015-05-29 20:05:10	WindowsBunny	32-bit SEH had patent issues for a while
2015-05-29 20:05:29	WindowsBunny	which only just expired recently
2015-05-29 20:06:00	-->	kgrandon (Adium@moz-i0u8p7.hfc.comcastbusiness.net) has joined #rust
2015-05-29 20:06:11	darkstalker	is 32 bits still a thing?
2015-05-29 20:06:13	WindowsBunny	hence why there's other kinds of exceptions in 32-bit like dwarf and sjlj
2015-05-29 20:06:19	WindowsBunny	darkstalker: Unfortunately
2015-05-29 20:06:45	<--	tyoverby (tyoverby@moz-fo2liv.cs.washington.edu) has quit (Connection closed)
2015-05-29 20:07:17	alexchandel	WindowsBunny: so if you statically link, then a panic passing out from one Rust DLL to another block of Rust code will abort?
2015-05-29 20:07:30	WindowsBunny	I actually don't know what will happen
2015-05-29 20:07:39	WindowsBunny	a clean abort is the best case scenario
2015-05-29 20:08:02	WindowsBunny	average case is it eats your laundry
2015-05-29 20:08:18	FreeFull	Ok, turns out Arch puts the xmmsclient stuff in a funky place
2015-05-29 20:08:24	alexchandel	WindowsBunny: what about a panic from a Rust DLL to VC code? I thought that always failed on 32-bits, regardless of the libgcc
2015-05-29 20:08:35	Chaos`Eternal	ok, switched to nightly channel, solved
2015-05-29 20:08:38	<--	ramn (ramn@moz-ku9tbl.mobile.tre.se) has quit (Quit: WeeChat 1.1.1)
2015-05-29 20:08:44	WindowsBunny	alexchandel: exceptions should not cross the boundary between Rust and non-Rust
2015-05-29 20:08:47	WindowsBunny	that is undefined behavior
2015-05-29 20:09:57	FreeFull	Ah, nevermind
2015-05-29 20:10:12	--	irc: disconnected from server
2015-05-30 15:15:56	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-30 15:15:56	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-30 15:15:56	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-30 15:15:56	--	Channel #rust: 992 nicks (12 ops, 0 halfops, 1 voice, 979 normals)
2015-05-30 15:15:59	verdagon	rofl
2015-05-30 15:16:00	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-30 15:16:11	-->	sunu (quassel@moz-dq2.41e.235.168.IP) has joined #rust
2015-05-30 15:16:19	<--	mindtree (Mitch@moz-5h22bp.iprimus.net.au) has quit (Ping timeout: 121 seconds)
2015-05-30 15:16:45	Gankro	I mean really, fn get<Q: ?Sized>(&self, k: &Q) -> Option<&V> where K: Borrow<Q>, Q: Hash + Eq
2015-05-30 15:16:51	<--	maximih (maximih@moz-6loqad.k49b.su5n.2002.2001.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-30 15:16:58	Gankro	Should really just read fn get(&self, k: &K)
2015-05-30 15:17:14	kimundi	At the evry least, it should be fn get<Q>(&self, k: &Q) -> Option<&V> where K: Borrow<Q>, Q: Hash + Eq + ?Sized
2015-05-30 15:17:27	Gankro	haha, yeah :)
2015-05-30 15:17:56	--	irc: disconnected from server
2015-05-30 15:18:07	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-30 15:18:07	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-30 15:18:07	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-30 15:18:07	--	Channel #rust: 989 nicks (12 ops, 0 halfops, 1 voice, 976 normals)
2015-05-30 15:18:11	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-30 15:18:13	-->	johnsoft (johnsoft@moz-69mrig.res.rr.com) has joined #rust
2015-05-30 15:18:16	<--	mocx (mocx@moz-9r990q.io) has quit (Quit: ZNC - 1.6.0 - http://znc.in)
2015-05-30 15:18:30	-->	mocx (mocx@moz-29o.jcj.243.162.IP) has joined #rust
2015-05-30 15:18:50	Moonlightning	So what's with the capitalized `Self`s?
2015-05-30 15:18:59	verdagon	i think its the type of ‘self’
2015-05-30 15:19:01	<--	cakecatz (cakecatz@moz-edrvuc.sannet.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-30 15:19:01	kimundi	Moonlightning: Self is the self type
2015-05-30 15:19:01	verdagon	current class
2015-05-30 15:19:08	verdagon	…struct*
2015-05-30 15:19:12	<--	keenan (keenan@moz-es1.bb3.240.23.IP) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-05-30 15:19:15	kimundi	while "self" is a value of type Self
2015-05-30 15:19:27	kimundi	(and &self is a value of type &Self, etc)
2015-05-30 15:19:29	Moonlightning	Ahh.
2015-05-30 15:20:07	--	irc: disconnected from server
2015-05-30 15:20:18	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-30 15:20:18	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-30 15:20:18	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-30 15:20:19	--	Channel #rust: 989 nicks (12 ops, 0 halfops, 1 voice, 976 normals)
2015-05-30 15:20:19	Gankro	bluss: Oh yeah I guess that means two things
2015-05-30 15:20:21	<--	sunu (quassel@moz-dq2.41e.235.168.IP) has quit (Quit: No Ping reply in 180 seconds.)
2015-05-30 15:20:22	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-30 15:20:29	bbloom	fmtq: i don't follow
2015-05-30 15:20:37	Gankro	bbloom: euuughh no more wrapper types pleeeease
2015-05-30 15:20:41	fmtq	bbloom: I was agreeing with you.
2015-05-30 15:20:43	fmtq	nothing else.
2015-05-30 15:20:44	fmtq	lol
2015-05-30 15:20:48	bluss	Gankro: I'll totally feel the placebo performance effect from using Self now
2015-05-30 15:20:59	-->	agjacome (agjacome@moz-h6e080.dynamic.jazztel.es) has joined #rust
2015-05-30 15:21:13	-->	sunu (quassel@moz-dq2.41e.235.168.IP) has joined #rust
2015-05-30 15:21:22	<--	nghtshd (Zim@moz-cve9p2.ga.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-30 15:21:24	-->	Porkepix (Porkepix@moz-e1bv2v.rev.sfr.net) has joined #rust
2015-05-30 15:21:25	--	nghtshd_ is now known as nghtshd
2015-05-30 15:21:28	Gankro	bluss: Yeah man, llvm has this sweet new vectorize_gep_do_fast_see_on_self pass
2015-05-30 15:21:38	bbloom	Gankro: less about wrapping and more about parameterizing 
2015-05-30 15:21:43	-->	avikpal_ (avikpal@moz-e8n.mpm.194.117.IP) has joined #rust
2015-05-30 15:21:48	bluss	sweet
2015-05-30 15:21:54	<--	nghtshd (Zim@moz-cve9p2.ga.comcast.net) has quit (Client exited)
2015-05-30 15:21:55	<--	spider-mario (spidermario@moz-coblcf.fbx.proxad.net) has quit (Connection closed)
2015-05-30 15:22:32	kimundi	I think somewhere in the last 5 minutes Gankro and bluss started being silly :P
2015-05-30 15:22:32	<--	avikpal (avikpal@moz-3m6.cvs.194.117.IP) has quit (Ping timeout: 121 seconds)
2015-05-30 15:22:35	bbloom	or rather specializing - kinda like compile time partial evaluation. if you have a parameterized type & specialize it, then all those type parameters no longer need to appear in the signatures of the methods
2015-05-30 15:23:10	bbloom	would be cool if the docs could do that: "show me these signatures where T is Foo"
2015-05-30 15:23:11	kimundi	bbloom: Yeah, its super nice that work with type defs now. We just need the docs handle the case better
2015-05-30 15:23:40	Gankro	kimundi: If ever I am being serious, terrible things have happened 
2015-05-30 15:23:53	kimundi	playbot: type Vecf = Vec<f32>; Vecf::new()
2015-05-30 15:23:54	--	Notice(playbot): []
2015-05-30 15:24:00	FreeFull	I wish I knew more of what I'm doing
2015-05-30 15:24:12	Gankro	kimundi: :O when did that land?
2015-05-30 15:24:27	FreeFull	The raw bindings I'm making are compiling ok, but I'm pretty sure I have one file with bindings for multiple libraries right now
2015-05-30 15:24:54	kimundi	Gankro: I think a few months ago, sneakily, while making associated ~something~ work
2015-05-30 15:24:54	<--	alexbielen (alexbielen@moz-9tbbp7.fios.verizon.net) has quit (Client exited)
2015-05-30 15:24:59	<--	kgrandon (Adium@moz-2f4.nab.107.38.IP) has quit (Ping timeout: 121 seconds)
2015-05-30 15:25:04	Gankro	kimundi: dang, sweet
2015-05-30 15:25:18	--	irc: disconnected from server
2015-05-30 15:25:29	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-30 15:25:29	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-30 15:25:29	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-30 15:25:29	--	Channel #rust: 986 nicks (12 ops, 0 halfops, 1 voice, 973 normals)
2015-05-30 15:25:30	Moonlightning	kimundi: You don't need to do it when it's that simple. :p
2015-05-30 15:25:33	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-30 15:26:11	-->	SiegeLord (sl@moz-9jtaei.ca.comcast.net) has joined #rust
2015-05-30 15:26:25	FreeFull	Can anyone who's made bindings to C libraries help?
2015-05-30 15:26:43	-->	Eridius (kevin@moz-6opvqs.us) has joined #rust
2015-05-30 15:26:53	kimundi	Moonlightning: People writing math libraries beg to differ
2015-05-30 15:26:54	<--	AustinMatherne (AustinMathe@moz-0te63r.members.linode.com) has quit (A TLS packet with unexpected length was received.)
2015-05-30 15:26:57	-->	pikzen (Mibbit@moz-89smti.fbx.proxad.net) has joined #rust
2015-05-30 15:27:01	-->	nott (nott@moz-to4.06o.57.86.IP) has joined #rust
2015-05-30 15:27:15	Gankro	FreeFull: I'm pretty sure that's acrichto's life
2015-05-30 15:27:21	<--	Hannibal_Smith (nico@moz-itj1vp.retail.telecomitalia.it) has quit (Quit: Leaving)
2015-05-30 15:27:31	<--	Esption (Esption@moz-3gitvr.dynamic.tds.net) has quit (Ping timeout: 121 seconds)
2015-05-30 15:27:36	kimundi	Moonlightning: There is a huge ergonomic benefit from not needing Vec::<T> all the time
2015-05-30 15:27:38	-->	SgtCoDFish (Ashley@moz-236.pn9.250.176.IP) has joined #rust
2015-05-30 15:27:46	<--	SgtCoDFish (Ashley@moz-236.pn9.250.176.IP) has left #rust
2015-05-30 15:27:54	-->	AustinMatherne (AustinMathe@moz-0te63r.members.linode.com) has joined #rust
2015-05-30 15:28:09	pikzen	Hey guys, simple question. Aside from std::ptr::null(), is there any way in Rust to get a null pointer? Could an &Struct be null ?
2015-05-30 15:28:44	nham	how can I pass RUST_LOG to an executable while using cargo? `RUST_LOG=debug cargo run` is not working
2015-05-30 15:29:06	Moonlightning	Oh, fair enough.
2015-05-30 15:29:13	-->	ismaelga_ (ismaelga@moz-19gm4f.rev.vodafone.pt) has joined #rust
2015-05-30 15:29:14	<--	ismaelga (ismaelga@moz-bn6.dhb.180.89.IP) has quit (Ping timeout: 121 seconds)
2015-05-30 15:29:19	kimundi	let m = Matrix4x4::<f32>::new(); rather than let m = Matrix::<[[f32; 4]; 4]>::new() // Or whatever 3d graphic libraries doe internally
2015-05-30 15:29:31	Gankro	pikzen: `0 as *mut _`
2015-05-30 15:29:37	-->	kgrandon (Adium@moz-1jt6pk.mycingular.net) has joined #rust
2015-05-30 15:29:51	Gankro	pikzen: it is undefined behaviour for & to be null, so no it shouldn't ever happen
2015-05-30 15:29:51	eddyb	!ails @ Gankro
2015-05-30 15:29:51	+rustbot	Gankro: AILS is Associated Item Lookup Syntax, eddyb's attempt to rename/generalize !ufcs
2015-05-30 15:30:01	Dabo	pikzen, outside of unsafe code there is no way to get a null pointer
2015-05-30 15:30:03	pikzen	Gankro: OK, but basically you'd have to be going out of your way to get a null
2015-05-30 15:30:11	Gankro	pikzen: Absolutely
2015-05-30 15:30:12	eddyb	kimundi: it wasn't sneakily for anything work IIRC :P
2015-05-30 15:30:14	kimundi	Lol, when did AILS get coined?
2015-05-30 15:30:21	eddyb	a few days ago
2015-05-30 15:30:32	Dabo	In unsafe code, there are plenty of ways to get null pointers but they all are undefined behavior when you try to use it
2015-05-30 15:30:38	eddyb	we must not speak the U name
2015-05-30 15:30:48	kimundi	eddyb: Granted, I wasn't very active in the last few months...
2015-05-30 15:30:48	eddyb	lest we want it to become our RAII
2015-05-30 15:30:57	pikzen	Yeah. In this case, I'm getting mystified by https://github.com/servo/servo/issues/6145 and I need to clarify a few things with the servo team then
2015-05-30 15:30:58	eddyb	kimundi: me neither
2015-05-30 15:31:09	<--	kgrandon (Adium@moz-1jt6pk.mycingular.net) has quit (Quit: Leaving.)
2015-05-30 15:31:10	eddyb	highschool is over but I still have exams and then uni
2015-05-30 15:31:22	kimundi	eddyb: But you have higher base stats than me to begin with. :P
2015-05-30 15:31:22	<--	James (quassel@moz-q6malq.range86-148.btcentralplus.com) has quit (Ping timeout: 121 seconds)
2015-05-30 15:31:45	kimundi	(as far as doing-nothing-for-Rust is concerned)
2015-05-30 15:31:59	eddyb	so I am doing-nothing more than you?
2015-05-30 15:31:59	Gankro	pikzen: Well, Option<&T> is basically null
2015-05-30 15:32:03	Gankro	able
2015-05-30 15:32:03	eddyb	seems about right
2015-05-30 15:32:15	<--	gingermusketeer (gingermuske@moz-g01jko.compute.amazonaws.com) has quit (Connection closed)
2015-05-30 15:32:17	kimundi	yep! And I envy you for it! ;D
2015-05-30 15:32:22	-->	gingermusketeer (gingermuske@moz-78l86h.compute.amazonaws.com) has joined #rust
2015-05-30 15:32:38	eddyb	kimundi: you envy my inability to help Rust?
2015-05-30 15:32:41	eddyb	wut
2015-05-30 15:32:54	-->	geri (Mibbit@moz-v5j9c2.highway.telekom.at) has joined #rust
2015-05-30 15:33:01	eddyb	btw, remember that Fat proposal?
2015-05-30 15:33:08	eddyb	it can be implemented in safe code with Unsize now
2015-05-30 15:33:11	<--	survi (philip@moz-apm3hi.dip0.t-ipconnect.de) has quit (Client exited)
2015-05-30 15:33:11	eddyb	I just realized that today
2015-05-30 15:33:12	Dabo	Gankro, I think None::<&T> compiles to null as well, right? I mean I think that Option<&T> is represented by a nullable pointer at runtime.
2015-05-30 15:33:15	-->	tav_ (tav@moz-ivrq8h.range31-52.btcentralplus.com) has joined #rust
2015-05-30 15:33:17	eddyb	I forgot who was proposing it
2015-05-30 15:33:25	eddyb	Dabo: yes
2015-05-30 15:33:25	pikzen	Gankro: yeah, I'd be checking for None with a match, but the passed parameter is an &Url, so Option<T> is out of the way. Unless I create a new Option from it, which seems a bit overkill for such a simple check.
2015-05-30 15:33:29	kimundi	eddyb: err, maybe the joke actually got lost along the way. I meant that you seem to be active way more than I even in periods that you see as "doing nothing"
2015-05-30 15:33:30	-->	Tobba (Tobba@moz-o13d22.bredband.telia.com) has joined #rust
2015-05-30 15:33:40	FreeFull	Dabo: None::<&T> is null, at least when T is Sized
2015-05-30 18:45:31	--	irc: disconnected from server
2015-05-30 18:45:43	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-30 18:45:43	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-30 18:45:43	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-30 18:45:43	--	Channel #rust: 981 nicks (12 ops, 0 halfops, 1 voice, 968 normals)
2015-05-30 18:45:43	 *	kimundi gives his best impression of a romanian rubber duck
2015-05-30 18:45:47	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-30 18:45:53	kimundi	Moonlightning: yep
2015-05-30 18:45:53	-->	starless (starless@moz-u9gmm1.res.rr.com) has joined #rust
2015-05-30 18:45:54	<--	nercury (nercury@moz-ngr949.static.zebra.lt) has quit (Client exited)
2015-05-30 18:45:56	nathan7	struct Landmower
2015-05-30 18:45:58	eddyb	kimundi: this has to be it, though https://github.com/rust-lang/rust/blob/master/src/librustc_resolve/lib.rs#L2102
2015-05-30 18:46:06	bbloom	nathan7: i'm running in to `does not live long enough` trying to return a borrowed thing even though my fn has a lifetime parameter and my return type is annotated with it
2015-05-30 18:46:09	nathan7	*Lawnmower
2015-05-30 18:46:11	eddyb	it maps the Self ident to DefSelfTy
2015-05-30 18:46:15	<--	andars (andars@moz-bsldst.sntcca.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-30 18:46:23	nathan7	bbloom: care to give an example?
2015-05-30 18:46:39	eddyb	kimundi: how to remember what I wanted this for... :P
2015-05-30 18:46:48	eddyb	kimundi: maybe Self::foo in impls
2015-05-30 18:47:06	eddyb	(which couldn't work with type replacement)
2015-05-30 18:47:50	-->	andars (andars@moz-bsldst.sntcca.sbcglobal.net) has joined #rust
2015-05-30 18:47:51	<--	Cindela (cindela@moz-dlkpia.bb.dnainternet.fi) has quit (Ping timeout: 121 seconds)
2015-05-30 18:48:09	eddyb	ah, but wait, typeck has to handle the actual type resolution
2015-05-30 18:48:19	<--	gandalf (zbraniecki@moz-cp7c4m.ca.comcast.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-30 18:48:23	<--	michael1 (michael@moz-9vjtig.mo.charter.com) has quit (Ping timeout: 121 seconds)
2015-05-30 18:48:48	bbloom	nathan7: http://is.gd/k90hD4
2015-05-30 18:48:53	<--	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-30 18:49:08	eddyb	kimundi: yupp https://github.com/rust-lang/rust/blob/master/src/librustc_typeck/astconv.rs#L1394
2015-05-30 18:49:19	bbloom	nathan7: forgot Cell, it's just a type alias:   http://is.gd/Y0URLC
2015-05-30 18:49:38	kimundi	bbloom: &Block(cells) => &cells is the issue
2015-05-30 18:49:47	nathan7	bbloom: you're moving it
2015-05-30 18:49:53	nathan7	bbloom: &Block(ref cells) => cells
2015-05-30 18:50:03	<--	dcb (textual@moz-j72nfe.ca.comcast.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-30 18:50:03	<--	Gabriel_7 (Gabriel@moz-jt5edh.mtgr.92aj.0e35.2a01.IP) has quit (Quit: Quitte)
2015-05-30 18:50:20	nathan7	bbloom: you're moving cells into a local variable, and then trying to give out a borrow to it
2015-05-30 18:50:21	Moonlightning	Slice doesn't implement FromIterator, huh?
2015-05-30 18:50:24	-->	tmtwd (tmtwd@moz-0kkm5n.cable.rogers.com) has joined #rust
2015-05-30 18:50:28	kimundi	bbloom: As written, it means "copy out the value inside the Block into a local variable named "cells", create a reference to that local variable, and return it"
2015-05-30 18:50:33	nathan7	Moonlightning: You can't really *create* a slice
2015-05-30 18:50:43	bbloom	nathan7: ooooooo
2015-05-30 18:50:45	nathan7	Moonlightning: You have to take a slice of something
2015-05-30 18:50:46	roido	wait, aren't all types movable by default unless they inheret the Copy marker?
2015-05-30 18:50:48	bbloom	wow, that's really non-obvious
2015-05-30 18:50:52	Moonlightning	Huh?
2015-05-30 18:50:58	nathan7	roido: they are
2015-05-30 18:51:04	Moonlightning	I thought slices were the equivalent of C's arrays.
2015-05-30 18:51:07	eddyb	no
2015-05-30 18:51:09	nathan7	Moonlightning: No
2015-05-30 18:51:10	<--	fabianvf (fabianvf@moz-fjqmui.va.comcast.net) has quit (Connection closed)
2015-05-30 18:51:17	nathan7	Moonlightning: Arrays are the equivalent of C's arrays
2015-05-30 18:51:21	kimundi	roido: Its a trait now you can optionally implement if you don't contain anything !Copy, but yeh
2015-05-30 18:51:25	eddyb	Moonlightning: if you're talking about &[T], that's a reference to a section of an array or vector
2015-05-30 18:51:34	geri	hi what is wrong here? :D http://is.gd/iWutQ5
2015-05-30 18:51:49	nathan7	Moonlightning: [T] is a contiguous block of T's laid out sequentially in memory
2015-05-30 18:51:52	eddyb	Moonlightning: the & means it's a reference. it has a runtime-variable number of elements, making it different from a fixed-length array
2015-05-30 18:51:53	Moonlightning	I'm talking about [T]. Thought those were called slices.
2015-05-30 18:51:59	nathan7	Moonlightning: yes
2015-05-30 18:52:05	bbloom	nathan7: neither "(ref" nor "moving" appear in the language reference. It's impossible to grep for "ref"
2015-05-30 18:52:05	eddyb	[T] by itself doesn't have values
2015-05-30 18:52:18	nathan7	Moonlightning: [T] is unsized, so you can have a borrowed slice, or a boxed one
2015-05-30 18:52:22	bbloom	"ref keyword" appears exactly once
2015-05-30 18:52:33	bbloom	it's really hard to discover these details
2015-05-30 18:52:36	roido	kimundi: good to know
2015-05-30 18:52:41	nathan7	Moonlightning: But boxed slices can basically only be produced from Vec::into_boxed_slice
2015-05-30 18:52:42	kimundi	Moonlightning: Its a bit of a historical mixup of terms. Both [T] and &[T] are often called "slice"
2015-05-30 18:52:46	-->	OxMLR (OxMLR@moz-19veku.res.rr.com) has joined #rust
2015-05-30 18:53:00	eddyb	you can create a Box<[T]> if you want
2015-05-30 18:53:09	eddyb	should impl FromIterator
2015-05-30 18:53:16	bluss	it doesn't yet
2015-05-30 18:53:28	eddyb	but it's merely a Vec<T> without the ability to resize it
2015-05-30 18:53:32	<--	SiegeLord (sl@moz-9jtaei.ca.comcast.net) has quit (Connection closed)
2015-05-30 18:53:35	eddyb	bluss: oh, so you have to go through Vec<T>
2015-05-30 18:53:40	nathan7	I guess we /could/, but that'd basically be Vec's FromIterator + Vec::into_boxed_slice
2015-05-30 18:54:03	nathan7	actually, that's quite useful
2015-05-30 18:54:06	bluss	eddyb: higher on my wishlist is Clone for Box<[T]>
2015-05-30 18:54:07	<--	harrisonclarke (harrisoncla@moz-uur7pt.eastlink.ca) has quit (Connection closed)
2015-05-30 18:54:07	Havvy	playbot: let b_a: Box<[i32]> = Box::new([1, 2, 3]);
2015-05-30 18:54:08	--	Notice(playbot): ()
2015-05-30 18:54:13	eddyb	bluss: it... doesn't?
2015-05-30 18:54:24	bluss	it doesn't
2015-05-30 18:54:31	nathan7	creating boxed slices from iterators is a prime use case for Box<[T]>, really
2015-05-30 18:54:50	geri	hi what is wrong here? :D http://is.gd/iWutQ5 ... any idea?
2015-05-30 18:55:02	<--	tristanseifert (tristanseif@moz-4ld.2ga.178.99.IP) has quit (Ping timeout: 121 seconds)
2015-05-30 18:55:07	nathan7	you know the approximate size beforehand usually, and you won't change the size after
2015-05-30 18:55:08	bluss	nathan7: why not use Vec?
2015-05-30 18:55:09	<--	brianloveswords (brianlovesw@moz-tq78gs.fios.verizon.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-30 18:55:22	nathan7	bluss: because a Box<[T]> is guaranteed to have no excess capacity
2015-05-30 18:55:22	<--	Tuna-Fish (quassel@moz-5djkv5.kortex.jyu.fi) has quit (Connection closed)
2015-05-30 18:55:24	-->	Tuna-Fish (quassel@moz-5djkv5.kortex.jyu.fi) has joined #rust
2015-05-30 18:55:33	<--	mcarton (martin@moz-d8ckvc.abo.wanadoo.fr) has quit (Ping timeout: 121 seconds)
2015-05-30 18:55:46	Moonlightning	So I'd have to `iterator.collect::<Vec<_>>().to_boxed_slice()`
2015-05-30 18:55:59	kimundi	yeah
2015-05-30 18:56:01	<--	pyon (pyon@moz-no9.411.236.190.IP) has quit (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
2015-05-30 18:56:02	<--	tomprogrammer (thomas@moz-r2nheo.tr5r.qept.4dd0.2001.IP) has quit (Connection closed)
2015-05-30 18:56:38	bluss	nathan7: I was thinking it doesn't do much difference if you collect into a Vec or a Box
2015-05-30 18:56:52	nathan7	bluss: sure, but the type matters
2015-05-30 18:57:21	-->	harrisonclarke (harrisoncla@moz-uur7pt.eastlink.ca) has joined #rust
2015-05-30 18:57:21	bluss	ok when you need Box<[T]>
2015-05-30 18:57:37	bbloom	i can't find any decent overview of "moved" and "copied" in either the book or reference
2015-05-30 18:57:37	geri	any idea why it complains about error: cannot borrow `f` as mutable more than once at a time ?
2015-05-30 18:57:44	bbloom	is there a good intro somewhere?
2015-05-30 18:57:48	Havvy	geri:  cha1_signal borrows `f` mutably, preventing any other mutable borrows while it's in scope. Then you try to borrow `f` mutable a second time to get cha2_signal.
2015-05-30 18:58:04	Havvy	Err, cha/chb
2015-05-30 18:58:07	geri	Havvy: but these are two different channels
2015-05-30 18:58:17	-->	Lieuwex (Lieuwex@moz-v3v2m7.dynamic.ziggo.nl) has joined #rust
2015-05-30 18:58:22	<--	killercup (killercup@moz-723bo4.dip0.t-ipconnect.de) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-30 18:58:29	nathan7	I'm curious where Box<[T]>'s FromIterator would be defined
2015-05-30 18:58:48	Havvy	Yes. But the compiler doesn't know that you're mutably borrowing disjoint sections of foo.
2015-05-30 18:59:01	bluss	nathan7: would have to be in liballoc
2015-05-30 18:59:06	-->	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has joined #rust
2015-05-30 18:59:09	-->	dcb (textual@moz-j72nfe.ca.comcast.net) has joined #rust
2015-05-30 18:59:10	-->	maximih (maximih@moz-0r2bjb.bredband.telia.com) has joined #rust
2015-05-30 18:59:16	geri	Havvy: will i need to return a *mut [u32; n] and use unsafe in the main?
2015-05-30 18:59:26	-->	Guest (textual@moz-46h.vdn.171.183.IP) has joined #rust
2015-05-30 18:59:30	-->	gandalf (zbraniecki@moz-cp7c4m.ca.comcast.net) has joined #rust
2015-05-30 18:59:33	nathan7	bluss: yeah, but liballoc doesn't have access to Vec
2015-05-30 18:59:45	nathan7	bluss: since libcollections depends on it
2015-05-30 18:59:50	bluss	nathan7: yeah https://github.com/rust-lang/rust/issues/25097  // issue about clone box<[T]>
2015-05-30 19:00:08	Havvy	You could write `get_sig_ptrs(&mut self) -> (&mut [u32; n], &mut [u32; n])`
2015-05-30 19:01:02	nathan7	we have .split_at_mut
2015-05-30 19:01:13	geri	Havvy: and in the main?
2015-05-30 19:02:30	Havvy	let (cha_signal, chb_signal) = f.get_sig_ptrs();
2015-05-30 19:02:37	<--	paupau (grrrr@moz-35edek.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-30 19:03:12	<--	maximih (maximih@moz-0r2bjb.bredband.telia.com) has quit (Ping timeout: 121 seconds)
2015-05-30 19:04:00	-->	ptstomp (paul@moz-8fla9q.bigpond.net.au) has joined #rust
2015-05-30 19:05:46	Moonlightning	playbot: (0 as bool, 1 as bool, '\x00' as bool, '\xff' as bool, "" as bool, "foo" as bool, vec![] as bool, vec!["foo"] as bool)
2015-05-30 19:05:47	--	Notice(playbot): <anon>:9:51: 9:53 error: this form of character escape may only be used with characters in the range [\x00-\x7f]
2015-05-30 19:05:47	--	Notice(playbot): <anon>:9         (0 as bool, 1 as bool, '\x00' as bool, '\xff' as bool, "" as bool, "foo" as bool, vec![] as bool, vec!["foo"] as bool)
2015-05-30 19:05:47	--	Notice(playbot): output truncated; full output at: http://bit.ly/1d6hHsc
2015-05-30 19:05:58	Moonlightning	playbot: (0 as bool, 1 as bool, '\x00' as bool, '\x7f' as bool, "" as bool, "foo" as bool, vec![] as bool, vec!["foo"] as bool)
2015-05-30 19:05:59	--	Notice(playbot): <std macros>:3:1: 3:24 error: unable to infer enough type information about `_`; type annotations required [E0282]
2015-05-30 19:05:59	--	Notice(playbot): <std macros>:3 < [ _ ] > :: into_vec ( $ crate:: boxed:: Box:: new ( [ $ ( $ x ) , * ] ) ) )
2015-05-30 19:05:59	--	Notice(playbot): output truncated; full output at: http://bit.ly/1JfuxAT
2015-05-30 19:06:33	bluss	can't cast anything to bool, you can cast bool to integers though
2015-05-30 19:06:57	Moonlightning	No implicit booleanness?
2015-05-30 19:07:03	bluss	nope
2015-05-30 19:07:07	kimundi	nope
2015-05-30 19:07:14	bluss	it's great
2015-05-30 19:08:08	<--	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has quit (Ping timeout: 121 seconds)
2015-05-30 19:08:18	bbloom	are arrays the only thing that are allowed to be statically parameterized by numbers?
2015-05-30 19:08:38	-->	Matthias247 (Miranda@moz-49li60.hsi14.kabel-badenwuerttemberg.de) has joined #rust
2015-05-30 19:08:48	<--	dpc (dpc@moz-t6gr4b.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-30 19:08:58	kimundi	yes
2015-05-30 19:09:06	bluss	bbloom: I think so. But you can parameterize other things with types and arrays are types..
2015-05-30 19:09:32	<--	tschottdorf (tobias@moz-d021av.aipg.hajb.2000.2604.IP) has quit (Ping timeout: 121 seconds)
2015-05-30 19:09:50	-->	tschottdorf (tobias@moz-d021av.aipg.hajb.2000.2604.IP) has joined #rust
2015-05-30 19:09:55	bbloom	hm so then i can use a where clause or something to constrain the T of the array, effectively letting me parameterized the N?
2015-05-30 19:10:14	-->	mujou (mujou@moz-rko6lo.ocn.ne.jp) has joined #rust
2015-05-30 19:10:30	kimundi	not really
2015-05-30 19:11:22	<--	harrisonclarke (harrisoncla@moz-uur7pt.eastlink.ca) has quit (Connection closed)
2015-05-30 19:11:56	-->	paupau (grrrr@moz-35edek.ca.comcast.net) has joined #rust
2015-05-30 19:13:49	-->	Ralith (ralith@moz-sv9vgp.tukw.qwest.net) has joined #rust
2015-05-30 19:14:22	<--	jshs (jshs@moz-b9k2dn.dip0.t-ipconnect.de) has quit (Client exited)
2015-05-30 19:14:40	-->	mindtree (Mitch@moz-5h22bp.iprimus.net.au) has joined #rust
2015-05-30 19:15:00	-->	maximih (maximih@moz-0r2bjb.bredband.telia.com) has joined #rust
2015-05-30 19:15:21	-->	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has joined #rust
2015-05-30 19:15:58	-->	harrisonclarke (harrisoncla@moz-uur7pt.eastlink.ca) has joined #rust
2015-05-30 19:17:00	<--	grodan (Mibbit@moz-9mncl4.business.telia.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-30 19:17:55	<--	rkruppe (chatzilla@moz-3nj.rnu.131.95.IP) has quit (Quit: ChatZilla 0.9.91.1 [Firefox 38.0.1/20150513174244])
2015-05-30 19:17:57	-->	Guest58 (textual@moz-cdsk1r.res.rr.com) has joined #rust
2015-05-30 19:18:19	-->	meh (meh@moz-e56g7l.42-151.net24.it) has joined #rust
2015-05-30 19:18:54	<--	mindtree (Mitch@moz-5h22bp.iprimus.net.au) has quit (Ping timeout: 121 seconds)
2015-05-30 19:19:10	<--	esgeh (sg@moz-a7j.cns.76.134.IP) has quit (Ping timeout: 121 seconds)
2015-05-30 19:19:12	dam	how can I use the new std::time::Duration? I got: 'error: use of unstable library feature 'duration': recently added API per RFC 1040'?
2015-05-30 19:19:28	-->	SiegeLord (sl@moz-9jtaei.ca.comcast.net) has joined #rust
2015-05-30 19:19:35	<--	Lovot (Lovot@moz-1je.00u.73.69.IP) has quit (Ping timeout: 121 seconds)
2015-05-30 19:19:37	dam	note: i use the nigthly channel
2015-05-30 19:19:50	bbloom	bluss: is there a trait i can constrain the parameters to so that i can be sure i'm only parameterized by arrays?
2015-05-30 19:19:50	WindowsBunny	dam: #![feature(duration)]
2015-05-30 19:20:02	geri	is i32 the size size as int?
2015-05-30 19:20:21	bluss	bbloom: unfortunately no
2015-05-30 19:20:53	bbloom	bluss: hm, ok then, what's my best bet for a workaround if i want to make a "newtype" wrapping a fixed-size array?
2015-05-30 19:21:22	dam	WindowsBunny: ... I was sure that I already test it, anyway this is the right answer
2015-05-30 19:22:45	bluss	bbloom: I'm not sure. I've used a trait that I implemented specifically for a range of array sizes
2015-05-30 19:23:02	bbloom	bluss: could you elaborate on that please?
2015-05-30 19:24:25	bluss	just impl the trait manually for [T; 0], [T; 1] and so on
2015-05-30 19:24:36	bluss	using a macro hopefully
2015-05-30 19:25:08	<--	tschottdorf (tobias@moz-d021av.aipg.hajb.2000.2604.IP) has quit (Ping timeout: 121 seconds)
2015-05-30 19:25:22	-->	Lovot (Lovot@moz-1je.00u.73.69.IP) has joined #rust
2015-05-30 19:25:24	bbloom	as a procedural macro fan, i was hoping not to have to jump down the syntax-rules rabbit hole anytime soon :-P but ok
2015-05-30 19:25:26	bbloom	thanks
2015-05-30 19:25:29	-->	fabianvf (fabianvf@moz-fjqmui.va.comcast.net) has joined #rust
2015-05-30 19:25:33	bbloom	i'll see what i can hack up
2015-05-30 19:25:42	geri	is i32 the size size as int?
2015-05-30 19:25:49	geri	int in C
2015-05-30 19:25:51	bluss	bbloom: you could copy my code but that's no fun
2015-05-30 19:25:55	<--	agjacome (agjacome@moz-j4vd23.dynamic.jazztel.es) has quit (Ping timeout: 121 seconds)
2015-05-30 19:26:08	bbloom	bluss: it may be fun to read it. link please
2015-05-30 19:26:24	bluss	geri: i32 is 32-bit so it depends, as you know sizeof(int) depends on implementation and platform
2015-05-30 19:26:34	<--	genbattle (genbattle@moz-r09mao.xtra.co.nz) has quit (Ping timeout: 121 seconds)
2015-05-30 19:26:37	bluss	bbloom: https://github.com/bluss/arrayvec
2015-05-30 19:27:08	<--	fabianvf (fabianvf@moz-fjqmui.va.comcast.net) has quit (Connection closed)
2015-05-30 19:27:12	<--	keenan (keenan@moz-es1.bb3.240.23.IP) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-05-30 19:27:16	geri	bluss: on arml7
2015-05-30 19:27:16	-->	Chef (Chef@moz-m1d7of.dsl.teksavvy.com) has joined #rust
2015-05-30 19:27:45	bluss	geri: sizeof(int) will tell you :)
2015-05-30 19:27:50	geri	ok
2015-05-30 19:27:55	-->	keenan (keenan@moz-es1.bb3.240.23.IP) has joined #rust
2015-05-30 19:27:58	bluss	geri: also, rust has the libc crate, check it 
2015-05-30 19:28:05	geri	crate?
2015-05-30 19:28:16	bluss	packages in rust are called cratees
2015-05-30 19:28:59	aji	http://is.gd/Sh3pit i'm stumped
2015-05-30 19:29:04	<--	punkypunk (root@moz-rb2.4la.250.162.IP) has quit (Quit: WeeChat 0.3.8)
2015-05-30 19:29:16	<--	keenan (keenan@moz-es1.bb3.240.23.IP) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-05-30 19:29:18	bluss	geri: if you use cargo it should be easy to add & use libc as a dependency
2015-05-30 19:30:20	bluss	aji: make_unique returns &mut T
2015-05-30 19:30:41	aji	is there no way to "into unique" an Rc?
2015-05-30 19:30:43	bluss	aji: which I guess you know by the way, you deref it
2015-05-30 19:30:43	kimundi	aji: There is no generic way to move out of a derference right now, and hence Rc can not support such an operation
2015-05-30 19:31:10	bbloom	bluss: interesting
2015-05-30 19:31:19	<--	zhoeon (fc@moz-cuhqb2.cable.teksavvy.com) has quit (Quit: leaving)
2015-05-30 19:31:24	bluss	if it's just a string you can use make unique and swap it with an empty string
2015-05-30 19:31:33	kimundi	oh right, that will work
2015-05-30 19:31:38	o11c	it could support a .unique_opt(self) -> Option<T> and .unique_or_clone(self) -> T
2015-05-30 19:31:38	aji	bluss: i suppose.
2015-05-30 19:31:56	kimundi	An empty String does not even cause a heap allocation, so its basically a free action
2015-05-30 19:32:13	geri	bluss: here its 4
2015-05-30 19:32:23	aji	thanks for the input
2015-05-30 19:32:27	bluss	geri: so then it's the same size
2015-05-30 19:32:30	geri	bluss: in C its 4 bytes
2015-05-30 19:32:40	<--	harrisonclarke (harrisoncla@moz-uur7pt.eastlink.ca) has quit (Connection closed)
2015-05-30 19:33:08	geri	bluss: there is still somth wrong... i read an array and the negative values are all pos.
2015-05-30 19:33:19	<--	ogham (rally@moz-91e3hp.cable.virginm.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-30 19:33:43	--	irc: disconnected from server
2015-05-30 19:33:55	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-30 19:33:55	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-30 19:33:55	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-30 19:33:56	--	Channel #rust: 971 nicks (12 ops, 0 halfops, 1 voice, 958 normals)
2015-05-30 19:33:59	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-30 19:34:05	-->	ipjk (INDIANPOJKE@moz-n0l906.cust.telenor.se) has joined #rust
2015-05-30 19:34:09	<--	ipjk (INDIANPOJKE@moz-n0l906.cust.telenor.se) has quit (Connection closed)
2015-05-30 19:34:28	<--	starless (starless@moz-u9gmm1.res.rr.com) has quit (Quit: Leaving)
2015-05-30 19:34:55	--	irc: disconnected from server
2015-05-30 19:35:07	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-30 19:35:07	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-30 19:35:07	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-30 19:35:07	--	Channel #rust: 970 nicks (12 ops, 0 halfops, 1 voice, 957 normals)
2015-05-30 19:35:11	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-30 19:36:17	<--	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-30 19:36:27	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-30 19:37:34	<--	kazimuth (james@moz-cg5k8f.wa.comcast.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-30 19:38:52	bbloom	bluss: thanks! i think i can get by with a tiny subset of your code for my particular use case.
2015-05-30 19:39:04	-->	bombless (_@moz-1j8.piv.41.59.IP) has joined #rust
2015-05-30 19:39:06	bbloom	not as nice and general as being able to use numbers as type params, but should do the trick
2015-05-30 19:39:28	<--	paupau (grrrr@moz-35edek.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-30 19:39:37	-->	mdinger (mdinger@moz-ehpikb.9bf5.ppaa.0306.2602.IP) has joined #rust
2015-05-30 19:39:56	-->	keenan (keenan@moz-es1.bb3.240.23.IP) has joined #rust
2015-05-30 19:40:04	<--	EspressoDan (EspressoDan@moz-gnsthu.dynamic.ashlandfiber.net) has quit (Client exited)
2015-05-30 19:41:15	<--	joneshf-laptop (joneshf@moz-l4h.b5s.208.98.IP) has quit (Ping timeout: 121 seconds)
2015-05-30 19:42:01	-->	joneshf-laptop (joneshf@moz-l4h.b5s.208.98.IP) has joined #rust
2015-05-30 19:42:11	mdinger	Is it correct that `map_or` for option should run both the default then the second choice?
2015-05-30 19:42:13	mdinger	http://is.gd/vMxSF5
2015-05-30 19:42:45	bluss	mdinger: yes, it's expected. The or location is not a closure
2015-05-30 19:42:45	mdinger	I expected it would run the one case or the other. Not both.
2015-05-30 19:43:08	bluss	you want map_or_else
2015-05-30 19:43:26	mdinger	ah
2015-05-30 19:43:33	<--	munksgaard (munksgaard@moz-urnkl5.u.parknet.dk) has quit (Ping timeout: 121 seconds)
2015-05-30 19:44:01	<--	dam (user@moz-it9sv4.fbx.proxad.net) has quit (Connection closed)
2015-05-30 19:44:24	mdinger	i didn't think it mattered because I wasn't taking an argument
2015-05-30 19:44:46	bluss	bbloom: I just want to tell what's possible and people can experiment and see what comes out of it
2015-05-30 19:45:21	-->	killercup (killercup@moz-723bo4.dip0.t-ipconnect.de) has joined #rust
2015-05-30 19:45:23	geri	bluss: i guess my println! has a problem to print f32 ... cant it print f32 with {} ?
2015-05-30 19:45:36	bluss	I think it can?
2015-05-30 19:45:44	bluss	playbot: format!("{}" 1.0_f32)
2015-05-30 19:45:45	<--	nyx (nyx@moz-ivelpd.res.rr.com) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-30 19:45:45	--	Notice(playbot): <anon>:9:9: 9:30 error: expected token: `,`
2015-05-30 19:45:45	--	Notice(playbot): <anon>:9         format!("{}" 1.0_f32)
2015-05-30 19:45:45	--	Notice(playbot): output truncated; full output at: http://bit.ly/1K1vdul
2015-05-30 19:45:51	bluss	playbot: format!("{}", 1.0_f32) // 
2015-05-30 19:45:53	--	Notice(playbot): "1"
2015-05-30 19:45:56	bluss	it can
2015-05-30 19:46:29	-->	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has joined #rust
2015-05-30 19:46:40	<--	joneshf-laptop (joneshf@moz-l4h.b5s.208.98.IP) has quit (Ping timeout: 121 seconds)
2015-05-30 19:46:41	<--	fengshaun (fengshaun@moz-oagll1.cpe.pppoe.ca) has quit (Connection closed)
2015-05-30 19:46:51	-->	joneshf-laptop (joneshf@moz-l4h.b5s.208.98.IP) has joined #rust
2015-05-30 19:46:54	-->	fengshaun (fengshaun@moz-oagll1.cpe.pppoe.ca) has joined #rust
2015-05-30 19:50:06	<--	colinsurprenant (colin@moz-q9ee1n.74.electronicbox.net) has quit (Client exited)
2015-05-30 19:50:29	<--	keenan (keenan@moz-es1.bb3.240.23.IP) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-05-30 19:50:38	-->	keenan (keenan@moz-es1.bb3.240.23.IP) has joined #rust
2015-05-30 19:51:06	-->	SpaceManiac (Tad@moz-bd3s4o.dyn.suddenlink.net) has joined #rust
2015-05-30 19:51:20	-->	nedp (nedp@moz-vg6vvt.bigpond.net.au) has joined #rust
2015-05-30 19:51:50	<--	Guest (textual@moz-46h.vdn.171.183.IP) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-30 19:51:57	<--	Matthias247 (Miranda@moz-49li60.hsi14.kabel-badenwuerttemberg.de) has quit (Connection closed)
2015-05-30 19:52:21	<--	killercup (killercup@moz-723bo4.dip0.t-ipconnect.de) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-30 19:52:39	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-30 19:52:55	-->	GGist (Mibbit@moz-st7v59.wa.comcast.net) has joined #rust
2015-05-30 19:53:19	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-30 19:53:30	-->	zynisch_o7 (zynisch_o7@moz-6eh1ju.dyn.optonline.net) has joined #rust
2015-05-30 19:53:53	<--	}ls{ (uhelp@moz-b3snl2.dip0.t-ipconnect.de) has quit (Quit: User terminated by real life interrupt)
2015-05-30 19:56:12	-->	summerlight_ (summerlight@moz-99k.2mj.130.121.IP) has joined #rust
2015-05-30 19:56:24	<--	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-30 19:57:17	<--	joneshf-laptop (joneshf@moz-l4h.b5s.208.98.IP) has quit (Ping timeout: 121 seconds)
2015-05-30 19:57:32	<--	zynisch_o7 (zynisch_o7@moz-6eh1ju.dyn.optonline.net) has quit (Ping timeout: 121 seconds)
2015-05-30 19:58:05	--	ptstomp is now known as helo
2015-05-30 19:58:10	--	helo is now known as PTStomp
2015-05-30 19:59:36	<--	Layl (Layl@moz-65hqmf.direct-adsl.nl) has quit (Quit: Leaving)
2015-05-30 20:00:02	<--	bluss (bluss@moz-ec5o68.cust.bredbandsbolaget.se) has quit (Ping timeout: 121 seconds)
2015-05-30 20:01:42	<--	aepsil0n (eduard@moz-6491ha.mv2h.pepi.8071.2a02.IP) has quit (Connection closed)
2015-05-30 20:01:45	<--	mdinger (mdinger@moz-ehpikb.9bf5.ppaa.0306.2602.IP) has quit (Quit: Leaving)
2015-05-30 20:02:31	<--	fengshaun (fengshaun@moz-oagll1.cpe.pppoe.ca) has quit (Quit: bye bye!)
2015-05-30 20:02:53	<--	eibwen (eibwen@moz-qjhnnl.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2015-05-30 20:03:27	-->	eric_lagergren (barsonme@moz-lr1hrn.wa.comcast.net) has joined #rust
2015-05-30 20:04:19	<--	duesenfranz_ (jona@moz-711djm.tirol.surfer.at) has quit (Client exited)
2015-05-30 20:05:33	-->	starless (starless@moz-u9gmm1.res.rr.com) has joined #rust
2015-05-30 20:05:54	<--	dcb (textual@moz-j72nfe.ca.comcast.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-30 20:06:01	-->	KiChjang (KiChjang@moz-19h7ll.dynamic.uwaterloo.ca) has joined #rust
2015-05-30 20:06:27	KiChjang	why does rust use message passing instead of shared data for inter-thread communication?
2015-05-30 20:06:35	XMPPwocky	KiChjang: it doesn't?
2015-05-30 20:06:47	XMPPwocky	rust's standard library has some handy message passing primitives
2015-05-30 20:06:47	KiChjang	i remember reading somewhere that it's the endorsed method
2015-05-30 20:06:59	XMPPwocky	but it also has powerful and safe mutexes, R/W locks, and atomics
2015-05-30 20:07:20	KiChjang	ahh right, that's correct, the borrow checker in the compiler helps a lot here
2015-05-30 20:07:21	XMPPwocky	KiChjang: at one point it was more endorsed, but not anymore
2015-05-30 20:07:31	XMPPwocky	https://manishearth.github.io/blog/2015/05/30/how-rust-achieves-thread-safety/
2015-05-30 20:08:28	XMPPwocky	actually i think http://huonw.github.io/blog/2015/02/some-notes-on-send-and-sync/ is marginally better if you're not familiar with rust
2015-05-30 20:08:43	<--	saterus (saterus@moz-rutqj0.res.rr.com) has quit (Connection closed)
2015-05-30 20:09:15	KiChjang	XMPPwocky: i'm a servo contributor but would like to read up more on rust a bit
2015-05-30 20:09:41	KiChjang	i just did a lot of concurrent java for my coursework and i marveled at how simple it is in rust to do message passing
2015-05-30 20:11:07	-->	slimsag (Mibbit@moz-qrnu8n.ph.cox.net) has joined #rust
2015-05-30 20:11:15	-->	ChrisPls (Mibbit@moz-ou1.3i1.67.138.IP) has joined #rust
2015-05-30 20:11:24	<--	slimsag (Mibbit@moz-qrnu8n.ph.cox.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-30 20:11:45	-->	slimsag (Mibbit@moz-qrnu8n.ph.cox.net) has joined #rust
2015-05-30 20:12:04	slimsag	Can tuple or array types have methods on them like structs can?
2015-05-30 20:12:50	<--	willem (willem@moz-facs2s.dynamic.upc.nl) has quit (Quit: leaving)
2015-05-30 20:14:15	SpaceManiac	you can define a trait and implement it for such a type
2015-05-30 20:14:38	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-30 20:14:49	KiChjang	functions are first-class citizens in rust, yes?
2015-05-30 20:15:04	KiChjang	first-class objects*
2015-05-30 20:15:06	-->	tschottdorf (tobias@moz-d021av.aipg.hajb.2000.2604.IP) has joined #rust
2015-05-30 20:15:11	Havvy	First class values, yes.
2015-05-30 20:15:17	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-30 20:15:23	-->	playjax (chatzilla@moz-6ssl7m.optusnet.com.au) has joined #rust
2015-05-30 20:15:29	slimsag	SpaceManiac: so, just like on a struct, yeah? Or is there a difference somewhere?
2015-05-30 20:15:45	slimsag	(just trying to ensure my understanding is solid)
2015-05-30 20:16:35	XMPPwocky	slimsag: the issue is, you can't do an inherent impl on a type you didn't define
2015-05-30 20:16:42	SpaceManiac	you can't write `impl (i32, f64) {` because it's not your type; but as far as implementing a trait, yes, just like structs
2015-05-30 20:18:05	slimsag	okay, that makes sense. I appreciate the help!
2015-05-30 20:18:26	bbloom	how do i see println! output when running tests with cargo?
2015-05-30 20:19:16	slimsag	bbloom: perhaps --verbose does the trick (I don't know) ?
2015-05-30 20:19:31	bbloom	slimsag: it does not
2015-05-30 20:19:33	slimsag	that would be my guess
2015-05-30 20:19:35	slimsag	oh :/
2015-05-30 20:19:38	durka42	--nocapture
2015-05-30 20:19:41	bbloom	i guess better question: how do i debug tests?
2015-05-30 20:20:06	-->	alaska (alaska@moz-8bdjem.fios.verizon.net) has joined #rust
2015-05-30 20:20:19	bbloom	durka42: that does not appear to be a valid flag
2015-05-30 20:20:23	SpaceManiac	cargo test -- --nocapture
2015-05-30 20:20:24	durka42	er
2015-05-30 20:20:29	durka42	yes that
2015-05-30 20:20:30	SpaceManiac	(it's an argument to the produced binary)
2015-05-30 20:20:33	XMPPwocky	it needs to get bassed to the test runner
2015-05-30 20:20:34	XMPPwocky	yeah
2015-05-30 20:20:56	bbloom	that works. thank you
2015-05-30 20:20:58	<--	summerlight_ (summerlight@moz-99k.2mj.130.121.IP) has quit (Ping timeout: 121 seconds)
2015-05-30 20:20:59	bbloom	where is this documented?
2015-05-30 20:21:12	bbloom	also, why is it not the default?
2015-05-30 20:21:18	slimsag	bbloom: try cargo test -- -h
2015-05-30 20:21:21	XMPPwocky	bbloom: it means you can have "println debugging" in tests
2015-05-30 20:21:27	XMPPwocky	bbloom: and it only gets printed out when the tests fail
2015-05-30 20:21:42	-->	killercup (killercup@moz-723bo4.dip0.t-ipconnect.de) has joined #rust
2015-05-30 20:21:45	XMPPwocky	(and only for the failing tests)
2015-05-30 20:21:49	-->	mp (Mibbit@moz-3tt616.res.bhn.net) has joined #rust
2015-05-30 20:21:53	Remram	Can I get the position of the maximum in an iterator?
2015-05-30 20:21:53	bbloom	aaaaah ok so i need to print AND panic
2015-05-30 20:21:56	bbloom	or assert false
2015-05-30 20:21:58	<--	killercup (killercup@moz-723bo4.dip0.t-ipconnect.de) has quit (Quit: Bye)
2015-05-30 20:21:59	Remram	I don't want to call max() then position()...
2015-05-30 20:22:10	bbloom	ok *that* produces the output w/o the flag
2015-05-30 20:22:29	-->	errordeveloper (ilya@moz-ono.0eu.201.90.IP) has joined #rust
2015-05-30 20:22:42	bbloom	that makes some sense, but it's not at all what i expected
2015-05-30 20:23:45	mp	Hi does anyone know who to contact to sponsor rustcamp
2015-05-30 20:23:50	slimsag	I am reading through the book on for loops (https://doc.rust-lang.org/book/for-loops.html).... if Rust doesn't have traditional C-style for loops isn't it non-trivial to translate algorithms from other languages over?
2015-05-30 20:23:58	bbloom	also the cargo test help message says you can pass arguments to the test command, but doesn't say what that means. there's no indication that -- -h did anything
2015-05-30 20:24:03	XMPPwocky	slimsag: worst-case you can write it as a while loop
2015-05-30 20:24:08	<--	alaska (alaska@moz-8bdjem.fios.verizon.net) has quit (Ping timeout: 121 seconds)
2015-05-30 20:24:59	slimsag	XMPPwocky: true, I guess what I am wondering is how much readability/understand-ability is improved by not having C-style for loops
2015-05-30 20:25:01	towler1	[6~
2015-05-30 20:25:09	-->	nstoddard (nstoddard@moz-a1fj72.jcf6.2eo7.0009.2601.IP) has joined #rust
2015-05-30 20:25:30	durka42	since most C-style for loops are numerical iteration, you just translate it to "for x in 0..n …."
2015-05-30 20:25:36	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-30 20:25:36	bbloom	i'm actually reading the docs & trying to solve these things on my own before asking here... forgive me if my detailed feedback is unwelcome - i'm not really sure where to report these troubles to
2015-05-30 20:26:16	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-30 20:26:37	<--	errordeveloper (ilya@moz-ono.0eu.201.90.IP) has quit (Ping timeout: 121 seconds)
2015-05-30 20:27:10	bbloom	i figured somebody would be interested in the pain points facing a language geek who hasn't been following all that closely the road to 1.0
2015-05-30 20:27:11	XMPPwocky	bbloom: well, we don't have this channel for people to not talk in it
2015-05-30 20:27:48	-->	paupau (grrrr@moz-35edek.ca.comcast.net) has joined #rust
2015-05-30 20:27:49	<--	mp (Mibbit@moz-3tt616.res.bhn.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-30 20:28:06	meh	http://sprunge.us/KPFh can anyone explain this error?
2015-05-30 20:28:20	<--	zebin (textual@moz-hsm.gml.207.124.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-30 20:28:35	XMPPwocky	meh: looks like you're trying to have a struct constructor instead of a struct definition
2015-05-30 20:28:52	XMPPwocky	if you really want a constructor, VertexBuffer::<Vertex> is the way you do... whatever that is
2015-05-30 20:28:53	meh	XMPPwocky, derp
2015-05-30 20:28:57	XMPPwocky	an enum constructor
2015-05-30 20:29:01	XMPPwocky	which is just a function
2015-05-30 20:29:04	meh	XMPPwocky, no, you're right, I was just being retarded, I should be sleeping instead
2015-05-30 20:29:34	-->	RC9 (RCIX@moz-r4k.dfa.8.198.IP) has joined #rust
2015-05-30 20:30:26	<--	johnsoft (johnsoft@moz-69mrig.res.rr.com) has quit (Ping timeout: 121 seconds)
2015-05-30 20:30:48	-->	johnsoft (johnsoft@moz-69mrig.res.rr.com) has joined #rust
2015-05-30 20:32:04	geri	did someone here play with MemoryMap in rust?
2015-05-30 20:32:46	-->	pyon (pyon@moz-no9.411.236.190.IP) has joined #rust
2015-05-30 20:33:19	-->	michael1 (michael@moz-9vjtig.mo.charter.com) has joined #rust
2015-05-30 20:33:32	XMPPwocky	geri: i have written maybe 10 lines using it in like october
2015-05-30 20:33:35	<--	keenan (keenan@moz-es1.bb3.240.23.IP) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-05-30 20:33:54	<--	Rym (y@moz-c2u.sd4.38.217.IP) has quit (Ping timeout: 121 seconds)
2015-05-30 20:34:35	<--	tinaun (tinaun@moz-7l08ds.ct.comcast.net) has quit (Quit: )
2015-05-30 20:35:13	-->	unquiet (unqirc@moz-mde.fbh.176.78.IP) has joined #rust
2015-05-30 20:36:06	geri	XMPPwocky: https://github.com/rbranson/rust-mmap/blob/master/src/lib.rs ... i wonder why data is *mut u8 ...
2015-05-30 20:36:25	geri	and what happens if you have negative values in the memory to be mapped
2015-05-30 20:36:27	geri	?
2015-05-30 20:36:33	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-30 20:36:37	<--	slimsag (Mibbit@moz-qrnu8n.ph.cox.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-30 20:36:49	XMPPwocky	geri: well, this works on opaque bytes anyways
2015-05-30 20:37:14	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-30 20:37:22	<--	michael1 (michael@moz-9vjtig.mo.charter.com) has quit (Ping timeout: 121 seconds)
2015-05-30 20:37:32	<--	unquiet (unqirc@moz-mde.fbh.176.78.IP) has quit (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
2015-05-30 20:37:44	geri	XMPPwocky: i read the memory and all negative values are flipped to be positive :(
2015-05-30 20:38:03	geri	i cast the u8 to u32
2015-05-30 20:39:01	--	bentley|away is now known as bentley
2015-05-30 20:39:55	-->	keenan (keenan@moz-es1.bb3.240.23.IP) has joined #rust
2015-05-30 20:40:21	geri	XMPPwocky: http://ideone.com/eo3bBr
2015-05-30 20:40:25	<--	atomic (atomic@moz-1fe1qo.rev.poneytelecom.eu) has quit (Ping timeout: 121 seconds)
2015-05-30 20:40:53	XMPPwocky	memory itself is untyped
2015-05-30 20:41:33	-->	amnn_ (amnn@moz-ro1qqu.ox.ac.uk) has joined #rust
2015-05-30 20:41:33	<--	amnn (amnn@moz-ro1qqu.ox.ac.uk) has quit (Connection closed)
2015-05-30 20:41:38	geri	but why the negative values get flipped to positive?
2015-05-30 20:42:20	-->	frankmcsherry (frankmcsher@moz-dlbf1b.dyn.telefonica.de) has joined #rust
2015-05-30 20:42:22	XMPPwocky	rusti: unsafe { std::mem::transmute::<i8, u8>(-1u8) }
2015-05-30 20:42:23	--	Notice(playbot): <anon>:9:48: 9:52 error: unary negation of unsigned integers may be removed in the future
2015-05-30 20:42:24	--	Notice(playbot): <anon>:9         unsafe { std::mem::transmute::<i8, u8>(-1u8) }
2015-05-30 20:42:24	--	Notice(playbot): output truncated; full output at: http://bit.ly/1AEXrJ3
2015-05-30 20:42:28	XMPPwocky	rusti: unsafe { std::mem::transmute::<i8, u8>(-1i8) }
2015-05-30 20:42:29	--	Notice(playbot): 255
2015-05-30 20:42:52	Moonlightning	> error: unary negation of unsigned integers may be removed in the future
2015-05-30 20:42:56	Moonlightning	Wat.
2015-05-30 20:43:00	XMPPwocky	Moonlightning: i accidentally did -1u8
2015-05-30 20:43:01	<--	amnn_ (amnn@moz-ro1qqu.ox.ac.uk) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-30 20:43:02	XMPPwocky	which is very silly
2015-05-30 20:43:03	Moonlightning	Doesn't that effectively remove it immediately?
2015-05-30 20:43:11	XMPPwocky	Moonlightning: look at the full error
2015-05-30 20:43:22	XMPPwocky	... here is no full error
2015-05-30 20:43:22	XMPPwocky	okay
2015-05-30 20:43:26	XMPPwocky	i though it was feature gated :P
2015-05-30 20:43:27	geri	hu?
2015-05-30 20:43:34	p1start	XMPPwocky: It is feature gated
2015-05-30 20:43:41	p1start	Feature gates aren’t available outside nightly
2015-05-30 20:43:44	XMPPwocky	ohhh right
2015-05-30 20:44:28	geri	XMPPwocky: do you see somth wrong in the snippet before?
2015-05-30 20:45:26	<--	keenan (keenan@moz-es1.bb3.240.23.IP) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-05-30 20:45:49	<--	meh (meh@moz-e56g7l.42-151.net24.it) has quit (Ping timeout: 121 seconds)
2015-05-30 20:46:21	<--	frankmcsherry (frankmcsher@moz-dlbf1b.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2015-05-30 20:47:24	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-30 20:47:24	-->	yuja (yuja@moz-9860l5.so-net.ne.jp) has joined #rust
2015-05-30 20:47:49	<--	Wild_Cat (Max@moz-2clr66.dsl.teksavvy.com) has quit (Ping timeout: 121 seconds)
2015-05-30 20:48:04	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-30 20:48:33	-->	lenstr (lenstr@moz-kvg.vju.25.171.IP) has joined #rust
2015-05-30 20:49:09	<--	gandalf (zbraniecki@moz-cp7c4m.ca.comcast.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-30 20:50:35	<--	lenstr (lenstr@moz-kvg.vju.25.171.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-30 20:50:58	geri	XMPPwocky: hu?
2015-05-30 20:52:48	SpaceManiac	geri: I don't see anything obviously wrong, but I don't understand what you're trying to do or what problem you're having
2015-05-30 20:53:14	geri	SpaceManiac: in the memory i have negative values
2015-05-30 20:53:29	-->	gsingh93 (gulshan@moz-ln1ktu.st3l.iv8o.0004.2601.IP) has joined #rust
2015-05-30 20:53:31	SpaceManiac	what do you expect to be there instead?
2015-05-30 20:53:32	-->	Guest (textual@moz-iq1.jtg.171.183.IP) has joined #rust
2015-05-30 20:53:39	<--	slurps-mad-rips (slurps-mad-@moz-o2c.uaj.44.17.IP) has quit (Quit: Connection reset by bear)
2015-05-30 20:53:40	geri	when i map it and cast it to chaMem the values get all positive
2015-05-30 20:54:16	SpaceManiac	so this is the code to read values out - how are you writing the negative values in?
2015-05-30 20:54:29	geri	it gets written by some hw
2015-05-30 20:54:50	geri	which works fine with the c code i port over to rust
2015-05-30 20:55:14	geri	its clearly in issue with rust and how i read the memory
2015-05-30 20:55:26	SpaceManiac	are you doing any casts to u32 later, after the code you posted?
2015-05-30 20:55:34	geri	nope
2015-05-30 20:55:37	geri	i just print it
2015-05-30 20:56:26	geri	http://ideone.com/ScYex4
2015-05-30 20:57:05	<--	James (quassel@moz-8qs8a3.range86-148.btcentralplus.com) has quit (Ping timeout: 121 seconds)
2015-05-30 20:57:36	SpaceManiac	I don't see anything that would force all the values positive
2015-05-30 20:57:43	geri	hm
2015-05-30 20:57:51	SpaceManiac	Can you narrow it down to a specific value some location should be, and what it is instead?
2015-05-30 20:58:14	-->	saterus (saterus@moz-rutqj0.res.rr.com) has joined #rust
2015-05-30 20:58:18	geri	i plot the recorded signal
2015-05-30 20:58:21	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-30 20:58:28	-->	esgeh (sg@moz-a7j.cns.76.134.IP) has joined #rust
2015-05-30 20:59:00	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-30 20:59:51	geri	SpaceManiac: http://img.ctrlv.in/img/15/05/31/556a5d001ef4c.png
2015-05-30 21:00:42	SpaceManiac	these are the values the Rust code is producing?
2015-05-30 21:00:49	geri	yes
2015-05-30 21:01:01	SpaceManiac	and the expected output is a continous wave?
2015-05-30 21:01:06	geri	yes
2015-05-30 21:01:33	geri	the other tool written in C does it
2015-05-30 21:02:31	SpaceManiac	is the C code available for examination? maybe it's doing some other processing?
2015-05-30 21:03:26	-->	slimsag (Mibbit@moz-qrnu8n.ph.cox.net) has joined #rust
2015-05-30 21:03:29	geri	nope i checked the code
2015-05-30 21:03:35	SpaceManiac	of note is that the wrapping appears to be happening at 2^14, a weird place for that to happen
2015-05-30 21:03:37	geri	its on github
2015-05-30 21:03:52	dx	SpaceManiac: oh hey glad to see you're alive and doing fun stuff
2015-05-30 21:03:53	geri	https://github.com/RedPitaya/RedPitaya/blob/master/Test/acquire/fpga_osc.c
2015-05-30 21:03:57	 *	dx vanishes again
2015-05-30 21:04:24	slimsag	Reading docs on lifetime elision.. one example is "fn get_str() -> &str; // ILLEGAL, no inputs" but I don't understand it ? Wouldn't the function act like an construct (new function) returning ownership of the &str ?
2015-05-30 21:04:50	o11c	what?
2015-05-30 21:05:18	o11c	slimsag: &str is a borrow ...
2015-05-30 21:05:58	SpaceManiac	geri: it looks like you need to do the equivalent of the osc_fpga_cnv_cnt_to_v in the C code?
2015-05-30 21:06:00	<--	ktakv (ktakv@moz-2igq4u.1984.is) has quit (Ping timeout: 121 seconds)
2015-05-30 21:06:34	--	bentley is now known as bentley|away
2015-05-30 21:07:05	dx	speaking of lifetime elision, there's one example in the guide that worried me a bit when i read it: fn frob<'a, 'b>(s: &'a str, t: &'b str) -> &str; // Expanded: Output lifetime is unclear
2015-05-30 21:07:07	slimsag	o11c: it's a pointer to memory somewhere, right? isn't it just returning ownership of the pointer (the lifetime) ?
2015-05-30 21:07:09	dx	"unclear"?!
2015-05-30 21:07:35	-->	Wild_Cat (Max@moz-2clr66.dsl.teksavvy.com) has joined #rust
2015-05-30 21:08:02	durka42	unclear whether it would be 'a or 'b
2015-05-30 21:08:28	dx	so it's saying the compiler will choose either of those randomly? reminds me of good ol' undefined behavior in C
2015-05-30 21:08:41	nham	dx: no, it won't choose one at all. it's an error
2015-05-30 21:08:47	geri	SpaceManiac: what is %7d in rust?
2015-05-30 21:08:48	slimsag	dx: I think it means that code will error out at compile time
2015-05-30 21:09:04	slimsag	I still don't understand the "fn get_str() -> &str; // ILLEGAL, no inputs" example though
2015-05-30 21:09:19	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-30 21:09:19	dx	yeah thing is, all the other examples are clearly marked as ILLEGAL, this one isn't
2015-05-30 21:09:36	slimsag	dx: I agree with that, could be more clear -- did you open an issue for it ?
2015-05-30 21:09:41	<--	Guest (textual@moz-iq1.jtg.171.183.IP) has quit (Ping timeout: 121 seconds)
2015-05-30 21:09:51	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-30 21:09:54	geri	SpaceManiac: osc_fpga_cnv_cnt_to_v doesnt do much if the value is not negative!?
2015-05-30 21:10:13	<--	c74d (c74d3a4ebb6@moz-0ersgu.oc.cox.net) has quit (Connection closed)
2015-05-30 21:10:19	dx	slimsag: nope, which tracker do i use?
2015-05-30 21:10:22	durka42	the "no inputs" one is illegal because you need to give -> &str a lifetime, but there are no parameters that you can get a lifetime from, right?
2015-05-30 21:10:31	durka42	I don't see how you fix it though...
2015-05-30 21:10:40	SpaceManiac	geri: it converts the values you're seeing in that chart (which are all positive) to the ones you're expecting (some of which are negative)
2015-05-30 21:10:50	slimsag	dx: https://github.com/rust-lang/rust/issues/new I presume
2015-05-30 21:10:57	-->	Rym (y@moz-c2u.sd4.38.217.IP) has joined #rust
2015-05-30 21:11:08	talchas	slimsag: that one is saying that there are no lifetimes as inputs to the function, so you can't use an elided lifetime as an output
2015-05-30 21:11:32	SpaceManiac	dx: yeah, school ended. non-dead, need to hop back on Glowstone soon...
2015-05-30 21:11:44	slimsag	but why doesn't it "just know" that the returned pointer is owned by the caller once the function returns ?
2015-05-30 21:11:57	-->	meunierd (dmeunier@moz-glf54u.cpe.sourcecable.net) has joined #rust
2015-05-30 21:12:06	-->	tinaun (tinaun@moz-7l08ds.ct.comcast.net) has joined #rust
2015-05-30 21:12:07	talchas	slimsag: that's not what &str means
2015-05-30 21:12:20	talchas	a reference is always owned by someone else
2015-05-30 21:12:27	geri	SpaceManiac: here is it: http://ideone.com/zcrYvg ... i guess thats the only place where it goes wrong!
2015-05-30 21:12:33	-->	esclear (esclear@moz-rsqfao.dip0.t-ipconnect.de) has joined #rust
2015-05-30 21:13:28	slimsag	talchas: isn't &str effectively just a pointer to some memory (representing the string)? someone has to own it, and the function is returning it, so wouldn't the caller own it?
2015-05-30 21:13:59	SpaceManiac	slimsag: someone has to own it, but it's not the &str.
2015-05-30 21:14:05	talchas	yeah
2015-05-30 21:14:34	slimsag	okay.. so who owns the returned &str ?
2015-05-30 21:14:51	talchas	well, that's what you need to tell rustc
2015-05-30 21:14:53	-->	cmr (cmr@moz-35s2fm.members.linode.com) has joined #rust
2015-05-30 21:14:54	--	Mode #rust [+o cmr] by ChanServ
2015-05-30 21:15:01	-->	nstoddard_ (nstoddard@moz-srrb5f.ca.comcast.net) has joined #rust
2015-05-30 21:15:02	talchas	the only way to actually write such a function is if it's &'static str
2015-05-30 21:15:08	@cmr	Is an OsStr NUL-terminated?
2015-05-30 21:15:15	<--	esclear_ (esclear@moz-71hqke.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2015-05-30 21:15:18	o11c	slimsag: for a plain function with no arguments, &str might be &'static str, or it might be some implicit-but-wrapped TLS lifetime
2015-05-30 21:15:22	SpaceManiac	geri: might want != 0 rather than < 0 in that if condition
2015-05-30 21:15:25	geri	oh lol
2015-05-30 21:15:28	geri	dammit :D
2015-05-30 21:15:37	geri	it works now ^^
2015-05-30 21:15:40	o11c	slimsag: for a closure, there are more possibilities
2015-05-30 21:15:41	slimsag	talchas: is it because the function could pass ownership to someone other than the callee ? Is that why we can't just simplify it and say that "the caller owns it" ?
2015-05-30 21:15:48	geri	SpaceManiac: thanks!! :D
2015-05-30 21:15:54	o11c	slimsag: that would be ~str
2015-05-30 21:15:58	talchas	cmr: on linux it's a NUL-terminated string, on windows I think it's UTF-16 or something?
2015-05-30 21:15:59	o11c	except that that doesn't exist anymore
2015-05-30 21:15:59	<--	nstoddard (nstoddard@moz-a1fj72.jcf6.2eo7.0009.2601.IP) has quit (Ping timeout: 121 seconds)
2015-05-30 21:16:12	--	nstoddard_ is now known as nstoddard
2015-05-30 21:16:12	-->	mindtree (Mitch@moz-5h22bp.iprimus.net.au) has joined #rust
2015-05-30 21:16:19	SpaceManiac	geri: happy to help
2015-05-30 21:16:24	geri	SpaceManiac: i wonder if that kind of code is faster in rust compared to C!?
2015-05-30 21:16:36	geri	i will benchmark it....
2015-05-30 21:16:48	geri	what do you expect SpaceManiac ?
2015-05-30 21:16:49	SpaceManiac	slimsag: `String` is the owned string type
2015-05-30 21:16:53	slimsag	o11c: ~str is now just Box<&str> right? (heap allocated vs stack)?
2015-05-30 21:17:01	@cmr	slimsag: no, ~str is now String
2015-05-30 21:17:19	slimsag	ah
2015-05-30 21:17:22	SpaceManiac	Box<str> is sort of but not really a thing
2015-05-30 21:17:59	@cmr	talchas: it appears the answer is no even on unix?
2015-05-30 21:18:11	@cmr	talchas: looking at the source it's just a Vec<u8> wrapper with no other checking.
2015-05-30 21:18:26	@cmr	(or, [u8] as the case may be)
2015-05-30 21:18:46	slimsag	so then &str is a reference to some stack-allocated string; my question is why does a function like "fn get_str() -> &str;" need an explicit lifetime? why can't the compiler tell that it's returning the string without an explicit lifetime parameter?
2015-05-30 21:19:12	slimsag	(I'm certain it does need an explicit lifetime, but I just don't understand why yet)
2015-05-30 21:19:22	@cmr	slimsag: &str is not a reference to a stack allocated string, references do not refer to any particular allocation.
2015-05-30 21:19:40	@cmr	It could be a static, read-only string literal. It could be a view into a String (which is heap-allocated).
2015-05-30 21:19:47	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-30 21:19:53	geri	do you expect the rust code to run faster than C ?
2015-05-30 21:19:56	geri	SpaceManiac: 
2015-05-30 21:20:07	slimsag	cmr: okay, so not stack-allocated then -- just a pointer to a string?
2015-05-30 21:20:19	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-30 21:20:26	<--	mindtree (Mitch@moz-5h22bp.iprimus.net.au) has quit (Ping timeout: 121 seconds)
2015-05-30 21:20:39	@cmr	slimsag: pointer + length, yes.
2015-05-30 21:20:49	SpaceManiac	geri: don't really know. benchmark!
2015-05-30 21:20:55	@cmr	slimsag: in the case of the literal signature `fn get_str() -> &str;`, there is no lifetime the compiler could really infer.
2015-05-30 21:21:06	talchas	cmr: yeah, I may have gotten confused what was only part of CStr and what was part of OStr, sorry
2015-05-30 21:21:19	@cmr	talchas: me too ;)
2015-05-30 21:21:40	geri	SpaceManiac: will do :D
2015-05-30 21:22:00	@cmr	talchas: it seems odd, though, as I expected that since Path coughs up OsStr's, that I'd be able to pass an OsStr to for example open(2) on unix.
2015-05-30 21:22:05	slimsag	cmr: okay, sorry for pushing it further but my question is "why can't the compiler infer the lifetime?" in what situation would it not be able to?
2015-05-30 21:22:06	<--	Ms2ger (Ms2ger@moz-jig.287.180.91.IP) has quit (Ping timeout: 121 seconds)
2015-05-30 21:22:16	@cmr	slimsag: what lifetime *should* it infer?
2015-05-30 21:22:35	<--	Guest9154 (Jorge@moz-7bh.ng6.177.186.IP) has quit (Ping timeout: 121 seconds)
2015-05-30 21:22:38	<--	saterus (saterus@moz-rutqj0.res.rr.com) has quit (Connection closed)
2015-05-30 21:23:30	@cmr	slimsag: there is lifetime elision for cases like `fn get_str(&self) -> &str`, which ties the lifetime of the return value to the lifetime of self, but if there are no arguments, elision doesn't have a lifetime to use.
2015-05-30 21:24:06	<--	starless (starless@moz-u9gmm1.res.rr.com) has quit (Quit: Leaving)
2015-05-30 21:24:39	roido	you would probably not be able to return any references with no arguments, right?
2015-05-30 21:25:14	<--	talchas (user@moz-8ubbgk.ca.comcast.net) has left #rust ("ERC Version 5.3 (IRC client for Emacs)")
2015-05-30 21:25:14	@cmr	roido: not in safe code, not usually.
2015-05-30 21:25:16	-->	talchas (user@moz-8ubbgk.ca.comcast.net) has joined #rust
2015-05-30 21:25:23	@cmr	roido: but for example a reference to a static value is fine.
2015-05-30 21:25:37	@cmr	(and the lifetime there would be 'static)
2015-05-30 21:25:51	slimsag	cmr: okay, I think I understand now. It's because &str is _a reference to a string_ but not String _an owned string_ right ? so then `fn get_str() -> String` would not need an explicit lifetime?
2015-05-30 21:25:59	@cmr	slimsag: right.
2015-05-30 21:26:05	@cmr	slimsag: sounds like you've got it :)
2015-05-30 21:26:08	-->	Guest (textual@moz-iq1.jtg.171.183.IP) has joined #rust
2015-05-30 21:26:16	-->	FlyingFoX (quassel@moz-j2ui1r.unity-media.net) has joined #rust
2015-05-30 21:26:18	slimsag	cmr: Ahhh, I get it now. Thank you so much! sorry for pestering but I just didn't understand :)
2015-05-30 21:26:22	@cmr	Easiest way to think of &str is as a view into a string.
2015-05-30 21:26:26	@cmr	slimsag: np, happy to help.
2015-05-30 21:27:41	<--	gleb (gleb@moz-3u1drv.rusanovka-net.kiev.ua) has quit (Ping timeout: 121 seconds)
2015-05-30 21:27:58	<--	meunierd (dmeunier@moz-glf54u.cpe.sourcecable.net) has quit (Client exited)
2015-05-30 21:29:01	-->	kimwonyong (kimwonyong@moz-gfp.vhi.163.221.IP) has joined #rust
2015-05-30 21:29:28	-->	c74d (c74d3a4ebb6@moz-0ersgu.oc.cox.net) has joined #rust
2015-05-30 21:30:45	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-30 21:31:17	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-30 21:31:55	roido	cmr: so would `fn get_str() -> &'static str` be acceptable?
2015-05-30 21:32:06	@cmr	roido: yes.
2015-05-30 21:32:17	roido	good to know, thanks
2015-05-30 21:32:46	huseby	does anybody have a little time to help me with a newb rust question?
2015-05-30 21:33:02	<--	kimwonyong (kimwonyong@moz-gfp.vhi.163.221.IP) has quit (Ping timeout: 121 seconds)
2015-05-30 21:33:08	@cmr	huseby: sure, what's up?
2015-05-30 21:33:20	huseby	I've got a HashMap<String, Vec<String>> and I'm trying to add a string to a Vec if the key already exists
2015-05-30 21:33:33	huseby	or create a Vec, add my string, and then insert it into the hashmap if it doesn't
2015-05-30 21:33:38	<--	kngl (Adium@moz-rmgnkh.dynamic.voo.be) has quit (Quit: Leaving.)
2015-05-30 21:33:39	huseby	I started with something like this
2015-05-30 21:34:20	talchas	map.entry(key).or_insert(vec![]).insert(value) I think
2015-05-30 21:34:21	huseby	let mut v: Vec<String> = match my_map.get_mut(&key) {
2015-05-30 21:34:28	huseby	   Some(v) => v,
2015-05-30 21:34:49	huseby	   None => Vec<String>::new()
2015-05-30 21:34:51	huseby	}
2015-05-30 21:34:53	@cmr	huseby: You'll want to use the entry method, like talchas suggests.
2015-05-30 21:35:03	@cmr	it's designed for exactly this :)
2015-05-30 21:35:09	huseby	aha!
2015-05-30 21:35:14	huseby	I knew there was a shortcut for this
2015-05-30 21:35:15	huseby	thansk!
2015-05-30 21:35:34	talchas	huseby: that one won't work because one branch is a reference and the other is a value, but doing insert would also not work due to shortcomings with lifetimes
2015-05-30 21:35:45	-->	mib_mf8f3e (Mibbit@moz-g77l04.ca.comcast.net) has joined #rust
2015-05-30 21:35:46	huseby	ah, ok
2015-05-30 21:35:55	huseby	I was trying to do rust too hard :)
2015-05-30 21:36:07	-->	kvsari (kvsari@moz-fgsnv9.bbtec.net) has joined #rust
2015-05-30 21:36:11	talchas	(my_map is still borrowed in the None case, and it's probably tricky to make the compiler realize it doesn't need to be)
2015-05-30 21:36:20	<--	krig (krig@moz-nf73fa.acc.umu.se) has quit (Ping timeout: 121 seconds)
2015-05-30 21:36:55	huseby	talchas: well, I was using the match my_map.get_mut() thing to get a mutable reference to a Vec<String>
2015-05-30 21:37:03	huseby	either the one already in the hash map or a new one
2015-05-30 21:37:07	huseby	then insert my string
2015-05-30 21:37:09	-->	nstoddard_ (nstoddard@moz-a1fj72.jcf6.2eo7.0009.2601.IP) has joined #rust
2015-05-30 21:37:15	huseby	then insert the vector back into the hash_map
2015-05-30 21:37:28	huseby	potentially replacing the existing one if the Some(v) branch was taken
2015-05-30 21:37:40	huseby	(which I thought was less than ideal)
2015-05-30 21:37:50	<--	mib_mf8f3e (Mibbit@moz-g77l04.ca.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-30 21:38:38	<--	geri (Mibbit@moz-v5j9c2.highway.telekom.at) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-30 21:38:59	<--	nstoddard (nstoddard@moz-srrb5f.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-30 21:39:06	--	nstoddard_ is now known as nstoddard
2015-05-30 21:39:07	huseby	talchas: does the map.entry(key) take ownership of the key if the insert branch is takend?
2015-05-30 21:39:12	huseby	cmr: ^^^
2015-05-30 21:39:32	talchas	huseby: it takes ownership in all cases
2015-05-30 21:39:44	huseby	I've noticed lots of examples with map.insert(key_string.clone(), value);
2015-05-30 21:40:11	-->	gandalf (zbraniecki@moz-cp7c4m.ca.comcast.net) has joined #rust
2015-05-30 21:40:17	huseby	the key is a member of struct and I don't want ownership changing
2015-05-30 21:40:18	o11c	in C++ I hate maps because of all the ownership edge-cases that you really shoudl handle
2015-05-30 21:40:26	huseby	so I should clone I guess
2015-05-30 21:40:39	<--	Diggsey (diggsey@moz-9s9ol4.dsl.pipex.com) has quit (Ping timeout: 121 seconds)
2015-05-30 21:41:43	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-30 21:42:15	-->	zynisch_o7 (zynisch_o7@moz-6eh1ju.dyn.optonline.net) has joined #rust
2015-05-30 21:42:22	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-30 21:42:24	<--	Guest (textual@moz-iq1.jtg.171.183.IP) has quit (Ping timeout: 121 seconds)
2015-05-30 21:42:30	-->	meandi_1 (meandi_3@moz-kdoj0t.ewe-ip-backbone.de) has joined #rust
2015-05-30 21:42:34	-->	atomic (atomic@moz-89b.tqd.10.176.IP) has joined #rust
2015-05-30 21:44:09	<--	dlc (dlc@moz-ijetde.res.rr.com) has quit (Quit: Leaving)
2015-05-30 21:44:35	<--	maximih (maximih@moz-0r2bjb.bredband.telia.com) has quit (A TLS packet with unexpected length was received.)
2015-05-30 21:45:16	<--	panicbit (panicbit@moz-trnuar.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2015-05-30 21:45:25	-->	dcb (textual@moz-j72nfe.ca.comcast.net) has joined #rust
2015-05-30 21:45:48	<--	meandi (meandi_3@moz-b2rjpn.ewe-ip-backbone.de) has quit (Ping timeout: 121 seconds)
2015-05-30 21:46:03	-->	krig (krig@moz-nf73fa.acc.umu.se) has joined #rust
2015-05-30 21:46:16	<--	zynisch_o7 (zynisch_o7@moz-6eh1ju.dyn.optonline.net) has quit (Ping timeout: 121 seconds)
2015-05-30 21:46:40	<--	SerialVelocity (SerialVeloc@moz-attia0.cable.virginm.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-30 21:47:24	Moonlightning	playbot: 64_usize * 2
2015-05-30 21:47:25	--	Notice(playbot): 128
2015-05-30 21:47:41	<--	Quanttek (quassel@moz-25k96c.6fkd.dvrb.8108.2a02.IP) has quit (Ping timeout: 121 seconds)
2015-05-30 21:48:32	-->	Kxepal (Miranda@moz-fbtdfm.pppoe.mtu-net.ru) has joined #rust
2015-05-30 21:49:21	-->	michael1 (michael@moz-9vjtig.mo.charter.com) has joined #rust
2015-05-30 21:49:25	-->	annodomini (lambda@moz-qgii5v.ma.comcast.net) has joined #rust
2015-05-30 21:50:35	Moonlightning	playbot: 64_usize * 1.125
2015-05-30 21:50:36	--	Notice(playbot): <anon>:9:9: 9:25 error: the trait `core::ops::Mul<_>` is not implemented for the type `usize` [E0277]
2015-05-30 21:50:37	--	Notice(playbot): <anon>:9         64_usize * 1.125
2015-05-30 21:50:37	--	Notice(playbot): output truncated; full output at: http://bit.ly/1By8wXs
2015-05-30 21:50:58	o11c	playbot: 64_usize * 1.125f64
2015-05-30 21:50:59	--	Notice(playbot): <anon>:9:9: 9:28 error: the trait `core::ops::Mul<f64>` is not implemented for the type `usize` [E0277]
2015-05-30 21:50:59	--	Notice(playbot): <anon>:9         64_usize * 1.125f64
2015-05-30 21:50:59	--	Notice(playbot): output truncated; full output at: http://bit.ly/1KFfLoT
2015-05-30 21:51:05	-->	lenstr (lenstr@moz-kvg.vju.25.171.IP) has joined #rust
2015-05-30 21:51:10	Moonlightning	playbot: 64_usize as f64 * 1.125
2015-05-30 21:51:11	--	Notice(playbot): 72
2015-05-30 21:51:47	@cmr	Moonlightning: you can query playbot instead of spamming the channel.
2015-05-30 21:52:06	Moonlightning	You can? Okay.
2015-05-30 21:52:09	Moonlightning	Thanks.
2015-05-30 21:52:41	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-30 21:53:20	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-30 21:53:25	<--	michael1 (michael@moz-9vjtig.mo.charter.com) has quit (Ping timeout: 121 seconds)
2015-05-30 21:53:41	<--	Rym (y@moz-c2u.sd4.38.217.IP) has quit (Ping timeout: 121 seconds)
2015-05-30 21:53:47	<--	krig (krig@moz-nf73fa.acc.umu.se) has quit (Ping timeout: 121 seconds)
2015-05-30 21:53:51	<--	GGist (Mibbit@moz-st7v59.wa.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-30 21:54:21	<--	dcb (textual@moz-j72nfe.ca.comcast.net) has quit (Connection closed)
2015-05-30 21:54:49	<--	tmtwd (tmtwd@moz-0kkm5n.cable.rogers.com) has quit (Ping timeout: 121 seconds)
2015-05-30 21:54:51	-->	dcb (textual@moz-j72nfe.ca.comcast.net) has joined #rust
2015-05-30 21:55:08	<--	lenstr (lenstr@moz-kvg.vju.25.171.IP) has quit (Ping timeout: 121 seconds)
2015-05-30 21:56:43	Moonlightning	The docs don't have a button to expand|collapse enum variants, either.
2015-05-30 21:56:48	Moonlightning	Not in the stable /or/ nightly docs.
2015-05-30 21:58:26	Moonlightning	Is there a better way to do `(foo as f64 * 1.25) as usize` where `foo: usize`?
2015-05-30 21:58:45	@cmr	foo + foo/4?
2015-05-30 21:58:53	@cmr	foo/8
2015-05-30 21:59:00	-->	bleah (Mibbit@moz-p0l.q36.8.24.IP) has joined #rust
2015-05-30 21:59:12	-->	verdagon (verdagon@moz-ff302e.ca.comcast.net) has joined #rust
2015-05-30 21:59:14	nathan7	cmr: 0.25 = 1/4 in my country
2015-05-30 21:59:31	@bstrie	in the united states, 1/4 = 0.2
2015-05-30 21:59:35	@cmr	Grah, they wrote 1.125 earlier.
2015-05-30 21:59:39	buhman	wat
2015-05-30 21:59:40	nathan7	bstrie: government cuts?
2015-05-30 21:59:54	Mutabah	bstrie: and pi = 3?
2015-05-30 22:00:01	<--	Wild_Cat (Max@moz-2clr66.dsl.teksavvy.com) has quit (Ping timeout: 121 seconds)
2015-05-30 22:00:08	nathan7	Mutabah: digits are expensive, man
2015-05-30 22:00:13	nathan7	Mutabah: small government
2015-05-30 22:00:42	@bstrie	conservative government, conservative approximations
2015-05-30 22:00:54	nathan7	there's no *evidence* it's 3.14, man
2015-05-30 22:01:02	@bstrie	we don't trust mathematicians
2015-05-30 22:01:20	@bstrie	they's scientists, that means they's no-goodniks
2015-05-30 22:01:20	<--	dcb (textual@moz-j72nfe.ca.comcast.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-30 22:01:49	verdagon	hey fellas, i have a HashSet<MyWrapper<Rc<RefCell<MyNode>>>> because i hate myself, and MyWrapper implements a Deref which returns the contained Ref<MyNode>. but when i do let mynewref: MyWrapper<Rc<RefCell<MyNode>>>> = myhashset.iter().next().unwrap(); it gives me an error saying that the right side is a reference, when we expected a non-reference
2015-05-30 22:02:15	verdagon	the funny part: when i try to * dereference it, i get that Ref i mentioned
2015-05-30 22:02:17	-->	qwerty_nor (Thunderbird@moz-fe2.cn5.232.50.IP) has joined #rust
2015-05-30 22:02:31	talchas	verdagon: I believe hashset.iter() gives you a reference to your values
2015-05-30 22:02:32	huseby	has anybody in here used the nom parser crate much?
2015-05-30 22:02:32	verdagon	i think it’s because * doesnt mean “dereference”, it means “dereference as much as i can until i cant anymore"
2015-05-30 22:02:43	verdagon	is there a way to just dereference *once* ?
2015-05-30 22:03:03	huseby	I'm working on a crate that can connect to a daemon on a socket and talk to it using the text protocol the daemon speaks
2015-05-30 22:03:16	huseby	I was wondering if there are any best practices around that
2015-05-30 22:03:17	Moonlightning	verdagon: I thought it meant /dereference until it fits in the type required here/.
2015-05-30 22:03:20	-->	dpc (dpc@moz-t6gr4b.ca.comcast.net) has joined #rust
2015-05-30 22:03:28	@bstrie	verdagon: I don't think * recursively dereferences, just .
2015-05-30 22:03:30	Moonlightning	Also, I thought that was done automatically.
2015-05-30 22:03:30	verdagon	oh. huh. that should work then…
2015-05-30 22:03:40	huseby	nom seems really handy for parsing text streams and they have a stateful consumer
2015-05-30 22:03:42	Moonlightning	I'm probably wrong, though.
2015-05-30 22:03:45	Moonlightning	<-- newbie
2015-05-30 22:03:47	talchas	verdagon: well, MyWrapper<Rc<>> isn't Copy
2015-05-30 22:03:53	verdagon	oh!
2015-05-30 22:03:55	verdagon	i made it clone!
2015-05-30 22:03:59	verdagon	is clone different from copy?
2015-05-30 22:04:04	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-30 22:04:06	@bstrie	Clone is Copy++
2015-05-30 22:04:11	talchas	yes, you have to explicitly call clone()
2015-05-30 22:04:33	talchas	if you want a copy of the HashSet's value, then yeah, .clone() will go from &T to T
2015-05-30 22:04:43	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-30 22:04:58	-->	choplin (choplin@moz-qkm9un.ap.nuro.jp) has joined #rust
2015-05-30 22:05:24	talchas	(presumably it'll only actual-copy the MyWrapper part, since Rc::clone() just gives you another reference)
2015-05-30 22:06:26	<--	gandalf (zbraniecki@moz-cp7c4m.ca.comcast.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-30 22:06:56	verdagon	blast, i cant #[derive(Copy)]
2015-05-30 22:07:03	verdagon	because Rc cant copy
2015-05-30 22:07:19	verdagon	talchas: .clone() went from &T to &T
2015-05-30 22:07:20	-->	rouma (zack@moz-p8e0re.res.rr.com) has joined #rust
2015-05-30 22:07:26	verdagon	have no idea why, either
2015-05-30 22:07:53	-->	fabianvf (fabianvf@moz-fjqmui.va.comcast.net) has joined #rust
2015-05-30 22:07:57	verdagon	god, graphs are such a nightmare in rust… i cant wait until im done with this part of the code >_>
2015-05-30 22:08:03	@bstrie	verdagon: you can derive Clone
2015-05-30 22:08:06	-->	ktakv (ktakv@moz-2igq4u.1984.is) has joined #rust
2015-05-30 22:08:16	@cmr	verdagon: I recommend using the excellent https://github.com/bluss/petulant-avenger-graphlibrary
2015-05-30 22:08:28	verdagon	there’s a library for this? O.o
2015-05-30 22:08:32	verdagon	PRAISE RUST
2015-05-30 22:08:33	@cmr	Of course there is.
2015-05-30 22:08:42	@cmr	Graphs are pretty fundamental after all.
2015-05-30 22:09:04	@bstrie	shove it in the stdlib!
2015-05-30 22:09:13	@bstrie	I'm tired of answering this question! :P
2015-05-30 22:09:18	FreeFull	verdagon: .clone() on &&T will give &T
2015-05-30 22:10:01	verdagon	FreeFull: but i thought i didnt have a &&T
2015-05-30 22:10:13	verdagon	myhashset.iter().next().unwrap().clone()
2015-05-30 22:10:39	verdagon	if i understand correctly… (which i obviously dont lol) .next() returns an Option<&T>
2015-05-30 22:10:41	-->	dcb (textual@moz-j72nfe.ca.comcast.net) has joined #rust
2015-05-30 22:10:43	verdagon	unwrap gives a &T
2015-05-30 22:11:24	Moonlightning	How do I append a bunch of `None`s to a `Vec<Option<Foo>>`?
2015-05-30 22:11:26	FreeFull	Hmm
2015-05-30 22:11:35	FreeFull	And the end result ended up being &Rc<T> somehow?
2015-05-30 22:11:50	Moonlightning	Tried `foo_vec.extend(std::iter::repeat(None).take(n))`, but it complained that `Foo: !Clone`
2015-05-30 22:12:10	verdagon	yeah
2015-05-30 22:12:30	verdagon	er wait, no
2015-05-30 22:12:35	verdagon	a &MyWrapper
2015-05-30 22:13:34	verdagon	gtg, but im definitely gonna give that graph lib a sho
2015-05-30 22:13:35	verdagon	t
2015-05-30 22:13:37	verdagon	thx fellas
2015-05-30 22:13:37	-->	lex (lex@moz-a8fisf.cable.teksavvy.com) has joined #rust
2015-05-30 22:13:38	<--	atomic (atomic@moz-89b.tqd.10.176.IP) has quit (Connection closed)
2015-05-30 22:13:39	<--	verdagon (verdagon@moz-ff302e.ca.comcast.net) has quit (Client exited)
2015-05-30 22:13:50	-->	atomic (atomic@moz-kvs6fc.torservers.net) has joined #rust
2015-05-30 22:13:54	-->	acgtyrant (acgtyrant@moz-d6e.4sk.186.39.IP) has joined #rust
2015-05-30 22:14:49	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-30 22:15:03	-->	hjr3 (hradtke@moz-257.lea.79.64.IP) has joined #rust
2015-05-30 22:15:28	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-30 22:15:41	<--	bleah (Mibbit@moz-p0l.q36.8.24.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-30 22:16:24	Moonlightning	Also, `foo_vec.append(None)` complains that it expected a `&mut Vec<Option<Foo>>` but found an `Option<_>`? What?
2015-05-30 22:16:58	@cmr	Moonlightning: you want .push, not .append
2015-05-30 22:17:05	-->	mindtree (Mitch@moz-5h22bp.iprimus.net.au) has joined #rust
2015-05-30 22:17:40	Moonlightning	…duh. Thanks, cmr. Shoulda glanced at the docs again…
2015-05-30 22:18:22	lex	hi. i am new to rust... trying to add examples to docs, but "cargo test" fails
2015-05-30 22:18:28	amstrad	hey guys
2015-05-30 22:18:51	amstrad	lets say i have a struct Foo { bar : Vec<i32> }
2015-05-30 22:18:53	<--	choplin (choplin@moz-qkm9un.ap.nuro.jp) has quit (Connection closed)
2015-05-30 22:19:26	amstrad	and lets assume i have the impl
2015-05-30 22:19:52	amstrad	impl Foo { fn add(v:&str) { /** add to bar */ }
2015-05-30 22:20:04	amstrad	then i have...
2015-05-30 22:20:11	amstrad	let foo = Foo::new();
2015-05-30 22:20:27	amstrad	foo.add("123"); // compile error, foo is immutable
2015-05-30 22:20:55	<--	qrlpx (smuxi@moz-n7t.3nb.211.95.IP) has quit (Connection closed)
2015-05-30 22:21:03	amstrad	so, from this standpoint, Rust doesn't provide a means to "hide" that something is mutable "behind the scenes"
2015-05-30 22:21:17	<--	mindtree (Mitch@moz-5h22bp.iprimus.net.au) has quit (Ping timeout: 121 seconds)
2015-05-30 22:21:28	amstrad	this is typical right?
2015-05-30 22:21:35	-->	alaska (alaska@moz-8bdjem.fios.verizon.net) has joined #rust
2015-05-30 22:22:06	<--	lex (lex@moz-a8fisf.cable.teksavvy.com) has quit (Connection closed)
2015-05-30 22:22:12	@cmr	amstrad: it does, and it's called "interior mutability", see the Cell/RefCell types.
2015-05-30 22:22:16	Moonlightning	lex: can you pastebin your code and `cargo` output for us?
2015-05-30 22:22:34	amstrad	cmr: so, with RefCell, i can hide the internal mutability?
2015-05-30 22:22:41	@cmr	amstrad: yes.
2015-05-30 22:22:49	Moonlightning	(amstrad: And the block comments with exactly one extra asterisk in the opening token (i.e. `/**`) are doc comments)
2015-05-30 22:22:49	amstrad	cmr: ah right, thats interesting
2015-05-30 22:22:56	<--	jdub (jdub@moz-agrbt8.internode.on.net) has quit (Ping timeout: 121 seconds)
2015-05-30 22:22:57	Moonlightning	(Which is probably not what you want there)
2015-05-30 22:23:06	-->	lex (lex@moz-a8fisf.cable.teksavvy.com) has joined #rust
2015-05-30 22:23:09	amstrad	Moonlightning: it was a quick typo, but yes
2015-05-30 22:23:27	amstrad	cmr: alright, thanks ill look into it, 
2015-05-30 22:23:57	<--	hjr3 (hradtke@moz-257.lea.79.64.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2015-05-30 22:24:06	<--	playjax (chatzilla@moz-6ssl7m.optusnet.com.au) has quit (Connection closed)
2015-05-30 22:24:47	<--	Astrum|Lap (Astrum|Lap@moz-skcefh.co.comcast.net) has quit (Client exited)
2015-05-30 22:25:19	-->	Morten (Morten@moz-75skp6.bb.online.no) has joined #rust
2015-05-30 22:25:31	lex	amstrad: did you get a reply?
2015-05-30 22:25:37	<--	alaska (alaska@moz-8bdjem.fios.verizon.net) has quit (Ping timeout: 121 seconds)
2015-05-30 22:25:43	lex	i dont see anything except your question
2015-05-30 22:25:44	<--	turtil (turtil@moz-gfc.es4.23.103.IP) has quit (Quit: WeeChat 1.1.1)
2015-05-30 22:25:46	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-30 22:25:53	@cmr	lex: you disconnected.
2015-05-30 22:25:54	amstrad	lex: i got a reference to something called RefCell
2015-05-30 22:26:09	lex	ah, ok
2015-05-30 22:26:19	amstrad	lex: on the topic of "hiding internal mutability"
2015-05-30 22:26:20	lex	i put an example on pastebin: http://pastebin.com/hBvCSxz8
2015-05-30 22:26:27	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-30 22:26:28	amstrad	lex: oh, thanks
2015-05-30 22:26:39	lex	oh, no... that was my question :)
2015-05-30 22:26:41	mfs	Hmm, {:14} style width specifications don't seem to work when the variable is a String. :/
2015-05-30 22:26:50	Moonlightning	lex, amstrad: Internal mutability is hidden if you have an immutable reference.
2015-05-30 22:27:13	Moonlightning	Methods that take `&mut self` won't be allowed, either.
2015-05-30 22:28:32	--	lex is now known as lex_1
2015-05-30 22:28:33	amstrad	Moonlightning: thats the intent tho
2015-05-30 22:29:04	Moonlightning	So (if I'm right) you don't need a RefCell—just use `let` without the `mut`.
2015-05-30 22:29:23	amstrad	Moonlightning: but, then i can't modify the internal vec
2015-05-30 22:29:25	@huon	playbot: println!(".{:14}.", "x") // mfs
2015-05-30 22:29:26	--	Notice(playbot): .x             .
2015-05-30 22:29:26	--	Notice(playbot): ()
2015-05-30 22:29:32	Mutabah	Is there any way of having a trait object which works for any associated type. E.g. I have 'Waiter<Output=?>' and want to use a set of them, not caring what the associated type is
2015-05-30 22:29:43	@huon	mfs: do you want right alignment?
2015-05-30 22:29:57	@huon	playbot: println!(".{:>14}.", "x") // mfs
2015-05-30 22:29:58	--	Notice(playbot): .             x.
2015-05-30 22:29:58	--	Notice(playbot): ()
2015-05-30 22:30:14	Moonlightning	amstrad: thought you just said that was what you wanted.
2015-05-30 22:30:20	@huon	Mutabah: only Self can be erased at the moment
2015-05-30 22:30:26	amstrad	Moonlightning: really, i suppose what im getting at is something along the lines of...
2015-05-30 22:30:33	amstrad	let foo = Foo::new();
2015-05-30 22:30:37	Mutabah	huon: Bother
2015-05-30 22:30:39	<--	fabianvf (fabianvf@moz-fjqmui.va.comcast.net) has quit (Connection closed)
2015-05-30 22:30:48	amstrad	foo.add(123); // adds 123 to some internal vec
2015-05-30 22:30:54	-->	fabianvf (fabianvf@moz-fjqmui.va.comcast.net) has joined #rust
2015-05-30 22:30:59	-->	tristanseifert (tristanseif@moz-r0t7ns.res.rr.com) has joined #rust
2015-05-30 22:31:15	amstrad	Moonlightning: so, from the 'callers' standpoint, they are not thinking in terms of mutability, rather, the think of foo as a container
2015-05-30 22:31:28	amstrad	and things go in the container...
2015-05-30 22:31:38	mfs	huon: weird, I must be doing something stupid. Looks a bit further.
2015-05-30 22:31:56	amstrad	Moonlightning: granted, you can have things like.... let mut v = new vev![] // which is explicitly stating that this vec is mutable
2015-05-30 22:32:11	<--	p32blo (p32blo@moz-305o0v.cpe.netcabo.pt) has quit (Ping timeout: 121 seconds)
2015-05-30 22:32:18	amstrad	Moonlightning: but, that isn't desirable in some cases
2015-05-30 22:32:45	amstrad	mostly because you are forcing the caller to know "a bit too much" about the internal workings of Foo
2015-05-30 22:33:06	lex_1	does anyone have experience with cargo "documentation as example" feature?
2015-05-30 22:33:13	@cmr	lex_1: what problem are you having?
2015-05-30 22:33:25	lex_1	i spent two hours, but cannot get it to work
2015-05-30 22:33:30	lex_1	here is an example: http://pastebin.com/hBvCSxz8
2015-05-30 22:34:18	-->	mindtree (Mitch@moz-5h22bp.iprimus.net.au) has joined #rust
2015-05-30 22:34:20	lex_1	i have treid variety of "crate" and "use" declarations with no luck
2015-05-30 22:34:25	amstrad	lex_1: wouldn't you just have pub fn new(x: i32) -> Bar ?
2015-05-30 22:34:38	amstrad	instead of Self?
2015-05-30 22:34:46	@huon	lex_1: use crate_name::foo::Bar;
2015-05-30 22:34:49	-->	rmgk_ (ragnar@moz-f46fbp.dyn.telefonica.de) has joined #rust
2015-05-30 22:35:23	mfs	Ah, I'm not actually passing a string at all, it's an Ipv4Addr. That's probably why.
2015-05-30 22:35:28	lex_1	does i need "extern crate" declaration?
2015-05-30 22:35:33	-->	summerlight_ (summerlight@moz-99k.2mj.130.121.IP) has joined #rust
2015-05-30 22:35:43	Moonlightning	amstrad: Not really? You'd have to do the same thing with a Vec.
2015-05-30 22:36:05	amstrad	Moonlightning: but, what about if you wanted to hide things behind a trait
2015-05-30 22:36:09	Moonlightning	playbot: let foo = vec!["foo"]; foo.push("bar")
2015-05-30 22:36:10	--	Notice(playbot): <anon>:9:32: 9:35 error: cannot borrow immutable local variable `foo` as mutable
2015-05-30 22:36:10	--	Notice(playbot): <anon>:9         let foo = vec!["foo"]; foo.push("bar")
2015-05-30 22:36:10	--	Notice(playbot): output truncated; full output at: http://bit.ly/1RAbW5x
2015-05-30 22:36:23	amstrad	Moonlightning: sure, but what about if you have...
2015-05-30 22:36:38	amstrad	let mut foo = FooWithMutations::new();
2015-05-30 22:36:42	lex_1	huon: works, thank you!
2015-05-30 22:36:44	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-30 22:36:44	amstrad	let mut foo = FooWithOutMutations::new();
2015-05-30 22:37:05	amstrad	Moonlightning: where both implement the Fooable trait
2015-05-30 22:37:16	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-30 22:37:58	lex_1	oh, i see: if i add "extern crate" declaration then it fails... mystery solved. thanks!
2015-05-30 22:38:05	amstrad	Moonlightning: in this case, the caller doesn't really care about internal mutations, as they are behind the trait, and are "unknowable"
2015-05-30 22:38:12	<--	rmgk (ragnar@moz-29ua2k.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2015-05-30 22:38:36	amstrad	Moonlightning: so, without hiding internal mutability, you would need to just have everything as mut, "just in case" the thing behind it was mutable.
2015-05-30 22:38:45	<--	darkstalker (wolfie@moz-asf7rd.pw) has quit (Quit: Poof!)
2015-05-30 22:40:03	amstrad	Moonlightning: kinda make sense?
2015-05-30 22:40:04	-->	akuhlens (Mibbit@moz-66rdta.in.comcast.net) has joined #rust
2015-05-30 22:40:22	<--	akuhlens (Mibbit@moz-66rdta.in.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-30 22:40:33	<--	judicare (judicare@moz-ghk0g7.io) has quit (A TLS packet with unexpected length was received.)
2015-05-30 22:40:49	-->	pikajude (pikajude@moz-ghk0g7.io) has joined #rust
2015-05-30 22:41:25	-->	choplin (choplin@moz-qkm9un.ap.nuro.jp) has joined #rust
2015-05-30 22:41:56	<--	annodomini (lambda@moz-qgii5v.ma.comcast.net) has quit (Client exited)
2015-05-30 22:42:04	-->	darkstalker (dstk@moz-asf7rd.pw) has joined #rust
2015-05-30 22:42:08	Moonlightning	amstrad: Not really. Can you give me a concrete example?
2015-05-30 22:42:28	<--	slimsag (Mibbit@moz-qrnu8n.ph.cox.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-30 22:42:40	amstrad	Moonlightning: well, imagine two implementations of a trait
2015-05-30 22:42:45	amstrad	where the trait is....
2015-05-30 22:43:01	amstrad	trait Fooable { fn add(v:i32) }
2015-05-30 22:43:04	<--	durka42 (Adium@moz-qsuual.pa.comcast.net) has quit (Quit: Leaving.)
2015-05-30 22:43:11	amstrad	Moonlightning: ok?
2015-05-30 22:43:44	amstrad	and your two implementation are, Foo1 - a implementation without a internal vec, and Foo2 - a implementation with a internal vec;
2015-05-30 22:43:58	amstrad	so...
2015-05-30 22:44:01	Moonlightning	But how would you use that with an immutable object? Add what? What could you be adding that wouldn't outwardly change the object?
2015-05-30 22:44:39	amstrad	Moonlightning: well, for foo1, maybe its doing nothing with v:i32 at all
2015-05-30 22:44:48	amstrad	with foo2 - its pushing on a vec
2015-05-30 22:44:51	@cmr	Moonlightning: the mistake is that thinking that &T means you have an immutable object. That is not the case - you only have a potentially-aliased value.
2015-05-30 22:44:56	-->	maximih (maximih@moz-0r2bjb.bredband.telia.com) has joined #rust
2015-05-30 22:45:16	Moonlightning	cmr: doesn't it /have/ to be immutable, in order to comply with the borrowing rules
2015-05-30 22:45:17	Moonlightning	> *+
2015-05-30 22:45:19	Moonlightning	? *
2015-05-30 22:45:22	@cmr	RefCell/Cell let you mutate from behind a &T
2015-05-30 22:45:24	@cmr	No.
2015-05-30 22:45:31	-->	fleabay (Mibbit@moz-8b1ur6.ip.windstream.net) has joined #rust
2015-05-30 22:45:49	-->	parxs (Mibbit@moz-9g6v93.tirol.surfer.at) has joined #rust
2015-05-30 22:46:00	<--	esgeh (sg@moz-a7j.cns.76.134.IP) has quit (Ping timeout: 121 seconds)
2015-05-30 22:46:14	<--	parxs (Mibbit@moz-9g6v93.tirol.surfer.at) has left #rust
2015-05-30 22:47:28	<--	tschottdorf (tobias@moz-d021av.aipg.hajb.2000.2604.IP) has quit (Ping timeout: 121 seconds)
2015-05-30 22:47:42	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-30 22:47:51	Moonlightning	…ohh, okay.
2015-05-30 22:48:05	Moonlightning	The only thing is that mutable references cannot be aliased.
2015-05-30 22:48:14	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-30 22:48:58	<--	maximih (maximih@moz-0r2bjb.bredband.telia.com) has quit (Ping timeout: 121 seconds)
2015-05-30 22:49:47	-->	kimundi_ (kimundi@moz-rb1gq6.dip0.t-ipconnect.de) has joined #rust
2015-05-30 22:49:56	Moonlightning	So do Cell and RefCell not have any internal state?
2015-05-30 22:50:15	@cmr	RefCell does, but Cell doesn't.
2015-05-30 22:50:23	@cmr	http://static.rust-lang.org/doc/master/src/core/cell.rs.html#273-276
2015-05-30 22:50:25	-->	michael1 (michael@moz-9vjtig.mo.charter.com) has joined #rust
2015-05-30 22:51:21	Moonlightning	…I mean…you need a mutable `self` reference to mutate your fields, right?
2015-05-30 22:51:40	@cmr	Not if one of the fields of a cell of some sort.
2015-05-30 22:51:50	Moonlightning	Yeah, beyond that.
2015-05-30 22:52:26	-->	lenstr (lenstr@moz-kvg.vju.25.171.IP) has joined #rust
2015-05-30 22:52:27	-->	zebin (textual@moz-719.2g0.111.114.IP) has joined #rust
2015-05-30 22:52:31	<--	kimundi (kimundi@moz-pu1phi.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2015-05-30 22:52:32	--	kimundi_ is now known as kimundi
2015-05-30 22:53:01	-->	saterus (saterus@moz-rutqj0.res.rr.com) has joined #rust
2015-05-30 22:54:30	<--	gsingh93 (gulshan@moz-ln1ktu.st3l.iv8o.0004.2601.IP) has quit (Ping timeout: 121 seconds)
2015-05-30 22:56:28	<--	lenstr (lenstr@moz-kvg.vju.25.171.IP) has quit (Ping timeout: 121 seconds)
2015-05-30 22:56:50	rschulman	I’m trying to build rusqlite (sqlite interface) but it uses pkg-config which doesn’t work on a Mac. Anyone know how to work around it? I know where the lib its looking for is.
2015-05-30 22:57:12	Moonlightning	What's up with this? https://gist.github.com/BlacklightShining/1190679350c50fe3e2cc
2015-05-30 22:57:21	-->	kimwonyong (kimwonyong@moz-gfp.vhi.163.221.IP) has joined #rust
2015-05-30 22:57:37	@cmr	rschulman: will need to edit the package's build script to not use pkg-config somehow.
2015-05-30 22:57:42	Moonlightning	None has no associated value; it's just…None.
2015-05-30 22:57:43	<--	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-30 22:58:00	rschulman	Moonlightning: so fork it and do it locally?
2015-05-30 22:58:03	@cmr	Moonlightning: Iterator<Item=T>::take requires T: Clone.
2015-05-30 22:58:15	-->	GGist (Mibbit@moz-st7v59.wa.comcast.net) has joined #rust
2015-05-30 22:58:18	@cmr	Moonlightning: you don't have a "None", you have an Option<Foo>
2015-05-30 22:58:24	<--	michael1 (michael@moz-9vjtig.mo.charter.com) has quit (Ping timeout: 121 seconds)
2015-05-30 22:58:40	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-30 22:58:41	@cmr	And Option<T> is only Clone if T: Clone.
2015-05-30 22:59:01	Moonlightning	…does the type system infer that it's an Option<Foo> from all the way in there?
2015-05-30 22:59:09	<--	PTStomp (paul@moz-8fla9q.bigpond.net.au) has quit (Ping timeout: 121 seconds)
2015-05-30 22:59:11	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-30 22:59:13	-->	skeuomorf (skeuomorf@moz-a8h.ni9.32.197.IP) has joined #rust
2015-05-30 22:59:16	@cmr	You have it written out right there as the type of Foo.
2015-05-30 22:59:33	Moonlightning	Not when I mention `None`, I don't.
2015-05-30 22:59:40	@cmr	Iterator<Item=T>::extend takes an I: IntoIterator<Item=T>
2015-05-30 22:59:48	c74d	rschulman: you could install pkg-config, e.g. with MacPorts.
2015-05-30 22:59:57	-->	Quxxy (chatzilla@moz-0nv.jkp.167.59.IP) has joined #rust
2015-05-30 23:00:13	@cmr	So repeat(None).take(3) must have that type.
2015-05-30 23:00:14	rschulman	c74d: Yeah, I thought about that, but on a work computer and don’t want to install too much extra stuff
2015-05-30 23:00:17	rschulman	may try that if needed.
2015-05-30 23:00:30	<--	godlikesme (godlikesme@moz-2a2.dsd.174.79.IP) has quit (Ping timeout: 121 seconds)
2015-05-30 23:00:43	Moonlightning	cmr: and it concludes that None must be `: Option<Foo>`?
2015-05-30 23:00:54	@cmr	Moonlightning: right.
2015-05-30 23:00:55	Moonlightning	that that `None` *
2015-05-30 23:01:02	Moonlightning	Okay.
2015-05-30 23:01:10	Moonlightning	Well, how do I push a bunch of `None`s?
2015-05-30 23:01:22	<--	kimwonyong (kimwonyong@moz-gfp.vhi.163.221.IP) has quit (Ping timeout: 121 seconds)
2015-05-30 23:01:32	@cmr	Either with a for loop, or by implementing Clone for Foo
2015-05-30 23:01:34	-->	Astrum|Lap (Astrum|Lap@moz-skcefh.co.comcast.net) has joined #rust
2015-05-30 23:01:41	-->	zhoeon (fc@moz-cuhqb2.cable.teksavvy.com) has joined #rust
2015-05-30 23:01:54	Mutabah	vec.extend( (0..3).map(|_| None) ) also works
2015-05-30 23:02:23	<--	pikajude (pikajude@moz-ghk0g7.io) has quit (A TLS packet with unexpected length was received.)
2015-05-30 23:02:28	XMPPwocky	i wish there was, like, std::iter::defaults()
2015-05-30 23:02:34	skeuomorf	Hmm, so is there a way that I can disable the "error: use of unstable library feature" error when building against 1.0-stable?
2015-05-30 23:02:34	-->	pikajude (pikajude@moz-0gljna.n3ik.opad.5300.2607.IP) has joined #rust
2015-05-30 23:02:39	XMPPwocky	that just returned Default::default() forever, when Clone isn't required
2015-05-30 23:02:42	@cmr	skeuomorf: no.
2015-05-30 23:03:07	skeuomorf	cmr: Bummer! Thanks.
2015-05-30 23:03:10	@cmr	skeuomorf: You can't use unstable features in the stable release.
2015-05-30 23:03:11	@cmr	Use nightly.
2015-05-30 23:03:22	@cmr	(It's called the *stable* release for a reason, after all)
2015-05-30 23:04:00	-->	jdub (jdub@moz-ib4nsl.internode.on.net) has joined #rust
2015-05-30 23:04:07	-->	acamda (adam@moz-q59un4.iinet.net.au) has joined #rust
2015-05-30 23:04:35	skeuomorf	cmr: Yeah, you're right. I am using stdlib hash() and the unstability of it won't affect my code. Hence, my question.
2015-05-30 23:04:35	<--	pikajude (pikajude@moz-0gljna.n3ik.opad.5300.2607.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-30 23:04:46	-->	pikajude (pikajude@moz-ghk0g7.io) has joined #rust
2015-05-30 23:04:51	Mutabah	!stable
2015-05-30 23:04:56	skeuomorf	cmr: I wanted the crate to be available with the stable release
2015-05-30 23:05:10	Mutabah	(what's the command to add a factoid? I want to put the stable reasoning on rustbot)
2015-05-30 23:05:20	Tari	the point of the stable channel is updates won't break your code
2015-05-30 23:05:23	XMPPwocky	Mutabah: !learn
2015-05-30 23:05:35	 *	skeuomorf will look for a hashing crate or implement one himself...
2015-05-30 23:05:36	@cmr	skeuomorf: You can use a cargo feature for conditionally enabling using unstable features, if you can avoid using it. 
2015-05-30 23:05:36	Tari	things that are marked unstable are marked as such because they might go away or change in incompatible ways
2015-05-30 23:05:39	Moonlightning	Thanks, Mutabah
2015-05-30 23:06:19	<--	rmdashrf (rmdashrf@moz-ecr.kjm.54.128.IP) has quit (Quit: WeeChat 0.4.2)
2015-05-30 23:07:00	-->	colinsurprenant (colin@moz-q9ee1n.74.electronicbox.net) has joined #rust
2015-05-30 23:07:10	Mutabah	!learn stable Code written for the stable branch will never break (until 2.0), this means that unstable features are not allowed. If they were (even requiring a flag) people would start to depend on them, and then complain when compiler updates break their code.
2015-05-30 23:07:10	+rustbot	Invalid format. No description specified.
2015-05-30 23:07:19	Mutabah	!learn stable = Code written for the stable branch will never break (until 2.0), this means that unstable features are not allowed. If they were (even requiring a flag) people would start to depend on them, and then complain when compiler updates break their code.
2015-05-30 23:07:19	+rustbot	Learned factoid 'stable'.
2015-05-30 23:07:51	skeuomorf	cmr: Thanks, will look at that as well.
2015-05-30 23:08:28	Mutabah	cmr: Good description in that factoid?
2015-05-30 23:08:55	-->	starless (starless@moz-u9gmm1.res.rr.com) has joined #rust
2015-05-30 23:08:58	@cmr	Mutabah: looks good to me, though you might include a link to http://blog.rust-lang.org/2014/10/30/Stability.html
2015-05-30 23:09:13	Mutabah	!learn stable = Code written for the stable branch will never break (until 2.0), this means that unstable features are not allowed. If they were (even requiring a flag) people would start to depend on them, and then complain when compiler updates break their code. http://blog.rust-lang.org/2014/10/30/Stability.html
2015-05-30 23:09:13	+rustbot	Learned factoid 'stable'.
2015-05-30 23:09:19	@cmr	<3
2015-05-30 23:09:41	Mutabah	There we go, now I don't have to type that reasoning out any more
2015-05-30 23:09:59	<--	saterus (saterus@moz-rutqj0.res.rr.com) has quit (Connection closed)
2015-05-30 23:10:01	sam113101	!stable
2015-05-30 23:10:01	+rustbot	Code written for the stable branch will never break (until 2.0), this means that unstable features are not allowed. If they were (even requiring a flag) people would start to depend on them, and then complain when compiler updates break their code. http://blog.rust-lang.org/2014/10/30/Stability.html
2015-05-30 23:10:16	<--	A205B064 (A205B064@moz-9s9nhk.nap.wideopenwest.com) has quit (Ping timeout: 121 seconds)
2015-05-30 23:10:19	-->	shachaf (shachaf@moz-evr8ss.members.linode.com) has joined #rust
2015-05-30 23:10:26	starless	hmm
2015-05-30 23:10:26	-->	plumshark (pat@moz-kfjsbq.tulsok.sbcglobal.net) has joined #rust
2015-05-30 23:10:34	starless	so, there's no way to use unstable features?
2015-05-30 23:10:40	Mutabah	starless: Use nightly
2015-05-30 23:10:45	starless	aye
2015-05-30 23:10:53	starless	thankfully I haven't /needed/ them yet
2015-05-30 23:11:18	Quxxy	starless: Lucky you :P
2015-05-30 23:11:31	Moonlightning	Is there a way to combine `.filter(|foo| foo.is_some()).map(|foo| foo.unwrap())`?
2015-05-30 23:11:39	Mutabah	Moonlightning: filter_map
2015-05-30 23:11:54	<--	idegen (greg@moz-9c4nle.or.frontiernet.net) has quit (Quit: Leaving.)
2015-05-30 23:11:57	Mutabah	Moonlightning: .filter_map(|x| x)
2015-05-30 23:11:59	 *	Moonlightning blinks.
2015-05-30 23:12:00	<--	Chef (Chef@moz-m1d7of.dsl.teksavvy.com) has quit (Connection closed)
2015-05-30 23:12:04	Moonlightning	Okay. Thanks. XD
2015-05-30 23:12:20	starless	Quxxy: haha, yeah. I can feel it coming.
2015-05-30 23:12:29	starless	Quxxy: still learning the basics of the language, mind you
2015-05-30 23:12:36	Quxxy	I need nightly to get bloody mtime for files
2015-05-30 23:12:43	<--	zebin (textual@moz-719.2g0.111.114.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-30 23:12:50	starless	sounds painful
2015-05-30 23:12:51	Quxxy	I don't need it to get the system clock
2015-05-30 23:13:04	Quxxy	But the two are *from different epochs*
2015-05-30 23:13:10	<--	zyphrus (David@moz-1a4.urk.98.101.IP) has quit (Quit: Bye bye)
2015-05-30 23:13:12	<--	summerlight_ (summerlight@moz-99k.2mj.130.121.IP) has quit (Ping timeout: 121 seconds)
2015-05-30 23:13:23	Quxxy	Tried comparing file times to clock times last night to find they were an order of magnitude and several hundred years out
2015-05-30 23:13:26	Quxxy	Wheeeee
2015-05-30 23:13:39	Mutabah	Quxxy: You can go via the system APIs...
2015-05-30 23:13:50	Mutabah	(that said, you need to handle Win32 and POSIX then
2015-05-30 23:14:29	Quxxy	Mutabah: I already have *one* platform-specific chunk of code.  In spite of my "lol suck it *nix scrubs" attitude, I actually don't like adding platform-specific code :P
2015-05-30 23:14:39	<--	lex_1 (lex@moz-a8fisf.cable.teksavvy.com) has quit (Quit: Konversation terminated!)
2015-05-30 23:15:30	starless	Lose32
2015-05-30 23:15:33	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-30 23:15:52	Moonlightning	What's the difference between Vec::into_iter() and Vec::drain()?
2015-05-30 23:15:54	Quxxy	I believe you'll find that it's... *sunglasses* Win
2015-05-30 23:15:56	Quxxy	*yeeeeah*
2015-05-30 23:16:06	<--	zhoeon (fc@moz-cuhqb2.cable.teksavvy.com) has quit (Quit: leaving)
2015-05-30 23:16:11	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-30 23:16:12	-->	joneshf-laptop (joneshf@moz-l4h.b5s.208.98.IP) has joined #rust
2015-05-30 23:16:12	 *	starless lets Quxxy have that one.
2015-05-30 23:16:12	Moonlightning	They both consume the Vec and return iterators over all of its elements
2015-05-30 23:16:19	Mutabah	Moonlightning: One consumes the vec, the other just empties it
2015-05-30 23:16:30	 *	Quxxy gives starless a nod of acknowledgement
2015-05-30 23:16:33	Mutabah	Moonlightning: So, for the first, the original Vec is unusable (it's been moved)
2015-05-30 23:16:51	Mutabah	Moonlightning: For the second, the original Vec is still usable, just empty.
2015-05-30 23:16:56	Moonlightning	…ohh, okay.
2015-05-30 23:17:11	Moonlightning	Missed that. Thanks.
2015-05-30 23:17:59	<--	qwerty_nor (Thunderbird@moz-fe2.cn5.232.50.IP) has quit (Ping timeout: 121 seconds)
2015-05-30 23:18:02	-->	kimwonyong (kimwonyong@moz-gfp.vhi.163.221.IP) has joined #rust
2015-05-30 23:18:08	<--	erz_ (erz@moz-fiq1tl.broadband.corbina.ru) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-30 23:19:05	<--	mujou (mujou@moz-rko6lo.ocn.ne.jp) has quit (Quit: Leaving...)
2015-05-30 23:19:25	<--	Guest58 (textual@moz-cdsk1r.res.rr.com) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-30 23:19:30	<--	kimwonyong (kimwonyong@moz-gfp.vhi.163.221.IP) has quit (Connection closed)
2015-05-30 23:20:35	-->	gsingh93 (gulshan@moz-ln1ktu.st3l.iv8o.0004.2601.IP) has joined #rust
2015-05-30 23:20:48	<--	choplin (choplin@moz-qkm9un.ap.nuro.jp) has quit (Connection closed)
2015-05-30 23:22:15	-->	kimwonyong (kimwonyong@moz-gfp.vhi.163.221.IP) has joined #rust
2015-05-30 23:22:59	-->	choplin_ (choplin@moz-qkm9un.ap.nuro.jp) has joined #rust
2015-05-30 23:24:16	<--	DerisiveLogic (smuxi@moz-g93io6.res.rr.com) has quit (Ping timeout: 121 seconds)
2015-05-30 23:24:17	-->	zebin (textual@moz-719.2g0.111.114.IP) has joined #rust
2015-05-30 23:24:17	<--	amstrad (chatzilla@moz-74sft8.xnet.co.nz) has quit (Connection closed)
2015-05-30 23:24:48	Moonlightning	Shouldn't Vec::next_permutation() and Vec::prev_permutation() return `Result<()>`s instead of `bool`s?
2015-05-30 23:25:02	<--	Ericson2314 (user@moz-5muv45.m9e4.oi28.0306.2602.IP) has quit (Ping timeout: 121 seconds)
2015-05-30 23:25:07	-->	fengshaun (fengshaun@moz-oagll1.cpe.pppoe.ca) has joined #rust
2015-05-30 23:26:01	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-30 23:26:33	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-30 23:26:36	<--	choplin_ (choplin@moz-qkm9un.ap.nuro.jp) has quit (Connection closed)
2015-05-30 23:27:21	-->	amstrad (chatzilla@moz-74sft8.xnet.co.nz) has joined #rust
2015-05-30 23:27:31	-->	Chef (Chef@moz-o80.fev.52.157.IP) has joined #rust
2015-05-30 23:29:10	Mutabah	Moonlightning: What would the error be?
2015-05-30 23:29:22	Mutabah	Moonlightning: (also, it's a slice method, not a Vec one, just fyi)
2015-05-30 23:29:32	-->	happy-dude_ (uid62780@moz-jt3517.charlton.irccloud.com) has joined #rust
2015-05-30 23:29:39	<--	Jesin (Jesin@moz-8sq.94j.16.107.IP) has quit (Quit: Leaving)
2015-05-30 23:30:12	<--	happy-dude_ (uid62780@moz-jt3517.charlton.irccloud.com) has quit (Quit: )
2015-05-30 23:30:22	Moonlightning	Mutabah: …umm…ahh…{First,Last}PermutationError?
2015-05-30 23:30:44	-->	keenan (keenan@moz-ub3elr.res.rr.com) has joined #rust
2015-05-30 23:30:49	Mutabah	And what would cause such an error?
2015-05-30 23:30:59	-->	zynisch_o7 (zynisch_o7@moz-6eh1ju.dyn.optonline.net) has joined #rust
2015-05-30 23:31:06	Moonlightning	If the permutation of the slice is already the first or last one?
2015-05-30 23:31:11	Moonlightning	i.e. there /is/ no previous or next permutation?
2015-05-30 23:31:14	Mutabah	Which is what false indicates
2015-05-30 23:31:16	Moonlightning	I dunno. I feel like returning a `bool` here isn't very Rustic. Am I wrong?
2015-05-30 23:31:25	Mutabah	Makes a lot of sense really
2015-05-30 23:31:47	Moonlightning	Rusty *?
2015-05-30 23:31:53	Mutabah	Rustic
2015-05-30 23:32:00	Quxxy	I don't think it's not rustic, but it *is* less than entirely ideal
2015-05-30 23:32:17	Quxxy	Unless a bool is attached to something with a *name* in front of it, it's kinda opaque
2015-05-30 23:32:17	Moonlightning	I mean…returning `bool` to indicate success or failure?
2015-05-30 23:32:23	Moonlightning	Isn't that /exactly/ what Result is for?
2015-05-30 23:32:29	Quxxy	No
2015-05-30 23:32:34	<--	joh (uid13099@moz-2c7ap3.ealing.irccloud.com) has quit (Quit: Connection closed for inactivity)
2015-05-30 23:32:34	Quxxy	Not quite
2015-05-30 23:32:36	Quxxy	Sort of
2015-05-30 23:32:46	Mutabah	Quxxy: Well, the docs say what it means
2015-05-30 23:32:58	Quxxy	Mutabah: Yeah, and no one *reads* docs
2015-05-30 23:33:02	Mutabah	Moonlightning: It's more saying "I have nothing to do here"
2015-05-30 23:33:05	Quxxy	Or, they misremember them :P
2015-05-30 23:33:32	Mutabah	while slice.next_permutation() { show(slice); }
2015-05-30 23:33:33	Quxxy	It's not really a failure if there are no more permutations; it's just that there are no more permutations
2015-05-30 23:33:43	Mutabah	Yeah, hence it shouldn't be Err
2015-05-30 23:33:43	<--	FlyingFoX (quassel@moz-j2ui1r.unity-media.net) has quit (Connection closed)
2015-05-30 23:34:02	Mutabah	Moonlightning: Result is for when something might fail due to an error (e.g. IO error)
2015-05-30 23:34:07	Quxxy	A Result would be appropriate if the act of constructing the next permutation could, itself, fail abnormally in some way
2015-05-30 23:34:25	Quxxy	*Or* if there was useful additional information that could be conveyed *about* the failure
2015-05-30 23:35:01	<--	zynisch_o7 (zynisch_o7@moz-6eh1ju.dyn.optonline.net) has quit (Ping timeout: 121 seconds)
2015-05-30 23:35:03	Quxxy	Really, Option is more appropriate here... except it would be Option<()>... which is, for all indents and porpoises, bool
2015-05-30 23:35:24	-->	Guest58 (textual@moz-70hlaj.austtx.sbcglobal.net) has joined #rust
2015-05-30 23:35:46	sam113101	and now I want a pet porpoise
2015-05-30 23:36:07	Quxxy	I know; I used that word *sunglasses* on porpoise
2015-05-30 23:36:09	Quxxy	*yeeeeeeah*
2015-05-30 23:36:40	sam113101	(⌐■_■)
2015-05-30 23:36:50	<--	ygrek (user@moz-8j9aeu.org.ua) has quit (Ping timeout: 121 seconds)
2015-05-30 23:36:59	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-30 23:37:31	-->	iitaku (textual@moz-u578hl.ocn.ne.jp) has joined #rust
2015-05-30 23:38:19	<--	dpc (dpc@moz-t6gr4b.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-30 23:38:49	<--	dcb (textual@moz-j72nfe.ca.comcast.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-30 23:42:10	<--	Guest58 (textual@moz-70hlaj.austtx.sbcglobal.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-30 23:43:02	<--	kimwonyong (kimwonyong@moz-gfp.vhi.163.221.IP) has quit (Connection closed)
2015-05-30 23:43:22	-->	graham (starless@moz-u9gmm1.res.rr.com) has joined #rust
2015-05-30 23:43:24	<--	starless (starless@moz-u9gmm1.res.rr.com) has quit (Quit: Leaving)
2015-05-30 23:44:11	<--	graham (starless@moz-u9gmm1.res.rr.com) has quit (Quit: Leaving)
2015-05-30 23:44:21	-->	starless (starless@moz-u9gmm1.res.rr.com) has joined #rust
2015-05-30 23:45:17	<--	yorickpeterse (yorickpeter@moz-kpg9ml.compute.amazonaws.com) has quit (Quit: WeeChat 1.0.1)
2015-05-30 23:45:57	-->	maximih (maximih@moz-0r2bjb.bredband.telia.com) has joined #rust
2015-05-30 23:46:00	-->	kimwonyong (kimwonyong@moz-gfp.vhi.163.221.IP) has joined #rust
2015-05-30 23:46:12	<--	iitaku (textual@moz-u578hl.ocn.ne.jp) has quit (Connection closed)
2015-05-30 23:46:24	rschulman	ld is complaining when I try to include /usr/include/sqlite3.h which definitely exists, saying “library not found for…”
2015-05-30 23:46:44	rschulman	am I doing something wrong in trying to include it?
2015-05-30 23:48:46	XMPPwocky	how are you including a C header in Rust
2015-05-30 23:48:46	Moonlightning	Quxxy: well, yeah, it /is/ an error. You're asking for the next|previous permutation. It is an error if that's not possible.
2015-05-30 23:49:36	rschulman	XMPPwocky: using Cargo’s build script: “cargo:rustc-link-lib=sqlite3"
2015-05-30 23:49:58	<--	maximih (maximih@moz-0r2bjb.bredband.telia.com) has quit (Ping timeout: 121 seconds)
2015-05-30 23:54:23	-->	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has joined #rust
2015-05-31 11:37:39	--	irc: disconnected from server
2015-05-31 11:39:11	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-31 11:39:11	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-31 11:39:11	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-31 11:39:11	--	Channel #rust: 1002 nicks (13 ops, 0 halfops, 1 voice, 988 normals)
2015-05-31 11:39:15	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-31 11:39:39	rkruppe	kagami: Huh. Well if it's private you can't name the return type in your own code (let result: Result<OwnedBatch<...>> = stuff.get_batch()) but you should be able to use the value and pass it on
2015-05-31 11:39:56	<--	durka42 (Adium@moz-qsuual.pa.comcast.net) has left #rust
2015-05-31 11:40:01	<--	Nickleoi (sailfish@moz-hnd.7m5.8.175.IP) has quit (Ping timeout: 121 seconds)
2015-05-31 11:40:27	-->	moerk (christian@moz-00ceea.customer.tdc.net) has joined #rust
2015-05-31 11:41:24	<--	dinfuehr (dinfuehr@moz-5n5gbo.highway.telekom.at) has quit (Connection closed)
2015-05-31 11:41:25	-->	rootnode (rootnode@moz-go1ut4.ip1.george24.com) has joined #rust
2015-05-31 11:41:27	dkreuter	rkruppe, do you know a nice way to make match work with nodes?
2015-05-31 11:41:46	rootnode	T_T still not able to compile my WM. that darn ICE, if I knew how to fix it...
2015-05-31 11:41:52	dkreuter	specifically, I have a graph of arithmeticoperations
2015-05-31 11:41:52	rkruppe	dkreuter: What do you mean? What's a "node" in this context?
2015-05-31 11:41:52	@steveklabnik	Wraithan: i think you could write a syntax extension
2015-05-31 11:41:59	-->	meunierd (dmeunier@moz-glf54u.cpe.sourcecable.net) has joined #rust
2015-05-31 11:42:15	dkreuter	rkruppe, match node { add(lhs, rhs) => … }
2015-05-31 11:42:17	kagami	rkruppe: but ShaderParams is part of the type. What the function signature would look like to whom I want to pass the result?
2015-05-31 11:42:24	Wraithan	steveklabnik: https://doc.rust-lang.org/book/compiler-plugins.html ?
2015-05-31 11:42:35	kagami	rkruppe: I mean in my own code.
2015-05-31 11:42:40	<--	meunierd (dmeunier@moz-glf54u.cpe.sourcecable.net) has quit (Client exited)
2015-05-31 11:42:42	duesenfranz_	Wraithan: steveklabnik: shouldn't a build script be enough?
2015-05-31 11:43:11	--	irc: disconnected from server
2015-05-31 11:43:23	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-31 11:43:23	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-31 11:43:23	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-31 11:43:23	--	Channel #rust: 1001 nicks (13 ops, 0 halfops, 1 voice, 987 normals)
2015-05-31 11:43:27	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-31 11:44:00	ErikPragt	Inside a mutex?
2015-05-31 11:44:02	kagami	rkruppe: it is not exported so it should be...
2015-05-31 11:44:28	ErikPragt	would you maybe have an example for that?
2015-05-31 11:44:35	dkreuter	rkruppe, these blog posts suggest an edge list, so the node itself doesn't actually store anythign about its connectivity
2015-05-31 11:44:38	ErikPragt	I'll look in the meantime
2015-05-31 11:44:42	<--	mbudde (mbudde@moz-v8g.lim.109.2.IP) has quit (Ping timeout: 121 seconds)
2015-05-31 11:44:44	@steveklabnik	Wraithan: yup. though duesenfranz_ makes a case too, I _bet_ you could do a build script
2015-05-31 11:44:44	Wraithan	duesenfranz_: is your suggestion to write a file that dynamically generates .rs files that have the tests in them?
2015-05-31 11:45:20	duesenfranz_	Wraithan: yep. in the link is a section called "Case study: Code generation"
2015-05-31 11:45:47	Wraithan	duesenfranz_: yeah, realized that was what you were suggesting once I reached that point in the article
2015-05-31 11:45:57	--	zz_NameNotFound is now known as NameNotFound
2015-05-31 11:46:01	Wraithan	duesenfranz_, steveklabnik: thanks you've both given me plenty to look at and play with !
2015-05-31 11:46:09	-->	rkruppe_ (chatzilla@moz-3nj.rnu.131.95.IP) has joined #rust
2015-05-31 11:46:14	duesenfranz_	ErikPragt: you may go to http://doc.rust-lang.org/stable/std/sync/struct.Mutex.html
2015-05-31 11:46:52	duesenfranz_	ErikPragt: that example is very similar to what you want to do, except you don't need an Arc
2015-05-31 11:46:52	rkruppe_	kagami: Perhaps it's exported under a different name? I don't know. Have you tried searching gfx_text's documentation?
2015-05-31 11:47:04	@steveklabnik	Wraithan: one note build scripts work on stable, but compiler extensions don't
2015-05-31 11:47:11	@steveklabnik	so you might want to puruse build.rs first :
2015-05-31 11:47:15	ErikPragt	I was looking at that
2015-05-31 11:47:22	ErikPragt	but I don't understand the clone things.
2015-05-31 11:47:24	<--	rkruppe (chatzilla@moz-3nj.rnu.131.95.IP) has quit (Ping timeout: 121 seconds)
2015-05-31 11:47:26	ErikPragt	If I need it or not
2015-05-31 11:47:31	Wraithan	steveklabnik: oh definitely then. I'll be tied to stable for this project
2015-05-31 11:47:37	--	rkruppe_ is now known as rkruppe
2015-05-31 11:47:48	duesenfranz_	ErikPragt: you dont... you mainly need the data.lock().unwrap() stuff...
2015-05-31 11:48:28	ErikPragt	check.
2015-05-31 11:48:29	@steveklabnik	Wraithan: there's a crate called 'syntex' that hopefully will let you write compiler lugins on stable sooner. the issue is, as you might imagine, stabilizing the AST of the compiler isn't something we plan on doing soon :)
2015-05-31 11:48:53	-->	zynisch_o7 (zynisch_o7@moz-6eh1ju.dyn.optonline.net) has joined #rust
2015-05-31 11:49:37	-->	ismaelga (ismaelga@moz-0o8.1dr.180.89.IP) has joined #rust
2015-05-31 11:49:56	-->	dinfuehr (dinfuehr@moz-5n5gbo.highway.telekom.at) has joined #rust
2015-05-31 11:50:09	Wraithan	steveklabnik: fully understand, thanks! Honestly, I'd already started to write a node script to generate my tests for me (wanted to get back to rust portion faster and know node better) then I realized I should ask before getting too far heh
2015-05-31 11:50:45	ErikPragt	do I need to pass the Vec to the Mutex?
2015-05-31 11:50:53	-->	daze (daze@moz-tc29eq.static.zebra.lt) has joined #rust
2015-05-31 11:51:22	Hildar	Right minfied version of my issue: http://is.gd/Uz9gXo Why does the borrow at foos.iter_mut() in main_loop last till the end of the function, but the one in main lasts till the end of the line?
2015-05-31 11:51:34	Wraithan	I'm building a project to replace a node one and I already had tests in a highly platform agnostic state, so I figured I could just keep using those tests
2015-05-31 11:51:57	@steveklabnik	oh nice :)
2015-05-31 11:52:02	-->	murphm8 (muephm8@moz-f26fc0.res.rr.com) has joined #rust
2015-05-31 11:52:02	<--	tyrion-mx (tyrion@moz-7v49kj.rana.at) has quit (Quit: Leaving)
2015-05-31 11:52:03	@steveklabnik	i just got back from JSConf
2015-05-31 11:52:26	<--	maximih (maximih@moz-0r2bjb.bredband.telia.com) has quit (A TLS packet with unexpected length was received.)
2015-05-31 11:52:33	Wraithan	steveklabnik: I missed it, too many front end devs wanted to go from work and would have had to trade out nodeconfeu
2015-05-31 11:52:49	@steveklabnik	ah
2015-05-31 11:52:55	Wraithan	and an EU trip > Florida trip
2015-05-31 11:52:55	<--	zynisch_o7 (zynisch_o7@moz-6eh1ju.dyn.optonline.net) has quit (Ping timeout: 121 seconds)
2015-05-31 11:53:01	murphm8	vosen: Debug still isn't working. I smoked all the registry settings too. I was able to manually install the debug vsix into my normal 2015 instance, but the experimental instance still isn't loading Visual Rust
2015-05-31 11:53:02	-->	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has joined #rust
2015-05-31 11:53:04	@steveklabnik	understood, for sure
2015-05-31 11:53:17	kagami	rkruppe: I think I get it. Since it's a trait, the exact type used inside the lib doesn't matter. And ShaderParam trait is exported by gfx-rs.
2015-05-31 11:54:08	ErikPragt	I changed the code now to this: http://mibpaste.com/InZBIH 
2015-05-31 11:54:28	<--	acgtyrant (acgtyrant@moz-3kd.b79.160.124.IP) has quit (Connection closed)
2015-05-31 11:54:33	ErikPragt	But the error is still : use of moved value: `reservation.name`
2015-05-31 11:55:23	--	irc: disconnected from server
2015-05-31 11:55:35	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-31 11:55:35	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-31 11:55:35	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-31 11:55:35	--	Channel #rust: 1002 nicks (13 ops, 0 halfops, 1 voice, 988 normals)
2015-05-31 11:55:38	ErikPragt	Still not sure what's going on
2015-05-31 11:55:39	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-31 11:55:43	Mutabah	ErikPragt: push consumes the value
2015-05-31 11:56:00	Mutabah	ErikPragt: so, the format! line can't use the value
2015-05-31 11:56:09	ErikPragt	but at least the error is different
2015-05-31 11:56:12	ErikPragt	ah...
2015-05-31 11:56:18	ErikPragt	hmm
2015-05-31 11:56:23	ErikPragt	how can I fix that?
2015-05-31 11:56:38	Mutabah	take a copy?
2015-05-31 11:56:42	<--	aepsil0n (eduard@moz-6491ha.mv2h.pepi.8071.2a02.IP) has quit (Connection closed)
2015-05-31 11:56:49	-->	Nickleoi (sailfish@moz-hnd.7m5.8.175.IP) has joined #rust
2015-05-31 11:56:51	ErikPragt	sorry, first day!
2015-05-31 11:56:59	ErikPragt	just reservation.copy()?
2015-05-31 11:57:07	duesenfranz_	Hildar: good job on minifying! it's because the signature of `update` borrow `self` for the whole lifetime <'a>
2015-05-31 11:57:17	ErikPragt	How can I see that the push consumes it?
2015-05-31 11:57:19	@steveklabnik	ErikPragt: all questions are valid questions :) in Rust, to make a copy of a non-Copy type, you call .clone()
2015-05-31 11:57:52	ErikPragt	but I need to make it cloneable, I guess?
2015-05-31 11:58:02	Mutabah	ErikPragt: And for telling that it consumes - If it's by value (i.e. doesn't take a &-ptr) it consumes (moves)
2015-05-31 11:58:03	@steveklabnik	http://doc.rust-lang.org/stable/collections/vec/struct.Vec.html#method.push <- the type signature of push takes a T, so that means it takes ownership
2015-05-31 11:58:20	Mutabah	The only exception is for 'Copy' types (primitives)
2015-05-31 11:58:26	-->	paupau (grrrr@moz-35edek.ca.comcast.net) has joined #rust
2015-05-31 11:58:29	Hildar	duesenfranz_: ahhhh! That explains it (it appears I can change update() to be update<'a> and get rid of the lifetime on the trait, which solves my issue).
2015-05-31 11:58:32	@steveklabnik	and non-primitives that implement Copy ;)
2015-05-31 11:58:34	duesenfranz_	ErikPragt: if it's your own struct, put `#[derive(Clone)]` above it
2015-05-31 11:58:44	ErikPragt	it's indeed my own struct
2015-05-31 11:59:00	<--	murphm8 (muephm8@moz-f26fc0.res.rr.com) has quit (Quit: Leaving)
2015-05-31 11:59:13	duesenfranz_	Hildar: right, nice! it worked in `main` because rust chose a fitting lifetime for you
2015-05-31 11:59:14	ErikPragt	yeah, it works!
2015-05-31 11:59:16	ErikPragt	thanks.
2015-05-31 11:59:23	Mutabah	ErikPragt: That said, in this case - You could run the format! earlier (and save the string), the push the value
2015-05-31 11:59:32	ErikPragt	The help is much appreciated.
2015-05-31 12:00:20	ErikPragt	ah, like that...could have done that too indeed :-)
2015-05-31 12:00:39	ErikPragt	Mind if I ask a second question?
2015-05-31 12:00:43	ErikPragt	cause the post works now...
2015-05-31 12:00:50	ErikPragt	I now have a Vec of Relation objects...
2015-05-31 12:01:01	ErikPragt	but I want to serialize the Vec<Relation> to json.
2015-05-31 12:01:13	ErikPragt	I already serialize the Relation to json, that works fine
2015-05-31 12:01:28	<--	rmdashrf (rmdashrf@moz-ecr.kjm.54.128.IP) has quit (Quit: WeeChat 0.4.2)
2015-05-31 12:01:34	ErikPragt	but I'm not sure how to do the Vec<Relation>. 
2015-05-31 12:01:44	duesenfranz_	ErikPragt: do you use Serde?
2015-05-31 12:02:10	<--	ChrisPls (Mibbit@moz-ou1.3i1.67.138.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-31 12:02:11	-->	Lilly (Lilly@moz-pfkvo9.bredband.comhem.se) has joined #rust
2015-05-31 12:02:22	duesenfranz_	ErikPragt: or rustc-serialize?
2015-05-31 12:02:35	<--	paupau (grrrr@moz-35edek.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-31 12:02:46	<--	dinfuehr (dinfuehr@moz-5n5gbo.highway.telekom.at) has quit (Connection closed)
2015-05-31 12:02:54	ErikPragt	Rustc serialize
2015-05-31 12:03:04	meh	does clone_from have a default implementation?
2015-05-31 12:03:15	-->	brianloveswords (brianlovesw@moz-tq78gs.fios.verizon.net) has joined #rust
2015-05-31 12:03:56	Mutabah	meh: It does appear to
2015-05-31 12:04:57	ErikPragt	I tried reservations.to_json(), but that gives : error: capture of moved value: `data`
2015-05-31 12:05:13	ErikPragt	Then I used           let mut x = data.lock().unwrap(); +         x.to_json()
2015-05-31 12:05:28	duesenfranz_	ErikPragt: do you have a link or something?
2015-05-31 12:05:34	ErikPragt	but that also gives: error: capture of moved value: `data`
2015-05-31 12:05:53	ErikPragt	http://mibpaste.com/Sxe7PH 
2015-05-31 12:05:58	Mutabah	ErikPragt: That means it's moved somewhere you use it in the cosure
2015-05-31 12:06:02	Mutabah	*closure
2015-05-31 12:06:20	ErikPragt	yeah, I understand. But I don't see it where/how.
2015-05-31 12:06:26	ErikPragt	the above link is the current code
2015-05-31 12:06:31	Mutabah	ErikPragt: It's used in another closure beforehand
2015-05-31 12:06:38	ErikPragt	It's about /reservations
2015-05-31 12:07:04	ErikPragt	I'm not sure how that is possible?
2015-05-31 12:07:21	ToxicFrog	"use libc;" -> "error: unresolved import `libc`. There is no `libc` in `???`
2015-05-31 12:07:22	-->	forgottenone (forgottenon@moz-bj9.b4g.45.92.IP) has joined #rust
2015-05-31 12:07:30	ToxicFrog	Am I missing something in my cratedef or the like?
2015-05-31 12:07:49	<--	forgottenone (forgottenon@moz-bj9.b4g.45.92.IP) has quit (Quit: Konversation terminated!)
2015-05-31 12:07:50	@steveklabnik	ToxicFrog: do you have 'extern crate libc' in your crate root and libc="*" in your Cargo.toml?
2015-05-31 12:08:03	Mutabah	ErikPragt: It's being used in the closure, I'd assume middleware! defines the closure as a move closure
2015-05-31 12:08:09	@steveklabnik	https://github.com/rust-lang/libc#usage
2015-05-31 12:08:24	-->	forgottenone (forgottenon@moz-bj9.b4g.45.92.IP) has joined #rust
2015-05-31 12:08:27	alk	dumb question : is there any way to apply some sort of regex on a Vec<u8> without decoding it as a string?
2015-05-31 12:08:30	-->	kent (kent@moz-nd2iqs.fl.atlanticbb.net) has joined #rust
2015-05-31 12:08:31	ErikPragt	but (somewhat) the same also happens in the post
2015-05-31 12:08:44	ToxicFrog	steshaw: I have neither, I was just reading the docs on doc.rust-lang.org
2015-05-31 12:08:50	ToxicFrog	It didn't occur to me to look at the github as well
2015-05-31 12:08:52	burntsushi	alk: not with the `regex` crate. it only operates on Unicode strings.
2015-05-31 12:08:55	@steveklabnik	alk: not a dumb question. and i don't believe so, no
2015-05-31 12:09:06	ToxicFrog	Er
2015-05-31 12:09:09	ToxicFrog	steveklabnik: ^
2015-05-31 12:09:10	alk	thanks
2015-05-31 12:09:16	Mutabah	ErikPragt: yes, it's moved in the first closure, and then you try to move it into the second one (which is an error)
2015-05-31 12:09:58	ErikPragt	but how is line 35 different from 27?
2015-05-31 12:10:10	@steveklabnik	ToxicFrog: yeah, so you just need to do that and it should work
2015-05-31 12:10:26	Mutabah	ErikPragt: It moves into the first one, (invalidating the original)
2015-05-31 12:10:33	Mutabah	ErikPragt: so you can't move into the second one
2015-05-31 12:10:37	duesenfranz_	Mutabah: couldn't he make a new variable (that he defines before) which is a reference to data and use that inside the closure?
2015-05-31 12:10:45	Mutabah	duesenfranz_: yes, that will work
2015-05-31 12:10:59	<--	spider-mario (spidermario@moz-coblcf.fbx.proxad.net) has quit (A TLS packet with unexpected length was received.)
2015-05-31 12:11:07	-->	alaska (alaska@moz-8bdjem.fios.verizon.net) has joined #rust
2015-05-31 12:11:08	ErikPragt	but what exactly do you mean with 'first one' ?
2015-05-31 12:11:17	ErikPragt	I don't see the first one
2015-05-31 12:11:25	<--	mkoskar (mkoskar@moz-ums8mr.tor-exit.network) has quit (Client exited)
2015-05-31 12:11:27	Mutabah	ErikPragt: line 27 doesn't error, right?
2015-05-31 12:11:54	ErikPragt	oh!
2015-05-31 12:11:59	Mutabah	ErikPragt: On line 27 (I'm assuming here, I don't see line numbers) 'data' is moved into the closure.
2015-05-31 12:12:01	ToxicFrog	steveklabnik: it does! Thanks.
2015-05-31 12:12:02	ErikPragt	I thought it was line 27
2015-05-31 12:12:06	ErikPragt	you're right
2015-05-31 12:12:17	<--	dkreuter (knizz@moz-fes.iga.129.213.IP) has quit (Quit: Ex-Chat)
2015-05-31 12:12:29	ErikPragt	but if I remove line 27, it compiles
2015-05-31 12:12:40	ErikPragt	so line 27 and 35 are connected in some way?
2015-05-31 12:12:45	Mutabah	ErikPragt: Now, do what duesenfranz_ suggested
2015-05-31 12:13:02	Mutabah	ErikPragt: They're both closures
2015-05-31 12:13:14	Mutabah	e	Closures either own or borrow the variables used within
2015-05-31 12:13:42	Mutabah	I assume here they're owning (possibly becuase ofthe macro annotating them with 'move')
2015-05-31 12:13:44	@steveklabnik	ToxicFrog: no problem. basically anything not in the standard library will need you to do this
2015-05-31 12:14:12	-->	nyx (nyx@moz-ivelpd.res.rr.com) has joined #rust
2015-05-31 12:14:20	-->	dinfuehr (dinfuehr@moz-5n5gbo.highway.telekom.at) has joined #rust
2015-05-31 12:14:23	<--	Nickleoi (sailfish@moz-hnd.7m5.8.175.IP) has quit (Quit: IRC for Sailfish 0.9)
2015-05-31 12:15:09	<--	alaska (alaska@moz-8bdjem.fios.verizon.net) has quit (Ping timeout: 121 seconds)
2015-05-31 12:15:27	-->	mbudde (mbudde@moz-425rg1.customer.tdc.net) has joined #rust
2015-05-31 12:15:29	ErikPragt	Will do that. One moment
2015-05-31 12:15:40	duesenfranz_	ErikPragt: you make two new variables: data_ref_1 = &data; data_ref_2 = &data
2015-05-31 12:15:50	Mutabah	duesenfranz_: Don't need to
2015-05-31 12:15:54	Mutabah	duesenfranz_: &-ptrs are Copy
2015-05-31 12:15:59	Mutabah	(only need one)
2015-05-31 12:16:05	duesenfranz_	oh right
2015-05-31 12:16:07	duesenfranz_	sorry
2015-05-31 12:16:30	tschottdorf	I'm defining a macro that takes a type and implements a simple trait. I want to call a static function new() on the type, but $tb::new() doesn't work (unexpected token MyType when I call mymacro!(MyType). What should I be doing instead?
2015-05-31 12:17:10	Mutabah	tschottdorf: hygine won't allow that, instead have a "$constructor:expr" parameter
2015-05-31 12:18:24	<--	dinfuehr (dinfuehr@moz-5n5gbo.highway.telekom.at) has quit (Ping timeout: 121 seconds)
2015-05-31 12:19:15	<--	brianloveswords (brianlovesw@moz-tq78gs.fios.verizon.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-31 12:20:02	<--	codec (Mibbit@moz-325m1f.abo.wanadoo.fr) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-31 12:21:07	-->	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has joined #rust
2015-05-31 12:21:21	-->	phore (phore@moz-p8hanb.cable.rogers.com) has joined #rust
2015-05-31 12:21:30	tschottdorf	Mutabah, thanks. I'm not sure I can get away with an expr parameter. Here's a gist that demonstrates what I want to do: https://gist.github.com/tschottdorf/711067ffc484f03dc589
2015-05-31 12:21:31	 *	Mutabah is away (Sleeping)
2015-05-31 12:21:43	-->	frankmcsherry (frankmcsher@moz-n95jpn.adsl.alicedsl.de) has joined #rust
2015-05-31 12:22:02	<--	envi_u (envi@moz-ih5.olo.169.121.IP) has quit (Ping timeout: 121 seconds)
2015-05-31 12:22:08	-->	fabianvf (fabianvf@moz-fjqmui.va.comcast.net) has joined #rust
2015-05-31 12:22:14	<--	phore (phore@moz-p8hanb.cable.rogers.com) has quit (Quit: if you're seeing this, i ran out of coffee. send help.)
2015-05-31 12:22:26	<--	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-31 12:22:51	ErikPragt	Duesenfranz_: for every method I need to create a new copy of the data??
2015-05-31 12:23:12	ErikPragt	That seems a bit ugly to me....
2015-05-31 12:23:20	@steveklabnik	ErikPragt: references dont copy the data, they're just a pointer
2015-05-31 12:23:23	ErikPragt	the Mutex already feels really ugly
2015-05-31 12:23:37	<--	agjacome (agjacome@moz-j4vd23.dynamic.jazztel.es) has quit (Quit: leaving)
2015-05-31 12:23:38	@steveklabnik	ErikPragt: out of curiosity, whats your programming background?
2015-05-31 12:23:42	<--	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-31 12:23:46	@steveklabnik	can give better help that way :)
2015-05-31 12:24:20	-->	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has joined #rust
2015-05-31 12:24:33	<--	ismaelga (ismaelga@moz-0o8.1dr.180.89.IP) has quit (Connection closed)
2015-05-31 12:25:46	_habnabit	hm. std::io::set_panic wants a Box<Input>, but then it gets ownership. i wanted to give it a Vec<u8> but then i lose ownership of the Vec and can't get the bytes out of it, afaict :(
2015-05-31 12:25:47	<--	frankmcsherry (frankmcsher@moz-n95jpn.adsl.alicedsl.de) has quit (Ping timeout: 121 seconds)
2015-05-31 12:26:12	_habnabit	er, Box<Write>
2015-05-31 12:26:28	_habnabit	seems like i'd have to make my own Write implementation that has a Rc<Vec<u8>> or something
2015-05-31 12:26:57	<--	blank_name (blank_name@moz-1gd.aq8.36.50.IP) has quit (Ping timeout: 121 seconds)
2015-05-31 12:27:48	XMPPwocky	_habnabit: why not just clone it?
2015-05-31 12:27:48	<--	sasha (sasha@moz-ob8cdt.net.t-com.hr) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-31 12:27:52	-->	hoverbear (hoverbear@moz-665.6hv.18.72.IP) has joined #rust
2015-05-31 12:27:58	-->	blank_name (blank_name@moz-b1omh3.mi.frontiernet.net) has joined #rust
2015-05-31 12:28:37	-->	dinfuehr (dinfuehr@moz-5n5gbo.highway.telekom.at) has joined #rust
2015-05-31 12:29:58	_habnabit	XMPPwocky, not sure how that helps. i want to collect the bytes written as a string
2015-05-31 12:30:02	-->	tytouf (caugier@moz-84u6a1.rev.sfr.net) has joined #rust
2015-05-31 12:30:05	XMPPwocky	ahh
2015-05-31 12:30:05	ToxicFrog	steveklabnik: yeah, my confusion was that I thought libc was part of the standard library, just in a different namespace, hence being documented alonside it.
2015-05-31 12:31:02	-->	vikaton (uid59278@moz-0a9h81.ealing.irccloud.com) has joined #rust
2015-05-31 12:31:11	vikaton	is this updated Rust? http://rosettacode.org/wiki/Dining_philosophers#Rust
2015-05-31 12:31:32	SneakySnake	vikaton: No, it seems old
2015-05-31 12:31:43	<--	cakecatz (cakecatz@moz-edrvuc.sannet.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-31 12:31:44	Hukka	Anyone have an idea why the example use of https://github.com/unicode-rs/unicode-normalization doesn't work?
2015-05-31 12:31:48	Hukka	error: unresolved import `unicode_normalization::UnicodeNormalization`. There is no `UnicodeNormalization` in `unicode_normalization`
2015-05-31 12:31:55	vikaton	seems rly old
2015-05-31 12:31:55	tschottdorf	Mutabah, actually it worked fine. Looks slightly less elegant than what I had hoped for but still useful. Thanks again!
2015-05-31 12:31:56	 *	Mutabah is away (Sleeping)
2015-05-31 12:31:56	<--	rudolph (rudolph@moz-qcqtiq.o3k5.dsq9.010d.2620.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-31 12:31:59	@steveklabnik	ToxicFrog: yeah, understandable. rustc also includes a private version of libc, so in some sense, there is one inside, but you should be using the external crate
2015-05-31 12:32:14	-->	rudolph (rudolph@moz-qcqtiq.o3k5.dsq9.010d.2620.IP) has joined #rust
2015-05-31 12:32:32	@steveklabnik	Hukka: iirc the unicode crate was split up into invididual crates, i would be surprised of that code still works
2015-05-31 12:32:32	SneakySnake	Hukka: You need the unicode_normalization package from crates.io
2015-05-31 12:33:02	<--	nercury (nercury@moz-ngr949.static.zebra.lt) has quit (Client exited)
2015-05-31 12:33:05	<--	sayan (sayan@moz-ir4.s39.227.223.IP) has quit (Connection closed)
2015-05-31 12:33:06	vikaton	somebody should update http://rosettacode.org/wiki/Dining_philosophers#Rust :)
2015-05-31 12:33:09	vikaton	:P*
2015-05-31 12:33:40	SneakySnake	steveklabnik: Didn't you put a dining philosophers example into TRPL? Maybe it could be reused on rosettacode.
2015-05-31 12:33:41	<--	Azdle (Azdle@moz-fv6arh.mn.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-31 12:33:56	Hildar	Is it safe to panic!() across a C ffi call and back? I'm guessing it's a big fat no...
2015-05-31 12:34:09	Hukka	SneakySnake: Yes, not putting that into Cargo.toml would give a different error altogether
2015-05-31 12:34:43	Hukka	steveklabnik: Hmm... I see. I was trying to look at the source and couldn't figure out anything wrong with it. The trait is still there and pubäed
2015-05-31 12:34:49	Hukka	*pub'ed
2015-05-31 12:34:58	<--	ctennis (ctennis@moz-vcpg3c.in.comcast.net) has quit (Quit: Leaving...)
2015-05-31 12:35:04	rkruppe	Hildar: Big fat no. It's always been undefined behavior and it's either deliberately broken (abort when it happens or something) or will be in the future
2015-05-31 12:35:09	<--	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-31 12:35:39	-->	Azdle (Azdle@moz-fv6arh.mn.comcast.net) has joined #rust
2015-05-31 12:35:41	Hildar	rkuppe: Bummer, what's my options then? libc::abort?
2015-05-31 12:36:13	rkruppe	Can't you return an error code to the C code?
2015-05-31 12:36:24	Hukka	steveklabnik: Hm, can't find any other crate that talks about normalization
2015-05-31 12:36:41	<--	kvsari (kvsari@moz-fgsnv9.bbtec.net) has quit (Connection closed)
2015-05-31 12:36:54	<--	psd_ (psd@moz-asbha3.mtnl.net.in) has quit (Connection closed)
2015-05-31 12:37:37	@steveklabnik	SneakySnake: yes i did, and yes, if they want it, that'd be great
2015-05-31 12:37:45	Hildar	rkruppe: It's an callback informing me of errors, so not really. I could set a flag somewhere and panic! if I ever see that flag set?
2015-05-31 12:37:54	@steveklabnik	Hukka: did you see SneakySnake 's recomendation of the unicode_normalization package on crates.io?
2015-05-31 12:37:58	@steveklabnik	!crate unicode_normalization
2015-05-31 12:37:58	+rustbot	unicode-normalization (0.1.0) - This crate provides functions for normalization ofUnicode strings, including Canonical and CompatibleDecomposition and Recomposition, as described inUnicode Standard Annex #15. -> https://crates.io/crates/unicode-normalization
2015-05-31 12:38:02	@steveklabnik	Hukka: ^^^
2015-05-31 12:38:08	Hukka	Er...
2015-05-31 12:38:14	Hukka	I'm talking about that precise crate
2015-05-31 12:38:24	@steveklabnik	how are you using that precise crate?
2015-05-31 12:38:33	@steveklabnik	it shouldn't even compile by now
2015-05-31 12:38:39	Hukka	Trying to run the example on that crate's doc
2015-05-31 12:39:35	--	irc: disconnected from server
2015-05-31 12:39:47	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-31 12:39:47	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-31 12:39:47	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-31 12:39:47	--	Channel #rust: 992 nicks (13 ops, 0 halfops, 1 voice, 978 normals)
2015-05-31 12:39:51	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-31 12:39:53	Hukka	Sorry, why wouldn't it compile?
2015-05-31 12:40:47	--	irc: disconnected from server
2015-05-31 12:40:58	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-31 12:40:58	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-31 12:40:58	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-31 12:40:59	--	Channel #rust: 992 nicks (13 ops, 0 halfops, 1 voice, 978 normals)
2015-05-31 12:41:02	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-31 12:41:08	<--	nyx (nyx@moz-ivelpd.res.rr.com) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-31 12:41:23	-->	brianloveswords (brianlovesw@moz-tq78gs.fios.verizon.net) has joined #rust
2015-05-31 12:41:27	<--	Halamix2 (Halamix2@moz-6dpdh2.syrion.pl) has quit (Quit: Leaving)
2015-05-31 12:41:30	Hukka	Gah, I had a typoed version in the toml
2015-05-31 12:41:48	@steveklabnik	because it was last updated in April
2015-05-31 12:41:57	@steveklabnik	just playing probabilities ;)
2015-05-31 12:42:03	<--	brianloveswords (brianlovesw@moz-tq78gs.fios.verizon.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-31 12:42:12	-->	veqz_ (veqz@moz-74gtia.au-net.ne.jp) has joined #rust
2015-05-31 12:42:19	ToxicFrog	rkruppe: hildar's question is relevant to me -- I'm writing a Rust library that's ABI-compatible with an existing C library. Some functions are deliberately unimplemented and I want the program to abort() if they are called.
2015-05-31 12:42:19	<--	burntsushi (burntsushi@moz-t92kn9.ma.charter.com) has quit (Quit: Konversation terminated!)
2015-05-31 12:42:22	-->	Halamix2 (Halamix2@moz-6dpdh2.syrion.pl) has joined #rust
2015-05-31 12:42:30	ToxicFrog	Is panic! appropriate for that or should I be using something else?
2015-05-31 12:43:00	<--	ErikPragt (Mibbit@moz-f70m7c.static.versatel.nl) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-31 12:43:10	@steveklabnik	use unimplemented!
2015-05-31 12:43:13	_habnabit	ToxicFrog, no; your extern "C" functions should be preventing panics from bubbling up into the calling C code
2015-05-31 12:43:14	@steveklabnik	which basically just panics
2015-05-31 12:43:18	@steveklabnik	but
2015-05-31 12:43:20	<--	Halamix2 (Halamix2@moz-6dpdh2.syrion.pl) has quit (Connection closed)
2015-05-31 12:43:24	<--	johnsoft (johnsoft@moz-69mrig.res.rr.com) has quit (Ping timeout: 121 seconds)
2015-05-31 12:43:24	rkruppe	ToxicFrog: If you want to abort, just abort. Call the libc abort
2015-05-31 12:43:24	SneakySnake	ToxicFrog: You can do all the work in a new thread and catch the panic
2015-05-31 12:43:28	@steveklabnik	as _habnabit says, panic across an ffi boundry is undefined behavior
2015-05-31 12:43:31	<--	tschottdorf (tobias@moz-d021av.aipg.hajb.2000.2604.IP) has quit (Ping timeout: 121 seconds)
2015-05-31 12:43:36	@steveklabnik	so be careful with that
2015-05-31 12:43:39	-->	johnsoft (johnsoft@moz-69mrig.res.rr.com) has joined #rust
2015-05-31 12:44:13	<--	fabianvf (fabianvf@moz-fjqmui.va.comcast.net) has quit (Connection closed)
2015-05-31 12:44:39	ToxicFrog	SneakySnake: there is no 'work' to be done. The calling program is incorrect and no recovery is possible; the only thing to do is to exit immediately with, if possible, an error message saying which function was called.
2015-05-31 12:45:31	SneakySnake	Oh, I misinterpreted your question, sorry
2015-05-31 12:45:46	ToxicFrog	_habnabit: if this happens there is no sensible value that can possibly be returned to the C caller; they shouldn't have called the function at all, it is present only so that ldd doesn't fail.
2015-05-31 12:45:58	<--	kagami (kagami@moz-mof.5r5.61.185.IP) has left #rust
2015-05-31 12:46:12	eddyb	huh, ldd?
2015-05-31 12:46:26	vikaton	steveklabnik, SneakySnake Updated: http://rosettacode.org/wiki/Dining_philosophers#Rust
2015-05-31 12:46:41	ToxicFrog	eddyb: it's a drop-in replacement for an existing .so used by a program I don't have source code for
2015-05-31 12:47:00	ToxicFrog	rkruppe: alright, I'll use libc abort.
2015-05-31 12:47:03	<--	ogham (rally@moz-91e3hp.cable.virginm.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-31 12:47:08	eddyb	ldd the tool which lists dynamic dependencies?
2015-05-31 12:47:10	SneakySnake	vikaton: You left "extern mod extra;" at the top
2015-05-31 12:47:16	@steveklabnik	vikaton: :)
2015-05-31 12:47:38	-->	hohoho (hohoho@moz-jqco1f.pools.vodafone-ip.de) has joined #rust
2015-05-31 12:47:43	-->	ogham (rally@moz-91e3hp.cable.virginm.net) has joined #rust
2015-05-31 12:47:48	<--	meh (meh@moz-e56g7l.42-151.net24.it) has quit (Quit: reboot)
2015-05-31 12:47:51	eddyb	ToxicFrog: we have an abort intrinsic which is cheaper but it causes SIGILL
2015-05-31 12:48:02	-->	jincreator (Thunderbird@moz-d7i.i1g.195.175.IP) has joined #rust
2015-05-31 12:48:09	vikaton	SneakySnake: didnt need it
2015-05-31 12:48:10	<--	tav (tav@moz-ivrq8h.range31-52.btcentralplus.com) has quit (Ping timeout: 121 seconds)
2015-05-31 12:48:10	eddyb	(because it's implemented as an invalid instruction)
2015-05-31 12:48:27	-->	nercury (nercury@moz-ngr949.static.zebra.lt) has joined #rust
2015-05-31 12:48:29	<--	kimwonyong (kimwonyong@moz-gfp.vhi.163.221.IP) has quit (Connection closed)
2015-05-31 12:48:48	SneakySnake	vikaton: I mean you left it in there. It's still there.
2015-05-31 12:48:54	SneakySnake	It's invalid Rust
2015-05-31 12:49:01	-->	thiblahute (tsaunier@moz-rkc6r5.fbx.proxad.net) has joined #rust
2015-05-31 12:49:02	SneakySnake	There is no such thing as "extern mod" anymore
2015-05-31 12:49:02	vikaton	ohhh
2015-05-31 12:49:16	<--	ThatOtherPerson (ThatOtherPe@moz-oim.rh2.127.128.IP) has quit (Quit: Leaving)
2015-05-31 12:49:17	ToxicFrog	eddyb: I don't care what signal it causes, I just need the program to stop executing :)
2015-05-31 12:49:24	ToxicFrog	Thanks for all the advice, people
2015-05-31 12:49:24	-->	ThatOtherPerson (ThatOtherPe@moz-oim.rh2.127.128.IP) has joined #rust
2015-05-31 12:49:40	ToxicFrog	eddyb: yeah, sorry, I meant dlopen/dlsym
2015-05-31 12:49:42	ToxicFrog	It's been a long day
2015-05-31 12:49:46	-->	heatmeiser (heatmeiser@moz-3rj72b.res.rr.com) has joined #rust
2015-05-31 12:49:50	ToxicFrog	ok, afk now
2015-05-31 12:50:22	_habnabit	am i missing something or according to http://doc.rust-lang.org/stable/std/string/struct.String.html is there no way to extend an existing String from a &[u8]? String has an implementation of Extend<char>, but `buf as &[char]` is a non-scalar cast for a &[u8] i guess
2015-05-31 12:50:24	eddyb	ToxicFrog: this is it http://doc.rust-lang.org/std/intrinsics/fn.abort.html
2015-05-31 12:50:31	-->	kimwonyong (kimwonyong@moz-gfp.vhi.163.221.IP) has joined #rust
2015-05-31 12:50:40	vikaton	SneakySnake: fixed
2015-05-31 12:50:44	eddyb	_habnabit: yeah, turn &[u8] into &str first
2015-05-31 12:50:45	SneakySnake	vikaton: Good job!
2015-05-31 12:51:00	_habnabit	eddyb, i tried `buf as &str` but that's a nonscalar cast too :?
2015-05-31 12:51:14	eddyb	_habnabit: str::from_utf8 or something
2015-05-31 12:51:21	_habnabit	eddyb, oh, okay
2015-05-31 12:51:24	eddyb	`as` is for casting numbers and pointers
2015-05-31 12:51:27	-->	fabianvf (fabianvf@moz-fjqmui.va.comcast.net) has joined #rust
2015-05-31 12:51:45	_habnabit	yeah; i just saw on http://doc.rust-lang.org/stable/std/primitive.str.html "The actual representation of strs have direct mappings to slices: &str is the same as &[u8]."
2015-05-31 12:52:12	eddyb	wait, why is `from_utf8` not there?
2015-05-31 12:52:15	-->	etw (etw@moz-5mb.sih.212.204.IP) has joined #rust
2015-05-31 12:52:23	-->	meh (meh@moz-e56g7l.42-151.net24.it) has joined #rust
2015-05-31 12:52:24	_habnabit	eddyb, that's the primitive, not the module
2015-05-31 12:52:26	eddyb	oh, because we didn't fix it http://doc.rust-lang.org/stable/std/str/fn.from_utf8.html
2015-05-31 12:52:31	<--	fabianvf (fabianvf@moz-fjqmui.va.comcast.net) has quit (Connection closed)
2015-05-31 12:52:31	eddyb	grrr
2015-05-31 12:52:32	vikaton	SneakySnake: ha I don't code in Rust, I just copy/pasted the example in the book, the first one looks extremely outdated
2015-05-31 12:52:49	-->	maximih (maximih@moz-0r2bjb.bredband.telia.com) has joined #rust
2015-05-31 12:52:50	eddyb	isn't it backwards incompat to change from_utf8 to be a method and not a free function?
2015-05-31 12:52:59	eddyb	I mean, if a trait provides from_utf8, it will break
2015-05-31 12:53:28	<--	tmtwd (tmtwd@moz-0kkm5n.cable.rogers.com) has quit (Ping timeout: 121 seconds)
2015-05-31 12:54:19	<--	kent (kent@moz-nd2iqs.fl.atlanticbb.net) has quit (Ping timeout: 121 seconds)
2015-05-31 12:54:32	-->	tmtwd (tmtwd@moz-0kkm5n.cable.rogers.com) has joined #rust
2015-05-31 12:54:36	-->	knarf (knarf@moz-8eu.c72.157.89.IP) has joined #rust
2015-05-31 12:54:56	-->	SpaceManiac (Tad@moz-bd3s4o.dyn.suddenlink.net) has joined #rust
2015-05-31 12:54:57	<--	rkruppe (chatzilla@moz-3nj.rnu.131.95.IP) has quit (Ping timeout: 121 seconds)
2015-05-31 12:55:05	-->	Chef (Chef@moz-ge00fg.cpe.teksavvy.com) has joined #rust
2015-05-31 12:55:42	knarf	hi!
2015-05-31 12:55:48	knarf	im learning rust coming from a very procedural background and i have a hard time figuring it out
2015-05-31 12:56:08	knarf	im trying to read a header from a binary file
2015-05-31 12:56:27	knarf	for a toy project
2015-05-31 12:56:46	etw	I’m trying to use the PostgresConnectionManager struct implemented in https://github.com/sfackler/r2d2-postgres/blob/master/src/lib.rs, but I keep getting “the trait `r2d2::ConnectionManager` is not implemented for the type …” even though it appears to be implemented in the same file, do I need to ‘use’ it somehow?
2015-05-31 12:56:51	<--	maximih (maximih@moz-0r2bjb.bredband.telia.com) has quit (Ping timeout: 121 seconds)
2015-05-31 12:57:38	etw	knarf: directly into a struct?
2015-05-31 12:57:47	@steveklabnik	etw: generally speaking, you have to `use` a trait for its methods to be avaialble, though that error seems like you've done that?
2015-05-31 12:57:47	knarf	how would you do that?
2015-05-31 12:58:23	etw	steveklabnik: yeah I have a ‘user r2d2::{… ConnectionManager}’ in my file
2015-05-31 12:58:31	@steveklabnik	etw: huh
2015-05-31 12:58:47	etw	I feel like the problem is different than the error message
2015-05-31 12:59:14	-->	paupau (grrrr@moz-35edek.ca.comcast.net) has joined #rust
2015-05-31 13:01:25	<--	andars (andars@moz-bsldst.sntcca.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-31 13:03:24	<--	paupau (grrrr@moz-35edek.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-31 13:03:32	<--	Azdle (Azdle@moz-fv6arh.mn.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-31 13:04:41	-->	keenan (keenan@moz-es1.bb3.240.23.IP) has joined #rust
2015-05-31 13:06:48	<--	dinfuehr (dinfuehr@moz-5n5gbo.highway.telekom.at) has quit (Connection closed)
2015-05-31 13:06:53	<--	thiblahute (tsaunier@moz-rkc6r5.fbx.proxad.net) has quit (Ping timeout: 121 seconds)
2015-05-31 13:07:19	<--	keenan (keenan@moz-es1.bb3.240.23.IP) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-05-31 13:07:33	<--	Robozman (quassel@moz-81ou38.dyn.optonline.net) has quit (Ping timeout: 121 seconds)
2015-05-31 13:08:02	-->	aepsil0n (eduard@moz-6491ha.mv2h.pepi.8071.2a02.IP) has joined #rust
2015-05-31 13:08:12	-->	Robozman (quassel@moz-8u1nuj.dyn.optonline.net) has joined #rust
2015-05-31 13:08:44	-->	dinfuehr (dinfuehr@moz-5n5gbo.highway.telekom.at) has joined #rust
2015-05-31 13:10:08	etw	knarf: tbh i thought it would be something rustc-serialize would support, because it would be pretty unsafe to do it in the traditional way you’d do it in C (fread(file, &mystruct)), but it only supports hex, json, base64
2015-05-31 13:11:31	knarf	im looking at std::io::BufReader api docs
2015-05-31 13:11:44	knarf	and i just don't know what to use
2015-05-31 13:12:10	knarf	i really don't know much about rust
2015-05-31 13:12:23	bluss	knarf: important methods are those under the Read trait and under BufRead too
2015-05-31 13:13:08	-->	thiblahute (tsaunier@moz-rkc6r5.fbx.proxad.net) has joined #rust
2015-05-31 13:13:23	Wraithan	duesenfranz_, steveklabnik: build.rs is working fantastically for me, thanks again y'all. 
2015-05-31 13:13:34	@steveklabnik	Wraithan: awesome :) you should write a blog post or something about it
2015-05-31 13:13:40	Wraithan	steveklabnik: ya
2015-05-31 13:13:42	Wraithan	probably will
2015-05-31 13:13:53	Wraithan	pto this whole coming week so it is all rust all the time
2015-05-31 13:14:06	@steveklabnik	nice
2015-05-31 13:14:08	<--	Hildar (Mibbit@moz-04vi1v.cable.virginm.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-31 13:14:28	csherratt	Does anyone know of a macro that captures the trait bindins? like `impl<T: Copy, U: Clone>` ?
2015-05-31 13:14:32	Wraithan	implementing my warlight 2 bot in rust: http://theaigames.com/competitions/warlight-ai-challenge-2 
2015-05-31 13:14:36	<--	mindcat (mindcat@moz-s43.01v.90.113.IP) has quit (Quit: Lost terminal)
2015-05-31 13:14:53	<--	ray (ray@moz-m0g.t3f.66.59.IP) has quit (Connection closed)
2015-05-31 13:15:50	Wraithan	Looking forward to building up behavior trees in a static language instead of my purely heuristic approach (to be fair got me in the top 30 for a while)
2015-05-31 13:16:02	<--	wei2912 (wei2912@moz-m8j.moa.156.175.IP) has quit (Quit: Lost terminal)
2015-05-31 13:16:24	Quxxy	I'd like some quick feedback on how I should embed manifests for "cargo script": https://gist.github.com/DanielKeep/446f04c5512bfd9f640c
2015-05-31 13:16:39	-->	dcb (textual@moz-j72nfe.ca.comcast.net) has joined #rust
2015-05-31 13:16:56	Quxxy	I'd appreciate it if you could let me know which one you would pick, if you could have only *one*
2015-05-31 13:17:09	Quxxy	(Or if you have any better ideas :) )
2015-05-31 13:17:33	sfackler	etw: did you end up with 2 versions of r2d2 at once or something? check your Cargo.lock to see
2015-05-31 13:17:50	<--	vikaton (uid59278@moz-0a9h81.ealing.irccloud.com) has quit (Quit: )
2015-05-31 13:18:26	Wraithan	What is the current stance of doing a dual bin/lib approach like the accepted answer here: http://stackoverflow.com/questions/26946646/rust-package-with-both-a-library-and-a-binary 
2015-05-31 13:18:36	<--	colinsurprenant (colin@moz-q9ee1n.74.electronicbox.net) has quit (Client exited)
2015-05-31 13:18:40	<--	hohoho (hohoho@moz-jqco1f.pools.vodafone-ip.de) has quit (Quit: Leaving)
2015-05-31 13:18:41	Wraithan	Basically asking if I should feel bad about doing that or not
2015-05-31 13:20:12	@steveklabnik	just fine
2015-05-31 13:20:20	Wraithan	cool
2015-05-31 13:20:22	@steveklabnik	i wouldn't bother with the lib and bin sections in cargo.toml though
2015-05-31 13:20:28	@steveklabnik	they just repeat the defualts
2015-05-31 13:20:41	--	darkowlzz|afk is now known as darkowlzz
2015-05-31 13:21:00	JustAPerson	Wraithan: you can initiate a library (`cargo new`) and add an executable frontend easily by writing a src/bin/main.rs
2015-05-31 13:21:07	-->	rmdashrf (rmdashrf@moz-ecr.kjm.54.128.IP) has joined #rust
2015-05-31 13:21:07	-->	Guest (textual@moz-3f1.505.171.183.IP) has joined #rust
2015-05-31 13:21:11	Wraithan	oh I see
2015-05-31 13:21:15	Wraithan	Thanks folks!
2015-05-31 13:21:28	<--	thiblahute (tsaunier@moz-rkc6r5.fbx.proxad.net) has quit (Ping timeout: 121 seconds)
2015-05-31 13:21:32	-->	nyx (nyx@moz-ivelpd.res.rr.com) has joined #rust
2015-05-31 13:21:36	Wraithan	I was worried it would do something like detect one and then not build the other or something
2015-05-31 13:21:50	Wraithan	so figured that explicit approach was beter
2015-05-31 13:21:52	Wraithan	better*
2015-05-31 13:21:59	@steveklabnik	nope, it works just fine
2015-05-31 13:22:03	@steveklabnik	:)
2015-05-31 13:22:03	JustAPerson	it's worked well in the past for me
2015-05-31 13:22:04	Quxxy	JustAPerson: It doesn't need to go in the 'bin' directory
2015-05-31 13:22:21	@steveklabnik	think of it this way: your binary depends on the library, so if it didn't compile both, the binary wouldn't work
2015-05-31 13:22:42	JustAPerson	Quxxy: that's the recommended cargo layout iirc
2015-05-31 13:23:00	-->	psy (psy@moz-u9b.hr7.224.43.IP) has joined #rust
2015-05-31 13:23:07	@steveklabnik	JustAPerson: for secondary executables
2015-05-31 13:23:12	-->	frankmcsherry (frankmcsher@moz-n95jpn.adsl.alicedsl.de) has joined #rust
2015-05-31 13:23:16	@steveklabnik	JustAPerson: src/main.rs is primary, src/bin/*.rs is secondary
2015-05-31 13:23:43	<--	Robozman (quassel@moz-8u1nuj.dyn.optonline.net) has quit (Ping timeout: 121 seconds)
2015-05-31 13:24:09	-->	gandalf (zbraniecki@moz-cp7c4m.ca.comcast.net) has joined #rust
2015-05-31 13:25:19	JustAPerson	steveklabnik: exactly, I assumed they were writing a library first and foremost, with an executable frontend (I always think of something like liblua versus the actual exectuable as an example)
2015-05-31 13:25:24	-->	alaska (alaska@moz-8bdjem.fios.verizon.net) has joined #rust
2015-05-31 13:25:30	-->	paupau (grrrr@moz-35edek.ca.comcast.net) has joined #rust
2015-05-31 13:25:30	<--	tyoverby (tyoverby@moz-q99lel.gfd0.v3he.0008.2601.IP) has left #rust
2015-05-31 13:25:37	<--	oberstet (quassel@moz-lktbnn.dynamic.mnet-online.de) has quit (Connection closed)
2015-05-31 13:25:53	bbloom	reading https://doc.rust-lang.org/stable/reference.html#macro-related-attributes - i don't see a way to use a macro from non-parent modules. i have some crate c with macro module m, and modules x, y using module m - how do i export/import those macros from c::m in to c::x and c::y  ?
2015-05-31 13:26:41	Quxxy	bbloom: read "Macros are (sometimes) lexically scoped" https://danielkeep.github.io/practical-intro-to-macros.html#some-more-gotchas
2015-05-31 13:27:09	bluss	bbloom: macro_use should be fine, just need to adjust the order of the `mod`s
2015-05-31 13:27:14	<--	frankmcsherry (frankmcsher@moz-n95jpn.adsl.alicedsl.de) has quit (Ping timeout: 121 seconds)
2015-05-31 13:27:14	Quxxy	TLDR: Put '#[macro_use] mod m;' before `mod x;` and `mod y;`
2015-05-31 13:27:28	bbloom	aaaah, ok. let me give that a shot
2015-05-31 13:27:31	@steveklabnik	JustAPerson: yeah i guess it depends. you'd put examples in examples though, not in src/bin
2015-05-31 13:27:52	<--	Guest (textual@moz-3f1.505.171.183.IP) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-31 13:29:02	Wraithan	For me I'm building a bot for an AI game. So I want to put the bot logic and stuff in the lib and just have the messy binary stdin stuff in a main.rs file to isolate that from the rest of the system.
2015-05-31 13:29:03	bbloom	cool, that works - thanks
2015-05-31 13:29:39	<--	paupau (grrrr@moz-35edek.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-31 13:29:40	@steveklabnik	Wraithan: right. this setup is like curl and libcurl
2015-05-31 13:29:52	Wraithan	yes
2015-05-31 13:29:53	@steveklabnik	you want to let other projects use your logic, but you also wnat to provide a binary that does something with your library
2015-05-31 13:30:11	--	darkowlzz is now known as darkowlzz|afk
2015-05-31 13:30:32	-->	burntsushi (burntsushi@moz-t92kn9.ma.charter.com) has joined #rust
2015-05-31 13:31:11	Wraithan	include!(concat!(env!("OUT_DIR"), "/tests.rs"));
2015-05-31 13:31:26	Wraithan	^ only line in my integration test file
2015-05-31 13:31:33	@steveklabnik	:)
2015-05-31 13:32:13	<--	jwatt (roslea@jwatt.irc.users.mozilla.org) has quit (Ping timeout: 121 seconds)
2015-05-31 13:33:37	bbloom	as a procedural macro fan, i'll say: rust's syntax-rules are quite usable for a large range of common macros use cases - nicely done folks
2015-05-31 13:33:43	Wraithan	Is there any chance of cargo growing the ability to do something like `cargo clean test` or will I have to rely on Makefile to do stuff like that?
2015-05-31 13:33:46	-->	JagaJaga (JagaJaga@moz-ua8.hhl.62.178.IP) has joined #rust
2015-05-31 13:33:55	@steveklabnik	what is 'cargo clean test'?
2015-05-31 13:33:57	-->	thiblahute (tsaunier@moz-rkc6r5.fbx.proxad.net) has joined #rust
2015-05-31 13:34:41	Wraithan	steveklabnik: akin to many Makefile setups where you run clean to blow everything away (like cargo clean) then test to run your tests (like cargo test) without having to run it as two separate commands
2015-05-31 13:34:45	-->	nicoch (nicoch@moz-g02d7k.be) has joined #rust
2015-05-31 13:34:48	<--	munksgaard (munksgaard@moz-478pev.u.parknet.dk) has quit (Ping timeout: 121 seconds)
2015-05-31 13:35:10	@steveklabnik	ah
2015-05-31 13:35:20	@steveklabnik	unsure
2015-05-31 13:35:20	-->	Shackra (Jorge@moz-7bh.ng6.177.186.IP) has joined #rust
2015-05-31 13:35:26	@steveklabnik	let me guess
2015-05-31 13:35:38	@steveklabnik	you'd want that in this situation because cargo doesn't rebuild your tests, yeah?
2015-05-31 13:35:41	-->	skeuomorf (skeuomorf@moz-a8h.ni9.32.197.IP) has joined #rust
2015-05-31 13:35:44	Wraithan	heh, yup
2015-05-31 13:36:00	@steveklabnik	iirc, in cargo.toml you can add extra files for it to track changes for
2015-05-31 13:36:00	Wraithan	And in general I like to do a clean test and clean build before releasing something
2015-05-31 13:36:12	<--	knarf (knarf@moz-8eu.c72.157.89.IP) has quit (Quit: Leaving)
2015-05-31 13:36:27	Wraithan	just as a sanity check in case my build system has left behind an artifact that has kept everything working
2015-05-31 13:36:45	@steveklabnik	totally :)
2015-05-31 13:36:51	Wraithan	I'm (overly) paranoid about stuff like that due to being burned by systems in the past
2015-05-31 13:37:22	@bstrie	Wraithan: if you just put a script called `cargo-cleantest` anywhere on your $PATH then you should be able to do `cargo cleantest`
2015-05-31 13:37:23	-->	kent (kent@moz-nd2iqs.fl.atlanticbb.net) has joined #rust
2015-05-31 13:37:28	-->	Robozman (quassel@moz-8u1nuj.dyn.optonline.net) has joined #rust
2015-05-31 13:37:41	-->	meg34 (meg34@moz-oliav2.dip0.t-ipconnect.de) has joined #rust
2015-05-31 13:37:43	-->	zynisch_o7 (zynisch_o7@moz-6eh1ju.dyn.optonline.net) has joined #rust
2015-05-31 13:37:49	@steveklabnik	yeah, that's a good point too
2015-05-31 13:37:50	-->	thelink2012 (Mibbit@moz-ig7.006.59.187.IP) has joined #rust
2015-05-31 13:38:06	-->	fabianvf (fabianvf@moz-fjqmui.va.comcast.net) has joined #rust
2015-05-31 13:38:08	Wraithan	bstrie: interesting
2015-05-31 13:38:23	Wraithan	bstrie: thank you
2015-05-31 13:38:46	<--	JanC (janc@moz-gra23c.dial.scarlet.be) has quit (Ping timeout: 121 seconds)
2015-05-31 13:38:50	-->	Astrum|Lap (Astrum|Lap@moz-skcefh.co.comcast.net) has joined #rust
2015-05-31 13:39:29	thelink2012	hmmm how can I return a Path off a function? It's bothering me because Path::new returns a &Path?
2015-05-31 13:39:59	@steveklabnik	thelink2012: Path is unsized
2015-05-31 13:40:01	Quxxy	thelink2012: You can't.  You want to return a PathBuf
2015-05-31 13:40:02	@steveklabnik	you may want to return a PathBuf
2015-05-31 13:40:58	thelink2012	I see thanks
2015-05-31 13:41:16	--	darkowlzz|afk is now known as darkowlzz
2015-05-31 13:41:45	<--	zynisch_o7 (zynisch_o7@moz-6eh1ju.dyn.optonline.net) has quit (Ping timeout: 121 seconds)
2015-05-31 13:43:34	-->	frankmcsherry (frankmcsher@moz-n95jpn.adsl.alicedsl.de) has joined #rust
2015-05-31 13:43:37	-->	gsingh93 (gulshan@moz-ln1ktu.st3l.iv8o.0004.2601.IP) has joined #rust
2015-05-31 13:43:44	--	bentley|away is now known as bentley
2015-05-31 13:43:57	-->	jmbto (jmbto@moz-4pv6mn.hca5.8frp.0e35.2a01.IP) has joined #rust
2015-05-31 13:44:44	<--	wilfredh (uid159@moz-md9so9.brockwell.irccloud.com) has quit (Quit: Connection closed for inactivity)
2015-05-31 13:44:55	Wraithan	steveklabnik: I'm not seeing anything in the docs to specify more folders to watch in cargo
2015-05-31 13:44:59	<--	Astrum|Lap (Astrum|Lap@moz-skcefh.co.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-31 13:45:09	@steveklabnik	hmm
2015-05-31 13:45:26	Wraithan	nvm
2015-05-31 13:45:29	Wraithan	I'm totally blind
2015-05-31 13:45:32	-->	vortex (vortex@moz-skqfhn.novotelecom.ru) has joined #rust
2015-05-31 13:46:00	<--	nercury (nercury@moz-ngr949.static.zebra.lt) has quit (Client exited)
2015-05-31 13:46:22	Wraithan	there is an `include` under `[package]` that I completely skipped over but will do what I want
2015-05-31 13:46:23	-->	lenstr (lenstr@moz-897.vju.25.171.IP) has joined #rust
2015-05-31 13:46:39	@steveklabnik	:D
2015-05-31 13:46:41	@steveklabnik	cool
2015-05-31 13:46:46	-->	SiegeLord (sl@moz-9jtaei.ca.comcast.net) has joined #rust
2015-05-31 13:47:01	betawaffle	steveklabnik: how's the actor stuff going?
2015-05-31 13:47:15	@steveklabnik	actor stuff?
2015-05-31 13:47:16	-->	Guest58 (textual@moz-cdsk1r.res.rr.com) has joined #rust
2015-05-31 13:47:33	betawaffle	didn't you have a wip actor library for rust?
2015-05-31 13:47:39	@steveklabnik	i do not
2015-05-31 13:47:43	@steveklabnik	must have been someone else :)
2015-05-31 13:48:12	betawaffle	yea, there are a few people I get you confused with often
2015-05-31 13:48:13	XMPPwocky	we are all steveklabnik
2015-05-31 13:48:24	<--	Slava_I (slava@moz-tia.hi8.135.31.IP) has quit (Connection closed)
2015-05-31 13:48:30	-->	Slava_I (slava@moz-tia.hi8.135.31.IP) has joined #rust
2015-05-31 13:48:44	<--	meg34 (meg34@moz-oliav2.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2015-05-31 13:48:46	betawaffle	well shit, now i need to figure out who that was
2015-05-31 13:49:08	-->	ismaelga (ismaelga@moz-m9v.8r3.251.188.IP) has joined #rust
2015-05-31 13:49:20	@steveklabnik	oh btw Wraithan , speaking of 'cargo clean build' https://github.com/pwoolcoc/cargo-do
2015-05-31 13:50:06	-->	huddler (Mibbit@moz-5t9bg5.dion.ne.jp) has joined #rust
2015-05-31 13:50:07	-->	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has joined #rust
2015-05-31 13:50:16	betawaffle	oh, i think it was carllerche
2015-05-31 13:50:27	<--	huddler (Mibbit@moz-5t9bg5.dion.ne.jp) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-31 13:50:30	<--	lenstr (lenstr@moz-897.vju.25.171.IP) has quit (Ping timeout: 121 seconds)
2015-05-31 13:50:34	-->	harrisonclarke (harrisoncla@moz-uur7pt.eastlink.ca) has joined #rust
2015-05-31 13:50:54	<--	kimwonyong (kimwonyong@moz-gfp.vhi.163.221.IP) has quit (Quit: )
2015-05-31 13:50:59	<--	Robozman (quassel@moz-8u1nuj.dyn.optonline.net) has quit (Ping timeout: 121 seconds)
2015-05-31 13:51:39	-->	Robozman (quassel@moz-8u1nuj.dyn.optonline.net) has joined #rust
2015-05-31 13:52:16	-->	kimwonyong (kimwonyong@moz-gfp.vhi.163.221.IP) has joined #rust
2015-05-31 13:52:24	-->	jacor (jacor@moz-m207k5.ant0.oo2o.0007.2601.IP) has joined #rust
2015-05-31 13:52:47	-->	JanC (janc@moz-nurhqb.dial.scarlet.be) has joined #rust
2015-05-31 13:53:43	<--	dcb (textual@moz-j72nfe.ca.comcast.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-31 13:53:51	-->	maximih (maximih@moz-0r2bjb.bredband.telia.com) has joined #rust
2015-05-31 13:54:13	<--	dinfuehr (dinfuehr@moz-5n5gbo.highway.telekom.at) has quit (Connection closed)
2015-05-31 13:54:28	-->	ncarrillo (textual@moz-mke7jn.cable.rcn.com) has joined #rust
2015-05-31 13:55:42	<--	skeuomorf (skeuomorf@moz-a8h.ni9.32.197.IP) has quit (Ping timeout: 121 seconds)
2015-05-31 13:56:04	<--	lyxia (xia@moz-lj4fh9.eleves.ens.fr) has quit (Ping timeout: 121 seconds)
2015-05-31 13:56:40	-->	kecolus (kecolus@moz-i7cb3r.fios.verizon.net) has joined #rust
2015-05-31 13:56:42	<--	ncarrillo (textual@moz-mke7jn.cable.rcn.com) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-31 13:57:53	<--	maximih (maximih@moz-0r2bjb.bredband.telia.com) has quit (Ping timeout: 121 seconds)
2015-05-31 13:58:08	<--	Guest58 (textual@moz-cdsk1r.res.rr.com) has quit (Ping timeout: 121 seconds)
2015-05-31 13:59:33	<--	tristanseifert (tristanseif@moz-r0t7ns.res.rr.com) has quit (Ping timeout: 121 seconds)
2015-05-31 14:00:56	-->	cjwelborn (cjwelborn@moz-np6hed.al.charter.com) has joined #rust
2015-05-31 14:01:03	-->	ncarrillo (textual@moz-mke7jn.cable.rcn.com) has joined #rust
2015-05-31 14:01:30	-->	ygrek (user@moz-8j9aeu.org.ua) has joined #rust
2015-05-31 14:02:04	-->	AopicieR (AopicieR@moz-gjn7ie.dip0.t-ipconnect.de) has joined #rust
2015-05-31 14:05:33	carllerche	betawaffle: it was Astaire on my github, but is on hold
2015-05-31 14:05:51	@bstrie	steveklabnik: "Ugh, the new subreddit style doesn't show that File is a link there." looks like a link to me
2015-05-31 14:06:01	carllerche	I wanted to focus on futures / streams as I think they will be heavily used in the actor lib
2015-05-31 14:06:33	betawaffle	carllerche: makes sense. how are the futures and streams going?
2015-05-31 14:06:51	carllerche	Pretty solid.
2015-05-31 14:07:06	carllerche	Still need more work (always)
2015-05-31 14:07:46	carllerche	Futures / streams are in the eventual repo
2015-05-31 14:07:55	<--	kimwonyong (kimwonyong@moz-gfp.vhi.163.221.IP) has quit (Connection closed)
2015-05-31 14:08:02	-->	skeuomorf (skeuomorf@moz-a8h.ni9.32.197.IP) has joined #rust
2015-05-31 14:08:02	betawaffle	yea, i star'd that a while back
2015-05-31 14:08:10	-->	dcb (textual@moz-j72nfe.ca.comcast.net) has joined #rust
2015-05-31 14:08:50	<--	frankmcsherry (frankmcsher@moz-n95jpn.adsl.alicedsl.de) has quit (Connection closed)
2015-05-31 14:08:54	<--	dcb (textual@moz-j72nfe.ca.comcast.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-31 14:08:54	<--	Ericson2314 (user@moz-5muv45.m9e4.oi28.0306.2602.IP) has quit (Connection closed)
2015-05-31 14:09:25	-->	Xirdus (Mibbit@moz-noa5ui.tvk.wroc.pl) has joined #rust
2015-05-31 14:09:29	-->	avikpal (avikpal@moz-rcr.dga.79.112.IP) has joined #rust
2015-05-31 14:09:36	carllerche	Mio needs windows support / docs and eventual needs docs. Those are my current OSS priorities.
2015-05-31 14:09:51	carllerche	betawaffle: could always use assistance with stuff :-)
2015-05-31 14:09:58	Xirdus	hi, does anyone here use Visual Rust?
2015-05-31 14:10:40	@steveklabnik	bstrie: odd, i just posted a reply
2015-05-31 14:10:44	betawaffle	carllerche: what's at the top of your list of things you want someone else to do?
2015-05-31 14:12:25	carllerche	betawaffle: eventual has a few holes still. More fns on Stream / Future as well as figuring out execution contexts. Aka scheduling futures in thread pools and what not
2015-05-31 14:13:13	-->	jwatt (roslea@jwatt.irc.users.mozilla.org) has joined #rust
2015-05-31 14:13:36	carllerche	Or try to work on Astaire if you are brave :-) I can provide guidance.
2015-05-31 14:14:42	betawaffle	i have experience with erlang, but not the internals, just using it
2015-05-31 14:15:14	<--	amnn (amnn@moz-ro1qqu.ox.ac.uk) has quit (Ping timeout: 121 seconds)
2015-05-31 14:16:00	-->	keenan (keenan@moz-es1.bb3.240.23.IP) has joined #rust
2015-05-31 14:16:13	betawaffle	i need to come up with a simple project i can use to exercise these APIs, that would give me ideas of what to contribute
2015-05-31 14:16:42	-->	amnn (amnn@moz-ro1qqu.ox.ac.uk) has joined #rust
2015-05-31 14:17:23	<--	mindtree (Mitch@moz-5h22bp.iprimus.net.au) has quit (Ping timeout: 121 seconds)
2015-05-31 14:17:27	-->	w4ffles (textual@moz-34v1r4.res.rr.com) has joined #rust
2015-05-31 14:17:34	betawaffle	is it just me, or is this really hard to read? fn map<F: Fn(T) -> U + Send + 'static, U: Send + 'static>(self, f: F) -> Stream<U, E>
2015-05-31 14:17:50	<--	bbloom (bbloom@moz-mmuemv.wa.comcast.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2015-05-31 14:17:50	<--	p32blo (p32blo@moz-305o0v.cpe.netcabo.pt) has quit (Ping timeout: 121 seconds)
2015-05-31 14:17:55	-->	mindtree (Mitch@moz-8kr4tr.iprimus.net.au) has joined #rust
2015-05-31 14:17:56	<--	Rym (y@moz-c2u.sd4.38.217.IP) has quit (Ping timeout: 121 seconds)
2015-05-31 14:17:58	<--	rudolph (rudolph@moz-qcqtiq.o3k5.dsq9.010d.2620.IP) has quit (Quit: Leaving...)
2015-05-31 14:17:58	<--	psy (psy@moz-u9b.hr7.224.43.IP) has quit (Ping timeout: 121 seconds)
2015-05-31 14:18:11	-->	psy (psy@moz-u9b.hr7.224.43.IP) has joined #rust
2015-05-31 14:18:37	bluss	betawaffle: yeah, I'd prefer using where clauses
2015-05-31 14:18:44	-->	KarolisK (karolis@moz-1vd.8s1.28.194.IP) has joined #rust
2015-05-31 14:19:19	-->	kimwonyong (kimwonyong@moz-gfp.vhi.163.221.IP) has joined #rust
2015-05-31 14:19:22	rootnode	anyone have an idea why I get this ICE? https://github.com/rust-lang/rust/issues/25750
2015-05-31 14:19:30	bluss	betawaffle: http://is.gd/EyXZxu
2015-05-31 14:19:39	rootnode	until it's fixed I'd like to change my code so that I can compile my WM again
2015-05-31 14:20:21	betawaffle	bluss: perhaps it's just the older version of rustdoc?
2015-05-31 14:20:24	-->	qwerty_nor (Thunderbird@moz-lhq.glb.251.64.IP) has joined #rust
2015-05-31 14:20:44	bluss	betawaffle: rustdoc doesn't format code perfectly
2015-05-31 14:21:00	bluss	betawaffle: and I don't think it moves bounds from the type param list to a where clause (not sure)
2015-05-31 14:21:00	-->	maximih (maximih@moz-0r2bjb.bredband.telia.com) has joined #rust
2015-05-31 14:21:24	betawaffle	bluss: i've seen it do that for std
2015-05-31 14:21:28	<--	aepsil0n (eduard@moz-6491ha.mv2h.pepi.8071.2a02.IP) has quit (Connection closed)
2015-05-31 14:21:36	<--	copycat (Thunderbird@moz-mm4e60.singnet.com.sg) has quit (Ping timeout: 121 seconds)
2015-05-31 14:21:38	betawaffle	ie. if i look at the code, it's different than the doc
2015-05-31 14:21:39	bluss	betawaffle: yes it does something special for "doc inclusion"
2015-05-31 14:21:56	bluss	betawaffle: it also gets some things wrong in doc inclusion. i.e libcore docs get forwarded
2015-05-31 14:22:17	bluss	betawaffle: these are bugs to be fixed at some point
2015-05-31 14:22:40	<--	blank_name (blank_name@moz-b1omh3.mi.frontiernet.net) has quit (Ping timeout: 121 seconds)
2015-05-31 14:22:45	<--	ismaelga (ismaelga@moz-m9v.8r3.251.188.IP) has quit (Connection closed)
2015-05-31 14:22:46	<--	SerialVelocity (SerialVeloc@moz-attia0.cable.virginm.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-31 14:23:27	<--	fabianvf (fabianvf@moz-fjqmui.va.comcast.net) has quit (Connection closed)
2015-05-31 14:23:31	<--	ygrek (user@moz-8j9aeu.org.ua) has quit (Ping timeout: 121 seconds)
2015-05-31 14:23:46	-->	mib_urms7w (Mibbit@moz-emvmo9.dhcp.embarqhsd.net) has joined #rust
2015-05-31 14:23:48	<--	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-31 14:23:56	betawaffle	is there a reason for defining MyType.iter() rather than IntoIterator ?
2015-05-31 14:23:59	<--	c_wraith (c_wraith@moz-946go0.click-network.com) has quit (Quit: Leaving)
2015-05-31 14:24:01	mib_urms7w	hi
2015-05-31 14:24:09	<--	joneshf-laptop (joneshf@moz-l4h.b5s.208.98.IP) has quit (Ping timeout: 121 seconds)
2015-05-31 14:24:12	carllerche	betawaffle: it is pretty hard to read... Unfortunately, rust doesn't have trait aliasing yet.
2015-05-31 14:24:16	<--	atomic (atomic@moz-kvs6fc.torservers.net) has quit (Ping timeout: 121 seconds)
2015-05-31 14:24:29	@steveklabnik	betawaffle: i don't think so, maybe there's some edge case or something
2015-05-31 14:24:31	betawaffle	carllerche: yes, that's exactly what I want
2015-05-31 14:24:35	-->	SerialVelocity (SerialVeloc@moz-attia0.cable.virginm.net) has joined #rust
2015-05-31 14:24:49	betawaffle	steveklabnik: maybe IntoIterator didn't exist at the time?
2015-05-31 14:24:55	bluss	betawaffle: good question. The old convention was certainly to use .iter() yes
2015-05-31 14:24:57	@steveklabnik	quite possible
2015-05-31 14:25:06	mib_urms7w	it doesn't recognize this command $ rustc --version im on windows
2015-05-31 14:25:16	<--	hhhhhhhhhh (mike@moz-969kuj.cable.virginm.net) has quit (Quit: WeeChat 1.2)
2015-05-31 14:25:20	bluss	betawaffle: but today  vec.iter() is a shortcut for (&vec).into_iter() right, the former is easier to type
2015-05-31 14:25:28	bluss	betawaffle: the & being significant
2015-05-31 14:25:59	mib_urms7w	can  anyone help
2015-05-31 14:26:12	bluss	mib_urms7w: the $ is not part of the command fyi
2015-05-31 14:26:14	betawaffle	bluss: but it's good form to implement IntoIterator if you have an iter() method, correct?
2015-05-31 14:26:24	mib_urms7w	ok thanks
2015-05-31 14:26:28	bluss	betawaffle: I can't think of a reason not to do it
2015-05-31 14:26:34	<--	jnvsor (j@moz-1o1jrn.dynamic.ziggo.nl) has quit (Ping timeout: 121 seconds)
2015-05-31 14:26:37	betawaffle	for foo in bar ... is better than for for in bar.iter()
2015-05-31 14:26:46	bluss	betawaffle: IntoIterator is for when there's an obvious way to iterate it
2015-05-31 14:27:01	bluss	betawaffle: strings don't have that at the moment, for example
2015-05-31 14:27:05	Ms2ger	betawaffle, not always equivalent, though, note
2015-05-31 14:27:07	-->	c_wraith (c_wraith@moz-946go0.click-network.com) has joined #rust
2015-05-31 14:27:10	<--	mib_urms7w (Mibbit@moz-emvmo9.dhcp.embarqhsd.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-31 14:27:47	<--	Takronix (Takronix@moz-nm15k0.hr.cox.net) has quit (Connection closed)
2015-05-31 14:28:09	@bstrie	Xirdus: the folks on #rust-gamedev are behind visual rust, I bet there are some users in there
2015-05-31 14:28:31	-->	spider-mario (spidermario@moz-meu9c6.wb.wifirst.net) has joined #rust
2015-05-31 14:28:32	bluss	carllerche: I was thinking, if you regen docs for mio, associated types will show up correctly now
2015-05-31 14:28:38	<--	Quxxy (chatzilla@moz-0nv.jkp.167.59.IP) has quit (Ping timeout: 121 seconds)
2015-05-31 14:29:17	Layl	does someone have an exame project of a plugin system written in rust
2015-05-31 14:30:23	-->	frangio (frangio@moz-ke3.svs.12.186.IP) has joined #rust
2015-05-31 14:31:02	-->	meunierd (dmeunier@moz-glf54u.cpe.sourcecable.net) has joined #rust
2015-05-31 14:31:52	<--	agile (mike@moz-m71dqt.rcsntx.sbcglobal.net) has quit (Connection closed)
2015-05-31 14:32:08	-->	bbloom (bbloom@moz-mmuemv.wa.comcast.net) has joined #rust
2015-05-31 14:33:05	Layl	how reasonable an idea is it to just have a central DLL with the code that plugins will be written for, an executable that actually bootstraps that DLL and then the plugin dynamically links to that
2015-05-31 14:33:57	<--	meunierd (dmeunier@moz-glf54u.cpe.sourcecable.net) has quit (Client exited)
2015-05-31 14:34:22	<--	yota (sdouche@moz-me92to.3iqc.r856.0e35.2a01.IP) has quit (Quit: WeeChat 1.1.1)
2015-05-31 14:34:48	<--	w4ffles (textual@moz-34v1r4.res.rr.com) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-31 14:35:00	Layl	I'm just trying to figure out what the best way to dynamically load in code is in rust
2015-05-31 14:35:33	-->	yati (yati@moz-nm0.mvf.227.110.IP) has joined #rust
2015-05-31 14:35:56	-->	ipjk (INDIANPOJKE@moz-n0l906.cust.telenor.se) has joined #rust
2015-05-31 14:36:01	<--	ipjk (INDIANPOJKE@moz-n0l906.cust.telenor.se) has quit (Connection closed)
2015-05-31 14:36:30	-->	DemonOne (Avi@moz-be395p.red.bezeqint.net) has joined #rust
2015-05-31 14:36:39	yati	Hi. I want to create a type alias for a numeric vector. I tried `type vector = Vec<T: Num>`, but it doesn't work. How do I express this?
2015-05-31 14:36:53	<--	frangio (frangio@moz-ke3.svs.12.186.IP) has quit (Client exited)
2015-05-31 14:37:13	WindowsBunny	Layl: I heard DLL, the rest didn't make any sense
2015-05-31 14:37:48	<--	kimwonyong (kimwonyong@moz-gfp.vhi.163.221.IP) has quit (Connection closed)
2015-05-31 14:37:57	-->	saterus (saterus@moz-rutqj0.res.rr.com) has joined #rust
2015-05-31 14:38:01	Layl	well my question without any ways I think I might be able to solve it is: what's the best way to dynamically load in code to make a plugin system?
2015-05-31 14:38:06	bluss	yati: you don't want the T type parameter in there?
2015-05-31 14:38:20	-->	w4ffles (textual@moz-34v1r4.res.rr.com) has joined #rust
2015-05-31 14:38:26	<--	SerialVelocity (SerialVeloc@moz-attia0.cable.virginm.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-31 14:38:32	bluss	yati: I think the way to express it would be type vector<T> where T: Num = Vec<T>;  // I'm not sure it's properly enforced
2015-05-31 14:38:50	-->	joneshf-laptop (joneshf@moz-l4h.b5s.208.98.IP) has joined #rust
2015-05-31 14:38:53	betawaffle	Layl: in stable rust?
2015-05-31 14:38:55	bluss	it might be a missing feature to enforce / use it properly but it does parse and compile with a where clause 
2015-05-31 14:39:09	Layl	betawaffle, in unstable nightly
2015-05-31 14:39:29	esgeh	Layl: without having given a lot of thought, similar constraints should apply like in C++: look out for name mangleing (e.g. disable it for the plugin's "entry" function that is called by the host and registers itself at the host). I don't know of any nice Rust lib that handles DLL loading somwhat OS agnostic. But that does not mean much.
2015-05-31 14:39:39	betawaffle	and you know about the dynamic_lib module?
2015-05-31 14:40:11	<--	joneshf-laptop (joneshf@moz-l4h.b5s.208.98.IP) has quit (Quit: Leaving)
2015-05-31 14:40:14	-->	joneshf-laptop (joneshf@moz-l4h.b5s.208.98.IP) has joined #rust
2015-05-31 14:40:15	-->	pylbrecht (pylbrecht@moz-b4nhkg.dynamic.kabel-deutschland.de) has joined #rust
2015-05-31 14:40:25	yati	bluss, It did compile that part. Let me see if it works.
2015-05-31 14:40:31	<--	harrisonclarke (harrisoncla@moz-uur7pt.eastlink.ca) has quit (Connection closed)
2015-05-31 14:40:32	esgeh	I suppuse, loading DLLs manually it's intrintiscally unsafe as you need to transmute stuff to function pointers etc
2015-05-31 14:40:38	Layl	esgeh, I know there's something in the unstable std
2015-05-31 14:40:50	<--	nickniko_ (nicknikolov@moz-27s.0d8.214.90.IP) has quit (Connection closed)
2015-05-31 14:41:00	Layl	I forgot what it was though
2015-05-31 14:41:09	betawaffle	https://doc.rust-lang.org/nightly/std/dynamic_lib/index.html
2015-05-31 14:41:09	bluss	yati: I don't think it buys you much, to put it that way. What do you mean by Vec<T: Num> ?
2015-05-31 14:41:10	<--	jmbto (jmbto@moz-4pv6mn.hca5.8frp.0e35.2a01.IP) has quit (Quit: WeeChat 1.1.1)
2015-05-31 14:41:11	<--	jviereck (Adium@moz-1tirsh.dip0.t-ipconnect.de) has quit (Quit: Leaving.)
2015-05-31 14:41:14	Layl	dynamic_lib that's it
2015-05-31 14:41:16	Layl	thanks
2015-05-31 14:41:28	Layl	I'm concerned what happens with generics and traits here though
2015-05-31 14:41:49	esgeh	Layl: they won't work :)
2015-05-31 14:41:50	betawaffle	Layl: most things im sure go out the window
2015-05-31 14:42:15	carllerche	bluss: is rustdoc fixed on 1.0 or nightly?
2015-05-31 14:42:32	Layl	egh I think I'm just gonna be better off binding it all together in the binary crate
2015-05-31 14:42:42	bluss	carllerche: nightly
2015-05-31 14:43:02	carllerche	ah, the docs are being built by 1.0
2015-05-31 14:43:07	betawaffle	Layl: the interface between the plugin and the host program has to be very simple
2015-05-31 14:43:08	carllerche	I don't use the nightlies :P
2015-05-31 14:43:25	betawaffle	you wouldn't really want generics anyway
2015-05-31 14:43:25	<--	cjwelborn (cjwelborn@moz-np6hed.al.charter.com) has quit (Ping timeout: 121 seconds)
2015-05-31 14:44:00	bluss	carllerche: ok. I think you could use the nightlies for this
2015-05-31 14:44:02	Layl	unfortunately, gfx very much forces me to use generics
2015-05-31 14:44:16	-->	harrisonclarke (harrisoncla@moz-uur7pt.eastlink.ca) has joined #rust
2015-05-31 14:44:26	betawaffle	Layl: perhaps an example would show me?
2015-05-31 14:44:27	-->	ismaelga (ismaelga@moz-m9v.8r3.251.188.IP) has joined #rust
2015-05-31 14:44:28	-->	mihi (mihi@moz-k60gq0.dip0.t-ipconnect.de) has joined #rust
2015-05-31 14:44:33	bluss	carllerche: for example even stable seems to geneate docs with link to the nightly libstd docs (for usize, Result, libstd things)
2015-05-31 14:44:36	<--	qwerty_nor (Thunderbird@moz-lhq.glb.251.64.IP) has quit (Ping timeout: 121 seconds)
2015-05-31 14:44:44	Layl	betawaffle, what do you mean?
2015-05-31 14:44:57	Layl	example of what?
2015-05-31 14:45:00	betawaffle	of a plugin you'd like to have generic functions in
2015-05-31 14:45:04	-->	brainproxy (michael@moz-9vjtig.mo.charter.com) has joined #rust
2015-05-31 14:45:29	Layl	well the thing is, gfx requires anything using it to have generics all over the place
2015-05-31 14:45:46	Layl	so anything that requires gfx objects to be passed around for rendering needs this
2015-05-31 14:46:15	-->	skade (skade@moz-q92odo.dynamic.kabel-deutschland.de) has joined #rust
2015-05-31 14:46:34	<--	kent (kent@moz-nd2iqs.fl.atlanticbb.net) has quit (Ping timeout: 121 seconds)
2015-05-31 14:47:17	<--	jacor (jacor@moz-m207k5.ant0.oo2o.0007.2601.IP) has quit (Connection closed)
2015-05-31 14:47:29	-->	jacor (jacor@moz-m207k5.ant0.oo2o.0007.2601.IP) has joined #rust
2015-05-31 14:47:32	-->	Rym (y@moz-c2u.sd4.38.217.IP) has joined #rust
2015-05-31 14:48:11	betawaffle	well, all the generics would need to be pre-exploded into the interface
2015-05-31 14:48:15	<--	sigma (sigma@moz-k1ghg8.range109-153.btcentralplus.com) has quit (Ping timeout: 121 seconds)
2015-05-31 14:48:34	<--	fkaa (tundmatu@moz-501od2.business.telia.com) has quit (RecvQ exceeded)
2015-05-31 14:48:38	-->	dpc (dpc@moz-t6gr4b.ca.comcast.net) has joined #rust
2015-05-31 14:48:41	-->	fkaa (tundmatu@moz-501od2.business.telia.com) has joined #rust
2015-05-31 14:48:42	betawaffle	it'll be a very large surface area for a plugin
2015-05-31 14:48:50	-->	ipjk (INDIANPOJKE@moz-n0l906.cust.telenor.se) has joined #rust
2015-05-31 14:48:53	Layl	I'll think of something to fix that
2015-05-31 14:48:53	-->	jviereck (Adium@moz-1tirsh.dip0.t-ipconnect.de) has joined #rust
2015-05-31 14:48:54	<--	ipjk (INDIANPOJKE@moz-n0l906.cust.telenor.se) has quit (Connection closed)
2015-05-31 14:49:07	<--	Morten (Morten@moz-o0hr4o.bb.online.no) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-05-31 14:49:15	-->	Morten (Morten@moz-o0hr4o.bb.online.no) has joined #rust
2015-05-31 14:50:03	-->	blank_name (blank_name@moz-tq3.7iq.183.192.IP) has joined #rust
2015-05-31 14:50:18	betawaffle	Layl: macros!
2015-05-31 14:50:33	Layl	the problem is the entire point of gfx is to abstract away the underlying platform
2015-05-31 14:50:47	betawaffle	so, why does it need to be a dynamic library?
2015-05-31 14:50:56	-->	munksgaard (munksgaard@moz-478pev.u.parknet.dk) has joined #rust
2015-05-31 14:51:07	Layl	because it's a game engine and there needs to be some way of adding in new functionality
2015-05-31 14:51:19	betawaffle	at runtime?
2015-05-31 14:51:39	Layl	probably not at runtime no
2015-05-31 14:51:44	betawaffle	as opposed to game-engine-as-a-library?
2015-05-31 14:51:44	Layl	not usually anyawys
2015-05-31 14:51:56	Layl	unless someone decides they want to have a plugin system for their game
2015-05-31 14:51:59	-->	qwerty_nor (Thunderbird@moz-lhq.glb.251.64.IP) has joined #rust
2015-05-31 14:51:59	<--	Rym (y@moz-c2u.sd4.38.217.IP) has quit (Ping timeout: 121 seconds)
2015-05-31 14:52:13	<--	Jesin (Jesin@moz-8sq.94j.16.107.IP) has quit (Quit: Leaving)
2015-05-31 14:52:29	betawaffle	dynamic libraries are also very harsh optimization barriers
2015-05-31 14:52:37	-->	andresv (textual@moz-cmffkg.cable.starman.ee) has joined #rust
2015-05-31 14:53:57	betawaffle	no pruning of un-needed symbols or anything like that, either
2015-05-31 14:54:50	-->	dinfuehr (dinfuehr@moz-5n5gbo.highway.telekom.at) has joined #rust
2015-05-31 14:55:03	<--	thiblahute (tsaunier@moz-rkc6r5.fbx.proxad.net) has quit (Ping timeout: 121 seconds)
2015-05-31 14:55:27	-->	nicknikolov (nicknikolov@moz-27s.0d8.214.90.IP) has joined #rust
2015-05-31 14:55:46	<--	jviereck (Adium@moz-1tirsh.dip0.t-ipconnect.de) has quit (Quit: Leaving.)
2015-05-31 14:56:01	<--	qwerty_nor (Thunderbird@moz-lhq.glb.251.64.IP) has quit (Ping timeout: 121 seconds)
2015-05-31 14:57:11	<--	munksgaard (munksgaard@moz-478pev.u.parknet.dk) has quit (Ping timeout: 121 seconds)
2015-05-31 14:57:14	rootnode	argh, I just can't come up with a small example to reproduce this ICE
2015-05-31 14:57:18	<--	avikpal (avikpal@moz-rcr.dga.79.112.IP) has quit (Connection closed)
2015-05-31 14:57:44	mihi	Hello. I installed Rust 1.0 on 64-bit Windows 7, and now whenever some setup program launches a 32-bit command prompt (%WINDIR%\SYSWOW64\cmd.exe) its window will have a Rust icon. I know, mostly harmless, but is this issue known already?
2015-05-31 14:58:19	<--	skade (skade@moz-q92odo.dynamic.kabel-deutschland.de) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-31 14:58:53	<--	dinfuehr (dinfuehr@moz-5n5gbo.highway.telekom.at) has quit (Ping timeout: 121 seconds)
2015-05-31 14:59:14	betawaffle	rust programs have icons on windows?
2015-05-31 14:59:32	<--	ncarrillo (textual@moz-mke7jn.cable.rcn.com) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-31 14:59:55	<--	Romster (Romster@moz-4g83e8.rev.eftel.com) has quit (Ping timeout: 121 seconds)
2015-05-31 15:00:02	rootnode	what does "cannot relate bound region: ReScope(Remainder(BlockRemainder { block: 150, first_statement_index: 3 })) <= ReLateBound(DebruijnIndex { depth: 1 }, BrAnon(0))
2015-05-31 15:00:10	rootnode	tell me?
2015-05-31 15:00:11	-->	Romster (Romster@moz-4g83e8.rev.eftel.com) has joined #rust
2015-05-31 15:00:17	<--	forgottenone (forgottenon@moz-bj9.b4g.45.92.IP) has quit (Quit: Konversation terminated!)
2015-05-31 15:00:20	-->	Zr40 (zr40@moz-92llkv.adsl.xs4all.nl) has joined #rust
2015-05-31 15:00:22	bluss	rootnode: mostly that rustc has a bug!
2015-05-31 15:00:35	rootnode	I...can see that :D 
2015-05-31 15:00:43	<--	kaeluka (kaeluka@moz-6cbr2p.cust.bredbandsbolaget.se) has quit (Client exited)
2015-05-31 15:00:49	rootnode	I've been trying for days now to change my code so that I don't get that ICE
2015-05-31 15:01:06	rootnode	but I can't even create a small example that reproduces it. Just my whole project that triggers it
2015-05-31 15:01:23	betawaffle	rootnode: are you on rust nightly?
2015-05-31 15:01:28	rootnode	yep
2015-05-31 15:01:36	rootnode	the ICE also triggers on stable and beta
2015-05-31 15:01:47	<--	mindtree (Mitch@moz-8kr4tr.iprimus.net.au) has quit (Ping timeout: 121 seconds)
2015-05-31 15:01:51	rootnode	so, nightly is my only "hope" right now, but even there it triggers
2015-05-31 15:01:56	-->	colinsurprenant (colin@moz-q9ee1n.74.electronicbox.net) has joined #rust
2015-05-31 15:02:02	<--	blank_name (blank_name@moz-tq3.7iq.183.192.IP) has quit (Ping timeout: 121 seconds)
2015-05-31 15:02:11	-->	jviereck (Adium@moz-1tirsh.dip0.t-ipconnect.de) has joined #rust
2015-05-31 15:02:38	-->	kaeluka (kaeluka@moz-6cbr2p.cust.bredbandsbolaget.se) has joined #rust
2015-05-31 15:02:56	<--	rmdashrf (rmdashrf@moz-ecr.kjm.54.128.IP) has quit (Quit: WeeChat 0.4.2)
2015-05-31 15:02:57	<--	maximih (maximih@moz-0r2bjb.bredband.telia.com) has quit (A TLS packet with unexpected length was received.)
2015-05-31 15:03:20	mihi	betawaffle, compiled EXEs don't, but the Rust start menu entries have (a R in some kind of cogwheel)
2015-05-31 15:03:36	@bstrie	rootnode: keep trying to reduce it, if you can. I don't think it's likely that it'll get fixed without a test case and a bug report :)
2015-05-31 15:03:57	rootnode	bug report is online https://github.com/rust-lang/rust/issues/25750
2015-05-31 15:04:11	-->	meunierd (dmeunier@moz-glf54u.cpe.sourcecable.net) has joined #rust
2015-05-31 15:04:11	@steveklabnik	i wonder if creduce would help
2015-05-31 15:04:29	@steveklabnik	anyway, see you all later
2015-05-31 15:04:41	<--	mihi (mihi@moz-k60gq0.dip0.t-ipconnect.de) has quit (Quit: Leaving)
2015-05-31 15:05:07	rootnode	creduce?
2015-05-31 15:05:11	betawaffle	rootnode: well, it's related to inference
2015-05-31 15:06:52	-->	munksgaard (munksgaard@moz-478pev.u.parknet.dk) has joined #rust
2015-05-31 15:06:54	<--	mukilan (mukilan@moz-agl.8le.164.122.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-31 15:07:01	rootnode	hm
2015-05-31 15:07:17	<--	veqz_ (veqz@moz-74gtia.au-net.ne.jp) has quit (Ping timeout: 121 seconds)
2015-05-31 15:08:19	betawaffle	and... im guessing from the location? maybe lifetime inference?
2015-05-31 15:08:42	rootnode	hm, not using any lifetimes in that case
2015-05-31 15:09:03	betawaffle	rootnode: can you get the error matching the actual current code? the error message in the issue doesn't match the code on github
2015-05-31 15:09:20	-->	frankmcsherry (frankmcsher@moz-n95jpn.adsl.alicedsl.de) has joined #rust
2015-05-31 15:09:54	-->	tristanseifert (tristanseif@moz-r0t7ns.res.rr.com) has joined #rust
2015-05-31 15:10:12	-->	SerialVelocity (SerialVeloc@moz-attia0.cable.virginm.net) has joined #rust
2015-05-31 15:11:05	-->	eerie (Mibbit@moz-qld.8t4.67.109.IP) has joined #rust
2015-05-31 15:11:54	rootnode	betawaffle: ok, I updated the code and the error message is https://gist.github.com/Kintaro/6eab88a32f601c9a4084
2015-05-31 15:12:18	eerie	I want a function that takes as an argument anything that impls IntoIterator, where the iterator is over type T: Ord. how would the signature look like?
2015-05-31 15:12:25	rootnode	betawaffle: https://github.com/Kintaro/wtftw/blob/master/core/src/config.rs#L81
2015-05-31 15:12:46	-->	ajhager (aajhager@moz-mcdsgi.iplsin.sbcglobal.net) has joined #rust
2015-05-31 15:12:55	<--	colinsurprenant (colin@moz-q9ee1n.74.electronicbox.net) has quit (Client exited)
2015-05-31 15:12:57	--	bentley is now known as bentley|away
2015-05-31 15:12:57	-->	skade (skade@moz-q92odo.dynamic.kabel-deutschland.de) has joined #rust
2015-05-31 15:13:22	<--	frankmcsherry (frankmcsher@moz-n95jpn.adsl.alicedsl.de) has quit (Ping timeout: 121 seconds)
2015-05-31 15:13:25	geri	how can i tell cargo to optimize my code for speed (e.g. -O3) ?
2015-05-31 15:13:25	-->	gopar (gopar@moz-5039uj.ca.comcast.net) has joined #rust
2015-05-31 15:13:47	-->	kent (kent@moz-nd2iqs.fl.atlanticbb.net) has joined #rust
2015-05-31 15:13:52	--	darkowlzz is now known as darkowlzz|afk
2015-05-31 15:14:12	betawaffle	rootnode: those hooks have lifetimes
2015-05-31 15:14:14	-->	ty (ty@moz-i6c4to.wa.comcast.net) has joined #rust
2015-05-31 15:14:27	rootnode	it used to work
2015-05-31 15:14:29	bluss	eerie: where T: IntoIterator, T::Item: Ord
2015-05-31 15:14:33	betawaffle	but they need to be inferred
2015-05-31 15:14:37	<--	jincreator (Thunderbird@moz-d7i.i1g.195.175.IP) has quit (Ping timeout: 121 seconds)
2015-05-31 15:14:45	rootnode	then exactly when 1.0 hit it didn't
2015-05-31 15:14:47	-->	frankmcsherry (frankmcsher@moz-n95jpn.adsl.alicedsl.de) has joined #rust
2015-05-31 15:15:15	betawaffle	ok, do you have the last rust version where it *did* work?
2015-05-31 15:15:29	rootnode	I tried recreating it with the same hooks, but it kinda doesn't trigger
2015-05-31 15:15:36	-->	rudolph (rudolph@moz-q5b.rfa.152.37.IP) has joined #rust
2015-05-31 15:15:53	rootnode	the 1.0 beta still worked
2015-05-31 15:16:10	--	darkowlzz|afk is now known as darkowlzz
2015-05-31 15:16:18	rootnode	can't really pinpoint which commit triggered it
2015-05-31 15:16:20	betawaffle	do you have a snippet of the code where it *stopped* failing?
2015-05-31 15:16:26	eerie	bluss: thnx
2015-05-31 15:16:34	-->	Azdle (Azdle@moz-fv6arh.mn.comcast.net) has joined #rust
2015-05-31 15:16:42	rootnode	you mean the code where I tried to reproduce it?
2015-05-31 15:16:55	betawaffle	yes
2015-05-31 15:17:38	-->	vikaton (uid59278@moz-0a9h81.ealing.irccloud.com) has joined #rust
2015-05-31 15:17:42	bbloom	does rustdoc have anything for cross-references?
2015-05-31 15:17:58	-->	starless (starless@moz-u9gmm1.res.rr.com) has joined #rust
2015-05-31 15:18:04	vikaton	steveklabnik: is that Dining philosopher thing supposed to iterate once or forever?
2015-05-31 15:18:08	<--	ismaelga (ismaelga@moz-m9v.8r3.251.188.IP) has quit (Connection closed)
2015-05-31 15:18:28	vikaton	I think it's supposed to forever
2015-05-31 15:18:55	betawaffle	vikaton: he left for the day
2015-05-31 15:19:02	vikaton	o
2015-05-31 15:19:07	rootnode	betawaffle: https://gist.github.com/Kintaro/4ffd94f70cc14093e00f
2015-05-31 15:19:20	vikaton	well the code in rossetacode is wrong then :/
2015-05-31 15:19:42	<--	Lilly (Lilly@moz-pfkvo9.bredband.comhem.se) has quit (Quit: bajs)
2015-05-31 15:20:12	<--	vikaton (uid59278@moz-0a9h81.ealing.irccloud.com) has quit (Quit: )
2015-05-31 15:20:24	betawaffle	rootnode: i was thinking the problem lies in these: https://github.com/Kintaro/wtftw/blob/master/core/src/config.rs#L87-L88
2015-05-31 15:20:38	<--	Hannibal_Smith (nico@moz-itj1vp.retail.telecomitalia.it) has quit (Quit: Leaving)
2015-05-31 15:20:53	rootnode	nope. when I comment them out, it still occurs
2015-05-31 15:20:55	-->	survi (philip@moz-pbmbkg.dip0.t-ipconnect.de) has joined #rust
2015-05-31 15:21:03	rootnode	somehow seems to be in key_handlers
2015-05-31 15:21:11	rootnode	but I can't figure out why
2015-05-31 15:21:21	-->	andars (andars@moz-bsldst.sntcca.sbcglobal.net) has joined #rust
2015-05-31 15:21:42	<--	Morten (Morten@moz-o0hr4o.bb.online.no) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-05-31 15:22:03	etw	sfackler: ahh yes, I did
2015-05-31 15:22:03	<--	rudolph (rudolph@moz-q5b.rfa.152.37.IP) has quit (Quit: Leaving...)
2015-05-31 15:22:06	-->	pyon (pyon@moz-no9.411.236.190.IP) has joined #rust
2015-05-31 15:22:23	-->	Morten (Morten@moz-o0hr4o.bb.online.no) has joined #rust
2015-05-31 15:23:03	sfackler	the error reporting in those cases is super bizarre :(
2015-05-31 15:23:43	etw	when I saw that I thought it was just a quirk of how cargo was pulling in git dependencies
2015-05-31 15:23:56	betawaffle	rootnode: so, when you comment out key_handlers, it works?
2015-05-31 15:24:14	bluss	sfackler: thank you for r+ing the arc change
2015-05-31 15:24:17	betawaffle	if not, what makes you think it's key_handlers?
2015-05-31 15:24:19	rootnode	yeah, except for error messages all over the place where code tries to use key_handlers 
2015-05-31 15:24:26	betawaffle	sure
2015-05-31 15:24:30	-->	Matthias247 (Miranda@moz-49li60.hsi14.kabel-badenwuerttemberg.de) has joined #rust
2015-05-31 15:24:39	rootnode	but commeting it out makes the ICE disappear
2015-05-31 15:24:59	-->	codec (Mibbit@moz-325m1f.abo.wanadoo.fr) has joined #rust
2015-05-31 15:25:01	-->	mkpankov` (user@moz-upl.dee.149.83.IP) has joined #rust
2015-05-31 15:25:01	-->	herr_jth (jth@moz-540.d5q.91.95.IP) has joined #rust
2015-05-31 15:25:24	<--	herr_jth (jth@moz-540.d5q.91.95.IP) has quit (Quit: Konversation terminated!)
2015-05-31 15:25:35	codec	Can somebody tell me how to convert a vec to splice ?
2015-05-31 15:25:38	rootnode	ok, let me rephrase that
2015-05-31 15:25:40	<--	ai (ai@moz-pqofrl.sunline.net.ua) has quit (Connection closed)
2015-05-31 15:25:42	-->	herr_jth (jth@moz-540.d5q.91.95.IP) has joined #rust
2015-05-31 15:25:45	bbloom	i see that rustdoc comments are markdown & can have links, but i'm wondering if i can link to anchors
2015-05-31 15:25:45	codec	*slice
2015-05-31 15:25:56	rootnode	commenting out all parts that use handlers
2015-05-31 15:25:57	bluss	codec: to a slice, well there are several ways
2015-05-31 15:26:05	rootnode	so, only library and wtftw_dir remai
2015-05-31 15:26:06	bbloom	i often put [BLAH] style tags in my comments when some knowledge is spread out and i want to centralize a big hairy comment
2015-05-31 15:26:08	rootnode	remain*
2015-05-31 15:26:11	bluss	codec: &Vec<T> can be passed where &[T] is expected
2015-05-31 15:26:25	bluss	codec: so that's the easiest way. You can also use &*vec or &vec[..]
2015-05-31 15:26:28	-->	zynisch_o7 (zynisch_o7@moz-6eh1ju.dyn.optonline.net) has joined #rust
2015-05-31 15:26:29	-->	ai (ai@moz-pqofrl.sunline.net.ua) has joined #rust
2015-05-31 15:26:31	codec	this is handled by the computer ?
2015-05-31 15:26:34	codec	*compiler
2015-05-31 15:26:50	bluss	codec: there's a rule called deref coercion for the &Vec -> &[T] casee
2015-05-31 15:26:59	rootnode	it gets weirder and weirder
2015-05-31 15:27:16	bbloom	steveklabnik: you're the docs mastermind, right? :-)
2015-05-31 15:27:53	rootnode	betawaffle: ok. using only manage, startup or loghook works
2015-05-31 15:28:00	rootnode	using any two of them fails
2015-05-31 15:28:11	rootnode	and using key or mouse_handlers fails too
2015-05-31 15:28:21	rootnode	so, it seems as soon as more than one handler is involved
2015-05-31 15:28:24	betawaffle	rootnode: im guessing maybe some kind of conflicting lifetime
2015-05-31 15:28:37	mkpankov`	steveklabnik: oh Steve, closing and deleting the issue isn't very effective as I can't copy-paste it to rust-lang/rust then :]
2015-05-31 15:29:12	codec	bluss: I got an mismatched type exception : expected &mut [u8], found collections::vec::Vec<u8>
2015-05-31 15:29:37	betawaffle	rootnode: does that mean you were able to put two things in your reduced case and have it fail?
2015-05-31 15:29:45	-->	nano (nano@moz-00j6et.dynamic.kabel-deutschland.de) has joined #rust
2015-05-31 15:29:50	rootnode	let me check
2015-05-31 15:30:25	bluss	codec: it's &Vec -> &[T] and &mut Vec -> &mut [T]
2015-05-31 15:30:30	<--	zynisch_o7 (zynisch_o7@moz-6eh1ju.dyn.optonline.net) has quit (Ping timeout: 121 seconds)
2015-05-31 15:30:38	<--	gsingh93 (gulshan@moz-ln1ktu.st3l.iv8o.0004.2601.IP) has quit (Ping timeout: 121 seconds)
2015-05-31 15:30:43	codec	bluss: what do you mean ?
2015-05-31 15:30:59	bluss	codec: the deref coercion rule only works for those cases
2015-05-31 15:31:09	bluss	if it needs &mut [u8], you can pass &mut Vec<u8>
2015-05-31 15:31:15	-->	larhat (Adium@moz-vlo5br.cable.virginm.net) has joined #rust
2015-05-31 15:31:16	betawaffle	codec: you'd need a &mut Vec
2015-05-31 15:31:22	<--	ajhager (aajhager@moz-mcdsgi.iplsin.sbcglobal.net) has quit (Quit: WeeChat 1.1.1)
2015-05-31 15:31:26	-->	ajhager (aajhager@moz-mcdsgi.iplsin.sbcglobal.net) has joined #rust
2015-05-31 15:32:04	codec	bluss: Seems obvious now you said it ;)
2015-05-31 15:32:09	rootnode	hm, nope
2015-05-31 15:32:13	<--	saterus (saterus@moz-rutqj0.res.rr.com) has quit (Quit: )
2015-05-31 15:32:27	<--	munksgaard (munksgaard@moz-478pev.u.parknet.dk) has quit (Ping timeout: 121 seconds)
2015-05-31 15:32:31	betawaffle	rootnode: new code for the reduced case? update the gist
2015-05-31 15:32:43	bluss	codec: well. there's a bunch of rules :)
2015-05-31 15:33:36	rootnode	betawaffle: https://gist.github.com/Kintaro/9efbe930d8628fece095 still doesn't trigger it
2015-05-31 15:33:45	codec	bluss: sure but I find the syntax a bit awkward sometime
2015-05-31 15:34:01	codec	bluss: and the compiler could have given me a hint in this case
2015-05-31 15:34:29	-->	munksgaard (munksgaard@moz-urnkl5.u.parknet.dk) has joined #rust
2015-05-31 15:34:42	-->	arBmind (Andreas@moz-86h02i.adsl.alicedsl.de) has joined #rust
2015-05-31 15:35:13	<--	kent (kent@moz-nd2iqs.fl.atlanticbb.net) has quit (Ping timeout: 121 seconds)
2015-05-31 15:35:15	bluss	it can always be better
2015-05-31 15:35:32	bluss	personally I'm just amazed with how nice messages the compiler gives
2015-05-31 15:35:51	-->	lenstr (lenstr@moz-897.vju.25.171.IP) has joined #rust
2015-05-31 15:36:14	betawaffle	rootnode: could it have something to do with the Window type?
2015-05-31 15:36:24	-->	phore (phore@moz-p8hanb.cable.rogers.com) has joined #rust
2015-05-31 15:36:26	betawaffle	nvm
2015-05-31 15:36:28	rootnode	Window is u64
2015-05-31 15:36:43	rootnode	WindowSystem is just a trait
2015-05-31 15:37:05	betawaffle	rootnode: ok, maybe you're trying to reduce too far too quickly
2015-05-31 15:37:08	codec	bluss: sure compared to c++ template error there are a blessing, but coming from C# the path seems harder
2015-05-31 15:37:15	betawaffle	rootnode: new branch :)
2015-05-31 15:37:17	-->	rovar (rovar@moz-96effg.dyn.optonline.net) has joined #rust
2015-05-31 15:37:30	betawaffle	start commenting out then deleting code
2015-05-31 15:37:35	-->	zaeleus (zaeleus@moz-r5abra.cpe.cableone.net) has joined #rust
2015-05-31 15:37:41	<--	survi (philip@moz-pbmbkg.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2015-05-31 15:37:44	rootnode	betawaffle: I'll try again tomorrow. 4:30a.m., need to get some sleep :D
2015-05-31 15:37:49	rootnode	but thanks for the help so far
2015-05-31 15:37:49	betawaffle	k
2015-05-31 15:37:49	<--	Morten (Morten@moz-o0hr4o.bb.online.no) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-05-31 15:38:01	-->	Morten (Morten@moz-o0hr4o.bb.online.no) has joined #rust
2015-05-31 15:38:16	-->	kimwonyong (kimwonyong@moz-gfp.vhi.163.221.IP) has joined #rust
2015-05-31 15:38:26	-->	ctennis (ctennis@moz-ej0.24t.142.67.IP) has joined #rust
2015-05-31 15:38:35	-->	maximih (maximih@moz-0r2bjb.bredband.telia.com) has joined #rust
2015-05-31 15:38:51	<--	mbudde (mbudde@moz-425rg1.customer.tdc.net) has quit (Ping timeout: 121 seconds)
2015-05-31 15:39:53	<--	lenstr (lenstr@moz-897.vju.25.171.IP) has quit (Ping timeout: 121 seconds)
2015-05-31 15:39:58	-->	gyro (gyro@moz-ukm.h91.222.64.IP) has joined #rust
2015-05-31 15:40:20	gyro	Hello.
2015-05-31 15:40:28	gyro	Any good guides on setting up a Vim workspace for rust? 
2015-05-31 15:40:44	<--	aravindavk (aravinda@moz-r8d.tmm.172.122.IP) has quit (Quit: Konversation terminated!)
2015-05-31 15:41:37	-->	Rym (y@moz-c2u.sd4.38.217.IP) has joined #rust
2015-05-31 15:41:42	<--	gopar (gopar@moz-5039uj.ca.comcast.net) has quit (Quit: Leaving)
2015-05-31 15:41:47	-->	bhamilton (bhamilton@moz-n82.hhp.210.105.IP) has joined #rust
2015-05-31 15:42:18	<--	kimwonyong (kimwonyong@moz-gfp.vhi.163.221.IP) has quit (Ping timeout: 121 seconds)
2015-05-31 15:42:34	<--	bhamilton (bhamilton@moz-n82.hhp.210.105.IP) has quit (Connection closed)
2015-05-31 15:42:51	codec	Can someone explain me why using an external crate (image) my compilation time as go from 1 second to 30 seconds ?
2015-05-31 15:43:13	<--	ctennis (ctennis@moz-ej0.24t.142.67.IP) has quit (Quit: Leaving...)
2015-05-31 15:43:43	<--	keenan (keenan@moz-es1.bb3.240.23.IP) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-05-31 15:44:39	<--	skade (skade@moz-q92odo.dynamic.kabel-deutschland.de) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-31 15:45:00	--	irc: disconnected from server
2015-05-31 15:45:12	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-31 15:45:12	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-31 15:45:12	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-31 15:45:12	--	Channel #rust: 998 nicks (13 ops, 0 halfops, 1 voice, 984 normals)
2015-05-31 15:45:16	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-31 15:45:26	<--	nyx (nyx@moz-ivelpd.res.rr.com) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-31 15:45:38	-->	dkreuter (knizz@moz-fes.iga.129.213.IP) has joined #rust
2015-05-31 15:45:39	<--	jviereck (Adium@moz-1tirsh.dip0.t-ipconnect.de) has quit (Quit: Leaving.)
2015-05-31 15:45:41	kimundi	codec: might be due to static linking, which basically embeds all library files into the executable. Though 30s for one library sounds excessive - did it build other stuff as well?
2015-05-31 15:45:44	<--	Azdle (Azdle@moz-fv6arh.mn.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-31 15:46:00	dkreuter	how can I reinterpret a u64 as i64 in rust
2015-05-31 15:46:08	<--	Rym (y@moz-c2u.sd4.38.217.IP) has quit (Ping timeout: 121 seconds)
2015-05-31 15:46:41	mkpankov`	playbot: 2u64 as 2i64 // dkreuter 
2015-05-31 15:46:42	--	Notice(playbot): <anon>:9:17: 9:21 error: expected type, found `2i64`
2015-05-31 15:46:42	--	Notice(playbot): <anon>:9         2u64 as 2i64 // dkreuter 
2015-05-31 15:46:42	--	Notice(playbot): output truncated; full output at: http://bit.ly/1ELn7Pv
2015-05-31 15:46:57	--	darkowlzz is now known as darkowlzz|afk
2015-05-31 15:46:57	mkpankov`	playbot: 2u64 as i64 // dkreuter 
2015-05-31 15:46:58	--	Notice(playbot): 2
2015-05-31 15:47:15	dkreuter	playbot, 255u8 as i8
2015-05-31 15:47:16	--	Notice(playbot): -1
2015-05-31 15:47:19	dkreuter	nice
2015-05-31 15:47:20	codec	kimumdi: no I am just making a basic game  with sdl2. But since sdl2_image is broken on crates.io I choose to use the crate image instead. And the my compilation time has exploded
2015-05-31 15:47:50	<--	eerie (Mibbit@moz-qld.8t4.67.109.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-31 15:48:13	snow	Try std::mem::transmute dkreuter?
2015-05-31 15:48:33	dkreuter	snow, I already got my answer, but thanks
2015-05-31 15:49:12	--	irc: disconnected from server
2015-05-31 15:49:24	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-31 15:49:24	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-31 15:49:24	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-31 15:49:24	--	Channel #rust: 994 nicks (13 ops, 0 halfops, 1 voice, 980 normals)
2015-05-31 15:49:26	snow	Oh, I missed that
2015-05-31 15:49:28	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-31 15:49:53	<--	maximih (maximih@moz-0r2bjb.bredband.telia.com) has quit (A TLS packet with unexpected length was received.)
2015-05-31 15:49:54	bluss	this issue is about a particular type checking pathology ^ it's not the only thing that takes time when compiling rust
2015-05-31 15:49:59	bluss	so it might not be that(?)
2015-05-31 15:50:30	<--	ajhager (aajhager@moz-mcdsgi.iplsin.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-31 15:50:37	bluss	oh that issue is about exactly image
2015-05-31 15:50:57	<--	SerialVelocity (SerialVeloc@moz-attia0.cable.virginm.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-31 15:51:18	codec	damned sdl_image is broken and this take forever to compile
2015-05-31 15:52:03	<--	ogham (rally@moz-91e3hp.cable.virginm.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-31 15:52:05	-->	morton (Mibbit@moz-m3km7q.gtn.ru) has joined #rust
2015-05-31 15:52:31	-->	jviereck (Adium@moz-1tirsh.dip0.t-ipconnect.de) has joined #rust
2015-05-31 15:52:38	-->	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has joined #rust
2015-05-31 15:52:48	<--	Morten (Morten@moz-o0hr4o.bb.online.no) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-05-31 15:52:54	-->	Morten (Morten@moz-8sq5uv.bb.online.no) has joined #rust
2015-05-31 15:53:16	-->	ogham (rally@moz-91e3hp.cable.virginm.net) has joined #rust
2015-05-31 15:54:44	-->	atomic (atomic@moz-nvn.c93.7.50.IP) has joined #rust
2015-05-31 15:55:19	fkaa	codec: you can disable formats you're not using
2015-05-31 15:55:25	geri	is there a way to disable optimization for a specific function in rust?
2015-05-31 15:55:36	-->	dinfuehr (dinfuehr@moz-5n5gbo.highway.telekom.at) has joined #rust
2015-05-31 15:56:35	codec	fkaa: But should image be compiled as a dynamic library ?
2015-05-31 15:57:05	fkaa	can't answer that, i just use cargo and don't think much about it
2015-05-31 15:57:40	<--	moerk (christian@moz-00ceea.customer.tdc.net) has quit (Client exited)
2015-05-31 15:57:46	<--	JagaJaga (JagaJaga@moz-ua8.hhl.62.178.IP) has quit (Ping timeout: 121 seconds)
2015-05-31 15:59:43	<--	dinfuehr (dinfuehr@moz-5n5gbo.highway.telekom.at) has quit (Ping timeout: 121 seconds)
2015-05-31 16:00:08	Ms2ger	Not usually
2015-05-31 16:00:25	fkaa	is that compile time regression a priority?
2015-05-31 16:01:30	-->	durka42 (Adium@moz-qsuual.pa.comcast.net) has joined #rust
2015-05-31 16:01:43	codec	well I am making a toy project so there is no priority
2015-05-31 16:01:50	cow_2001	try!(File::open("foo")); doesn't work for me
2015-05-31 16:02:00	Ms2ger	Manishearth, can you prioritize it up? :)
2015-05-31 16:02:16	<--	harrisonclarke (harrisoncla@moz-uur7pt.eastlink.ca) has quit (Connection closed)
2015-05-31 16:02:17	cow_2001	says expected type is (), but i get a Result<_, _> instead
2015-05-31 16:02:43	sam113101	cow_2001: what's the return type of your function?
2015-05-31 16:03:04	VShell	cow_2001: try!() has to be used in a function that returns a Result.
2015-05-31 16:03:11	cow_2001	oh. :|
2015-05-31 16:03:23	Xirdus	when i cast u32 to i32, is there any guarantee of signedness?
2015-05-31 16:03:28	cow_2001	could you explain it a bit more?
2015-05-31 16:03:39	SpaceManiac	Xirdus: it's a bit cast
2015-05-31 16:03:52	sam113101	http://doc.rust-lang.org/stable/book/error-handling.html#using-try!
2015-05-31 16:04:06	cow_2001	thanks!
2015-05-31 16:04:20	-->	Rym (y@moz-c2u.sd4.38.217.IP) has joined #rust
2015-05-31 16:04:22	slimsag	Why is traits link at bottom of page broken? https://doc.rust-lang.org/book/enums.html
2015-05-31 16:04:24	-->	mbudde (mbudde@moz-425rg1.customer.tdc.net) has joined #rust
2015-05-31 16:04:29	fkaa	codec: meant for the core team :p
2015-05-31 16:05:19	sam113101	slimsag: it's fixed on nightly: https://doc.rust-lang.org/nightly/book/enums.html
2015-05-31 16:05:21	VShell	cow_2001: basically, try!(foo()) expands to match foo() { Err(e) => return Err(e), Ok(res) => res } - slightly more complicated than that, but, point is that it is simply "return the error or else continue".
2015-05-31 16:05:29	Xirdus	SpaceManiac: well, it only makes sense its a bit cast - but is there any explicit guarantee made by the language? im asking, because overflows are UB afaik, and its technically an overflow
2015-05-31 16:05:44	slimsag	sam113101: ah, okay, cool
2015-05-31 16:05:53	cow_2001	is there a reasonable way of unpacking Result?
2015-05-31 16:05:56	SpaceManiac	Xirdus: it's not an overflow, it's well-defined as reinterpreting the bits
2015-05-31 16:05:59	--	bentley|away is now known as bentley
2015-05-31 16:06:25	<--	jgallagher (john@moz-6ge.dhn.131.24.IP) has quit (Ping timeout: 121 seconds)
2015-05-31 16:06:26	cow_2001	outside of a function returning Result
2015-05-31 16:06:48	jshs	cow_2001: what should happen if the result is an error?
2015-05-31 16:07:01	cow_2001	not sure
2015-05-31 16:07:46	-->	Jesin (Jesin@moz-8sq.94j.16.107.IP) has joined #rust
2015-05-31 16:08:56	-->	trigen (MSX@moz-sgda69.static.versatel.nl) has joined #rust
2015-05-31 16:09:16	VShell	cow_2001: foo().unwrap() will panic!() if foo() is an Err, otherwise unpack it. that may or may not be reasonable. otherwise, there's .unwrap_or() and .unwrap_or_else() which might be useful.
2015-05-31 16:10:17	cow_2001	reading Result's reference i see .ok().expected()
2015-05-31 16:10:18	-->	kgrandon (Adium@moz-savc5e.ca.comcast.net) has joined #rust
2015-05-31 16:11:06	<--	nano (nano@moz-00j6et.dynamic.kabel-deutschland.de) has quit (Connection closed)
2015-05-31 16:11:07	starless	cow_2001: I think (and sorry if you know about this already and I'm misunderstanding) you want to do matching on it
2015-05-31 16:11:09	-->	brianloveswords (brianlovesw@moz-tq78gs.fios.verizon.net) has joined #rust
2015-05-31 16:11:15	<--	gingermusketeer (gingermuske@moz-78l86h.compute.amazonaws.com) has quit (Connection closed)
2015-05-31 16:11:25	-->	gingermusketeer (gingermuske@moz-ht8jnr.compute.amazonaws.com) has joined #rust
2015-05-31 16:11:26	-->	agjacome (agjacome@moz-40oj7a.dynamic.jazztel.es) has joined #rust
2015-05-31 16:11:44	starless	cow_2001: match my_result { Ok(value) => ..., Err(err_message) => ... }
2015-05-31 16:11:55	slimsag	If a function returns an enum with two possible values: i32 and i64, what will the size in memory of the returned value be? the max of both / 64 bits ?
2015-05-31 16:12:12	starless	cow_2001: where my_result is a variable bound to a Result
2015-05-31 16:12:19	bluss	slimsag: size of largest variant + the enum tag
2015-05-31 16:12:42	-->	hhhhhhhhhh (mike@moz-969kuj.cable.virginm.net) has joined #rust
2015-05-31 16:12:51	bluss	slimsag: so it sounds like i64 x 2 in this case, I think struct layout will force the tag to be 64-bit
2015-05-31 16:12:58	-->	iu (iu@moz-6263qv.cc.cmu.edu) has joined #rust
2015-05-31 16:13:02	slimsag	bluss: how large is the enum tag?
2015-05-31 16:13:02	VShell	cow_2001: .ok().expect("foo") will lose you what the error message actually is and still panic anyway if it's an error - .unwrap() does much the same thing but will print the error message in the Result.
2015-05-31 16:13:06	slimsag	ah, I see
2015-05-31 16:13:27	bluss	slimsag: it tries to be as small as possible. Two variants can fit in a byte
2015-05-31 16:13:44	bluss	slimsag: but for alignment reasons I think it will be u64 here
2015-05-31 16:13:45	cow_2001	hmm i see
2015-05-31 16:13:51	iu	Hi! Is it reasonable that a public method of a private module cannot have a private type in its signature?
2015-05-31 16:13:53	slimsag	okay
2015-05-31 16:14:04	bluss	slimsag: depends on platform's alignment wishes for i64
2015-05-31 16:14:19	rootnode	betawaffle: ok, I couldn't sleep without trying this... https://gist.github.com/Kintaro/087d949748a7e968927c
2015-05-31 16:14:19	cow_2001	many thanks everyone!
2015-05-31 16:14:24	rootnode	this triggers it
2015-05-31 16:14:48	-->	ajhager (aajhager@moz-mcdsgi.iplsin.sbcglobal.net) has joined #rust
2015-05-31 16:14:55	bluss	playbot: enum E { A(i32), B(i64) }  std::mem::size_of::<E>()  // slimsag
2015-05-31 16:14:56	--	Notice(playbot): 16
2015-05-31 16:15:01	betawaffle	rootnode: i was digging down to BTreeMap<MouseCommand, MouseHandler>
2015-05-31 16:15:07	<--	andresv (textual@moz-cmffkg.cable.starman.ee) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-31 16:15:08	betawaffle	which seems to trigger it too
2015-05-31 16:15:13	iu	(a private type for the whole crate; not private to the module)
2015-05-31 16:15:18	starless	cow_2001: no prob, bob
2015-05-31 16:15:54	-->	JagaJaga (JagaJaga@moz-ua8.hhl.62.178.IP) has joined #rust
2015-05-31 16:15:54	slimsag	bluss: so that is 8 bytes for the variant and 8 for the tag (index for A/B, right?)
2015-05-31 16:15:59	bluss	yes
2015-05-31 16:15:59	-->	maxjacobson (maxjacobson@moz-nc0r8s.dyn.optonline.net) has joined #rust
2015-05-31 16:16:07	slimsag	bluss: okay, great, thank you! :)
2015-05-31 16:16:19	bluss	slimsag: there's layout optimizations for nonnullable types such as &T
2015-05-31 16:16:23	rootnode	betawaffle: yeah, this version triggers it without BTreeMap
2015-05-31 16:16:32	rootnode	so we can exclude that as the culprit I think
2015-05-31 16:16:35	bluss	slimsag: so Option<&T> is same size as &T
2015-05-31 16:16:38	betawaffle	yea
2015-05-31 16:17:01	<--	dkreuter (knizz@moz-fes.iga.129.213.IP) has quit (Quit: Ex-Chat)
2015-05-31 16:17:17	iu	In other words, is this reasonable? https://play.rust-lang.org/?gist=35e66a46f43e1db266de&version=stable
2015-05-31 16:17:21	<--	nicknikolov (nicknikolov@moz-27s.0d8.214.90.IP) has quit (Connection closed)
2015-05-31 16:17:35	slimsag	bluss: um, wouldn't the max variant for Option be T itself anyway?
2015-05-31 16:17:44	slimsag	oh, but the tag index
2015-05-31 16:17:50	slimsag	interesting
2015-05-31 16:18:23	-->	grodan (Mibbit@moz-o5eg8b.bredband.comhem.se) has joined #rust
2015-05-31 16:18:58	bluss	slimsag: what's cooler is that rust is so keen on this optimization it digs into types recursively to find a nonnullable pointer or field
2015-05-31 16:19:00	rootnode	added it to the issue
2015-05-31 16:19:15	bluss	slimsag: so Option<Vec<T>> is the same size as Vec<T>
2015-05-31 16:19:37	-->	nercury (nercury@moz-8h0btl.static.zebra.lt) has joined #rust
2015-05-31 16:19:41	slimsag	bluss: so at the lowest level how is Option<&T> being represented when it is None rather than Some(&T) ?
2015-05-31 16:19:48	bluss	a null
2015-05-31 16:19:54	slimsag	Ahhh, cool! :D
2015-05-31 16:20:08	Xirdus	slimsag: None is all zeroes, Some is not-all-zeroes
2015-05-31 16:20:26	-->	nicknikolov (nicknikolov@moz-27s.0d8.214.90.IP) has joined #rust
2015-05-31 16:20:34	-->	niconii (nicole@moz-r8dlmh.frgo.qwest.net) has joined #rust
2015-05-31 16:20:34	--	Mode #rust [+o niconii] by ChanServ
2015-05-31 16:20:37	slimsag	but yet the null pointer isn't exposed to the developer, this is cool!
2015-05-31 16:20:54	Xirdus	slimsag: theres no such thing as null pointer in Rust ;)
2015-05-31 16:21:06	slimsag	:D
2015-05-31 16:21:16	Xirdus	even raw pointers cant be null
2015-05-31 16:21:21	starless	So, I'm having some trouble figuring out what I should do to appease the lifetime checker with this code: http://is.gd/79s8V5 ;; I know the lifetime of the variable "formatted" is going to be from its declaration to the last line of the function "parse_user_input", and that's a problem because my return value indirectly depends on "formatted", but I don't know how to extend the lifetime of the data bound to "formatted" appropriately (or at all, rea
2015-05-31 16:21:21	starless	lly).
2015-05-31 16:21:21	tilpner	No?
2015-05-31 16:21:22	-->	maximih (maximih@moz-0r2bjb.bredband.telia.com) has joined #rust
2015-05-31 16:21:26	tilpner	playbot: 0 as *mut ()
2015-05-31 16:21:27	Xirdus	...or rather, shouldnt be null, in well-formed code
2015-05-31 16:21:28	--	Notice(playbot): 0x0
2015-05-31 16:21:32	bluss	raw poitneers can be null fine
2015-05-31 16:21:41	simukis	playbot: ::std::ptr::null()
2015-05-31 16:21:42	--	Notice(playbot): <anon>:9:9: 9:25 error: unable to infer enough type information about `_`; type annotations required [E0282]
2015-05-31 16:21:42	--	Notice(playbot): <anon>:9         ::std::ptr::null()
2015-05-31 16:21:42	--	Notice(playbot): output truncated; full output at: http://bit.ly/1PX8O66
2015-05-31 16:22:31	-->	jgallagher (john@moz-6ge.dhn.131.24.IP) has joined #rust
2015-05-31 16:22:33	bluss	raw pointers are not among the nonnullable things in rust. Option<*mut T> is 2 x pointer size for that reason
2015-05-31 16:22:36	-->	futile (felix@moz-cmcd12.unity-media.net) has joined #rust
2015-05-31 16:22:45	bluss	(talking about size_of)
2015-05-31 16:23:00	slimsag	where are raw pointers documented/discussed so I can read about them?
2015-05-31 16:23:12	Xirdus	...wait
2015-05-31 16:23:17	Xirdus	was it always like that?
2015-05-31 16:23:24	bluss	I'm sure
2015-05-31 16:23:44	bluss	slimsag: http://doc.rust-lang.org/book/raw-pointers.html 
2015-05-31 16:23:51	<--	}ls{ (uhelp@moz-nak74f.dip0.t-ipconnect.de) has quit (Quit: User terminated by real life interrupt)
2015-05-31 16:23:54	-->	fengshaun (fengshaun@moz-oagll1.cpe.pppoe.ca) has joined #rust
2015-05-31 16:23:58	slimsag	thank you!
2015-05-31 16:24:12	@niconii	!raw pointers
2015-05-31 16:24:14	-->	Jessin (Jesin@moz-qb9.79h.16.107.IP) has joined #rust
2015-05-31 16:24:19	bluss	slimsag: a number of operations on raw pointers are guarded with the unsafe qualifier, but not creating, comparing
2015-05-31 16:24:23	Xirdus	i saw an issue in winapi-rs that said some args in some functions should take Option<T*> instead of T* because of ptrs being non-nullable
2015-05-31 16:24:29	@niconii	!learn raw pointers = http://doc.rust-lang.org/book/raw-pointers.html
2015-05-31 16:24:29	+rustbot	Learned factoid 'raw pointers'.
2015-05-31 16:24:32	rootnode	steveklabnik: got a riddle for you https://github.com/rust-lang/rust/issues/25750
2015-05-31 16:24:37	bluss	Xirdus: maybe it was function pointers?
2015-05-31 16:24:40	<--	Soni (SoniEx2@moz-7ho.p0a.104.187.IP) has quit (Ping timeout: 121 seconds)
2015-05-31 16:24:48	bluss	!raw pointers
2015-05-31 16:24:48	+rustbot	http://doc.rust-lang.org/book/raw-pointers.html
2015-05-31 16:25:08	slimsag	so raw pointers are inside unsafe code blocks, so you can't have null pointers in safe rust code then?
2015-05-31 16:25:15	Xirdus	bluss: definitely struct pointers
2015-05-31 16:25:20	bluss	slimsag: no
2015-05-31 16:25:23	@niconii	slimsag: *dereferencing* raw pointers is unsafe
2015-05-31 16:25:25	<--	maximih (maximih@moz-0r2bjb.bredband.telia.com) has quit (Ping timeout: 121 seconds)
2015-05-31 16:25:37	@niconii	slimsag: raw pointers themselves are safe as long as you don't try to dereference
2015-05-31 16:25:38	slimsag	ahh, okay
2015-05-31 16:25:40	bluss	slimsag: raw pointers are fine to have everywhere. It's certain operations that are blocked with unsafe
2015-05-31 16:25:44	<--	duesenfranz_ (jona@moz-711djm.tirol.surfer.at) has quit (Client exited)
2015-05-31 16:25:52	<--	durka42 (Adium@moz-qsuual.pa.comcast.net) has quit (Quit: Leaving.)
2015-05-31 16:25:57	slimsag	so even though they can be null, they can't crash your program
2015-05-31 16:25:59	-->	agjacome_ (agjacome@moz-kt22hl.dynamic.jazztel.es) has joined #rust
2015-05-31 16:26:02	slimsag	(in safe rust)
2015-05-31 16:26:11	@niconii	slimsag: right, in safe rust
2015-05-31 16:26:13	<--	Jesin (Jesin@moz-8sq.94j.16.107.IP) has quit (Ping timeout: 121 seconds)
2015-05-31 16:26:25	roido	slimsag: you wouldn't be able to compile it in safe rust
2015-05-31 16:26:34	<--	Jessin (Jesin@moz-qb9.79h.16.107.IP) has quit (Quit: Leaving)
2015-05-31 16:26:38	slimsag	awesome
2015-05-31 16:27:44	-->	duesenfranz_ (jona@moz-711djm.tirol.surfer.at) has joined #rust
2015-05-31 16:27:45	<--	vortex (vortex@moz-skqfhn.novotelecom.ru) has quit (Ping timeout: 121 seconds)
2015-05-31 16:27:52	<--	mbudde (mbudde@moz-425rg1.customer.tdc.net) has quit (Ping timeout: 121 seconds)
2015-05-31 16:28:06	bluss	pointers aren't either valid or null. They can be dangling, unaligned or other broken stuff
2015-05-31 16:28:21	bluss	and you'll avoid that with safe rust
2015-05-31 16:28:23	<--	tincan (tincan@moz-05q.1nm.133.145.IP) has quit (Connection closed)
2015-05-31 16:28:23	-->	maxymajzr (maxy@moz-5o2c6t.net.t-com.hr) has joined #rust
2015-05-31 16:28:51	<--	agjacome (agjacome@moz-40oj7a.dynamic.jazztel.es) has quit (Ping timeout: 121 seconds)
2015-05-31 16:28:53	-->	dcb (textual@moz-j72nfe.ca.comcast.net) has joined #rust
2015-05-31 16:29:07	-->	ctennis (ctennis@moz-ej0.24t.142.67.IP) has joined #rust
2015-05-31 16:29:07	--	bentley is now known as bentley|away
2015-05-31 16:29:51	-->	Jesin (Jesin@moz-qb9.79h.16.107.IP) has joined #rust
2015-05-31 16:29:57	Remram	RustDT requires the Rust 'src' directory... I don't get that from binary releases or multirust, correct?
2015-05-31 16:30:02	maxymajzr	good evening, just wanted to drop a huge bow to guys working on rust, docs are absolutely amazing and even though i've been fiddling for only 12 hours - i find the language amazing. awesome work
2015-05-31 16:30:07	-->	cakecatz (cakecatz@moz-edrvuc.sannet.ne.jp) has joined #rust
2015-05-31 16:30:15	Remram	I need to put the source distribution somewhere?
2015-05-31 16:30:42	-->	imjacobclark (Mibbit@moz-5g68lp.range86-156.btcentralplus.com) has joined #rust
2015-05-31 16:30:56	<--	alaska (alaska@moz-8bdjem.fios.verizon.net) has quit (A TLS packet with unexpected length was received.)
2015-05-31 16:30:57	duesenfranz_	Remram: you can clone the github repository, there's a command to do this without downloading all the history...
2015-05-31 16:30:58	-->	agjacome (agjacome@moz-uhnlq3.dynamic.jazztel.es) has joined #rust
2015-05-31 16:31:03	imjacobclark	Using Hyper, is there a way to count how long it takes for the request to come back?
2015-05-31 16:31:12	<--	agjacome_ (agjacome@moz-kt22hl.dynamic.jazztel.es) has quit (Ping timeout: 121 seconds)
2015-05-31 16:31:27	Remram	I guess I could also use Git yes
2015-05-31 16:31:33	<--	giucam (giucam@moz-iv0nnc.bb.dnainternet.fi) has quit (Ping timeout: 121 seconds)
2015-05-31 16:31:52	reem	imjacobclark: record the time when you made the request, then the time when you got the response.
2015-05-31 16:32:01	reem	There's no built in way
2015-05-31 16:32:19	betawaffle	rootnode: i reduced it even further
2015-05-31 16:32:25	starless	be back
2015-05-31 16:32:37	<--	starless (starless@moz-u9gmm1.res.rr.com) has quit (Quit: Leaving)
2015-05-31 16:32:41	bluss	“Rust’s *const T and *mut T are similar to C’s const T* and T*, respectfully”  //respect, nice
2015-05-31 16:32:54	rootnode	betawaffle: what? how?
2015-05-31 16:33:04	betawaffle	look at the issue
2015-05-31 16:33:18	imjacobclark	reem: how would I know when I got the resonse?
2015-05-31 16:33:41	reem	imjacobclark: hyper is synchronous
2015-05-31 16:33:53	reem	So when you have a response, the response came back.
2015-05-31 16:33:54	imjacobclark	reem, thanks.
2015-05-31 16:34:04	reem	Sure :)
2015-05-31 16:34:29	betawaffle	it's somehow the combination of the closure that take the trait object, in a box, twice, in a struct
2015-05-31 16:34:55	rootnode	wow
2015-05-31 16:35:05	rootnode	I can't be the first one that tried to use that
2015-05-31 16:35:15	betawaffle	well...
2015-05-31 16:35:20	betawaffle	you can be
2015-05-31 16:35:36	 *	betawaffle awards rootnode a certificate
2015-05-31 16:35:47	<--	ajhager (aajhager@moz-mcdsgi.iplsin.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-31 16:36:01	-->	alaska_ (alaska@moz-8bdjem.fios.verizon.net) has joined #rust
2015-05-31 16:36:55	 *	rootnode frames it and puts it up on the wall
2015-05-31 16:37:32	-->	mou (donwilliam@moz-lq9kg8.cpe.webspeed.dk) has joined #rust
2015-05-31 16:37:34	<--	alaska_ (alaska@moz-8bdjem.fios.verizon.net) has quit (A TLS packet with unexpected length was received.)
2015-05-31 16:37:55	--	zz_NameNotFound is now known as NameNotFound
2015-05-31 16:39:03	<--	csherratt (colin@moz-357qdq.cable.teksavvy.com) has quit (Quit: Konversation terminated!)
2015-05-31 16:39:21	-->	Kingsquee (kingsley@moz-3fm07c.bchsia.telus.net) has joined #rust
2015-05-31 16:40:20	<--	xcombelle (xcombelle@moz-o9pb7i.abo.wanadoo.fr) has quit (Quit: Leaving)
2015-05-31 16:40:34	<--	SneakySnake (nya@moz-i9is4u.pool.telekom.hu) has quit (Quit: Leaving)
2015-05-31 16:41:03	-->	p32blo (p32blo@moz-u03k25.dsl.telepac.pt) has joined #rust
2015-05-31 16:41:26	<--	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-31 16:41:28	<--	jviereck (Adium@moz-1tirsh.dip0.t-ipconnect.de) has quit (Quit: Leaving.)
2015-05-31 16:41:58	bluss	nice work on minification both
2015-05-31 16:43:04	<--	namespace (user@moz-na89d2.wa.frontiernet.net) has quit (Quit: Leaving)
2015-05-31 16:43:09	-->	chippers (chip@moz-26d.2gk.254.199.IP) has joined #rust
2015-05-31 16:43:46	<--	tigrou3tac (fabien@moz-gdonfo.fbx.proxad.net) has quit (Ping timeout: 121 seconds)
2015-05-31 16:44:50	<--	ty (ty@moz-i6c4to.wa.comcast.net) has quit (Quit: leaving)
2015-05-31 16:45:49	<--	Cindela (cindela@moz-dlkpia.bb.dnainternet.fi) has quit (Ping timeout: 121 seconds)
2015-05-31 16:46:08	<--	AopicieR (AopicieR@moz-gjn7ie.dip0.t-ipconnect.de) has quit (Quit: leaving)
2015-05-31 16:48:03	-->	nham (nham@moz-lglsfe.il.comcast.net) has joined #rust
2015-05-31 16:49:07	rootnode	betawaffle: any idea on how to work around this for the moment?
2015-05-31 16:50:14	betawaffle	rootnode: well, not knowing the actual cause... not sure
2015-05-31 16:50:44	betawaffle	oh, yes
2015-05-31 16:50:51	betawaffle	rootnode: specify the lifetimes
2015-05-31 16:51:00	betawaffle	lemme show you
2015-05-31 16:51:49	betawaffle	https://gist.github.com/betawaffle/42f3b151a84940d449eb
2015-05-31 16:52:12	betawaffle	so, you'll need explicit lifetimes on the boxed functions
2015-05-31 16:52:25	betawaffle	the trait objects in them*
2015-05-31 16:52:44	rootnode	oh god...that's gonna be...fun
2015-05-31 16:52:50	<--	Guest21554 (ali@moz-mvj.5j5.170.107.IP) has quit (Quit: ohnooooooo)
2015-05-31 16:53:23	<--	tomprogrammer (thomas@moz-f6fdbb.tr5r.qept.4dd0.2001.IP) has quit (Quit: WeeChat 1.2)
2015-05-31 16:53:33	bluss	hm isn't there a better way
2015-05-31 16:53:34	-->	csherratt (colin@moz-357qdq.cable.teksavvy.com) has joined #rust
2015-05-31 16:53:38	-->	ali (ali@moz-mvj.5j5.170.107.IP) has joined #rust
2015-05-31 16:53:40	-->	fkaa_ (tundmatu@moz-501od2.business.telia.com) has joined #rust
2015-05-31 16:54:00	<--	lerc (quassel@moz-nitv9j.telstraclear.net) has quit (Connection closed)
2015-05-31 16:54:14	cow_2001	i am trying to let v: Vec<&str> = v.iter().map(|s| s.split("\t").collect()[1]);
2015-05-31 16:54:19	-->	bmcorser (uid18416@moz-o4s304.ealing.irccloud.com) has joined #rust
2015-05-31 16:54:22	cow_2001	i don't know what i'm doing wrong
2015-05-31 16:54:27	imjacobclark	how can i convert what an enum returns to a string?
2015-05-31 16:54:36	<--	kmicu (kmicu@moz-uga.edn.218.91.IP) has quit (Client exited)
2015-05-31 16:54:38	--	ali is now known as Guest51437
2015-05-31 16:54:47	bmcorser	ello
2015-05-31 16:54:55	<--	kaeluka (kaeluka@moz-6cbr2p.cust.bredbandsbolaget.se) has quit (Client exited)
2015-05-31 16:54:59	<--	munksgaard (munksgaard@moz-urnkl5.u.parknet.dk) has quit (Ping timeout: 121 seconds)
2015-05-31 16:55:02	cow_2001	basically, i want to take the second element in a split of each element in a vector of strings
2015-05-31 16:55:06	bmcorser	pythonista here, taking first steps into rust
2015-05-31 16:55:16	cow_2001	bmcorser: me too :D
2015-05-31 16:55:18	betawaffle	bmcorser: welcome
2015-05-31 16:55:22	-->	A205B064 (A205B064@moz-9s9nhk.nap.wideopenwest.com) has joined #rust
2015-05-31 16:55:27	bmcorser	cow_2001: lets be friends :)
2015-05-31 16:55:33	bmcorser	hello betawaffle 
2015-05-31 16:55:36	cow_2001	bmcorser: http://lucumr.pocoo.org/2015/5/27/rust-for-pythonistas/
2015-05-31 16:56:24	bluss	rootnode: ok, using for<'a> Fn(&'a Trait) is just the same thing, same ice
2015-05-31 16:56:28	-->	kaeluka (kaeluka@moz-6cbr2p.cust.bredbandsbolaget.se) has joined #rust
2015-05-31 16:56:58	-->	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has joined #rust
2015-05-31 16:56:59	-->	nbg (nbg@moz-gen.aeo.146.5.IP) has joined #rust
2015-05-31 16:57:00	<--	fkaa (tundmatu@moz-501od2.business.telia.com) has quit (Ping timeout: 121 seconds)
2015-05-31 16:57:10	<--	p32blo (p32blo@moz-u03k25.dsl.telepac.pt) has quit (Ping timeout: 121 seconds)
2015-05-31 16:57:26	bluss	cow_2001: you're not collecting the outer iterator btw
2015-05-31 16:58:00	bluss	cow_2001: and the inner .collect() should be best be avoided
2015-05-31 16:58:02	bmcorser	cow_2001: i read that one .. i think adjusting to types actually mattering is going to be hard coming from python (unless you wrote in a typed lang before)
2015-05-31 16:58:53	cow_2001	bmcorser: i've been learning a bit of haskell
2015-05-31 16:59:03	<--	mkpankov` (user@moz-upl.dee.149.83.IP) has quit (Ping timeout: 121 seconds)
2015-05-31 16:59:07	cow_2001	bluss: what's the alternative?
2015-05-31 16:59:29	bluss	cow_2001: only taking the second element without iterating out all splits and allocating a vector
2015-05-31 16:59:41	bluss	the second element is .nth(1)  on an iterator, but you get an Option<&str>
2015-05-31 17:00:33	bmcorser	cow_2001: i looked at the language a few years ago... it looked really great (and i was attracted to the speed) so when i heard rust had a similar type system (and meant i could write low-level without becoming a C++ guy) i absolutely came running
2015-05-31 17:01:24	<--	Shackra (Jorge@moz-7bh.ng6.177.186.IP) has quit (Ping timeout: 121 seconds)
2015-05-31 17:02:35	-->	harrisonclarke (harrisoncla@moz-uur7pt.eastlink.ca) has joined #rust
2015-05-31 17:02:49	<--	atomic (atomic@moz-nvn.c93.7.50.IP) has quit (Connection closed)
2015-05-31 17:02:58	<--	fengshaun (fengshaun@moz-oagll1.cpe.pppoe.ca) has quit (Quit: bye bye!)
2015-05-31 17:03:02	-->	atomic (atomic@moz-5uk5u4.tor-exit.network) has joined #rust
2015-05-31 17:03:04	bmcorser	i have a question for the rustaceans in the channel: i want to use modules to break up my code into smaller files. one thing i do in python is declare variables globally in a module, then import the module and access the variables from higher up like my_module.my_variable
2015-05-31 17:03:05	<--	atomic (atomic@moz-5uk5u4.tor-exit.network) has quit (Connection closed)
2015-05-31 17:03:07	-->	atomic_ (atomic@moz-5uk5u4.tor-exit.network) has joined #rust
2015-05-31 17:03:38	bmcorser	this keeps my higher up modules free of lots of variable definitions
2015-05-31 17:03:54	WindowsBunny	bmcorser: avoid global variables
2015-05-31 17:04:43	<--	thelink2012 (Mibbit@moz-ig7.006.59.187.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-31 17:04:51	WindowsBunny	bmcorser: but you can certainly put variables into modules
2015-05-31 17:04:57	imjacobclark	is there a way to count an elapsed time in Rust?
2015-05-31 17:04:58	bmcorser	WindowsBunny: i hear you, but since my variables are only global to a module ...
2015-05-31 17:04:59	sp3d	hm, is there a reason for std::env::ArgsOs to allocate instead of returning slices out of argv?
2015-05-31 17:05:15	sp3d	args_os*, rather, I guess
2015-05-31 17:05:22	WindowsBunny	bmcorser: rust doesn't have a global scope/namespace
2015-05-31 17:05:32	-->	gopar (gopar@moz-5039uj.ca.comcast.net) has joined #rust
2015-05-31 17:05:55	bluss	sp3d: I think it's that argv is often overwritten
2015-05-31 17:06:06	-->	p1start (p1start@moz-nftjhe.org) has joined #rust
2015-05-31 17:06:08	bmcorser	i want to be able to write code like parent_mod_fn(child_mod::variable)
2015-05-31 17:06:16	-->	lenstr (lenstr@moz-897.vju.25.171.IP) has joined #rust
2015-05-31 17:06:21	WindowsBunny	bmcorser: and the recommendation against static variables has nothing to do with scope, but rather a significant amount of people consider it poor design
2015-05-31 17:06:25	WindowsBunny	bmcorser: well sure, why not
2015-05-31 17:06:29	@niconii	bmcorser: global variables are usually not a good idea in general, there's usually more elegant ways to do it
2015-05-31 17:06:34	-->	thiblahute (tsaunier@moz-rkc6r5.fbx.proxad.net) has joined #rust
2015-05-31 17:06:50	<--	harrisonclarke (harrisoncla@moz-uur7pt.eastlink.ca) has quit (Ping timeout: 121 seconds)
2015-05-31 17:06:56	sp3d	bluss: in the memory space of Rust programs? by whom?
2015-05-31 17:07:16	WindowsBunny	bmcorser: global variables are poor design because it makes things impure in that functions behave differently based on factors other than their inputs
2015-05-31 17:07:16	bmcorser	niconii: open to ideas :)
2015-05-31 17:07:29	WindowsBunny	bmcorser: also thread safety issues
2015-05-31 17:08:12	WindowsBunny	bmcorser: constants are totally okay though, its only mutable static variables that are usually bad design
2015-05-31 17:08:28	bluss	sp3d: don't know exactly
2015-05-31 17:08:28	-->	agjacome_ (agjacome@moz-4ge38l.dynamic.jazztel.es) has joined #rust
2015-05-31 17:08:40	<--	agjacome (agjacome@moz-uhnlq3.dynamic.jazztel.es) has quit (Ping timeout: 121 seconds)
2015-05-31 17:09:06	-->	thelink2012 (Mibbit@moz-etr.cua.214.186.IP) has joined #rust
2015-05-31 17:09:22	-->	survi (philip@moz-pbmbkg.dip0.t-ipconnect.de) has joined #rust
2015-05-31 17:10:23	bmcorser	WindowsBunny: i'm just using modules to namespace my variables
2015-05-31 17:10:32	bmcorser	i want to find a way to do that in rust
2015-05-31 17:11:01	cow_2001	how about: let v: Vec<&str> = v.iter().map(|s| s.trim_left_matches("\t")).collect();
2015-05-31 17:11:06	cow_2001	it won't work
2015-05-31 17:11:26	bluss	please tell what the error message is
2015-05-31 17:11:36	@niconii	bmcorser: your needs might be better met by using structs
2015-05-31 17:11:42	-->	gsingh93 (gulshan@moz-ln1ktu.st3l.iv8o.0004.2601.IP) has joined #rust
2015-05-31 17:11:59	cow_2001	there is no error message
2015-05-31 17:12:10	bmcorser	can i give my use case in more detail?
2015-05-31 17:12:11	cow_2001	it just won't discard
2015-05-31 17:12:14	<--	kaksmet (kaksmet@moz-n1sp9f.se.alltele.net) has quit (Connection closed)
2015-05-31 17:12:17	@niconii	bmcorser: sure
2015-05-31 17:12:32	extempore		
2015-05-31 17:12:36	cow_2001	oh. oops!
2015-05-31 17:13:08	<--	extempore (paulp@moz-oqpvrb.ptld.qwest.net) has quit (Quit: leaving)
2015-05-31 17:13:29	bmcorser	i'm making a CLI using clap-rs
2015-05-31 17:13:58	<--	Jesin (Jesin@moz-qb9.79h.16.107.IP) has quit (Quit: Leaving)
2015-05-31 17:14:03	SpaceManiac	imjacobclark: take a look at the `time` crate
2015-05-31 17:14:15	bmcorser	to define subcommands i need to make fairly long-winded chained calls to App and SubCommand 
2015-05-31 17:14:45	WindowsBunny	bmcorser: You already can put your static variables in modules
2015-05-31 17:15:09	bmcorser	i want to put these SubCommand calls into their own module (there won't be anything else in that module) and reference it from the "parent" module
2015-05-31 17:15:12	WindowsBunny	bmcorser: If you understand how to use modules, then you should have no problem putting static variables in modules
2015-05-31 17:15:13	-->	zynisch_o7 (zynisch_o7@moz-6eh1ju.dyn.optonline.net) has joined #rust
2015-05-31 17:16:18	bmcorser	WindowsBunny: it's not modules i'm having trouble with :)
2015-05-31 17:16:28	imjacobclark	How can I get the difference between two SteadyTimes in Rust time lib?
2015-05-31 17:16:30	slimsag	If a crate internally implements the Drop trait for a type T.. and someone `use the_crate::T;` but not `use Drop;` (?) will the drop still run?
2015-05-31 17:17:07	bluss	slimsag: yes
2015-05-31 17:17:33	duesenfranz_	bmcorser: can you put a minimal example on play.rust-lang.org of what you want to achieve/what doesn't work?
2015-05-31 17:17:35	bluss	slimsag: Drop is in the prelude though. But destructors run whether in scope or not
2015-05-31 17:17:35	yati	bluss, So it didn't work; `type Example<T> where T: Num = Vec<T>` doesn't let me just do `fn foo(x: &Example)...` it needs a type arg on Example
2015-05-31 17:17:40	-->	AngelOfSol_ (AngelOfSol@moz-9l0nls.fios.verizon.net) has joined #rust
2015-05-31 17:17:47	bmcorser	just not sure that i want to use static for something that is just there to parse command line args on invocation (and won't be used in the rest of the program)
2015-05-31 17:18:00	slimsag	bluss: "prelude"?
2015-05-31 17:18:08	bmcorser	duesenfranz_: i can if it supports multiple files ;)
2015-05-31 17:18:14	duesenfranz_	slimsag: stuff that is used by default
2015-05-31 17:18:19	WindowsBunny	bmcorser: modules don't need multiple files
2015-05-31 17:18:21	slimsag	ah, okay
2015-05-31 17:18:27	WindowsBunny	bmcorser: You can define the contents of a module inline
2015-05-31 17:18:28	bluss	yati: aha.. I had never tried. Not sure if it's possible to be this convenient in rust unfortunately
2015-05-31 17:18:40	bluss	slimsag: http://doc.rust-lang.org/std/prelude/
2015-05-31 17:18:45	bmcorser	WindowsBunny: thanks
2015-05-31 17:18:51	bmcorser	duesenfranz_: ok give me a se
2015-05-31 17:18:53	bmcorser	*sec
2015-05-31 17:19:15	<--	zynisch_o7 (zynisch_o7@moz-6eh1ju.dyn.optonline.net) has quit (Ping timeout: 121 seconds)
2015-05-31 17:19:16	-->	ty (ty@moz-i6c4to.wa.comcast.net) has joined #rust
2015-05-31 17:19:44	ty	burntsushi: are you online?
2015-05-31 17:19:48	WindowsBunny	playbot: mod foo{pub fn bar(){println!("hi bmcorser")}} foo::bar()
2015-05-31 17:19:49	--	Notice(playbot): hi bmcorser
2015-05-31 17:19:49	--	Notice(playbot): ()
2015-05-31 17:19:53	burntsushi	ty: hi!
2015-05-31 17:20:01	ty	hey, I have some bad news
2015-05-31 17:20:01	duesenfranz_	bmcorser: something like this works tough http:://is.gd/awAqQf
2015-05-31 17:20:03	<--	AngelOfSol (AngelOfSol@moz-9l0nls.fios.verizon.net) has quit (Ping timeout: 121 seconds)
2015-05-31 17:20:08	<--	thelink2012 (Mibbit@moz-etr.cua.214.186.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-31 17:20:13	burntsushi	ty: what's that?
2015-05-31 17:20:13	WindowsBunny	duesenfranz_: You need to work on your url skills
2015-05-31 17:20:15	ty	burntsushi: bincode and cbor have a really bad class of bug
2015-05-31 17:20:18	yati	bluss, I see :D It seems that intuitively nothing should prevent it, though.
2015-05-31 17:20:21	ty	burntsushi: https://github.com/BurntSushi/rust-cbor/pull/4
2015-05-31 17:20:27	burntsushi	ty: oh, ya, i saw your rustc-serialize issue
2015-05-31 17:20:35	duesenfranz_	WindowsBunny: yeah right, http is not a module....
2015-05-31 17:20:40	cow_2001	this is frustrating
2015-05-31 17:20:44	cow_2001	i don't know where to look
2015-05-31 17:20:56	bluss	yati: it's a hidden type parameter, that would be weird
2015-05-31 17:21:04	ty	burntsushi: yeah... I've looked into every other possible way to mitigate this, but changing rustc-serialize is the only way I think it can be fixed
2015-05-31 17:21:08	-->	kent (kent@moz-nd2iqs.fl.atlanticbb.net) has joined #rust
2015-05-31 17:21:36	<--	brianloveswords (brianlovesw@moz-tq78gs.fios.verizon.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-31 17:21:40	bmcorser	http://is.gd/AHeRuQ
2015-05-31 17:21:44	ty	burntsushi: without the change, we basically can't advocate using our libraries to decode from a public stream
2015-05-31 17:21:48	-->	brianloveswords (brianlovesw@moz-tq78gs.fios.verizon.net) has joined #rust
2015-05-31 17:22:08	ty	burntsushi: which would be a huge shame, because I invented bincode for game server networking 
2015-05-31 17:22:16	bmcorser	duesenfranz_: gotcha
2015-05-31 17:22:17	-->	nodweber (nodweber@moz-knt.fgq.178.5.IP) has joined #rust
2015-05-31 17:22:32	duesenfranz_	bmcorser: you might want to read http://doc.rust-lang.org/book/const-and-static.html
2015-05-31 17:23:01	 *	duesenfranz_ is happy he got that url right
2015-05-31 17:23:24	<--	amnn (amnn@moz-ro1qqu.ox.ac.uk) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-31 17:23:31	bmcorser	:)
2015-05-31 17:23:41	-->	paupau (grrrr@moz-35edek.ca.comcast.net) has joined #rust
2015-05-31 17:23:42	-->	thor1 (thor@moz-n7n1a4.res.rr.com) has joined #rust
2015-05-31 17:23:45	bmcorser	psudeonaytodim on the mind
2015-05-31 17:23:54	-->	agjacome (agjacome@moz-v8jokv.dynamic.jazztel.es) has joined #rust
2015-05-31 17:23:55	bmcorser	or whatever it's called
2015-05-31 17:24:04	eddyb	that page is not great, it doesn't discourage static mut enough
2015-05-31 17:24:08	-->	fabianvf (fabianvf@moz-fjqmui.va.comcast.net) has joined #rust
2015-05-31 17:24:21	eddyb	static mut is prone to UB even in single-threaded code
2015-05-31 17:24:39	bmcorser	duesenfranz_: the thing i'm thinking about is the thing living for the lifetime of my program
2015-05-31 17:24:48	<--	brianloveswords (brianlovesw@moz-tq78gs.fios.verizon.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-31 17:24:50	<--	survi (philip@moz-pbmbkg.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2015-05-31 17:24:53	<--	flavius (flavius@moz-u9kqrk.graz.surfer.at) has quit (Ping timeout: 121 seconds)
2015-05-31 17:25:03	-->	SerialVelocity (SerialVeloc@moz-attia0.cable.virginm.net) has joined #rust
2015-05-31 17:25:11	-->	amnn (amnn@moz-ro1qqu.ox.ac.uk) has joined #rust
2015-05-31 17:25:13	bmcorser	i mean it's not a major issue at this stage, but would like to know if there's a better way
2015-05-31 17:25:15	<--	kent (kent@moz-nd2iqs.fl.atlanticbb.net) has quit (Ping timeout: 121 seconds)
2015-05-31 17:25:43	<--	agjacome_ (agjacome@moz-4ge38l.dynamic.jazztel.es) has quit (Ping timeout: 121 seconds)
2015-05-31 17:25:51	WindowsBunny	bmcorser: Well yes, don't use a static variable
2015-05-31 17:25:55	bmcorser	Paamayim Nekudotayim
2015-05-31 17:26:12	WindowsBunny	bmcorser: Instead you can pass around references to variables, or even pass around a struct containing your state
2015-05-31 17:26:31	eddyb	methods on a state struct is one of the more ergonomic patterns
2015-05-31 17:26:34	<--	ukarlsson (ukarlsson@moz-jhs6q1.cust.bredbandsbolaget.se) has quit (Ping timeout: 121 seconds)
2015-05-31 17:26:40	cow_2001	bmcorser: O_o
2015-05-31 17:26:44	cow_2001	bmcorser: hebrew
2015-05-31 17:26:48	yati	bluss, Now that I think about it, yes. In the back of my mind, I was always thinking about how I can do `let x: Vec<_> = ....collect()` but that is very different.
2015-05-31 17:26:51	cow_2001	bmcorser: that's a php weirdness
2015-05-31 17:26:53	bmcorser	cow_2001: :) the PHP guy
2015-05-31 17:26:58	WindowsBunny	ew PHP
2015-05-31 17:27:02	<--	maxjacobson (maxjacobson@moz-nc0r8s.dyn.optonline.net) has quit (Client exited)
2015-05-31 17:27:20	bmcorser	⇐ maxjacobson quit at the mention of php
2015-05-31 17:27:39	cow_2001	i have no clue how to take the rightside of a split when doing that split on each string inside a vector
2015-05-31 17:27:46	<--	Quanttek (quassel@moz-25k96c.6fkd.dvrb.8108.2a02.IP) has quit (Ping timeout: 121 seconds)
2015-05-31 17:27:51	-->	kimwonyong (kimwonyong@moz-gfp.vhi.163.221.IP) has joined #rust
2015-05-31 17:28:10	<--	fabianvf (fabianvf@moz-fjqmui.va.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-31 17:28:17	ty	burntsushi: what do you think of my proposed fix?
2015-05-31 17:28:21	<--	dpc (dpc@moz-t6gr4b.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-31 17:28:45	bmcorser	WindowsBunny duesenfranz_ sounds like i should just use pub static and stop worrying about it :)
2015-05-31 17:28:47	burntsushi	ty: i'm trying to grok it. how does specifying the capacity prevent oom?
2015-05-31 17:29:02	-->	cholcombe (chris@moz-mtfab9.or.comcast.net) has joined #rust
2015-05-31 17:29:04	cow_2001	bluss: could you help me with this? 
2015-05-31 17:29:22	ty	it lets the decoder (cbor or bincode) be more conservative with the capacity
2015-05-31 17:29:25	duesenfranz_	bmcorser: if unsure, use const instead! (sorry 'bout my bad example)...
2015-05-31 17:30:08	ty	right now cbor believes that it is decoding a several-billion large array, so it has the decoder pre-allocate all of that space
2015-05-31 17:30:11	WindowsBunny	bmcorser: How about you write some basic functioning code first, then we'll tell you have awful your code is and how to improve it? :D
2015-05-31 17:30:22	-->	brianloveswords (brianlovesw@moz-tq78gs.fios.verizon.net) has joined #rust
2015-05-31 17:30:30	<--	killercup (killercup@moz-723bo4.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2015-05-31 17:30:53	<--	Matthias247 (Miranda@moz-49li60.hsi14.kabel-badenwuerttemberg.de) has quit (Connection closed)
2015-05-31 17:30:55	-->	webmobster (Mibbit@moz-dr2.ra2.78.152.IP) has joined #rust
2015-05-31 17:31:12	-->	tilde (namidasshu@moz-3gs.igt.238.95.IP) has joined #rust
2015-05-31 17:31:24	ty	burntsushi: with this change, cbor could say "ok, use a capacity of something small, but expect there to be tons of elements, so if you need to you can grow"
2015-05-31 17:31:39	bluss	cow_2001: you can use .splitn(1, '\t') right, then .nth(1) to get the second element
2015-05-31 17:31:51	cow_2001	bluss: thanks!
2015-05-31 17:31:53	<--	kimwonyong (kimwonyong@moz-gfp.vhi.163.221.IP) has quit (Ping timeout: 121 seconds)
2015-05-31 17:31:58	bluss	cow_2001: then .unwrap() to panic on no element or .unwrap_or("") to default to empty instead
2015-05-31 17:32:11	-->	lerc (quassel@moz-nitv9j.telstraclear.net) has joined #rust
2015-05-31 17:32:30	-->	ismaelga (ismaelga@moz-m9v.8r3.251.188.IP) has joined #rust
2015-05-31 17:32:40	<--	nercury (nercury@moz-8h0btl.static.zebra.lt) has quit (Client exited)
2015-05-31 17:32:43	bluss	cow_2001: oh by the way it's splitn(2  not 1
2015-05-31 17:32:52	bluss	cow_2001: it counts the number of parts, my bad
2015-05-31 17:33:06	<--	cholcombe (chris@moz-mtfab9.or.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-31 17:33:07	ty	burntsushi: notice in the test case that I sent a PR for, there aren't any elements in the array at all.  Just the size information.  I'm not filling the array with stuff, it crashes when trying to create the 0xFFFFFF00FFFFFF-length vec 
2015-05-31 17:33:32	<--	tmtwd (tmtwd@moz-0kkm5n.cable.rogers.com) has quit (Ping timeout: 121 seconds)
2015-05-31 17:33:41	-->	ukarlsson (ukarlsson@moz-jhs6q1.cust.bredbandsbolaget.se) has joined #rust
2015-05-31 17:33:52	bluss	playbot: "a b c".splitn(2, ' ').last().unwrap_or("")   // example for cow_2001 
2015-05-31 17:33:54	--	Notice(playbot): "b c"
2015-05-31 17:34:20	bmcorser	WindowsBunny: :D i'll get a github repo up shortly
2015-05-31 17:34:28	-->	agjacome_ (agjacome@moz-5gjdqc.dynamic.jazztel.es) has joined #rust
2015-05-31 17:34:46	<--	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-31 17:34:50	burntsushi	ty: hmm. i think this is actually fixable in my CBOR decoder because everything is decoded into an intermediate AST first. and i think *that's* where the OOM is occurring in my case.
2015-05-31 17:35:11	ty	don't you have an "immediate decoder" too?
2015-05-31 17:35:15	burntsushi	ty: i also have an incomplete "direct" decoder, and i bet i couldn't fix it there. which is where your fix would come in i think
2015-05-31 17:35:17	burntsushi	yes! :-)
2015-05-31 17:35:25	burntsushi	OK i get it now. i like your fix.
2015-05-31 17:35:30	-->	Hannibal_Smith (nico@moz-itj1vp.retail.telecomitalia.it) has joined #rust
2015-05-31 17:35:49	ty	burntsushi: ok, great!
2015-05-31 17:36:11	<--	agjacome (agjacome@moz-v8jokv.dynamic.jazztel.es) has quit (Ping timeout: 121 seconds)
2015-05-31 17:36:13	ty	Now to convince the core team!
2015-05-31 17:37:56	-->	alaska (alaska@moz-8bdjem.fios.verizon.net) has joined #rust
2015-05-31 17:38:30	cow_2001	MUCHO GRACIAS!
2015-05-31 17:38:34	<--	agjacome_ (agjacome@moz-5gjdqc.dynamic.jazztel.es) has quit (Ping timeout: 121 seconds)
2015-05-31 17:38:42	cow_2001	burntsushi: 
2015-05-31 17:38:43	cow_2001	err
2015-05-31 17:38:46	cow_2001	bluss: 
2015-05-31 17:39:05	-->	flavius (flavius@moz-u9kqrk.graz.surfer.at) has joined #rust
2015-05-31 17:39:08	bluss	de nada
2015-05-31 17:39:25	-->	chc4 (chc4@moz-pdo0at.ma.comcast.net) has joined #rust
2015-05-31 17:39:29	-->	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has joined #rust
2015-05-31 17:39:36	-->	agjacome (agjacome@moz-1jikek.dynamic.jazztel.es) has joined #rust
2015-05-31 17:39:38	-->	trecer (textual@moz-pr6cqn.dyn.centurytel.net) has joined #rust
2015-05-31 17:40:15	<--	larhat (Adium@moz-vlo5br.cable.virginm.net) has quit (Quit: Leaving.)
2015-05-31 17:40:26	<--	eibwen (eibwen@moz-sfstjq.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2015-05-31 17:42:26	<--	ogham (rally@moz-91e3hp.cable.virginm.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-31 17:42:53	<--	alaska (alaska@moz-8bdjem.fios.verizon.net) has quit (Ping timeout: 121 seconds)
2015-05-31 17:43:02	bmcorser	WindowsBunny: looks like i will have to write functions that return my variables in any case, since "function calls in statics are limited to struct and enum constructors [E0015]"
2015-05-31 17:43:15	<--	ty (ty@moz-i6c4to.wa.comcast.net) has quit (Quit: leaving)
2015-05-31 17:43:17	<--	grodan (Mibbit@moz-o5eg8b.bredband.comhem.se) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-31 17:43:33	bmcorser	*"statics and constants"
2015-05-31 17:43:35	bluss	bmcorser: const fn has been introduced in nightly
2015-05-31 17:43:45	WindowsBunny	bmcorser: The initial value of a static must be a constant expression
2015-05-31 17:43:46	<--	agjacome (agjacome@moz-1jikek.dynamic.jazztel.es) has quit (Ping timeout: 121 seconds)
2015-05-31 17:43:58	bmcorser	i see
2015-05-31 17:44:04	WindowsBunny	Unlike C++, Rust doesn't allow arbitrary code to initialize statics
2015-05-31 17:44:09	<--	flavius (flavius@moz-u9kqrk.graz.surfer.at) has quit (Ping timeout: 121 seconds)
2015-05-31 17:44:17	ToxicFrog	FFI question -- what's the safest/best/most idiomatic way to return a pointer to an object to C that it will at some point pass back to me to do a thing with?
2015-05-31 17:44:41	bmcorser	bluss: const fn, what's that?
2015-05-31 17:44:42	ToxicFrog	C isn't going to inspect the pointer contents at all, so the most convenient type for me would be a String.
2015-05-31 17:45:14	WindowsBunny	ToxicFrog: You're going to pass ownership to C, or merely let it borrow a pointer temporarily?
2015-05-31 17:46:11	ToxicFrog	WindowsBunny: I think the answer is "borrow"? C is going to periodically pass it back to me to do stuff with, and at some point tell me I can free it.
2015-05-31 17:46:21	ToxicFrog	C won't free it itself or deref it.
2015-05-31 17:46:41	bluss	bmcorser: a function that can be evaluated as a constexpr. and used to init statics, too
2015-05-31 17:47:13	WindowsBunny	ToxicFrog: So C will basically own it, and tell you when to work with it and free it?
2015-05-31 17:48:15	-->	colinsurprenant (colin@moz-q9ee1n.74.electronicbox.net) has joined #rust
2015-05-31 17:48:21	ToxicFrog	WindowsBunny: ...yes? I'm not 100% confident answering that because I don't know if "own" here has implications I'm not yet familiar with.
2015-05-31 17:48:26	SpaceManiac	ToxicFrog: you probably want to put it in a Box
2015-05-31 17:48:27	<--	thiblahute (tsaunier@moz-rkc6r5.fbx.proxad.net) has quit (Ping timeout: 121 seconds)
2015-05-31 17:48:27	WindowsBunny	ToxicFrog: Most C that passes around an opaque user defined structure does so via a void*, aka a *mut c_void
2015-05-31 17:48:32	<--	tilde (namidasshu@moz-3gs.igt.238.95.IP) has quit (Quit: Leaving)
2015-05-31 17:48:33	-->	nickniko_ (nicknikolov@moz-k0r.8sn.209.90.IP) has joined #rust
2015-05-31 17:48:59	<--	futile (felix@moz-cmcd12.unity-media.net) has quit (Quit: WeeChat 1.2-rc1)
2015-05-31 17:49:10	WindowsBunny	ToxicFrog: So Box it, and then do boxed::into_raw(mybox) to get a raw pointer that you cast to *mut c_void I guess
2015-05-31 17:49:15	-->	ogham (rally@moz-91e3hp.cable.virginm.net) has joined #rust
2015-05-31 17:49:19	-->	James (quassel@moz-8qs8a3.range86-148.btcentralplus.com) has joined #rust
2015-05-31 17:49:20	ToxicFrog	Basically the API I'm implementing is void* CreateFoo(); void DoThingWithFoo(void*); void FreeFoo(void*);
2015-05-31 17:49:36	WindowsBunny	then whenever C passes it back to you, you can cast the *mut c_void to a &mut MyType
2015-05-31 17:49:53	<--	brainproxy (michael@moz-9vjtig.mo.charter.com) has quit (Ping timeout: 121 seconds)
2015-05-31 17:49:56	WindowsBunny	except for the freeing part where you'll do Box::from_raw(ptr)
2015-05-31 17:50:03	-->	maxjacobson (maxjacobson@moz-nc0r8s.dyn.optonline.net) has joined #rust
2015-05-31 17:50:04	WindowsBunny	and then when the Box is dropped it'll be freed
2015-05-31 17:50:17	-->	agjacome (agjacome@moz-u9kl5k.dynamic.jazztel.es) has joined #rust
2015-05-31 17:50:24	cow_2001	thanks! :D
2015-05-31 17:50:29	<--	nicknikolov (nicknikolov@moz-27s.0d8.214.90.IP) has quit (Ping timeout: 121 seconds)
2015-05-31 17:50:36	ToxicFrog	Yeah, that's the thing, my first thought was "I need a Box here" and then "but wait, it'll get freed when it leaves scope"
2015-05-31 17:50:46	WindowsBunny	ToxicFrog: Hence boxed::into_raw
2015-05-31 17:50:47	ToxicFrog	Sorry for the stupid questions, I am very new to Rust
2015-05-31 17:51:03	ToxicFrog	WindowsBunny: aah, I see
2015-05-31 17:51:09	WindowsBunny	which is unstable I think
2015-05-31 17:51:16	WindowsBunny	so you'll need a nightly
2015-05-31 17:51:21	ToxicFrog	Oh.
2015-05-31 17:51:32	WindowsBunny	ToxicFrog: You can transmute the Box though
2015-05-31 17:51:52	WindowsBunny	a transmute consumes the input, so the Box won't free itself that way
2015-05-31 17:52:00	cow_2001	bluss: http://pastebin.com/vpJ7Buj9
2015-05-31 17:52:17	-->	annodomini (lambda@moz-qgii5v.ma.comcast.net) has joined #rust
2015-05-31 17:52:18	-->	RC9 (RCIX@moz-647.dfa.8.198.IP) has joined #rust
2015-05-31 17:53:02	<--	kgrandon (Adium@moz-savc5e.ca.comcast.net) has quit (Quit: Leaving.)
2015-05-31 17:53:20	bluss	cow_2001: does it work?
2015-05-31 17:53:23	cow_2001	yep
2015-05-31 17:53:26	cow_2001	:D
2015-05-31 17:53:31	bluss	great
2015-05-31 17:53:56	-->	basicdays (basicdays@moz-vreeoj.cable.rcn.com) has joined #rust
2015-05-31 17:54:24	<--	agjacome (agjacome@moz-u9kl5k.dynamic.jazztel.es) has quit (Ping timeout: 121 seconds)
2015-05-31 17:54:39	<--	espadrine (tyl@moz-l019mn.fbx.proxad.net) has quit (Ping timeout: 121 seconds)
2015-05-31 17:55:00	-->	aatch (james@moz-is4j4r.cable.telstraclear.net) has joined #rust
2015-05-31 17:55:18	-->	agjacome (agjacome@moz-edgjjp.dynamic.jazztel.es) has joined #rust
2015-05-31 17:56:02	-->	envi_u (envi@moz-ih5.olo.169.121.IP) has joined #rust
2015-05-31 17:56:15	bluss	cow_2001: you can probably write lines 13-15 as a combination of iterator adaptors
2015-05-31 17:56:31	cow_2001	bluss: wut
2015-05-31 17:56:35	bluss	.split().skip(2).take(7774).map(|s| s.split(   etc
2015-05-31 17:56:54	<--	Douman (Douman@moz-vg292c.dynamic.mts-nn.ru) has quit (Quit: )
2015-05-31 17:57:34	<--	Xirdus (Mibbit@moz-noa5ui.tvk.wroc.pl) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-31 17:57:45	<--	duesenfranz_ (jona@moz-711djm.tirol.surfer.at) has quit (Client exited)
2015-05-31 17:58:00	cow_2001	bluss: iterator adaptors hmmm
2015-05-31 17:58:00	bluss	cow_2001: something like this http://is.gd/YI9bLn
2015-05-31 17:59:14	--	bentley|away is now known as bentley
2015-05-31 17:59:19	-->	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has joined #rust
2015-05-31 17:59:26	<--	webmobster (Mibbit@moz-dr2.ra2.78.152.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-31 17:59:40	cow_2001	bluss: it shows without newlines
2015-05-31 17:59:53	-->	errordeveloper (ilya@moz-ono.0eu.201.90.IP) has joined #rust
2015-05-31 17:59:53	cow_2001	just one long line
2015-05-31 18:00:10	<--	envi_u (envi@moz-ih5.olo.169.121.IP) has quit (Ping timeout: 121 seconds)
2015-05-31 18:01:00	bluss	what shows without newlines?
2015-05-31 18:01:02	ToxicFrog	WindowsBunny: as in mem::transmute?
2015-05-31 18:01:09	bluss	cow_2001: oh the playpen link is broken?
2015-05-31 18:01:19	cow_2001	yes
2015-05-31 18:01:20	<--	trecer (textual@moz-pr6cqn.dyn.centurytel.net) has quit (Ping timeout: 121 seconds)
2015-05-31 18:01:31	bluss	cow_2001: let's try this https://gist.github.com/4ced1b0aa3ebf3420721
2015-05-31 18:01:42	WindowsBunny	ToxicFrog: yes :D
2015-05-31 18:02:19	cow_2001	woah.
2015-05-31 18:03:05	-->	harrisonclarke (harrisoncla@moz-uur7pt.eastlink.ca) has joined #rust
2015-05-31 18:03:08	ToxicFrog	Ok, so with that hint and some googling, I think I have the idea -- I create a Box<String> or similar, use mem::transmute to *const u8 and return that to C
2015-05-31 18:03:32	ToxicFrog	At some point C hands it back to me for use...and hrm. I need to get the box back without freeing the memory. Box it, use it, unbox it again before returning?
2015-05-31 18:03:48	ToxicFrog	And then when it's finally time to free it I just rebox it and let the box leave scope.
2015-05-31 18:03:49	WindowsBunny	ToxicFrog: why *const?
2015-05-31 18:03:52	<--	frankmcsherry (frankmcsher@moz-n95jpn.adsl.alicedsl.de) has quit (Connection closed)
2015-05-31 18:03:59	<--	Guest22 (textual@moz-jt9juk.fibertel.com.ar) has quit (Quit: Textual IRC Client: www.textualapp.com)
2015-05-31 18:04:11	ToxicFrog	WindowsBunny: I guess it doesn't matter either way, C doesn't care
2015-05-31 18:04:24	ToxicFrog	But it does let the reader know "C shouldn't be modifying this when we aren't looking"
2015-05-31 18:04:25	<--	mark_edward (mark@moz-dg4mrp.in.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-31 18:04:26	-->	Porkepix (Porkepix@moz-e1bv2v.rev.sfr.net) has joined #rust
2015-05-31 18:04:40	WindowsBunny	ToxicFrog: well anyway, for when you don't want to free it, just cast the * to a &mut MyThing
2015-05-31 18:04:42	cow_2001	bluss: fantastic.
2015-05-31 18:04:45	<--	nickniko_ (nicknikolov@moz-k0r.8sn.209.90.IP) has quit (Connection closed)
2015-05-31 18:04:48	-->	panicbit1 (panicbit@moz-t203th.dip0.t-ipconnect.de) has joined #rust
2015-05-31 18:04:54	-->	Tomasito (Tomasito@moz-i7e745.res.rr.com) has joined #rust
2015-05-31 18:05:05	<--	panicbit (panicbit@moz-trnuar.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2015-05-31 18:05:19	<--	kaeluka (kaeluka@moz-6cbr2p.cust.bredbandsbolaget.se) has quit (Client exited)
2015-05-31 18:05:36	<--	edward-san (Edward`san@moz-2dl.61u.237.95.IP) has quit (Quit: Watt is love? Baby, don't Hertz me. Don't Hertz me, no morse.)
2015-05-31 18:05:44	--	panicbit1 is now known as panicbit
2015-05-31 18:05:54	bluss	cow_2001: I think it shows off some nice features of rust. Your whole file contents is in one big allocation, and the vector just has slices pointing into that
2015-05-31 18:06:09	bluss	&str is a string slice
2015-05-31 18:06:28	-->	nicknikolov (nicknikolov@moz-k0r.8sn.209.90.IP) has joined #rust
2015-05-31 18:06:34	WindowsBunny	erm
2015-05-31 18:06:43	WindowsBunny	playbot: unsafe fn foo(ptr: *const u8){&mut*(ptr as *const String as *mut String);}
2015-05-31 18:06:45	--	Notice(playbot): ()
2015-05-31 18:06:54	-->	maraoz (maraoz@moz-kdk.130.95.181.IP) has joined #rust
2015-05-31 18:06:55	cow_2001	bluss: slices pointing to that?
2015-05-31 18:07:01	-->	agjacome_ (agjacome@moz-66suo8.dynamic.jazztel.es) has joined #rust
2015-05-31 18:07:01	WindowsBunny	ToxicFrog: That's how you unsafely turn a *const u8 into a &mut String
2015-05-31 18:07:09	cow_2001	bluss: slices of memory, that is?
2015-05-31 18:07:11	<--	harrisonclarke (harrisoncla@moz-uur7pt.eastlink.ca) has quit (Ping timeout: 121 seconds)
2015-05-31 18:07:16	@niconii	casting const -> mut is undefined behavior
2015-05-31 18:07:18	bmcorser	ok WindowsBunny my super-sweet code is up https://github.com/bmcorser/git-tags-rs/
2015-05-31 18:07:20	@niconii	in both llvm and rust
2015-05-31 18:07:25	bluss	cow_2001: the variable s is the String, it owns the memory
2015-05-31 18:07:38	WindowsBunny	niconii: Great :D
2015-05-31 18:07:39	bluss	cow_2001: the &str in the vec are just pointers to different locations that you've cut out from s
2015-05-31 18:07:43	bluss	cow_2001: substrings
2015-05-31 18:07:49	bmcorser	it builds, but won't run because "thread '<main>' panicked at 'called `Option::unwrap()` on a `None` value', /Users/rustbuild/src/rust-buildbot/slave/stable-dist-rustc-mac/build/src/libcore/option.rs:362"
2015-05-31 18:08:16	imjacobclark	is it possible to get the length of a Vector?
2015-05-31 18:08:29	bmcorser	but that might be an issue with the CLI lib i'm using not my code
2015-05-31 18:08:31	cow_2001	bluss: so a &str is two things, a start and an end of the big string
2015-05-31 18:08:31	@niconii	imjacobclark: vec.len()
2015-05-31 18:08:34	bluss	cow_2001: a &str is a substring of string data stored somewhere else. It may of course be a trivial substring (i.e. the whole string)
2015-05-31 18:08:43	bluss	cow_2001: yes. It stores pointer + length in fact
2015-05-31 18:08:43	imjacobclark	thanks
2015-05-31 18:08:49	bmcorser	but i think it may give an idea of what i'm trying to achieve
2015-05-31 18:09:07	-->	grant (grant@moz-jfh.0nq.187.64.IP) has joined #rust
2015-05-31 18:09:07	<--	meunierd (dmeunier@moz-glf54u.cpe.sourcecable.net) has quit (Client exited)
2015-05-31 18:09:20	<--	yati (yati@moz-nm0.mvf.227.110.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-31 18:09:21	bluss	cow_2001: &'static str is the type of string literals ... a substring of string data stored in some read only section of the compiled object
2015-05-31 18:09:41	<--	agjacome (agjacome@moz-edgjjp.dynamic.jazztel.es) has quit (Ping timeout: 121 seconds)
2015-05-31 18:09:50	<--	REMqb (REMqb@moz-v1pkj8.abo.wanadoo.fr) has quit (A TLS packet with unexpected length was received.)
2015-05-31 18:09:53	-->	nyx (nyx@moz-ivelpd.res.rr.com) has joined #rust
2015-05-31 18:09:55	@niconii	&str is to String as &[T] is to Vec<T>
2015-05-31 18:10:11	cow_2001	bluss: is it possible to load the file into the executable at compile time?
2015-05-31 18:10:33	bluss	cow_2001: yes, there's a macro for that
2015-05-31 18:10:38	 *	cow_2001 googles
2015-05-31 18:10:50	bluss	include_str! maybe?
2015-05-31 18:10:58	bmcorser	WindowsBunny: for more reference (if you're interested) i'm porting https://github.com/bmcorser/git-tags-py to rust as a way to learn the language
2015-05-31 18:11:06	-->	GGist (Mibbit@moz-st7v59.wa.comcast.net) has joined #rust
2015-05-31 18:11:06	@niconii	(rather literally, too; &str is just a &[u8] guaranteed to hold utf-8, and String actually wraps a Vec<u8>)
2015-05-31 18:12:35	WindowsBunny	bmcorser: seems fine so far
2015-05-31 18:12:40	<--	Hannibal_Smith (nico@moz-itj1vp.retail.telecomitalia.it) has quit (Quit: Leaving)
2015-05-31 18:12:45	<--	thor1 (thor@moz-n7n1a4.res.rr.com) has quit (Ping timeout: 121 seconds)
2015-05-31 18:13:07	<--	brianloveswords (brianlovesw@moz-tq78gs.fios.verizon.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-31 18:13:13	bmcorser	cool
2015-05-31 18:13:43	-->	chef_ (Chef@moz-ge00fg.cpe.teksavvy.com) has joined #rust
2015-05-31 18:13:52	maxjacobson	I’m supersupersuper new to Rust. Here’s a question. When I see “T” or “<T>”… is that short for something? I’m having a hard time googling for a letter haha
2015-05-31 18:14:18	<--	agjacome_ (agjacome@moz-66suo8.dynamic.jazztel.es) has quit (Ping timeout: 121 seconds)
2015-05-31 18:14:38	@niconii	T is short for type, it's customary to use in generics
2015-05-31 18:14:41	@niconii	!generics
2015-05-31 18:14:45	@niconii	aww
2015-05-31 18:14:48	cow_2001	so cool
2015-05-31 18:14:58	@niconii	anyway, T just means "any type" in this context basically
2015-05-31 18:14:59	ToxicFrog	WindowsBunny: awesome. Thank you so much.
2015-05-31 18:15:04	<--	vosen (vosen@moz-mtm1g4.dynamic.chello.pl) has quit (Connection closed)
2015-05-31 18:15:08	<--	cakecatz (cakecatz@moz-edrvuc.sannet.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-31 18:15:11	<--	Chef (Chef@moz-ge00fg.cpe.teksavvy.com) has quit (Ping timeout: 121 seconds)
2015-05-31 18:15:29	@niconii	!learn generics = http://doc.rust-lang.org/book/generics.html
2015-05-31 18:15:29	+rustbot	Learned factoid 'generics'.
2015-05-31 18:15:30	cow_2001	and i thought golang has a cool cargo-like system
2015-05-31 18:15:31	@niconii	!generics
2015-05-31 18:15:31	+rustbot	http://doc.rust-lang.org/book/generics.html
2015-05-31 18:15:32	bluss	maxjacobson: it's just a convention. You can use long name type parameters too
2015-05-31 18:15:40	kimundi	maxjacobson: Its just a name for the type variable. Convention is to use the single letter "T", (just like, eg, "i" for loop variables)
2015-05-31 18:15:44	WindowsBunny	ToxicFrog: Just remember that casting const to mut may invoke UB :D
2015-05-31 18:16:08	-->	Wild_Cat (Max@moz-2clr66.dsl.teksavvy.com) has joined #rust
2015-05-31 18:16:09	ToxicFrog	WindowsBunny: aah yes
2015-05-31 18:16:36	WindowsBunny	ToxicFrog: Maybe it would be easier if your FFI function was defined as taking a *mut
2015-05-31 18:16:38	bmcorser	WindowsBunny: any clues on the runtime panic?
2015-05-31 18:17:00	WindowsBunny	bmcorser: That would require actual mental effort on my part to analyze your code
2015-05-31 18:17:00	@niconii	ToxicFrog, WindowsBunny: https://doc.rust-lang.org/reference.html#behavior-considered-undefined
2015-05-31 18:17:02	ToxicFrog	WindowsBunny: yeah, I think I'll do that then.
2015-05-31 18:17:03	maxjacobson	ooOo. Ok. thanks!
2015-05-31 18:17:05	@niconii	"Mutating non-mutable data (that is, data reached through a shared reference or data owned by a let binding), unless that data is contained within an UnsafeCell<U>."
2015-05-31 18:17:21	WindowsBunny	niconii: This isn't data reachable by a &
2015-05-31 18:17:25	-->	jfredett (Adium@moz-a9ilmn.fios.verizon.net) has joined #rust
2015-05-31 18:17:33	bmcorser	i'm clueless on how start debugging this shit
2015-05-31 18:17:42	WindowsBunny	niconii: It's data owned by a raw pointer in C
2015-05-31 18:17:43	-->	colinsurprenant_ (colin@moz-q9ee1n.74.electronicbox.net) has joined #rust
2015-05-31 18:17:45	@niconii	ah
2015-05-31 18:17:46	bmcorser	in python i can just drop a breakpoint in and get a repl
2015-05-31 18:17:56	bmcorser	then i'm laughing
2015-05-31 18:18:04	WindowsBunny	bmcorser: In Rust it is native code, so you cannot really do much
2015-05-31 18:18:12	bmcorser	aye
2015-05-31 18:18:17	bmcorser	gdb?
2015-05-31 18:18:19	JustAPerson	bmcorser: are you on linux?
2015-05-31 18:18:20	bluss	bmcorser: you have gdb
2015-05-31 18:18:21	WindowsBunny	bmcorser: At best gdb will actually work and you can see the value of local variables
2015-05-31 18:18:21	JustAPerson	gdb works well
2015-05-31 18:18:26	JustAPerson	rbreak paninc
2015-05-31 18:18:28	JustAPerson	run
2015-05-31 18:18:30	bmcorser	JustAPerson: natrually
2015-05-31 18:18:31	JustAPerson	bt
2015-05-31 18:18:35	<--	colinsurprenant (colin@moz-q9ee1n.74.electronicbox.net) has quit (Ping timeout: 121 seconds)
2015-05-31 18:18:35	--	colinsurprenant_ is now known as colinsurprenant
2015-05-31 18:18:38	WindowsBunny	bmcorser: at worst gdb will spit in your face and murder your parents
2015-05-31 18:18:46	bmcorser	and at best?
2015-05-31 18:19:00	WindowsBunny	(6:18:24 PM) WindowsBunny: bmcorser: At best gdb will actually work and you can see the value of local variables
2015-05-31 18:19:11	<--	trigen (MSX@moz-sgda69.static.versatel.nl) has quit (Ping timeout: 121 seconds)
2015-05-31 18:19:15	woboats	Design question: I have struct carrying some Option<String>s (docopt), and I want them to be mutually exclusive (fail if > 1 is Some). I want it to be painless to extend to new Options later, so a match table isn't ideal.
2015-05-31 18:19:29	woboats	What's the best way to structure this logic?
2015-05-31 18:19:34	bmcorser	WindowsBunny: sounds like fun
2015-05-31 18:19:44	@niconii	WindowsBunny: mmm, right, it's &T -> &mut T that's undefined
2015-05-31 18:20:01	WindowsBunny	niconii: So in this case everything is okay then, because its not & :D
2015-05-31 18:20:06	<--	ctennis (ctennis@moz-ej0.24t.142.67.IP) has quit (Connection closed)
2015-05-31 18:20:14	WindowsBunny	Its * directly to &mut
2015-05-31 18:20:39	aatch	WindowsBunny, thats fine (for a given value of "fine")
2015-05-31 18:20:40	WindowsBunny	guaranteed by a pinky promise to not alias
2015-05-31 18:20:52	WindowsBunny	ToxicFrog: They did pinky promise, right?
2015-05-31 18:21:06	@niconii	WindowsBunny: maybe, i'd probably err on the side of caution personally
2015-05-31 18:21:25	<--	gpillow (Mibbit@moz-hd5u4k.pasty.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-31 18:21:31	-->	ajhager (aajhager@moz-mcdsgi.iplsin.sbcglobal.net) has joined #rust
2015-05-31 18:21:42	woboats	Basically I want a series of and_thens() that will fail if more than one of them is Some rather than use precedence
2015-05-31 18:21:43	<--	gsingh93 (gulshan@moz-ln1ktu.st3l.iv8o.0004.2601.IP) has quit (Ping timeout: 121 seconds)
2015-05-31 18:22:23	<--	imjacobclark (Mibbit@moz-5g68lp.range86-156.btcentralplus.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-31 18:22:48	-->	gpillow (Mibbit@moz-hd5u4k.pasty.net) has joined #rust
2015-05-31 18:22:54	<--	morton (Mibbit@moz-m3km7q.gtn.ru) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-31 18:22:56	ToxicFrog	WindowsBunny: maybe! I don't have the source :D
2015-05-31 18:23:36	-->	trecer (textual@moz-pr6cqn.dyn.centurytel.net) has joined #rust
2015-05-31 18:23:38	WindowsBunny	ToxicFrog: Just in case, I'd recommend getting life insurance
2015-05-31 18:23:56	woboats	sorry that's or_else rather than and_Then
2015-05-31 18:24:11	<--	ahartzheim (ahartzheim@moz-mb0.tts.72.185.IP) has quit (Ping timeout: 121 seconds)
2015-05-31 18:24:27	-->	cakecatz (cakecatz@moz-edrvuc.sannet.ne.jp) has joined #rust
2015-05-31 18:24:48	-->	maximih (maximih@moz-egq42l.k49b.su5n.2002.2001.IP) has joined #rust
2015-05-31 18:25:30	bluss	woboats: it's easy to just sum a.is_some() + b.is_some() +  .. :)
2015-05-31 18:25:40	bluss	oh needs cast to integer too
2015-05-31 18:25:56	woboats	not beautiful, but yeah that makes sense
2015-05-31 18:26:03	bluss	it's moderately verbose to just sum a.is_some() as u32 + b.is_some() as u32 
2015-05-31 18:26:08	ToxicFrog	New question -- does ffi or libc have anything for working with FILE*?
2015-05-31 18:26:14	bluss	woboats: right
2015-05-31 18:26:23	woboats	bluss: can bools be xor'd?
2015-05-31 18:26:25	-->	mcoffin (mcoffin@moz-hrs.16d.54.128.IP) has joined #rust
2015-05-31 18:26:27	trecer	Hi all, is it normal for rust to be inserting int3 instructions into the drop glue?/is there any way to avoid this?
2015-05-31 18:26:30	<--	nham (nham@moz-lglsfe.il.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-31 18:26:31	aatch	woboats, yep
2015-05-31 18:26:35	bluss	woboats: I think so, but that's not what you want
2015-05-31 18:26:35	WindowsBunny	ToxicFrog: The contents of a FILE* are opaque and you should never manipulate it directly
2015-05-31 18:26:43	<--	wipeD (wipeD@moz-j5kot3.dip0.t-ipconnect.de) has quit (Connection closed)
2015-05-31 18:26:44	ToxicFrog	WindowsBunny: oh, I know that
2015-05-31 18:26:47	aatch	playbot, true ^ true
2015-05-31 18:26:48	--	Notice(playbot): false
2015-05-31 18:26:54	WindowsBunny	ToxicFrog: However you're free to use bindings to libc functions to work with a FILE*
2015-05-31 18:26:56	bluss	beautiful
2015-05-31 18:27:01	ToxicFrog	But I mean a type for it and convenient functions for reading from it
2015-05-31 18:27:03	aatch	All of the bitwise operators work on bools
2015-05-31 18:27:12	bluss	playbot: true ^ true ^ true
2015-05-31 18:27:13	--	Notice(playbot): true
2015-05-31 18:27:21	woboats	oh I see, ack
2015-05-31 18:27:37	woboats	fricken logic how does it work
2015-05-31 18:27:44	aatch	So you can get non-shortcircuiting conditions if you want.
2015-05-31 18:27:50	WindowsBunny	ToxicFrog: There's no easy wrapper for FILE*
2015-05-31 18:27:52	aatch	playbot, true | false
2015-05-31 18:27:53	--	Notice(playbot): true
2015-05-31 18:27:54	@niconii	i assume the difference between | and || on bools is that || short-circui-- yeah
2015-05-31 18:27:54	-->	fkaa (tundmatu@moz-abdgko.cust.tele2.se) has joined #rust
2015-05-31 18:28:02	<--	codec (Mibbit@moz-325m1f.abo.wanadoo.fr) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-31 18:28:06	WindowsBunny	ToxicFrog: That's because most sane people just use the normal File in Rust's libstd
2015-05-31 18:28:33	aatch	Not a huge amount call for it, but I can see it being useful for some people.
2015-05-31 18:28:40	WindowsBunny	ToxicFrog: Which isn't a wrapper around FILE* necessarily
2015-05-31 18:28:58	WindowsBunny	ToxicFrog: On Windows std::fs::File is actually a wrapper around a HANDLE
2015-05-31 18:29:06	aatch	WindowsBunny, well on Linux it just uses a fd.
2015-05-31 18:29:18	WindowsBunny	exactly, nobody actually uses FILE* in Rust
2015-05-31 18:29:24	<--	fkaa_ (tundmatu@moz-501od2.business.telia.com) has quit (Ping timeout: 121 seconds)
2015-05-31 18:29:32	<--	ajhager (aajhager@moz-mcdsgi.iplsin.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-31 18:29:35	aatch	Which is much saner anyway, `FILE` is actually a pretty massive struct.
2015-05-31 18:30:21	WindowsBunny	at the end of the day on Windows, all the libc constructs are just overhead on top of a HANDLE
2015-05-31 18:30:29	<--	FrozenCow (FrozenCow@moz-i2tvv4.chello.nl) has quit (Quit: Leaving)
2015-05-31 18:30:49	-->	ahartzheim (ahartzheim@moz-5uk5u4.tor-exit.network) has joined #rust
2015-05-31 18:30:50	-->	dkreuter (knizz@moz-ks1p6p.vie.surfer.at) has joined #rust
2015-05-31 18:31:05	o11c	tbh, the idea of opaque HANDLEs is a good one
2015-05-31 18:31:25	dkreuter	is there some kind of lazy evaluation syntax like pythons "a() or b()"
2015-05-31 18:31:31	o11c	dkreuter: ||
2015-05-31 18:31:32	aatch	o11c, (mostly) agreed
2015-05-31 18:31:42	WindowsBunny	a HANDLE is just an opaque id into NT's internal object manager
2015-05-31 18:31:45	XMPPwocky	o11c: if they were well-typed, maybe
2015-05-31 18:31:56	-->	mark_edward (mark@moz-dg4mrp.in.comcast.net) has joined #rust
2015-05-31 18:32:05	o11c	XMPPwocky: well-typed can be done in wrappers
2015-05-31 18:32:08	bmcorser	this is actually a bit stange
2015-05-31 18:32:13	-->	harrisonclarke (harrisoncla@moz-uur7pt.eastlink.ca) has joined #rust
2015-05-31 18:32:15	dkreuter	o11c, || is for booleans only iirc
2015-05-31 18:32:17	WindowsBunny	XMPPwocky: There actually is some typing
2015-05-31 18:32:20	bmcorser	the path /Users/rustbuild/src/rust-buildbot/slave/stable-dist-rustc-mac/build/src/libcore/option.rs
2015-05-31 18:32:26	bmcorser	doesn't exist on my computer
2015-05-31 18:32:41	o11c	e.g. we just have `int` for file descriptors, but they are logically different for read streams, read random-access, write stream, etc.
2015-05-31 18:32:41	dkreuter	I mean something like a() -> Option<T> and b() should be called when a() returned None
2015-05-31 18:32:43	WindowsBunny	XMPPwocky: In particular, winapi defines various kinds of handles like HWND and stuff
2015-05-31 18:32:49	bmcorser	thread '<main>' panicked at 'called `Option::unwrap()` on a `None` value', /Users/rustbuild/s...
2015-05-31 18:32:51	bluss	dkreuter: there is .or_else for options
2015-05-31 18:32:57	dkreuter	bluss, thank you
2015-05-31 18:32:57	XMPPwocky	WindowsBunny: aren't they just typedefs, though?
2015-05-31 18:33:00	aatch	bmcorser, that's because it's on the the build server.
2015-05-31 18:33:01	bmcorser	whaa
2015-05-31 18:33:06	XMPPwocky	so you can pass a HANDLE to something expecting a HWND
2015-05-31 18:33:09	WindowsBunny	XMPPwocky: Only if winapi is in non-STRICT mode
2015-05-31 18:33:20	WindowsBunny	XMPPwocky: in STRICT mode HWND is a pointer to a unique tag type
2015-05-31 18:33:26	bmcorser	i guessed as much, but why aatch is it appearing in an error message locally?
2015-05-31 18:33:31	WindowsBunny	XMPPwocky: of course C lets you implicitly pointer cast, so it only helps in C++ and Rust
2015-05-31 18:33:40	bmcorser	or is that to be expected?
2015-05-31 18:33:44	aatch	bmcorser, because that part of the error message is generated at compile time.
2015-05-31 18:33:54	bmcorser	gotcha
2015-05-31 18:33:57	-->	Soni (SoniEx2@moz-7ho.p0a.104.187.IP) has joined #rust
2015-05-31 18:34:13	aatch	bmcorser, I tend to get `/home/james/projects/rust/src/libcore/option.rs` because I build locally.
2015-05-31 18:34:17	 *	o11c mutters that error messages should be relative to the source dir
2015-05-31 18:34:34	bmcorser	cool
2015-05-31 18:34:38	<--	errordeveloper (ilya@moz-ono.0eu.201.90.IP) has quit (Ping timeout: 121 seconds)
2015-05-31 18:34:48	<--	chef_ (Chef@moz-ge00fg.cpe.teksavvy.com) has quit (Quit: Quit)
2015-05-31 18:35:20	WindowsBunny	XMPPwocky: There's still an annoying overlap between things that only use HANDLE though, like pipes and files and consoles
2015-05-31 18:36:15	<--	sw17ch (sw17ch@moz-h64l8d.wa.comcast.net) has quit (Client exited)
2015-05-31 18:36:24	-->	Wilduck (erik@moz-m0q9lq.fios.verizon.net) has joined #rust
2015-05-31 18:36:50	-->	sw17ch (sw17ch@moz-h64l8d.wa.comcast.net) has joined #rust
2015-05-31 18:37:08	<--	sw17ch (sw17ch@moz-h64l8d.wa.comcast.net) has quit (Client exited)
2015-05-31 18:37:47	<--	lenstr (lenstr@moz-897.vju.25.171.IP) has quit (Quit: Leaving...)
2015-05-31 18:39:29	bmcorser	how can i force cargo to recompile dependencies?
2015-05-31 18:39:31	-->	arBmind1 (Andreas@moz-rvrdem.dyn.telefonica.de) has joined #rust
2015-05-31 18:39:57	bmcorser	for example to add print statements into library code for debugging
2015-05-31 18:40:29	WindowsBunny	bmcorser: If you modify some code, cargo should automatically detect it was modified
2015-05-31 18:40:39	<--	arBmind (Andreas@moz-86h02i.adsl.alicedsl.de) has quit (Ping timeout: 121 seconds)
2015-05-31 18:40:41	-->	orangeshark (erik@moz-cg6imt.44tj.56ot.0306.2602.IP) has joined #rust
2015-05-31 18:40:50	<--	KarolisK (karolis@moz-1vd.8s1.28.194.IP) has quit (Connection closed)
2015-05-31 18:40:54	bmcorser	WindowsBunny: even in external dependencies?
2015-05-31 18:40:59	WindowsBunny	bmcorser: If you update an upstream git/crates.io dependency, you'll have to do a cargo update
2015-05-31 18:41:05	WindowsBunny	which will fetch the new version of the dependency
2015-05-31 18:41:11	bmcorser	yes
2015-05-31 18:41:20	<--	trecer (textual@moz-pr6cqn.dyn.centurytel.net) has quit (Ping timeout: 121 seconds)
2015-05-31 18:41:21	<--	nodweber (nodweber@moz-knt.fgq.178.5.IP) has quit (A TLS packet with unexpected length was received.)
2015-05-31 18:41:26	<--	maxjacobson (maxjacobson@moz-nc0r8s.dyn.optonline.net) has quit (Client exited)
2015-05-31 18:41:31	M_D_K	so, is it possible to access the deps of a dep since they're already there? Or do I have to explicity add them to my Cargo.toml?
2015-05-31 18:41:43	bmcorser	i added a println! to the downloaded dep
2015-05-31 18:41:47	bmcorser	in /cargo/registry/src/github.com-1ecc6299db9ec823/c etc
2015-05-31 18:41:50	WindowsBunny	bmcorser: Oh, don't do that
2015-05-31 18:41:55	bmcorser	yes yes i know
2015-05-31 18:42:28	bmcorser	but can i trigger recompilation of this code through cargo
2015-05-31 18:42:39	WindowsBunny	bmcorser: It's better to copy/clone the dependency to a local location, and then use a cargo override
2015-05-31 18:42:40	-->	SgtCoDFish (Ashley@moz-236.pn9.250.176.IP) has joined #rust
2015-05-31 18:42:48	<--	SgtCoDFish (Ashley@moz-236.pn9.250.176.IP) has quit (Quit: Leaving.)
2015-05-31 18:42:49	bmcorser	aw man
2015-05-31 18:42:58	WindowsBunny	cargo overrides are cool
2015-05-31 18:43:10	WindowsBunny	and if you modify the overriding code, cargo will detect it and rebuild it :P
2015-05-31 18:43:19	bmcorser	hacking where WindowsBunny tells me not to is cool
2015-05-31 18:43:28	fkaa	WindowsBunny: i once forgot i had a cargo override in my path
2015-05-31 18:43:35	XMPPwocky	fkaa: oh god same
2015-05-31 18:43:38	fkaa	2 hours of hair-ripping
2015-05-31 18:43:39	WindowsBunny	fkaa: Yes, it is easy to forget about them :(
2015-05-31 18:43:42	XMPPwocky	had glutin from like 3 months ago
2015-05-31 18:44:05	WindowsBunny	ew, 3 month old bread with ancient gluten?
2015-05-31 18:44:19	fkaa	it should print a big red <marquee> "WARNING YOU ARE USING A LOCAL OVERRIDE"
2015-05-31 18:44:25	-->	arielb1 (Ariel@moz-9he9ta.red.bezeqint.net) has joined #rust
2015-05-31 18:44:36	<--	iu (iu@moz-6263qv.cc.cmu.edu) has quit (Quit: )
2015-05-31 18:44:37	arielb1	is there a version of retain that gives &mut T?
2015-05-31 18:44:40	WindowsBunny	fkaa: Go write a PR to cargo to do just that
2015-05-31 18:44:50	fkaa	not sure it would be so appreciated ;)
2015-05-31 18:45:15	-->	zakedodead (zakedodead@moz-cg5.c4k.214.206.IP) has joined #rust
2015-05-31 18:45:22	@niconii	make it a vertical marquee
2015-05-31 18:45:45	<--	annodomini (lambda@moz-qgii5v.ma.comcast.net) has quit (Client exited)
2015-05-31 18:45:56	-->	zyphrus (David@moz-1a4.urk.98.101.IP) has joined #rust
2015-05-31 18:46:10	XMPPwocky	another thing i want to fix is to print out version hashes
2015-05-31 18:46:24	XMPPwocky	when you expect a type and find something else with the same user string
2015-05-31 18:46:51	<--	Jackneill (Jackneill@moz-8pg510.pool.digikabel.hu) has quit (A TLS packet with unexpected length was received.)
2015-05-31 18:46:52	-->	brainproxy (michael@moz-9vjtig.mo.charter.com) has joined #rust
2015-05-31 18:46:53	XMPPwocky	so accidentally having two versions of the same crate doesn't make you question your base assumptions about the universe
2015-05-31 18:47:05	XMPPwocky	expected glium::DrawParameters, found glium::DrawParameters
2015-05-31 18:47:11	fkaa	++
2015-05-31 18:47:13	@niconii	ahaha
2015-05-31 18:47:25	csherratt	XMPPwocky: DO IT
2015-05-31 18:47:45	XMPPwocky	it doesn't look like that hard of a fix, actually
2015-05-31 18:47:53	XMPPwocky	is there an issue for that
2015-05-31 18:47:57	XMPPwocky	there's gotta be one
2015-05-31 18:48:11	geri	is there a way to disable optimization for a specific function in rust?
2015-05-31 18:48:21	<--	pylbrecht (pylbrecht@moz-b4nhkg.dynamic.kabel-deutschland.de) has quit (Connection closed)
2015-05-31 18:48:26	<--	tytouf (caugier@moz-84u6a1.rev.sfr.net) has quit (Ping timeout: 121 seconds)
2015-05-31 18:48:38	<--	gleb (gleb@moz-3u1drv.rusanovka-net.kiev.ua) has quit (Ping timeout: 121 seconds)
2015-05-31 18:49:03	<--	herr_jth (jth@moz-540.d5q.91.95.IP) has quit (Quit: Konversation terminated!)
2015-05-31 18:49:11	@niconii	geri: you can prevent it from being inlined with #[inline(never)], but i don't think you can disable optimization
2015-05-31 18:49:38	geri	niconii: i try inline never... hm
2015-05-31 18:49:47	Dabo	geri, is there a specific optimization change which you'd like to disable?
2015-05-31 18:49:55	geri	a bug :D
2015-05-31 18:49:56	-->	imjacobclark (Mibbit@moz-5g68lp.range86-156.btcentralplus.com) has joined #rust
2015-05-31 18:50:02	imjacobclark	Can anybody help me with: http://stackoverflow.com/questions/30563502/copying-in-vectors-to-a-thread-in-rust
2015-05-31 18:50:28	Dabo	geri, there might be a way to work around it, have you reported it?
2015-05-31 18:50:37	geri	Dabo: a function works for debug but returns a illegal instruction in --release
2015-05-31 18:50:39	<--	ismaelga (ismaelga@moz-m9v.8r3.251.188.IP) has quit (Connection closed)
2015-05-31 18:50:42	geri	the
2015-05-31 18:50:43	-->	ismaelga (ismaelga@moz-m9v.8r3.251.188.IP) has joined #rust
2015-05-31 18:50:56	Dabo	geri, ah, could you put the function on play.rust-lang.org? to show
2015-05-31 18:51:05	geri	Dabo: i didnt figure out whats the issue
2015-05-31 18:51:15	-->	Jesin (Jesin@moz-qb9.79h.16.107.IP) has joined #rust
2015-05-31 18:51:16	geri	Dabo: i cross compile to arm.... i guess not
2015-05-31 18:51:31	bmcorser	WindowsBunny: i  take it back ... overrides are very cool
2015-05-31 18:51:31	Dabo	i'm not entirely sure what you are trying to say here
2015-05-31 18:51:38	Dabo	I can probably help if you show me the code
2015-05-31 18:51:55	geri	Dabo: i build my rust app for arm...
2015-05-31 18:52:15	-->	dlc (dlc@moz-ijetde.res.rr.com) has joined #rust
2015-05-31 18:52:17	geri	Dabo: yes, let me check some things before :D
2015-05-31 18:53:12	@niconii	imjacobclark: i think we need more code than that
2015-05-31 18:53:32	-->	zzing (textual@moz-jucm1n.cpe.distributel.net) has joined #rust
2015-05-31 18:53:33	-->	nedp (nedp@moz-vg6vvt.bigpond.net.au) has joined #rust
2015-05-31 18:53:35	<--	kngl (Adium@moz-rmgnkh.dynamic.voo.be) has quit (Quit: Leaving.)
2015-05-31 18:53:54	@niconii	imjacobclark: can you show the full function in your question rather than just that for loop?
2015-05-31 18:54:07	ToxicFrog	WindowsBunny: (re: FILE* vs File): yeah, sadly I have no control over the ABI expected by the host program, so if it hands me a FILE* that's what I have to use.
2015-05-31 18:54:30	WindowsBunny	ToxicFrog: Then yeah, you're pretty screwed, you'll have to write your own wrapper :D
2015-05-31 18:54:45	WindowsBunny	ToxicFrog: You'll also have to stab the developer of the host program in their sleep
2015-05-31 18:54:45	<--	nedp (nedp@moz-vg6vvt.bigpond.net.au) has quit (Connection closed)
2015-05-31 18:54:50	ToxicFrog	The good news is that all I have to do is read a single line from it and then close it
2015-05-31 18:55:11	<--	posix4e (sid82101@moz-9asfnl.highgate.irccloud.com) has quit (Quit: )
2015-05-31 18:55:19	ToxicFrog	WindowsBunny: I already have a lot of stabbings queued up for not open-sourcing it and not making the modding API powerful enough that I could accomplish this through that instead, so
2015-05-31 18:55:23	ToxicFrog	I'll add it to the pile~
2015-05-31 18:55:52	<--	brainproxy (michael@moz-9vjtig.mo.charter.com) has quit (Ping timeout: 121 seconds)
2015-05-31 18:56:00	-->	derelm (derelm@moz-ckdh2n.dip0.t-ipconnect.de) has joined #rust
2015-05-31 18:56:07	-->	kgrandon (Adium@moz-jftkes.hjek.d045.0009.2601.IP) has joined #rust
2015-05-31 18:58:47	Wraithan	https://github.com/rust-lang/cargo/issues/1106 would be nice
2015-05-31 18:59:47	<--	ptx (ptx@moz-jqttnm.ga4r.qpd7.16d8.2001.IP) has quit (Ping timeout: 121 seconds)
2015-05-31 19:00:03	<--	Tomasito (Tomasito@moz-i7e745.res.rr.com) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-05-31 19:00:05	<--	maraoz (maraoz@moz-kdk.130.95.181.IP) has quit (Ping timeout: 121 seconds)
2015-05-31 19:00:12	derelm	i feel so stupid because i struggle with converting a &str to lowercase and reading the api docs doesn't help me as much as i'd love that. i am obviously a beginner coming from python. can someone help me how i need to use api docs to solve my problem? my current solution is something like: let str_lower = words.chars().map(|c| c.to_lowercase()).collect(); - that doesn't work though
2015-05-31 19:00:43	derelm	where words is actually my &str
2015-05-31 19:01:02	<--	jimmy (textual@moz-vld7pl.iinet.net.au) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-31 19:01:27	Dabo	derelm, changing the case of unicode strings is one place where rust hasn't quite figured out the best way to do it - it's a bit convoluted currently
2015-05-31 19:01:44	derelm	now the compiler tells me that it is unable to infer the type information and requires annotation to str_lower
2015-05-31 19:02:11	@niconii	derelm: to_lowercase isn't *entirely* implemented yet, because unicode is complicated
2015-05-31 19:02:14	@niconii	but basically, you want
2015-05-31 19:02:20	@niconii	playbot: let words = "HELLO World!"; words.chars().flat_map(char::to_lowercase).collect::<String>()
2015-05-31 19:02:22	--	Notice(playbot): "hello world!"
2015-05-31 19:02:50	<--	James (quassel@moz-8qs8a3.range86-148.btcentralplus.com) has quit (Ping timeout: 121 seconds)
2015-05-31 19:03:01	@niconii	flat_map(|c| char::to_lowercase(c)) would also work, it's just it's shorter to directly use the function
2015-05-31 19:03:24	--	irc: disconnected from server
2015-05-31 19:03:36	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-31 19:03:36	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-31 19:03:36	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-31 19:03:36	--	Channel #rust: 975 nicks (14 ops, 0 halfops, 1 voice, 960 normals)
2015-05-31 19:03:40	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-31 19:04:01	-->	zynisch_o7 (zynisch_o7@moz-6eh1ju.dyn.optonline.net) has joined #rust
2015-05-31 19:04:04	<--	imjacobclark (Mibbit@moz-5g68lp.range86-156.btcentralplus.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-31 19:04:15	@niconii	derelm: here's something to note: in unicode, there is not a one-to-one relationship between uppercase characters and their lowercase equivalents
2015-05-31 19:04:21	-->	frankmcsherry (frankmcsher@moz-n95jpn.adsl.alicedsl.de) has joined #rust
2015-05-31 19:04:26	<--	hhhhhhhhhh (mike@moz-969kuj.cable.virginm.net) has quit (Quit: WeeChat 1.2)
2015-05-31 19:04:54	@niconii	derelm: for instance, uppercase ß is "SS", not a single char
2015-05-31 19:05:36	--	irc: disconnected from server
2015-05-31 19:05:48	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-31 19:05:48	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-31 19:05:48	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-31 19:05:48	--	Channel #rust: 973 nicks (14 ops, 0 halfops, 1 voice, 958 normals)
2015-05-31 19:05:52	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-31 19:06:42	<--	simukis (nagisa@moz-8t068g.static.zebra.lt) has quit (Ping timeout: 121 seconds)
2015-05-31 19:06:47	derelm	reading flat_map documentation right now
2015-05-31 19:06:53	<--	gandalf (zbraniecki@moz-cp7c4m.ca.comcast.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-31 19:06:57	@niconii	so, you can't just use .map(), you have to use .flat_map(), which takes an iterator or anything that can be converted into an iterator, and joins or "flattens" it with the iterator as a whole, basically
2015-05-31 19:07:56	<--	jshs (jshs@moz-65qnc5.dip0.t-ipconnect.de) has quit (Client exited)
2015-05-31 19:08:03	<--	zynisch_o7 (zynisch_o7@moz-6eh1ju.dyn.optonline.net) has quit (Ping timeout: 121 seconds)
2015-05-31 19:08:26	<--	frankmcsherry (frankmcsher@moz-n95jpn.adsl.alicedsl.de) has quit (Ping timeout: 121 seconds)
2015-05-31 19:08:31	derelm	yeah i guess i tried to do .collect() withing my closure to achieve the same
2015-05-31 19:08:53	@niconii	if you used map, you'd end up with an iterator over iterators; flat_map flattens it into one long iterator
2015-05-31 19:09:14	-->	posix4e (posix4e@moz-m6vj7v.compute-1.amazonaws.com) has joined #rust
2015-05-31 19:16:16	--	irc: disconnected from server
2015-05-31 19:16:28	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-31 19:16:28	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-31 19:16:28	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-31 19:16:28	--	Channel #rust: 970 nicks (14 ops, 0 halfops, 1 voice, 955 normals)
2015-05-31 19:16:32	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-31 19:16:33	@niconii	derelm: char::to_lowercase(char) -> ToLowercase, an iterator
2015-05-31 19:16:45	-->	jeffasinger (jeff@moz-1j1qti.cable.mindspring.com) has joined #rust
2015-05-31 19:16:54	@niconii	derelm: char -> multiple chars basically
2015-05-31 19:16:57	<--	kent (kent@moz-nd2iqs.fl.atlanticbb.net) has quit (Ping timeout: 121 seconds)
2015-05-31 19:17:28	--	irc: disconnected from server
2015-05-31 19:17:40	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-31 19:17:40	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-31 19:17:40	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-31 19:17:40	--	Channel #rust: 970 nicks (14 ops, 0 halfops, 1 voice, 955 normals)
2015-05-31 19:17:44	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-31 19:17:50	derelm	i guess i thought that it is a function on some str because it had (self) in it signature where self probably only means that you can pass a char to it (because we're on char documentation)
2015-05-31 19:18:05	derelm	sorry - totally getting str and char wrong in my text
2015-05-31 19:18:28	derelm	but the self was what was the source of my misunderstanding i guess
2015-05-31 19:18:37	-->	dkreuter (knizz@moz-ks1p6p.vie.surfer.at) has joined #rust
2015-05-31 19:19:05	dkreuter	I got an error: chained comparison operators require parentheses, even though my expession was (a <= b <= c)
2015-05-31 19:19:06	@niconii	oh, right
2015-05-31 19:19:10	<--	Ms2ger (Ms2ger@moz-jig.287.180.91.IP) has quit (Ping timeout: 121 seconds)
2015-05-31 19:19:41	@niconii	derelm: that's because, with UFCS, char::to_lowercase('H') and 'H'.to_lowercase() are equivalent
2015-05-31 19:19:41	<--	aepsil0n (eduard@moz-cos00j.mv2h.pepi.8071.2a02.IP) has quit (Connection closed)
2015-05-31 19:19:42	nathan7	playbot: fn f(a: i32, b: i32, c: i32) -> bool { a <= b <= c }
2015-05-31 19:19:42	--	Notice(playbot): <anon>:9:50: 9:57 error: chained comparison operators require parentheses
2015-05-31 19:19:42	--	Notice(playbot): <anon>:9         fn f(a: i32, b: i32, c: i32) -> bool { a <= b <= c }
2015-05-31 19:19:42	--	Notice(playbot): output truncated; full output at: http://bit.ly/1K35L7L
2015-05-31 19:19:46	derelm	especially when coming from python self rings a bell in your head
2015-05-31 19:19:47	nathan7	playbot: fn f(a: i32, b: i32, c: i32) -> bool { (a <= b <= c) }
2015-05-31 19:19:48	--	Notice(playbot): <anon>:9:51: 9:58 error: chained comparison operators require parentheses
2015-05-31 19:19:48	--	Notice(playbot): <anon>:9         fn f(a: i32, b: i32, c: i32) -> bool { (a <= b <= c) }
2015-05-31 19:19:48	--	Notice(playbot): output truncated; full output at: http://bit.ly/1Fnvsu9
2015-05-31 19:19:54	nathan7	playbot: fn f(a: i32, b: i32, c: i32) -> bool { (a <= b) <= c }
2015-05-31 19:19:55	--	Notice(playbot): <anon>:9:60: 9:61 error: mismatched types:
2015-05-31 19:19:55	--	Notice(playbot):  expected `bool`,
2015-05-31 19:19:55	--	Notice(playbot): output truncated; full output at: http://bit.ly/1K35QIs
2015-05-31 19:19:56	bmcorser	last quick question before bed
2015-05-31 19:20:04	<--	dcb (textual@moz-j72nfe.ca.comcast.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-31 19:20:06	derelm	niconii yeah i'll have to get used to that
2015-05-31 19:20:10	_habnabit	http://is.gd/05XiXQ hm, my code is similar to this one, but in my real code, line 11 isn't being called
2015-05-31 19:20:11	bmcorser	does rust have something like python's subprocess in stdlib
2015-05-31 19:20:12	nathan7	dkreuter: we don't support Python-style chained comparison
2015-05-31 19:20:40	--	irc: disconnected from server
2015-05-31 19:20:52	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-31 19:20:52	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-31 19:20:52	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-31 19:20:52	--	Channel #rust: 968 nicks (14 ops, 0 halfops, 1 voice, 953 normals)
2015-05-31 19:20:56	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-31 19:20:58	nathan7	Associated Item Lookup Syntax
2015-05-31 19:21:06	bluss	bmcorser: yes, command
2015-05-31 19:21:07	dkreuter	nathan7, thank you
2015-05-31 19:21:11	@niconii	hmm, i thought !ails was added though
2015-05-31 19:21:25	nathan7	eddyb: why AILS over AIAIS? (associated item access syntax)
2015-05-31 19:21:28	@niconii	i've had to add a number of factoids today, actually...
2015-05-31 19:21:30	@niconii	!book
2015-05-31 19:21:30	+rustbot	The Rust Programming Language, read it online at http://doc.rust-lang.org/book/
2015-05-31 19:21:32	dkreuter	nathan7, I assumed that rust is like C in that regard, until I got that error message, which made me believe it works like python after all
2015-05-31 19:21:35	@niconii	!!!
2015-05-31 19:21:35	+rustbot	!!!!
2015-05-31 19:21:45	@niconii	well i guess rustbot hasn't been wiped or anything
2015-05-31 19:21:52	derelm	i probably skipped that part of the documentation where it teaches me about the self / acronym thing
2015-05-31 19:21:55	nathan7	dkreuter: nope, it just won't let you shoot yourself in the foot like C
2015-05-31 19:22:16	bluss	nathan7: there's an rfc issue for coming up with a better name
2015-05-31 19:22:34	derelm	or maybe it should just made more obvious :/ but i don't know how much bloat to put into the docs just to please some newcomers from other languages
2015-05-31 19:22:37	<--	F1skr (moscar@moz-e9439o.cpe.webspeed.dk) has quit (Quit: WeeChat 1.2)
2015-05-31 19:22:44	@niconii	guess someone just removed !ails
2015-05-31 19:23:01	@niconii	!ails
2015-05-31 19:23:07	@niconii	not case sensitive either, okay
2015-05-31 19:23:17	@niconii	!ufcs
2015-05-31 19:23:17	+rustbot	Universal Function Call Syntax (Type::Method(type)) - https://doc.rust-lang.org/book/ufcs.html | https://github.com/rust-lang/rfcs/blob/master/text/0132-ufcs.md
2015-05-31 19:23:24	@niconii	anyway, yeah, there's the info on ufcs
2015-05-31 19:23:34	derelm	yes, thanks a lot
2015-05-31 19:23:37	-->	thelink2012 (Mibbit@moz-etr.cua.214.186.IP) has joined #rust
2015-05-31 19:23:52	--	irc: disconnected from server
2015-05-31 19:24:04	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-05-31 19:24:04	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-05-31 19:24:04	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-05-31 19:24:04	--	Channel #rust: 968 nicks (14 ops, 0 halfops, 1 voice, 953 normals)
2015-05-31 19:24:08	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-05-31 19:24:13	@niconii	derelm: ufcs is relatively new in the scheme of things, so
2015-05-31 19:24:47	@niconii	derelm: depending on when you learned rust it might not have actually existed at the time
2015-05-31 19:25:02	thelink2012	are there plans for if/when the Fn<> syntax will be available for use?
2015-05-31 19:25:12	thelink2012	it'd be very useful
2015-05-31 19:25:38	@niconii	thelink2012: Fn<> syntax?
2015-05-31 19:26:02	derelm	niconii: i am just getting started so yeah i probably skipped that part of the book because i didn't realize what it is used for
2015-05-31 19:26:15	thelink2012	niconii: allowing using the Fn trait in a normal generic way, i.e. Fn(i32) == Fn<i32>
2015-05-31 19:26:18	thelink2012	ops
2015-05-31 19:26:25	thelink2012	Fn<(i32)> **
2015-05-31 19:26:29	@niconii	thelink2012: gotcha
2015-05-31 19:27:28	bluss	thelink2012: (i32, ) !
2015-05-31 19:27:29	thelink2012	niconii: No ideias if it's planned for the not-so-soon future? I don't quite understand why it's not allowed :(
2015-05-31 19:27:39	derelm	thanks a lot for helping - guess i'll revisite the book before going on :)
2015-05-31 19:27:47	-->	trecer (textual@moz-j75.ggr.125.98.IP) has joined #rust
2015-05-31 19:27:53	-->	tomaka (Pierre@moz-ppjd78.abo.wanadoo.fr) has joined #rust
2015-05-31 19:28:55	@niconii	thelink2012: no idea
2015-05-31 19:28:55	<--	derelm (derelm@moz-ckdh2n.dip0.t-ipconnect.de) has quit (Quit: Linkinus - http://linkinus.com)
2015-05-31 19:30:08	<--	nicknikolov (nicknikolov@moz-k0r.8sn.209.90.IP) has quit (Connection closed)
2015-05-31 19:30:16	woboats	What's cargo's behavior if you use a wildcard version? Will it update to the latest version whenever it polls the registry?
2015-05-31 19:31:19	-->	nstoddard_ (nstoddard@moz-srrb5f.ca.comcast.net) has joined #rust
2015-05-31 19:31:42	bluss	woboats: it doesn't do that, it will use the version last used (as saved in the Cargo.lock file)
2015-05-31 19:31:45	<--	pyon (pyon@moz-no9.411.236.190.IP) has quit (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
2015-05-31 19:31:46	<--	trecer (textual@moz-j75.ggr.125.98.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-31 19:31:58	-->	durka42 (Adium@moz-qsuual.pa.comcast.net) has joined #rust
2015-05-31 19:32:12	<--	nstoddard (nstoddard@moz-srrb5f.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-31 19:32:12	-->	ajhager (aajhager@moz-mcdsgi.iplsin.sbcglobal.net) has joined #rust
2015-05-31 19:32:15	--	nstoddard_ is now known as nstoddard
2015-05-31 19:32:42	nathan7	bluss: I'm aware
2015-05-31 19:33:07	woboats	bluss, so it binds to whatever version is the most recent version when add the dependency?
2015-05-31 19:33:10	_habnabit	http://is.gd/WX0KSg ok, so, why isn't drop being called here?
2015-05-31 19:33:24	_habnabit	in my code, drop is called /sometimes/ but not reliably
2015-05-31 19:33:37	<--	durka42 (Adium@moz-qsuual.pa.comcast.net) has quit (Quit: Leaving.)
2015-05-31 19:33:43	nathan7	thelink2012: when we have variadic generics, probably
2015-05-31 19:34:08	nathan7	thelink2012: Fn(…Ts) is basically a trick so we can postpone those without breaking compat
2015-05-31 19:34:23	bluss	woboats: * will match the most recent version
2015-05-31 19:34:32	SpaceManiac	_habnabit: I don't see anything that would cause drop to be called
2015-05-31 19:34:35	bluss	woboats: but cargo doesn't fetch new versions until cargo update
2015-05-31 19:34:37	_habnabit	SpaceManiac, mem::drop?
2015-05-31 19:34:46	SpaceManiac	all you're dropping is a *mut E
2015-05-31 19:34:51	woboats	bluss, okay, that makes sense
2015-05-31 19:34:58	_habnabit	SpaceManiac, oh
2015-05-31 19:35:02	<--	geri (Mibbit@moz-mn9f3k.highway.telekom.at) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-31 19:35:03	_habnabit	SpaceManiac, one sec
2015-05-31 19:35:03	<--	p32blo (p32blo@moz-v36o87.cpe.netcabo.pt) has quit (Ping timeout: 121 seconds)
2015-05-31 19:35:49	woboats	bluss: so whenever update is run, it will update to the latest version? (which is the same behavior of >=X.X.X?)
2015-05-31 19:36:39	_habnabit	SpaceManiac, ah, well, that would explain it i think
2015-05-31 19:36:50	_habnabit	"cannot move out of dereference of unsafe pointer"
2015-05-31 19:36:50	-->	joshua-g (joshuag@moz-pv72fm.res.rr.com) has joined #rust
2015-05-31 19:37:06	_habnabit	so if all i have is a *mut E, how can i drop it?
2015-05-31 19:37:15	<--	ismaelga (ismaelga@moz-m9v.8r3.251.188.IP) has quit (Connection closed)
2015-05-31 19:38:34	bluss	woboats: I'm not sure about >= etc, there are so many operators for semver :)
2015-05-31 19:38:41	SpaceManiac	_habnabit: maybe std::ptr::read_and_drop ?
2015-05-31 19:38:47	woboats	bluss, yeah :-\
2015-05-31 19:39:10	_habnabit	SpaceManiac, ah, unstable though
2015-05-31 19:39:31	SpaceManiac	you could ptr::read and manually clear the source
2015-05-31 19:39:35	-->	dcb (textual@moz-j72nfe.ca.comcast.net) has joined #rust
2015-05-31 19:39:48	-->	blank_name (blank_name@moz-j00b3g.mi.frontiernet.net) has joined #rust
2015-05-31 19:39:49	_habnabit	SpaceManiac, what do you mean by 'manually clear the source'?
2015-05-31 19:40:07	-->	alaska (alaska@moz-8bdjem.fios.verizon.net) has joined #rust
2015-05-31 19:40:35	<--	willem (willem@moz-facs2s.dynamic.upc.nl) has quit (Quit: leaving)
2015-05-31 19:40:42	--	kimundi is now known as zz_kimundi
2015-05-31 19:40:56	<--	ogham (rally@moz-91e3hp.cable.virginm.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-31 19:41:08	SpaceManiac	something along the lines of zeroing it, or otherwise mark it as dropped in your own code, s.t. you won't read from it again
2015-05-31 19:41:09	-->	Guest (textual@moz-k34.uju.171.183.IP) has joined #rust
2015-05-31 19:41:26	bluss	_habnabit: mem::drop is only for dropping objects by moving them out of scope
2015-05-31 19:41:43	SpaceManiac	the docs on ptr::read talk about this
2015-05-31 19:42:03	_habnabit	SpaceManiac, ah, yeah, this is for a C API compatible rust library, so it's being called from C code that is supposed to free the referenced memory immediately after calling this function
2015-05-31 19:42:12	_habnabit	bluss, okay
2015-05-31 19:42:37	bluss	it has a confusing name
2015-05-31 19:42:39	_habnabit	SpaceManiac, ok, yeah, i saw what ptr::read said but i wasn't sure if you were talking about the same thing
2015-05-31 19:42:53	bluss	it should just be `consume` or something
2015-05-31 19:42:59	_habnabit	is it possible to make mem::drop warn if you pass it a & or &mut? haha
2015-05-31 19:43:04	-->	ismaelga (ismaelga@moz-m9v.8r3.251.188.IP) has joined #rust
2015-05-31 19:43:16	<--	erz (erz@moz-fiq1tl.broadband.corbina.ru) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-31 19:43:18	_habnabit	seems like there's no situation in which it would make sense to do anything but pass mem::drop an owned thing
2015-05-31 19:43:45	bluss	well a reference is a value that can be owned too but, I know what you mean
2015-05-31 19:44:09	<--	alaska (alaska@moz-8bdjem.fios.verizon.net) has quit (Ping timeout: 121 seconds)
2015-05-31 19:44:11	-->	kent (kent@moz-nd2iqs.fl.atlanticbb.net) has joined #rust
2015-05-31 19:44:31	_habnabit	but, there's no way to make a generic function specifically allow references, right?
2015-05-31 19:44:37	-->	meunierd (dmeunier@moz-glf54u.cpe.sourcecable.net) has joined #rust
2015-05-31 19:44:39	_habnabit	er
2015-05-31 19:44:41	_habnabit	specifically disallow
2015-05-31 19:44:51	-->	zhoeon (fc@moz-cuhqb2.cable.teksavvy.com) has joined #rust
2015-05-31 19:45:38	bluss	not really, but you can use T: 'static
2015-05-31 19:46:00	bluss	that disallows all borrowed data
2015-05-31 19:46:07	bluss	non-'statically borrowed
2015-05-31 19:46:15	<--	Enjolras (enjolras@moz-p7mo8q.ovh) has quit (Ping timeout: 121 seconds)
2015-05-31 19:46:25	zhoeon	Hi I keep getting "`[u8]` does not have a constant size known at compile-time" on a struct containing a Vec member. What might be the issue?
2015-05-31 19:46:34	-->	jimmy (textual@moz-6dl.30q.45.175.IP) has joined #rust
2015-05-31 19:46:45	_habnabit	oh! okay, finally i understand why some things specifically wanted a + 'static annotation on types
2015-05-31 19:46:51	_habnabit	i was like, how the heck do you create a type at runtime
2015-05-31 19:47:00	<--	hoverbear (hoverbear@moz-665.6hv.18.72.IP) has quit (Quit: WeeChat 1.1.1)
2015-05-31 19:47:10	woboats	zhoeon, could you post the relevant parts of your code to play.rust-lang.org ?
2015-05-31 19:47:55	_habnabit	but, okay. does that mean the lifetime of T (and not &T or &mut T) is 'static ?
2015-05-31 19:48:35	-->	ogham (rally@moz-91e3hp.cable.virginm.net) has joined #rust
2015-05-31 19:48:45	_habnabit	also yaaaay now my drop is always being called
2015-05-31 19:49:10	<--	sedrik (sedrik@moz-gvmbt7.se.alltele.net) has quit (Ping timeout: 121 seconds)
2015-05-31 19:49:15	-->	bbloom (bbloom@moz-mmuemv.wa.comcast.net) has joined #rust
2015-05-31 19:49:34	bluss	T: 'static says something about the contents of T
2015-05-31 19:49:48	bluss	i32 is 'static but &i32 is not, unless it's &'static i32
2015-05-31 19:50:01	bbloom	"cannot transmute to or from a type that contains type parameters in its interior" -- why not?
2015-05-31 19:50:28	bluss	bbloom: can't make sure sizes of types match up
2015-05-31 19:50:41	zhoeon	woboats: Here it is http://is.gd/oaTlJi
2015-05-31 19:50:44	bbloom	bluss: i am 100% sure the sizes match up
2015-05-31 19:50:55	bbloom	and always will
2015-05-31 19:50:59	_habnabit	bluss, so what non-reference type would have a non-'static lifetime?
2015-05-31 19:51:00	-->	abcrawf (abcrawf@moz-11rs77.acrawford.com) has joined #rust
2015-05-31 19:51:11	talchas	zhoeon: Path is unsized, like str
2015-05-31 19:51:24	bbloom	presumably transmute has to trust you know what you're doing
2015-05-31 19:51:26	SpaceManiac	_habnabit: a type which has a non-'static lifetime parameter
2015-05-31 19:51:36	woboats	zhoeon, that's a very unhelpful error! as talchas said, the problem is Path
2015-05-31 19:51:38	<--	arBmind1 (Andreas@moz-rvrdem.dyn.telefonica.de) has quit (Quit: Leaving.)
2015-05-31 19:51:38	_habnabit	SpaceManiac, ah! okay
2015-05-31 19:51:41	bluss	_habnabit: std::slice::Iter<'a> or anything that carries a borrow
2015-05-31 19:51:43	talchas	PathBuf is the equivalent of String, which owns its data
2015-05-31 19:51:58	-->	sedrik (sedrik@moz-gvmbt7.se.alltele.net) has joined #rust
2015-05-31 19:52:02	_habnabit	so a type without a lifetime parameter is inferred to be 'static
2015-05-31 19:52:25	bluss	yes
2015-05-31 19:52:45	_habnabit	ok that makes a lot more sense now
2015-05-31 19:52:46	zhoeon	woboats: oh thank you. Yes the error did not make sense to me.
2015-05-31 19:53:08	-->	Enjolras (enjolras@moz-p7mo8q.ovh) has joined #rust
2015-05-31 19:53:20	woboats	zhoeon, yeah, you're getting that error because the Path data is stored internally as a [u8]
2015-05-31 19:54:11	woboats	zhoeon, if you want to file an issue with the main repo about that error message being unclear, it would be helpful!
2015-05-31 19:54:36	-->	gsingh93 (gulshan@moz-ln1ktu.st3l.iv8o.0004.2601.IP) has joined #rust
2015-05-31 19:54:41	zhoeon	woboats: Ok will do. Thanks again. Got my code working now.
2015-05-31 19:55:14	_habnabit	man tho rust is so great
2015-05-31 19:55:21	-->	njn (chatzilla@moz-01sv7l.iinet.net.au) has joined #rust
2015-05-31 19:55:29	-->	summerlight_ (summerlight@moz-99k.2mj.130.121.IP) has joined #rust
2015-05-31 19:56:33	<--	dkreuter (knizz@moz-ks1p6p.vie.surfer.at) has quit (Quit: Ex-Chat)
2015-05-31 19:57:17	<--	emk- (mk@moz-v8jscg.dynamic.chello.pl) has quit (Quit: Leaving)
2015-05-31 19:57:50	-->	eckhardt (eckhardt@moz-0b0.bm2.248.98.IP) has joined #rust
2015-05-31 19:58:56	<--	spider-mario (spidermario@moz-meu9c6.wb.wifirst.net) has quit (Ping timeout: 121 seconds)
2015-05-31 20:00:04	-->	starless (starless@moz-u9gmm1.res.rr.com) has joined #rust
2015-05-31 20:03:37	<--	Nextra (Nextra@moz-te0a43.ewe-ip-backbone.de) has quit (Connection closed)
2015-05-31 20:03:38	-->	maximih (maximih@moz-0r2bjb.bredband.telia.com) has joined #rust
2015-05-31 20:05:09	fkaa	amen
2015-05-31 20:06:28	<--	Enjolras (enjolras@moz-p7mo8q.ovh) has quit (Ping timeout: 121 seconds)
2015-05-31 20:07:40	<--	maximih (maximih@moz-0r2bjb.bredband.telia.com) has quit (Ping timeout: 121 seconds)
2015-05-31 20:08:16	bbloom	what does the "interior" of a type mean specifically?
2015-05-31 20:08:28	bbloom	it's fields?
2015-05-31 20:09:11	@niconii	bbloom: yes
2015-05-31 20:09:29	<--	Jesin (Jesin@moz-qb9.79h.16.107.IP) has quit (Quit: Leaving)
2015-05-31 20:09:34	-->	blaphmat (Mibbit@moz-tpjl46.co.comcast.net) has joined #rust
2015-05-31 20:09:57	-->	brainproxy (michael@moz-9vjtig.mo.charter.com) has joined #rust
2015-05-31 20:11:31	bbloom	i realize i *am* fighting the system, but it feels much harder than it should be - i'm trying to make a single-field wrapper type which encapsulates a block of memory to give me accessors for the layout of my objects in a VM-heap design
2015-05-31 20:12:21	bbloom	but the more i try to do that, the harder the compiler seems to push back
2015-05-31 20:12:41	<--	ismaelga (ismaelga@moz-m9v.8r3.251.188.IP) has quit (Connection closed)
2015-05-31 20:13:54	-->	kimwonyong (kimwonyong@moz-gfp.vhi.163.221.IP) has joined #rust
2015-05-31 20:14:46	WindowsBunny	bbloom: You just gotta know the tricks to how to make the compiler submissive
2015-05-31 20:14:56	<--	brainproxy (michael@moz-9vjtig.mo.charter.com) has quit (Ping timeout: 121 seconds)
2015-05-31 20:15:12	bbloom	ok, so i know for a fact that i'm trying to do a safe transmute, but i get an error due to interior type variable
2015-05-31 20:15:17	bbloom	is there a transmute w/o the static size check?
2015-05-31 20:15:24	bbloom	i have knowledge here that the compiler does not
2015-05-31 20:15:57	WindowsBunny	bbloom: What types are you trying to transmute?
2015-05-31 20:16:35	<--	colinsurprenant (colin@moz-q9ee1n.74.electronicbox.net) has quit (Client exited)
2015-05-31 20:16:45	-->	colinsurprenant (colin@moz-q9ee1n.74.electronicbox.net) has joined #rust
2015-05-31 20:16:47	bbloom	so i have a trait Block which i implement on [u64;4], [u64;8], etc for some various object sizes
2015-05-31 20:16:53	bbloom	then i have Object(T: Block)
2015-05-31 20:17:06	WindowsBunny	So Object is a DST
2015-05-31 20:17:19	bbloom	DST = dynamically sized type?
2015-05-31 20:17:22	WindowsBunny	yes
2015-05-31 20:17:31	bbloom	no, object is parameterized by T
2015-05-31 20:17:35	WindowsBunny	ah, okay
2015-05-31 20:17:37	bbloom	so i guess it's Object<T>(T: Block)
2015-05-31 20:17:37	<--	slimsag (Mibbit@moz-qrnu8n.ph.cox.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-31 20:17:42	bbloom	and for any given T, it's statically sized
2015-05-31 20:17:46	WindowsBunny	Object<T: Block>(T)
2015-05-31 20:17:55	bbloom	yeah, sorry, still learning the sytnax
2015-05-31 20:18:11	bbloom	anyway, want to transmute a [u16;8] (which implements block) to an Object
2015-05-31 20:18:21	bbloom	and i want to do this generically for any Block implementation
2015-05-31 20:18:33	bbloom	and since Block is private, i know that the only implementations are properly sized
2015-05-31 20:18:45	bbloom	(because i made them that way)
2015-05-31 20:18:55	bluss	you can also mark a trait unsafe if you want to rely on such things
2015-05-31 20:19:09	bbloom	what does it mean for a trait to be unsafe?
2015-05-31 20:19:24	bluss	bbloom: only that you have to say `unsafe` when implementing it
2015-05-31 20:20:09	bbloom	bluss: ok, well Block isn't part of my public API, so i don't really care if other people know it's safe or not
2015-05-31 20:20:15	bbloom	but sure, i can do that
2015-05-31 20:20:17	thelink2012	the correct way to convert a & ref into a * pointer is by transmuting?
2015-05-31 20:20:35	WindowsBunny	thelink2012: & will actually implicitly cast to *
2015-05-31 20:20:47	WindowsBunny	thelink2012: And you can also cast with `as`
2015-05-31 20:21:05	-->	andreabedini (andreabedin@moz-2lt49q.unimelb.edu.au) has joined #rust
2015-05-31 20:21:35	thelink2012	WindowsBunny: Ah cool
2015-05-31 20:21:52	bbloom	anyway, i meant [u64;8] i want to transmute, but it doesn't matter - same problem: transmute doens't know the sizes match, but i do
2015-05-31 20:21:57	WindowsBunny	thelink2012: If you use transmute, you're opening the window for accidentally transforming a mouse into an elephant
2015-05-31 20:22:03	Layl	huh wait, so I can do: "impl MyTrait for Rc<RefCell<MyStruct>>"?
2015-05-31 20:22:20	<--	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-31 20:22:29	WindowsBunny	Layl: You can impl local traits for any type you want
2015-05-31 20:22:38	WindowsBunny	ANYTHING
2015-05-31 20:22:39	<--	alk (alk@moz-ca9n1r.3a32.t5om.0e34.2a01.IP) has quit (Ping timeout: 121 seconds)
2015-05-31 20:22:54	Layl	those generics combinations are what's interesting to me
2015-05-31 20:23:15	WindowsBunny	Layl: Yes, you can impl on specific instantiations of generic types
2015-05-31 20:23:26	<--	bluss (bluss@moz-ec5o68.cust.bredbandsbolaget.se) has quit (Ping timeout: 121 seconds)
2015-05-31 20:23:32	Layl	I've been for the last 20 minutes been trying to figure out how to solve a tricky dynamic dispatch-ish problem with traits
2015-05-31 20:23:35	Layl	and this just fixes it
2015-05-31 20:23:53	WindowsBunny	Layl: You're welcome
2015-05-31 20:24:35	bbloom	WindowsBunny: bluss: is there some kind of extra-unsafe transmute?
2015-05-31 20:24:59	SpaceManiac	bbloom: you could transmute between references
2015-05-31 20:25:19	WindowsBunny	bbloom: The problem is that since transmute works directly on values, the compiler can only generate code for valid transmutes between equally sized things
2015-05-31 20:25:28	Layl	quick question, does anyone know what the rust equivalent of C#'s .Select is?
2015-05-31 20:25:29	<--	phore (phore@moz-p8hanb.cable.rogers.com) has quit (Quit: if you're seeing this, i ran out of coffee. send help.)
2015-05-31 20:25:37	WindowsBunny	its not that it doesn't trust you, it just can't generate the code
2015-05-31 20:25:57	WindowsBunny	Layl: What does C#'s select do?
2015-05-31 20:26:29	bbloom	WindowsBunny: ah, ok - that makes some sense, but in this case the sizes can be known statically - is there a way to hint it? like the Sized trait or something else i don't quite understand yet?
2015-05-31 20:26:30	Layl	basically: [5, 2].select(|num| num + 1) would result in [6, 3]
2015-05-31 20:26:43	WindowsBunny	Layl: You mean map?
2015-05-31 20:26:51	Layl	map does sound like what I'm looking for
2015-05-31 20:26:59	bbloom	https://doc.rust-lang.org/stable/src/core/marker.rs.html#64-66
2015-05-31 20:27:09	bbloom	seems really weird to me that the Sized trait represents "size is known" but not "the size is X"
2015-05-31 20:27:24	WindowsBunny	bbloom: There is an implicit Sized bound on all type parameters anyway, I think
2015-05-31 20:27:24	bbloom	i would expect a `fn size() -> usize`
2015-05-31 20:27:28	Layl	searching "rust map" of course gives me a map of the game rust
2015-05-31 20:27:46	WindowsBunny	>using a search engine instead of the rust docs search
2015-05-31 20:27:53	JustAPerson	Layl: https://doc.rust-lang.org/stable/std/iter/trait.Iterator.html#method.map
2015-05-31 20:27:58	Layl	thanks
2015-05-31 20:27:59	bbloom	WindowsBunny: in reality, it *does* know the size of the types... after the paramters are instantiated. it's just trying to type check it before isntantiation. if i changed to a macro, this would work
2015-05-31 20:28:19	bbloom	i'd just have to explicitly instantiate the closed set of type params
2015-05-31 20:28:32	WindowsBunny	bbloom: Write a macro to explicitly instantiate all the ones you want
2015-05-31 20:28:38	<--	zhoeon (fc@moz-cuhqb2.cable.teksavvy.com) has quit (Ping timeout: 121 seconds)
2015-05-31 20:28:49	<--	Wild_Cat (Max@moz-2clr66.dsl.teksavvy.com) has quit (Ping timeout: 121 seconds)
2015-05-31 20:28:52	<--	kimwonyong (kimwonyong@moz-gfp.vhi.163.221.IP) has quit (Connection closed)
2015-05-31 20:29:12	WindowsBunny	bbloom: Rust has to guarantee that for a given generic method/struct/whatever that all possible instantiations will compile correctly
2015-05-31 20:29:16	<--	eckhardt (eckhardt@moz-0b0.bm2.248.98.IP) has quit (Connection closed)
2015-05-31 20:29:26	-->	eckhardt (eckhardt@moz-0b0.bm2.248.98.IP) has joined #rust
2015-05-31 20:29:39	bbloom	WindowsBunny: if Sized knew the size, it could
2015-05-31 20:29:50	WindowsBunny	bbloom: And since there's no way to express in generics that two types have the same size
2015-05-31 20:30:02	-->	minot2 (kkus@moz-7vb.ru4.234.165.IP) has joined #rust
2015-05-31 20:30:37	Layl	hm, how do I turn an iterator back into a vector
2015-05-31 20:30:44	WindowsBunny	bbloom: When Rust gets type level integers then it'll open the possibility of having an implicit trait for every type with a integer parameter specifying the size
2015-05-31 20:30:50	Layl	so, collapse the entire thing and release all borrows
2015-05-31 20:30:53	-->	zhoeon (fc@moz-cuhqb2.cable.teksavvy.com) has joined #rust
2015-05-31 20:30:54	WindowsBunny	bbloom: so that you'd be able to say that two types have the same size
2015-05-31 20:31:04	WindowsBunny	bbloom: But that's far in the future still
2015-05-31 20:31:07	XMPPwocky	Layl: what sort of iterator
2015-05-31 20:31:24	WindowsBunny	Layl: When the iterator goes out of scope
2015-05-31 20:31:33	<--	nyx (nyx@moz-ivelpd.res.rr.com) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-31 20:31:36	Layl	WindowsBunny, I want the resulting data from the iterator though
2015-05-31 20:31:39	<--	Guest (textual@moz-k34.uju.171.183.IP) has quit (Ping timeout: 121 seconds)
2015-05-31 20:31:41	WindowsBunny	Layl: .collect()
2015-05-31 20:31:51	Layl	ah alright, thanks
2015-05-31 20:32:29	Layl	woo now it crashes the way I want it to
2015-05-31 20:32:35	WindowsBunny	Layl: nice
2015-05-31 20:32:39	<--	kgrandon (Adium@moz-jftkes.hjek.d045.0009.2601.IP) has quit (Quit: Leaving.)
2015-05-31 20:32:57	-->	ismaelga (ismaelga@moz-51pldl.rev.vodafone.pt) has joined #rust
2015-05-31 20:33:03	_habnabit	so, design/testing question: i'm working on a rust library that attemtps to fit to an existing C API, and i just added some bits to catch rust panics before they bubble up into C frames. i'm not sure what the best way to test those bits would be. it seems like in this case, panics would be more indicative of logic failures and not part of normal operation, and as such i'm not sure what the best way of sayi
2015-05-31 20:33:03	_habnabit	ng "hey, i'm making sure a /real/ failure would be caught" would be. having a public API-level "set_panic_mode" method that makes the next method call panic seems like a bad idea too
2015-05-31 20:33:24	<--	jaen (jaen@moz-ifmik2.copit.pl) has quit (Quit: WeeChat 1.1.1)
2015-05-31 20:34:14	Layl	_habnabit, if I'm understanding right, this sounds like a job for unit tests
2015-05-31 20:35:16	-->	Wild_Cat (Max@moz-2clr66.dsl.teksavvy.com) has joined #rust
2015-05-31 20:35:46	_habnabit	Layl, perhaps. the catch-panics bits are a macro, so maybe use the macro to define a function only called from the tests?
2015-05-31 20:36:03	_habnabit	c_expose!{ panic!("whatever") } or so
2015-05-31 20:36:58	<--	zhoeon (fc@moz-cuhqb2.cable.teksavvy.com) has quit (Quit: leaving)
2015-05-31 20:37:47	Layl	well you don't want to expose code that just ends up being only used in testing
2015-05-31 20:37:59	_habnabit	yeah, i was thinking that too
2015-05-31 20:38:19	-->	alaska (alaska@moz-8bdjem.fios.verizon.net) has joined #rust
2015-05-31 20:38:36	<--	meunierd (dmeunier@moz-glf54u.cpe.sourcecable.net) has quit (Ping timeout: 121 seconds)
2015-05-31 20:38:52	Layl	you would almost think it might be the best to make the macro part of a separate crate, which you then test by itself
2015-05-31 20:39:04	Layl	would be a quite vocal way just to keep the api clean and test the macro at the same time
2015-05-31 20:39:30	Layl	unless you've got more things you could put into that crate as well as some sort of utilities library for making C APIs
2015-05-31 20:39:45	_habnabit	Layl, the macro is fairly specific to my crate, but i could generalize it a bit..
2015-05-31 20:39:58	_habnabit	it might be useful for other people exposing C APIs from rust
2015-05-31 20:40:36	Layl	I've really gotta go but could someone tell _habnabit if you can conditional compile code in a library for testing only?
2015-05-31 20:40:46	Layl	iirc you can
2015-05-31 20:40:48	<--	Layl (Layl@moz-65hqmf.direct-adsl.nl) has quit (Quit: Leaving)
2015-05-31 20:41:07	<--	SerialVelocity (SerialVeloc@moz-attia0.cable.virginm.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-31 20:41:58	<--	gyro (gyro@moz-ukm.h91.222.64.IP) has quit (Ping timeout: 121 seconds)
2015-05-31 20:44:35	-->	mib_llih4j (Mibbit@moz-p494t5.or.comcast.net) has joined #rust
2015-05-31 20:44:50	<--	mib_llih4j (Mibbit@moz-p494t5.or.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-31 20:45:10	<--	fkaa (tundmatu@moz-abdgko.cust.tele2.se) has quit (Ping timeout: 121 seconds)
2015-05-31 20:45:45	SpaceManiac	#[cfg(test)]
2015-05-31 20:45:55	_habnabit	you can put that on anything?
2015-05-31 20:46:37	SpaceManiac	should be able to
2015-05-31 20:46:42	_habnabit	neat
2015-05-31 20:47:43	-->	jdm (jdm@moz-ilbt2e.cable.teksavvy.com) has joined #rust
2015-05-31 20:47:43	--	Mode #rust [+o jdm] by ChanServ
2015-05-31 20:50:26	<--	maxymajzr (maxy@moz-5o2c6t.net.t-com.hr) has quit (Ping timeout: 121 seconds)
2015-05-31 20:51:28	<--	idegen (greg@moz-9c4nle.or.frontiernet.net) has quit (Quit: Leaving.)
2015-05-31 20:51:48	<--	Robozman (quassel@moz-8u1nuj.dyn.optonline.net) has quit (A TLS packet with unexpected length was received.)
2015-05-31 20:51:55	-->	ygrek (user@moz-8j9aeu.org.ua) has joined #rust
2015-05-31 20:52:07	-->	jedireza (jedireza@moz-allpoi.ca.comcast.net) has joined #rust
2015-05-31 20:52:12	<--	jeffasinger (jeff@moz-1j1qti.cable.mindspring.com) has quit (Client exited)
2015-05-31 20:52:45	-->	zynisch_o7 (zynisch_o7@moz-6eh1ju.dyn.optonline.net) has joined #rust
2015-05-31 20:53:53	-->	davebettin (textual@moz-acc.cl4.35.72.IP) has joined #rust
2015-05-31 20:54:58	-->	gyro (gyro@moz-ukm.h91.222.64.IP) has joined #rust
2015-05-31 20:55:04	<--	ahartzheim (ahartzheim@moz-5uk5u4.tor-exit.network) has quit (Ping timeout: 121 seconds)
2015-05-31 20:55:23	-->	pyon (pyon@moz-no9.411.236.190.IP) has joined #rust
2015-05-31 20:55:29	<--	panicbit (panicbit@moz-t203th.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2015-05-31 20:56:09	<--	amnn (amnn@moz-ro1qqu.ox.ac.uk) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-05-31 20:56:47	<--	zynisch_o7 (zynisch_o7@moz-6eh1ju.dyn.optonline.net) has quit (Ping timeout: 121 seconds)
2015-05-31 20:57:05	<--	{AS} (uid45026@moz-gt5061.highgate.irccloud.com) has quit (Quit: Connection closed for inactivity)
2015-05-31 20:57:17	<--	pyon (pyon@moz-no9.411.236.190.IP) has quit (Client exited)
2015-05-31 20:57:37	-->	pyon (pyon@moz-no9.411.236.190.IP) has joined #rust
2015-05-31 20:58:51	<--	ogham (rally@moz-91e3hp.cable.virginm.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-31 20:59:25	<--	nstoddard (nstoddard@moz-srrb5f.ca.comcast.net) has quit (Quit: ChatZilla 0.9.91.1 [Firefox 38.0.1/20150513174244])
2015-05-31 21:00:40	@huon	aatch: woah, nice benchmarks
2015-05-31 21:01:28	aatch	huon, thanks.
2015-05-31 21:01:47	thelink2012	huon: Do you know if there's a milestone to make the Fn<> syntax available?
2015-05-31 21:02:39	@huon	aatch: I'm trying it myself now :D
2015-05-31 21:02:58	<--	BossKonaSegway (Michael@moz-vp8rf7.res.rr.com) has quit (Ping timeout: 121 seconds)
2015-05-31 21:02:58	@huon	thelink2012: I'm not sure what you mean?
2015-05-31 21:03:04	@huon	thelink2012: Fn(...) -> ... works now?
2015-05-31 21:03:34	thelink2012	huon: Yes but being able to use the Fn trait with the usual generic syntax, i.e. Fn<(i32)> for Fn(i32) for instance
2015-05-31 21:03:53	@huon	thelink2012: what are you trying to do?
2015-05-31 21:04:33	thelink2012	huon: impl<Args, Out: Into<CallbackReturn>, F: 'static> Callback<Args> for F where F: FnMut(Args) -> Out {
2015-05-31 21:04:48	thelink2012	Currently it means a function that receives a tuple of arguments
2015-05-31 21:04:52	aatch	huon, I've found all sorts of bugs in the process of adding benchmarks and similar. Random number testing is surprisingly good at generating cases that hit all sorts of assertions.
2015-05-31 21:04:53	-->	maximih (maximih@moz-0r2bjb.bredband.telia.com) has joined #rust
2015-05-31 21:04:53	amstrad	^ verbosiry
2015-05-31 21:04:59	amstrad	*verbosity
2015-05-31 21:05:08	thelink2012	if the Fn<> syntax was available it'd allow me to be really arguments not a tuple containg the arguments
2015-05-31 21:06:12	XMPPwocky	is rusti on stable
2015-05-31 21:07:06	@huon	aatch: nice
2015-05-31 21:07:29	@huon	aatch: you're pretty damn close to gmp! https://gist.github.com/huonw/c703416e82be6964a69b
2015-05-31 21:07:48	XMPPwocky	aatch: you should try afl.rs
2015-05-31 21:07:50	<--	blaphmat (Mibbit@moz-tpjl46.co.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-05-31 21:07:59	@huon	aatch: (and even faster for 50 x 50, apparently!)
2015-05-31 21:08:02	-->	frozen (Mibbit@moz-tpjl46.co.comcast.net) has joined #rust
2015-05-31 21:08:41	@huon	aatch: incidentally I was reading the GMP docs, and apparently they've found that numbers with long strings of 0s and long strings of 1s trigger more edge cases
2015-05-31 21:08:55	<--	maximih (maximih@moz-0r2bjb.bredband.telia.com) has quit (Ping timeout: 121 seconds)
2015-05-31 21:09:04	@huon	thelink2012: I don't know of any roadmap
2015-05-31 21:09:49	aatch	huon, yeah, turns out there's a nice pattern to the result of (B^n - 1)(B^m - 1) that makes it nice and easy to test.
2015-05-31 21:10:57	-->	esclear_ (esclear@moz-7hlp7k.dip0.t-ipconnect.de) has joined #rust
2015-05-31 21:10:58	-->	BossKonaSegway (Michael@moz-vp8rf7.res.rr.com) has joined #rust
2015-05-31 21:11:07	thelink2012	huon: 'kay then :(
2015-05-31 21:11:10	@huon	aatch: it's like 111...1110111...1110111...1110 (i.e. 3 zeros) right?
2015-05-31 21:11:23	@huon	oh, no, that's wrong :(
2015-05-31 21:11:26	@huon	aatch: what's the pattern?
2015-05-31 21:11:42	<--	meh (meh@moz-e56g7l.42-151.net24.it) has quit (Ping timeout: 121 seconds)
2015-05-31 21:11:47	-->	zhuli (zhuli@moz-d2d.7sg.64.112.IP) has joined #rust
2015-05-31 21:12:26	aatch	huon, no, its some number of (B - 1) digits, followed by a (B - 2) digit followed by more (B - 1) digits, then some number of zeros and finally a single 1 in the least-significant digit.
2015-05-31 21:12:43	aatch	huon, the numbers in each section are determined by n and m
2015-05-31 21:12:50	@huon	ah, right
2015-05-31 21:12:56	@huon	I was close-ish :P
2015-05-31 21:13:31	<--	esclear (esclear@moz-rsqfao.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2015-05-31 21:15:24	-->	hoverbear (hoverbear@moz-665.6hv.18.72.IP) has joined #rust
2015-05-31 21:16:13	aatch	I also just figured out why I was getting memory corruption issues in mul_unbalanced. Turns out the amount of temporary storage I need is slightly more than I was allocating.
2015-05-31 21:17:01	<--	BossKonaSegway (Michael@moz-vp8rf7.res.rr.com) has quit (Ping timeout: 121 seconds)
2015-05-31 21:17:06	-->	BossKonaSegway (Michael@moz-vp8rf7.res.rr.com) has joined #rust
2015-05-31 21:17:27	aatch	Stupid well-written allocator giving me exactly adjacent blocks of memory for sequential allocations...
2015-05-31 21:17:27	@huon	aatch: whoops
2015-05-31 21:18:46	aatch	huon, I based the amount I needed on the multiplication in the loop, forgetting that I have a multiplication after the loop too...
2015-05-31 21:19:00	-->	dpc (dpc@moz-t6gr4b.ca.comcast.net) has joined #rust
2015-05-31 21:19:32	-->	hjr3 (hradtke@moz-e235ok.fios.verizon.net) has joined #rust
2015-05-31 21:19:49	@huon	haha
2015-05-31 21:20:10	@huon	I wonder if a fully-checked-memory-access debug mode would be helpful?
2015-05-31 21:20:36	aatch	huon, also, are the filenames in that benchmark the right way around? Cos it looks like Ramp is the first one and GMP the second one.
2015-05-31 21:20:51	aatch	huon, but the filenames suggest otherwise.
2015-05-31 21:21:07	@huon	aatch: oh, yeah, whoops :(
2015-05-31 21:21:14	@huon	aatch: but still, ramp is close
2015-05-31 21:21:23	@huon	aatch: (btw, if you're interested in popcounting, I heard https://crates.io/crates/hamming is pretty good :P )
2015-05-31 21:22:20	<--	davebettin (textual@moz-acc.cl4.35.72.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-31 21:22:35	<--	whipsch (whipsch@moz-bl4i0b.from.irc.camp) has quit (Ping timeout: 121 seconds)
2015-05-31 21:23:17	<--	w4ffles (textual@moz-34v1r4.res.rr.com) has quit (Quit: Textual IRC Client: www.textualapp.com)
2015-05-31 21:23:28	aatch	huon, heh, I'll get to that once I've done the other bit-wise operations. I'm doing shl and shr right now (testing that `x << n == x * 2^n` triggered a bunch of issues in multiplication).
2015-05-31 21:24:38	-->	brainproxy (michael@moz-9vjtig.mo.charter.com) has joined #rust
2015-05-31 21:24:52	<--	ismaelga (ismaelga@moz-51pldl.rev.vodafone.pt) has quit (Connection closed)
2015-05-31 21:25:27	-->	ismaelga (ismaelga@moz-51pldl.rev.vodafone.pt) has joined #rust
2015-05-31 21:25:36	-->	playjax (chatzilla@moz-6ssl7m.optusnet.com.au) has joined #rust
2015-05-31 21:26:01	-->	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has joined #rust
2015-05-31 21:27:15	amstrad	does this code look correct http://is.gd/gBr5qu?
2015-05-31 21:27:42	-->	esgeh1 (sg@moz-b6k5jt.dyn.telefonica.de) has joined #rust
2015-05-31 21:28:34	<--	esgeh (sg@moz-0kil93.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2015-05-31 21:29:29	<--	ismaelga (ismaelga@moz-51pldl.rev.vodafone.pt) has quit (Ping timeout: 121 seconds)
2015-05-31 21:29:29	-->	kimwonyong (kimwonyong@moz-gfp.vhi.163.221.IP) has joined #rust
2015-05-31 21:29:58	@huon	amstrad: is there a reason you've used borrow_mut() instead of just borrow() in list? (borrow() is more flexible)
2015-05-31 21:31:10	-->	whipsch (whipsch@moz-bl4i0b.from.irc.camp) has joined #rust
2015-05-31 21:33:13	-->	SerialVelocity (SerialVeloc@moz-attia0.cable.virginm.net) has joined #rust
2015-05-31 21:33:23	<--	SerialVelocity (SerialVeloc@moz-attia0.cable.virginm.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-31 21:33:31	<--	kimwonyong (kimwonyong@moz-gfp.vhi.163.221.IP) has quit (Ping timeout: 121 seconds)
2015-05-31 21:33:34	<--	andars (andars@moz-bsldst.sntcca.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-31 21:34:43	-->	huhlig-home (huhlig@moz-tjdhp2.hfc.comcastbusiness.net) has joined #rust
2015-05-31 21:35:09	amstrad	huon: no reason at all
2015-05-31 21:35:18	amstrad	i guess i could use a borrow()
2015-05-31 21:35:46	amstrad	huon: is there any automatic coersion going on with these RefCell's etc 
2015-05-31 21:36:15	-->	phore (phore@moz-p8hanb.cable.rogers.com) has joined #rust
2015-05-31 21:36:16	amstrad	i note that Box implicitly casts to its appropriate boxed value
2015-05-31 21:37:21	-->	wg (wg@moz-sbi2ha.ocn.ne.jp) has joined #rust
2015-05-31 21:39:23	aatch	huon, ooo, that hamming distance/weight stuff is pretty nice, and it'd be fairly easy to integrate Ramp into it.
2015-05-31 21:40:15	@huon	amstrad: I'm not sure what you mean by "implicitly casts"
2015-05-31 21:40:36	amstrad	huon: me either, don't worry :)
2015-05-31 21:40:38	@huon	but pointer/pointer-like types like Box and Ref/RefMut will automatically dereference to their contents
2015-05-31 21:40:51	@huon	allowing method calls and field accesses with just .
2015-05-31 21:40:57	-->	Outlander (Mr@moz-77evo5.compute.amazonaws.com) has joined #rust
2015-05-31 21:40:58	aatch	huon, It might be worthwhile marking some of those functions as #[inline] to get cross-crate inlining.
2015-05-31 21:41:03	amstrad	huon: right, that is what i mean
2015-05-31 21:41:11	@huon	(and they implement many of the "basic" traits to delegate to their contents)
2015-05-31 21:41:22	@huon	aatch: I'm not sure how valuable it would be
2015-05-31 21:41:47	@huon	aatch: specifically, it doesn't seem like there'd be much benefit since it's a big chunk of code doing one thing?
2015-05-31 21:42:30	<--	cjwelborn (cjwelborn@moz-np6hed.al.charter.com) has quit (Quit: sys.exit(1))
2015-05-31 21:43:05	-->	skeuomorf (skeuomorf@moz-a8h.ni9.32.197.IP) has joined #rust
2015-05-31 21:44:05	aatch	huon, ah, I read it a little more closely, since you fall back to the naive impl when there are less than 30*8 bytes, it's really unlikely to ever return `err`
2015-05-31 21:45:40	@huon	aatch: are you looking at `distance`?
2015-05-31 21:45:45	aatch	huon, yep.
2015-05-31 21:46:12	<--	ajhager (aajhager@moz-mcdsgi.iplsin.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-05-31 21:47:04	-->	ajhager (aajhager@moz-mcdsgi.iplsin.sbcglobal.net) has joined #rust
2015-05-31 21:47:04	-->	annodomini (lambda@moz-qgii5v.ma.comcast.net) has joined #rust
2015-05-31 21:47:55	<--	dcb (textual@moz-j72nfe.ca.comcast.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-05-31 21:49:17	<--	p1start (p1start@moz-nftjhe.org) has quit (Ping timeout: 121 seconds)
2015-05-31 21:49:25	-->	doomrobo (doomrobo@moz-tj2e6v.261j.6edk.2000.2604.IP) has joined #rust
2015-05-31 21:49:34	-->	cdidd_ (cdidd@moz-c38vr7.broadband.corbina.ru) has joined #rust
2015-05-31 21:49:55	<--	mcpherrin (mcpherrin@moz-fl0kt2.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2015-05-31 21:50:02	<--	gyro (gyro@moz-ukm.h91.222.64.IP) has quit (Connection closed)
2015-05-31 21:50:42	-->	c74d3 (c74d3a4ebb6@moz-l85t2q.mggc.hibn.4404.2002.IP) has joined #rust
2015-05-31 21:51:09	<--	cdidd (cdidd@moz-b3smji.broadband.corbina.ru) has quit (Ping timeout: 121 seconds)
2015-05-31 21:52:21	<--	c74d (c74d3a4ebb6@moz-0ersgu.oc.cox.net) has quit (Ping timeout: 121 seconds)
2015-05-31 21:52:31	--	c74d3 is now known as c74d
2015-05-31 21:54:10	-->	frankmcsherry (frankmcsher@moz-n95jpn.adsl.alicedsl.de) has joined #rust
2015-05-31 21:55:37	-->	dcb (textual@moz-j72nfe.ca.comcast.net) has joined #rust
2015-05-31 21:56:34	<--	c74d (c74d3a4ebb6@moz-l85t2q.mggc.hibn.4404.2002.IP) has quit (Connection closed)
2015-05-31 21:56:45	-->	c74d (c74d3a4ebb6@moz-gadv8g.mggc.hibn.4404.2002.IP) has joined #rust
2015-05-31 21:58:12	<--	frankmcsherry (frankmcsher@moz-n95jpn.adsl.alicedsl.de) has quit (Ping timeout: 121 seconds)
2015-05-31 21:58:32	Wilduck	Is there anyway to catch/capture integer overflow as a runtime error rather than a panic?
2015-05-31 21:58:40	<--	phore (phore@moz-p8hanb.cable.rogers.com) has quit (Quit: if you're seeing this, i ran out of coffee. send help.)
2015-05-31 21:59:03	-->	Lee1092 (uid13277@moz-p2e1ii.brockwell.irccloud.com) has joined #rust
2015-05-31 21:59:04	@niconii	Wilduck: try .checked_add() and friends
2015-05-31 21:59:37	Wilduck	niconii: Ahhh, wonderful! Thank you!
2015-05-31 22:00:07	<--	kecolus (kecolus@moz-i7cb3r.fios.verizon.net) has quit (Quit: Leaving)
2015-05-31 22:00:29	aatch	Wilduck, there's a set of methods that return a tuple of the result and a bool of whether or not the operation overflowed.
2015-05-31 22:01:32	-->	choplin (choplin@moz-qkm9un.ap.nuro.jp) has joined #rust
2015-05-31 22:02:19	<--	jdm (jdm@moz-ilbt2e.cable.teksavvy.com) has quit (Quit: )
2015-05-31 22:02:30	@niconii	right, the OverflowingOps trait (though that's unstable)
2015-05-31 22:03:10	<--	choplin (choplin@moz-qkm9un.ap.nuro.jp) has quit (Connection closed)
2015-05-31 22:03:29	<--	huhlig-home (huhlig@moz-tjdhp2.hfc.comcastbusiness.net) has quit (Quit: Leaving)
2015-05-31 22:05:31	-->	__ixti__ (ixti@moz-i3d.dae.119.188.IP) has joined #rust
2015-05-31 22:05:34	aatch	I always get a kick out of publishing a new version of a crate.
2015-05-31 22:05:53	-->	maximih (maximih@moz-0r2bjb.bredband.telia.com) has joined #rust
2015-05-31 22:06:04	<--	Morten (Morten@moz-8sq5uv.bb.online.no) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-05-31 22:06:46	-->	popow (Thunderbird@moz-03f.kd0.252.223.IP) has joined #rust
2015-05-31 22:08:21	<--	_ixti_ (ixti@moz-i3d.dae.119.188.IP) has quit (Ping timeout: 121 seconds)
2015-05-31 22:08:37	aatch	I also find it amusing that the documentation for `Int` is about 7/8ths trait implementations.
2015-05-31 22:09:55	<--	maximih (maximih@moz-0r2bjb.bredband.telia.com) has quit (Ping timeout: 121 seconds)
2015-05-31 22:10:03	-->	EspressoDan (EspressoDan@moz-gnsthu.dynamic.ashlandfiber.net) has joined #rust
2015-06-01 17:35:10	--	irc: disconnected from server
2015-06-01 17:36:22	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-06-01 17:36:22	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-06-01 17:36:22	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-06-01 17:36:22	--	Channel #rust: 1045 nicks (18 ops, 0 halfops, 1 voice, 1026 normals)
2015-06-01 17:36:26	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-06-01 17:36:26	<--	EspressoDan (EspressoDan@moz-gnsthu.dynamic.ashlandfiber.net) has quit (Ping timeout: 121 seconds)
2015-06-01 17:36:26	--	EspressoDan_ is now known as EspressoDan
2015-06-01 17:37:29	--	irc: disconnected from server
2015-06-01 17:37:41	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-06-01 17:37:41	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-06-01 17:37:41	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-06-01 17:37:41	--	Channel #rust: 1045 nicks (18 ops, 0 halfops, 1 voice, 1026 normals)
2015-06-01 17:37:45	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-06-01 17:37:51	<--	eric_lagergren (barsonme@moz-lr1hrn.wa.comcast.net) has quit (Ping timeout: 121 seconds)
2015-06-01 17:38:41	--	irc: disconnected from server
2015-06-01 17:38:54	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-06-01 17:38:54	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-06-01 17:38:54	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-06-01 17:38:54	--	Channel #rust: 1041 nicks (18 ops, 0 halfops, 1 voice, 1022 normals)
2015-06-01 17:38:57	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-06-01 17:39:40	<--	davebettin (textual@moz-acc.cl4.35.72.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-06-01 17:40:00	--	irc: disconnected from server
2015-06-01 17:40:11	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-06-01 17:40:11	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-06-01 17:40:11	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-06-01 17:40:11	--	Channel #rust: 1039 nicks (18 ops, 0 halfops, 1 voice, 1020 normals)
2015-06-01 17:40:15	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-06-01 17:40:18	-->	davebettin (textual@moz-acc.cl4.35.72.IP) has joined #rust
2015-06-01 17:40:36	-->	OtterCoder (quassel@moz-g03bp8.onrq.kn87.100e.2600.IP) has joined #rust
2015-06-01 17:40:37	<--	joneshf-laptop (joneshf@moz-l4h.b5s.208.98.IP) has quit (Ping timeout: 121 seconds)
2015-06-01 17:41:16	-->	DemonOne (Avi@moz-noogk5.red.bezeqint.net) has joined #rust
2015-06-01 17:41:51	-->	essem2 (Thunderbird@moz-top3er.sd.cox.net) has joined #rust
2015-06-01 17:42:03	<--	Rym (y@moz-mhu.sd4.38.217.IP) has quit (Ping timeout: 121 seconds)
2015-06-01 17:42:15	<--	vosen (vosen@moz-mtm1g4.dynamic.chello.pl) has quit (Quit: Leaving)
2015-06-01 17:42:42	<--	Lilly (Lilly@moz-pfkvo9.bredband.comhem.se) has quit (Quit: bajs)
2015-06-01 17:42:42	jethrogb	I don't understand this type definition http://hyper.rs/mime.rs/mime/struct.Mime.html
2015-06-01 17:42:56	jethrogb	what does the equals sign do?
2015-06-01 17:43:02	jethrogb	where can I read about this syntax?
2015-06-01 17:44:11	--	irc: disconnected from server
2015-06-01 17:44:22	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-06-01 17:44:22	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-06-01 17:44:22	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-06-01 17:44:23	--	Channel #rust: 1039 nicks (18 ops, 0 halfops, 1 voice, 1020 normals)
2015-06-01 17:44:26	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-06-01 17:45:22	--	irc: disconnected from server
2015-06-01 17:45:35	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-06-01 17:45:35	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-06-01 17:45:35	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-06-01 17:45:35	--	Channel #rust: 1039 nicks (18 ops, 0 halfops, 1 voice, 1020 normals)
2015-06-01 17:45:38	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-06-01 17:46:05	<--	nicknikolov (nicknikolov@moz-k0r.8sn.209.90.IP) has quit (Connection closed)
2015-06-01 17:46:17	<--	essem2 (Thunderbird@moz-top3er.sd.cox.net) has quit (Client exited)
2015-06-01 17:46:59	<--	fyolnish (fyolnish@moz-dvgkni.so-net.ne.jp) has quit (Ping timeout: 121 seconds)
2015-06-01 17:47:08	<--	lenstr (lenstr@moz-9fj.vju.25.171.IP) has quit (A TLS packet with unexpected length was received.)
2015-06-01 17:47:22	-->	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has joined #rust
2015-06-01 17:47:26	-->	fyolnish (fyolnish@moz-dvgkni.so-net.ne.jp) has joined #rust
2015-06-01 17:47:30	-->	nicoch (nicoch@moz-g02d7k.be) has joined #rust
2015-06-01 17:47:51	<--	EspressoDan (EspressoDan@moz-gnsthu.dynamic.ashlandfiber.net) has quit (Client exited)
2015-06-01 17:48:20	<--	jdm (jdm@moz-uvd6cm.ckpj.s0pt.0450.2001.IP) has quit (A TLS packet with unexpected length was received.)
2015-06-01 17:48:41	-->	pyon (pyon@moz-hpl.0ml.7.179.IP) has joined #rust
2015-06-01 17:48:53	-->	jdm (jdm@moz-uvd6cm.ckpj.s0pt.0450.2001.IP) has joined #rust
2015-06-01 17:48:53	--	Mode #rust [+o jdm] by ChanServ
2015-06-01 17:49:52	<--	Wilduck (erik@moz-q7f.8fo.42.70.IP) has quit (Client exited)
2015-06-01 17:50:24	<--	mujou (mujou@moz-rko6lo.ocn.ne.jp) has quit (Quit: Leaving...)
2015-06-01 17:51:34	-->	irobevjodu (ident@moz-5bq.k90.254.5.IP) has joined #rust
2015-06-01 17:51:44	<--	tmtwd (tmtwd@moz-0kkm5n.cable.rogers.com) has quit (Ping timeout: 121 seconds)
2015-06-01 17:51:59	<--	Excureo (c@moz-7mf6lg.wa.charter.com) has quit (A TLS packet with unexpected length was received.)
2015-06-01 17:52:12	<--	SerialVelocity (SerialVeloc@moz-attia0.cable.virginm.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-06-01 17:52:19	-->	mib_m1me85 (Mibbit@moz-jkmvo7.static.wiline.com) has joined #rust
2015-06-01 17:52:52	<--	achernya_ (quassel@moz-i01917.mit.edu) has quit (Ping timeout: 121 seconds)
2015-06-01 17:53:56	<--	mib_m1me85 (Mibbit@moz-jkmvo7.static.wiline.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-06-01 17:55:30	-->	ajtulloch (ajtulloch@moz-cee.9o0.201.199.IP) has joined #rust
2015-06-01 17:55:35	<--	larhat (Adium@moz-vlo5br.cable.virginm.net) has quit (Quit: Leaving.)
2015-06-01 17:55:45	<--	flavius (flavius@moz-u9kqrk.graz.surfer.at) has quit (Ping timeout: 121 seconds)
2015-06-01 17:56:23	jethrogb	reem: I can't compile hyper with https://github.com/hyperium/mime.rs/pull/21
2015-06-01 17:56:27	-->	tristanseifert (tristanseif@moz-r0t7ns.res.rr.com) has joined #rust
2015-06-01 17:57:00	-->	rudolph (rudolph@moz-8ep84p.o3k5.dsq9.010d.2620.IP) has joined #rust
2015-06-01 17:57:19	reem	jethrogb: I'm just about to board a flight, but ask me again later and I can help.
2015-06-01 17:57:30	<--	espadrine_ (tyl@moz-l019mn.fbx.proxad.net) has quit (Ping timeout: 121 seconds)
2015-06-01 17:57:39	jethrogb	ok
2015-06-01 17:57:49	<--	Cu3rv0 (Mibbit@moz-8r79fh.as43234.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2015-06-01 17:58:46	<--	F1skr (moscar@moz-e9439o.cpe.webspeed.dk) has quit (Quit: WeeChat 1.2)
2015-06-01 17:59:03	-->	Excureo (c@moz-7mf6lg.wa.charter.com) has joined #rust
2015-06-01 17:59:43	<--	Excureo (c@moz-7mf6lg.wa.charter.com) has quit (A TLS packet with unexpected length was received.)
2015-06-01 18:00:50	<--	coryforsyth (coryforsyth@moz-hpsim2.fios.verizon.net) has quit (Client exited)
2015-06-01 18:01:03	<--	jaen (jaen@moz-ifmik2.copit.pl) has quit (Quit: WeeChat 1.1.1)
2015-06-01 18:01:49	<--	Racquetball (namestolenw@moz-dnlovt.cpe.twtelecom.net) has quit (Quit: leaving)
2015-06-01 18:02:19	<--	rmdashrf (rmdashrf@moz-ecr.kjm.54.128.IP) has quit (Quit: WeeChat 0.4.2)
2015-06-01 18:03:45	<--	jakevn (jakevn@moz-0agbgk.miamfl.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-06-01 18:04:22	-->	khades1 (Thunderbird@moz-qgd.3vk.74.212.IP) has joined #rust
2015-06-01 18:05:01	-->	achernya (quassel@moz-i01917.mit.edu) has joined #rust
2015-06-01 18:05:10	-->	eac (eac@moz-9dnbq4.fkdv.ulf6.3c01.2600.IP) has joined #rust
2015-06-01 18:05:24	<--	paupau_ (grrrr@moz-7l1.1cg.90.208.IP) has quit (Ping timeout: 121 seconds)
2015-06-01 18:05:37	-->	Porkepix (Porkepix@moz-e1bv2v.rev.sfr.net) has joined #rust
2015-06-01 18:05:39	<--	ai (ai@moz-pqofrl.sunline.net.ua) has quit (Quit: Leaving.)
2015-06-01 18:05:50	<--	ahal (ahal@moz-b8e0a0.cpe.pppoe.ca) has quit (A TLS packet with unexpected length was received.)
2015-06-01 18:06:05	<--	khades (Thunderbird@moz-qgd.3vk.74.212.IP) has quit (Ping timeout: 121 seconds)
2015-06-01 18:06:11	-->	binkarus (textual@moz-014tff.ca.comcast.net) has joined #rust
2015-06-01 18:06:18	<--	kmicu (kmicu@moz-uga.edn.218.91.IP) has quit (Client exited)
2015-06-01 18:06:24	-->	nicknikolov (nicknikolov@moz-k0r.8sn.209.90.IP) has joined #rust
2015-06-01 18:06:57	<--	Guest67 (textual@moz-8aocg9.ri.cox.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-06-01 18:07:09	<--	ziocroc2 (ziocroc@moz-bfu.33o.74.151.IP) has quit (Client exited)
2015-06-01 18:07:14	<--	vortex (vortex@moz-skqfhn.novotelecom.ru) has quit (Ping timeout: 121 seconds)
2015-06-01 18:07:25	<--	doxavore (doxavore@moz-8bg7sd.tx.charter.com) has quit (Quit: Textual IRC Client: www.textualapp.com)
2015-06-01 18:07:42	-->	paupau (grrrr@moz-7l1.1cg.90.208.IP) has joined #rust
2015-06-01 18:08:31	<--	__mark__ (mark@moz-udut16.dynamic.chello.pl) has quit (Ping timeout: 121 seconds)
2015-06-01 18:08:47	-->	fengshaun (fengshaun@moz-oagll1.cpe.pppoe.ca) has joined #rust
2015-06-01 18:08:48	-->	frankmcsherry (frankmcsher@moz-4qeb8a.cable.virginm.net) has joined #rust
2015-06-01 18:09:46	<--	fabianvf (fabianvf@moz-j12.dim.197.216.IP) has quit (Connection closed)
2015-06-01 18:09:54	-->	colinsurprenant (colin@moz-q9ee1n.74.electronicbox.net) has joined #rust
2015-06-01 18:11:40	<--	gaveen (gaveen@moz-kmf.h08.157.175.IP) has quit (A TLS packet with unexpected length was received.)
2015-06-01 18:12:04	<--	eckhardt (eckhardt@moz-s9e.ov1.227.199.IP) has quit (Connection closed)
2015-06-01 18:12:12	<--	eibwen (eibwen@moz-7ovl3b.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2015-06-01 18:14:06	-->	gandalf (zbraniecki@moz-u3dg2t.sfo1.mozilla.com) has joined #rust
2015-06-01 18:14:40	-->	Rym (y@moz-mhu.sd4.38.217.IP) has joined #rust
2015-06-01 18:17:07	<--	Azdle (Azdle@moz-fv6arh.mn.comcast.net) has quit (Quit: Leaving)
2015-06-01 18:17:22	-->	Excureo (c@moz-7mf6lg.wa.charter.com) has joined #rust
2015-06-01 18:18:39	<--	fredrik (fredrik@moz-2b08ue.priv.bahnhof.se) has quit (Ping timeout: 121 seconds)
2015-06-01 18:19:32	-->	jimb (user@moz-09a.i8g.126.207.IP) has joined #rust
2015-06-01 18:20:45	<--	ajhager (aajhager@moz-mcdsgi.iplsin.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-06-01 18:22:00	-->	anruh (tanuki@moz-asohbh.dyn.optonline.net) has joined #rust
2015-06-01 18:22:57	<--	gopar (gopar@moz-5039uj.ca.comcast.net) has quit (A TLS packet with unexpected length was received.)
2015-06-01 18:24:01	-->	eckhardt (eckhardt@moz-s9e.ov1.227.199.IP) has joined #rust
2015-06-01 18:24:44	<--	ptalbot (ptalbot@moz-j4gnuh.fbx.proxad.net) has quit (Ping timeout: 121 seconds)
2015-06-01 18:25:59	<--	nicoch (nicoch@moz-g02d7k.be) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-06-01 18:26:23	-->	JuggleTux (tux@moz-svr61d.cust.swisscom.ch) has joined #rust
2015-06-01 18:26:44	-->	eric_lagergren (barsonme@moz-e0h.6s0.39.134.IP) has joined #rust
2015-06-01 18:26:45	<--	meg34 (meg34@moz-fuq9dk.wh.tu-darmstadt.de) has quit (Ping timeout: 121 seconds)
2015-06-01 18:26:58	<--	fyolnish (fyolnish@moz-dvgkni.so-net.ne.jp) has quit (Ping timeout: 121 seconds)
2015-06-01 18:27:34	--	bentley|away is now known as bentley
2015-06-01 18:27:39	-->	fyolnish (fyolnish@moz-dvgkni.so-net.ne.jp) has joined #rust
2015-06-01 18:27:49	-->	summerlight_ (summerlight@moz-99k.2mj.130.121.IP) has joined #rust
2015-06-01 18:28:03	<--	eckhardt (eckhardt@moz-s9e.ov1.227.199.IP) has quit (Ping timeout: 121 seconds)
2015-06-01 18:28:38	-->	eckhardt (eckhardt@moz-s9e.ov1.227.199.IP) has joined #rust
2015-06-01 18:29:09	<--	fkaa (tundmatu@moz-501od2.business.telia.com) has quit (Ping timeout: 121 seconds)
2015-06-01 18:29:12	jethrogb	can I put a closure in a const?
2015-06-01 18:29:24	<--	jshs (jshs@moz-g20s6n.dip0.t-ipconnect.de) has quit (Client exited)
2015-06-01 18:29:57	<--	hroi (hroi@moz-d273ub.static.netgroup.dk) has quit (Ping timeout: 121 seconds)
2015-06-01 18:30:17	@bstrie	jethrogb: good question
2015-06-01 18:30:50	jethrogb	I'm having a hard time doing so
2015-06-01 18:31:48	<--	joshua-g (joshuag@moz-nve.5de.71.64.IP) has quit (Ping timeout: 121 seconds)
2015-06-01 18:31:52	kimundi	jethrogb: In theory its possible, but afaik it ices atm
2015-06-01 18:32:04	@bstrie	kimundi: I can't even get it to compile
2015-06-01 18:32:14	@bstrie	kimundi: http://is.gd/i6IjZG
2015-06-01 18:32:19	kimundi	playbot: const F: &'static Fn() -> u8 = &|| 42; F()
2015-06-01 18:32:20	--	Notice(playbot): error: internal compiler error: no type for node 65: expr 42 (id=65) in fcx 0x7f0931feeff8
2015-06-01 18:32:21	--	Notice(playbot): note: the compiler unexpectedly panicked. this is a bug.
2015-06-01 18:32:21	--	Notice(playbot): output truncated; full output at: http://bit.ly/1EQ3GVQ
2015-06-01 18:32:22	--	bentley is now known as bentley|away
2015-06-01 18:32:44	kimundi	bstrie: &'lifetime expr is invalid syntax :)
2015-06-01 18:32:55	kimundi	bstrie: Its just &expr
2015-06-01 18:32:55	@bstrie	aha
2015-06-01 18:33:02	@bstrie	I thought consts were differerent
2015-06-01 18:33:06	<--	OtterCoder (quassel@moz-g03bp8.onrq.kn87.100e.2600.IP) has quit (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
2015-06-01 18:33:08	@bstrie	dem consts
2015-06-01 20:08:44	-->	ubeatlenine (david@moz-30lmkk.nh.comcast.net) has joined #rust
2015-06-01 20:08:44	--	Topic for #rust is "1.0 is here! http://blog.rust-lang.org/2015/05/15/Rust-1.0.html | Rust general discussion | Playground http://play.rust-lang.org/ | Forum http://users.rust-lang.org/ | Conduct http://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust "
2015-06-01 20:08:44	--	Topic set by niconii (nicole@moz-hnv1fo.frgo.qwest.net) on Sun, 24 May 2015 17:40:53
2015-06-01 20:08:44	--	Channel #rust: 985 nicks (16 ops, 0 halfops, 1 voice, 968 normals)
2015-06-01 20:08:46	--	Channel created on Mon, 05 Dec 2011 23:19:50
2015-06-01 20:09:01	-->	chao-tic (chao@moz-258.4aj.101.218.IP) has joined #rust
2015-06-01 20:09:06	aatch	jethrogb, also, eliding the 'a from &'a T is much different from eliding from T<'a>
2015-06-01 20:09:09	-->	Wild_Cat (Max@moz-1idsr5.dsl.teksavvy.com) has joined #rust
2015-06-01 20:09:19	<--	chao-tic (chao@moz-258.4aj.101.218.IP) has quit (Quit: WeeChat 1.0.1)
2015-06-01 20:09:21	XMPPwocky	aatch: +1
2015-06-01 20:09:22	-->	chao-tic (chao@moz-258.4aj.101.218.IP) has joined #rust
2015-06-01 20:10:07	-->	mcoffin (mcoffin@moz-hrs.16d.54.128.IP) has joined #rust
2015-06-01 20:10:09	<--	maximih (maximih@moz-0r2bjb.bredband.telia.com) has quit (Ping timeout: 121 seconds)
2015-06-01 20:11:10	-->	demilux (demilux@moz-fk1.kt4.14.64.IP) has joined #rust
2015-06-01 20:11:26	aatch	At the very least, being able to throw `#![warn(elided_lifetime_params)]` at the top of a file would help a lot with figuring out why some code won't compile. Assuming the warnings can be shown before the errors occur.
2015-06-01 20:12:07	-->	Murarth_ (Murarth@moz-60m.b85.166.46.IP) has joined #rust
2015-06-01 20:12:08	jethrogb	seanmonstar: I don't like that hyper::server::response::Response.write(&[]) signifies stream end
2015-06-01 20:12:14	<--	Murarth (Murarth@moz-jpotpi.phnx.qwest.net) has quit (NickServ (RECOVER command used by Murarth_))
2015-06-01 20:12:14	--	Murarth_ is now known as Murarth
2015-06-01 20:12:42	jethrogb	it's not part of the Write "interface"
2015-06-01 20:12:57	-->	kent (kent@moz-nd2iqs.fl.atlanticbb.net) has joined #rust
2015-06-01 20:13:12	-->	ashish01 (textual@moz-jl6.9o0.201.199.IP) has joined #rust
2015-06-01 20:13:24	ashish01	Hi
2015-06-01 20:13:33	-->	kimwonyong (kimwonyong@moz-gfp.vhi.163.221.IP) has joined #rust
2015-06-01 20:13:49	-->	hjr3 (hradtke@moz-lei.av4.169.69.IP) has joined #rust
2015-06-01 20:14:25	&mbrubeck	Hello
2015-06-01 20:14:26	-->	skeuomorf (skeuomorf@moz-a8h.ni9.32.197.IP) has joined #rust
2015-06-01 20:14:50	ashish01	I mostly work with C++ and have too many times fought with LD_LIBRARY_PATH, liking/loading and in general trying to create statically linked exes
2015-06-01 20:15:05	ashish01	Does rust provide some better alternatives here
2015-06-01 20:15:31	&mbrubeck	ashish01: Rust has a build tool "cargo" which will set library paths and such automatically.
2015-06-01 20:15:33	ashish01	Can rust create binaries such that when I do ldd rust-bin.exe I get a vert small list
2015-06-01 20:15:40	-->	errordeveloper (ilya@moz-ono.0eu.201.90.IP) has joined #rust
2015-06-01 20:15:41	ashish01	*very
2015-06-01 20:15:42	<--	ajtulloch (ajtulloch@moz-ao5.9o0.201.199.IP) has quit (Ping timeout: 121 seconds)
2015-06-01 20:15:46	@cmr	ashish01: Not particularly, but if you stay inside the warm walls of Cargo, it works well.
2015-06-01 20:15:59	@cmr	Yes, it's very easy to create executables which only depend on libc and other system libs.
2015-06-01 20:16:01	&mbrubeck	ashish01: But under the hood, Rust is still using the C linker, with many of the associated pluses and minuses.
2015-06-01 20:16:05	seanmonstar	jethrogb: hm?
2015-06-01 20:16:33	aatch	ashish01, yes and no. It's certainly possible, but it's no easier or harder than in C++ (well maybe easier given we have Cargo)
2015-06-01 20:16:44	ashish01	I see
2015-06-01 20:16:50	<--	blank_name (blank_name@moz-j00b3g.mi.frontiernet.net) has quit (Ping timeout: 121 seconds)
2015-06-01 20:17:07	-->	orangeshark (erik@moz-6emd9r.44tj.56ot.0306.2602.IP) has joined #rust
2015-06-01 20:17:15	jethrogb	seanmonstar: HttpWriter "overloads" write(&[]) to infer end-of-response
2015-06-01 20:17:37	<--	ajhager (aajhager@moz-mcdsgi.iplsin.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-06-01 20:17:44	aatch	But nothing in Rust-the-language makes it fundamentally easier to avoid static linking.
2015-06-01 20:18:17	ashish01	@aatch: C++ is defiantly harder. Just going through all -static-lib* flags in gcc and its not fun
2015-06-01 20:18:19	ashish01	:)
2015-06-01 20:18:22	jethrogb	seanmonstar: this means when you write(my_func()) and my_func happens to return something with size 0, it ends response
2015-06-01 20:18:24	<--	demilux (demilux@moz-fk1.kt4.14.64.IP) has quit (A TLS packet with unexpected length was received.)
2015-06-01 20:18:48	ashish01	*definitely  
2015-06-01 20:18:51	-->	blank_name (blank_name@moz-j00b3g.mi.frontiernet.net) has joined #rust
2015-06-01 20:19:00	seanmonstar	jethrogb: HttpWriter doesn't treat &[] special
2015-06-01 20:19:28	-->	demilux (demilux@moz-fk1.kt4.14.64.IP) has joined #rust
2015-06-01 20:19:36	seanmonstar	jethrogb: https://github.com/hyperium/hyper/blob/master/src/http.rs#L289
2015-06-01 20:20:15	jethrogb	seanmonstar: well, yes and no... chuncked transfer-encoding defines a 0-sized chunk as the end
2015-06-01 20:20:18	<--	Fiveside (fiveside@moz-t2eatg.vsp.com) has quit (Ping timeout: 121 seconds)
2015-06-01 20:20:37	seanmonstar	if you're sending a chunked body, the 0 sized chunk signifies body end in the spec
2015-06-01 20:20:55	<--	nowhere_man (pierre@moz-8so0ig.abo.wanadoo.fr) has quit (Ping timeout: 121 seconds)
2015-06-01 20:21:30	jethrogb	seanmonstar: right, and that is not part of the "Write" spec
2015-06-01 20:21:58	seanmonstar	theyre orthogonal
2015-06-01 20:22:26	jethrogb	seanmonstar: not really, because I can't just hand off my HttpWriter to something that takes a Write and expect it to work in all cases
2015-06-01 20:22:27	seanmonstar	its not illegal to end a chunked body, but then start writing a new response (in fact, http2 does this as normal)
2015-06-01 20:23:31	<--	demilux (demilux@moz-fk1.kt4.14.64.IP) has quit (Ping timeout: 121 seconds)
2015-06-01 20:23:41	seanmonstar	however, i could see adding a check higher up to never trigger a &[] write from `request.write()`
2015-06-01 20:24:26	-->	tschottdorf (tobias@moz-d021av.aipg.hajb.2000.2604.IP) has joined #rust
2015-06-01 20:24:37	rillian	nrc: how is rustfmt different from rust-fmt?
2015-06-01 20:24:45	-->	davebettin (textual@moz-acc.cl4.35.72.IP) has joined #rust
2015-06-01 20:24:47	Nashenas88	What can I do to improve compilation? Currently, after pulling updates from git, and then running make, I usually have to wait several HOURS before the compulation is done. I run make with “make -j 2” (I have a dual core processor)
2015-06-01 20:25:07	aatch	Nashenas88, is this for the compiler?
2015-06-01 20:25:08	seanmonstar	Nashenas88: compiling rustc?
2015-06-01 20:25:12	thelink2012	hmmmm would I turn this into life, turning arrays into slices? http://is.gd/2qfzwd even if there's a horribly expressive syntax behind it I'm able to use a macro on this case.
2015-06-01 20:25:22	aatch	Nashenas88, if so, that's slower than normal, but not unexpected.
2015-06-01 20:25:47	aatch	Nashenas88, especially if you have a less-powerful machine (which it's dual-core status suggests).
2015-06-01 20:25:58	@nrc	rillian: they are different projects. I think rust-fmt hasn't seen much work in a while, although I believe there is a fork which was active (I haven't checked in a while). The technical difference is that rustfmt reqwrites the AST, rust-fmt starts with tokens and makes it's own pseudo-AST
2015-06-01 20:26:00	seanmonstar	aatch: ive seen that long if 1) you have low memory, 2) llvm needs to rebuilt
2015-06-01 20:26:09	jethrogb	seanmonstar: ok. I just wanted to bring this to your attention before considering filing an issue
2015-06-01 20:26:18	<--	SerialVelocity_ (SerialVeloc@moz-attia0.cable.virginm.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-06-01 20:26:20	-->	mcpherrin (mcpherrin@moz-clk6gh.ca.comcast.net) has joined #rust
2015-06-01 20:26:21	Nashenas88	aatch, seanmonstar: this is for rust-lang/rust
2015-06-01 20:26:57	seanmonstar	Nashenas88: you determined to run `make`, or are you testing changes? libstd changes could be tested faster with `make check-stage1`
2015-06-01 20:26:57	rillian	nrc: ok, cool. cajbir mentioned it to me today
2015-06-01 20:27:26	--	kent is now known as datanoise
2015-06-01 20:27:28	Nashenas88	I just ran make assuming it would only build what’s needed
2015-06-01 20:27:31	-->	DerisiveLogic (smuxi@moz-g93io6.res.rr.com) has joined #rust
2015-06-01 20:27:36	<--	fengshaun (fengshaun@moz-oagll1.cpe.pppoe.ca) has quit (Quit: bye bye!)
2015-06-01 20:27:39	Nashenas88	only build what’s been updated*
2015-06-01 20:27:41	@nrc	rillian: patches accepted :-)
2015-06-01 20:27:42	-->	ajhager (aajhager@moz-mcdsgi.iplsin.sbcglobal.net) has joined #rust
2015-06-01 20:27:47	seanmonstar	Nashenas88: depends on what you consider "what's needed"
2015-06-01 20:27:55	-->	Moonlightning (blackl@moz-1rc.30c.23.184.IP) has joined #rust
2015-06-01 20:28:19	Nashenas88	seanmonstar: I meant to write, “what’s been updated since the last build”
2015-06-01 20:28:21	seanmonstar	Nashenas88: if you want to build the compiler and libstd similar to a release, `make` will do that
2015-06-01 20:28:54	Nashenas88	seanmonstar: I’m looking more towards debugging and testing.
2015-06-01 20:29:01	<--	cakecatz (cakecatz@moz-rakufn.sannet.ne.jp) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-06-01 20:29:05	rillian	nrc: cargo can't find the rustc_unicode dep. Do you require nightly?
2015-06-01 20:29:11	Nashenas88	I want to get involved with rust, but I’m trying to figure out how to do it efficiently
2015-06-01 20:29:16	<--	amnn (amnn@moz-ro1qqu.ox.ac.uk) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-06-01 20:29:19	@nrc	rillian: yes
2015-06-01 20:29:31	@nrc	I should put that in the README
2015-06-01 20:29:38	seanmonstar	Nashenas88: a release build compiles the compiler several times (hence, stages). if you're just testing a change, make check-stage1 will reduce the amount of stages built
2015-06-01 20:29:43	jethrogb	Nashenas88: if you only want to change libstd see https://gist.github.com/jethrogb/72e1325b8b63cd072cd6
2015-06-01 20:29:48	Nashenas88	I’ll try out make check-stage1 (once the current build finishes)
2015-06-01 20:30:00	Nashenas88	ohhhh, that would make sense
2015-06-01 20:30:09	-->	cakecatz (cakecatz@moz-rakufn.sannet.ne.jp) has joined #rust
2015-06-01 20:30:14	Moonlightning	It's not possible to mutate a key that's been stored in e.g. a HashMap, right?
2015-06-01 20:30:34	seanmonstar	Moonlightning: that'd change the hash, wouldn't it?
2015-06-01 20:30:39	@cmr	Moonlightning: It's possible, but not advised.
2015-06-01 20:30:52	@cmr	Moonlightning: changing the hash of a key results in a leak.
2015-06-01 20:30:55	Moonlightning	seanmonstar: exactly
2015-06-01 20:31:13	@cmr	Moonlightning: see the last paragraph of http://static.rust-lang.org/doc/master/std/collections/struct.HashMap.html
2015-06-01 20:32:07	<--	daschl (Adium@moz-mp6.9pg.169.206.IP) has quit (Quit: Leaving.)
2015-06-01 20:32:12	-->	nowhere_man (pierre@moz-3g4326.abo.wanadoo.fr) has joined #rust
2015-06-01 20:32:56	<--	brson (brson@moz-cfhap5.mtv2.mozilla.com) has quit (Quit: leaving)
2015-06-01 20:33:04	<--	kimwonyong (kimwonyong@moz-gfp.vhi.163.221.IP) has quit (Connection closed)
2015-06-01 20:33:18	Nashenas88	seanmonstar, jethrogb: Thank you
2015-06-01 20:33:26	Moonlightning	> This is normally only possible through `Cell`, `RefCell`, global state, I/O, or unsafe code.
2015-06-01 20:33:30	<--	bfrog (tburdick@moz-hde.5e5.136.67.IP) has quit (Ping timeout: 121 seconds)
2015-06-01 20:34:03	jethrogb	Nashenas88: that script is several months old, will probably need some changes to make it work today
2015-06-01 20:34:13	<--	cakecatz (cakecatz@moz-rakufn.sannet.ne.jp) has quit (Ping timeout: 121 seconds)
2015-06-01 20:34:30	<--	libfud (libfud@moz-p2rb38.eph2.ptd.net) has quit (A TLS packet with unexpected length was received.)
2015-06-01 20:34:48	Moonlightning	I thought mutation with e.g. `Cell` would be prevented because the container owned the key.
2015-06-01 20:34:48	-->	ajtulloch (ajtulloch@moz-ga0.9o0.201.199.IP) has joined #rust
2015-06-01 20:35:28	<--	JuggleTux (tux@moz-svr61d.cust.swisscom.ch) has quit (Connection closed)
2015-06-01 20:35:56	aatch	Moonlightning, your key can be a `&T`
2015-06-01 20:36:32	<--	davebettin (textual@moz-acc.cl4.35.72.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-06-01 20:37:10	<--	Guest38 (textual@moz-4hh.6p3.217.74.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-06-01 20:37:21	-->	lenstr (lenstr@moz-9fj.vju.25.171.IP) has joined #rust
2015-06-01 20:37:34	-->	hroi (hroi@moz-d273ub.static.netgroup.dk) has joined #rust
2015-06-01 20:37:39	-->	Guest (textual@moz-lmfinb.fios.verizon.net) has joined #rust
2015-06-01 20:38:27	-->	brson (brson@moz-u4t.ku8.145.82.IP) has joined #rust
2015-06-01 20:38:27	--	Mode #rust [+ao brson brson] by ChanServ
2015-06-01 20:38:27	Moonlightning	aatch: Really?
2015-06-01 20:38:56	aatch	Moonlightning, sure, why not?
2015-06-01 20:39:18	aatch	Moonlightning, it could also be a `Rc<T>`
2015-06-01 20:39:25	Moonlightning	That's fair.
2015-06-01 20:39:28	seanmonstar	playbot: let mut x = ::std::collections::HashMap::new(); x.insert(&1i32, "foo"); x.find(&&1i32)
2015-06-01 20:39:29	--	Notice(playbot): <anon>:9:83: 9:95 error: type `std::collections::hash::map::HashMap<&i32, &str>` does not implement any method in scope named `find`
2015-06-01 20:39:29	--	Notice(playbot): <anon>:9         let mut x = ::std::collections::HashMap::new(); x.insert(&1i32, "foo"); x.find(&&1i32)
2015-06-01 20:39:29	--	Notice(playbot): output truncated; full output at: http://bit.ly/1I3rDAt
2015-06-01 20:39:40	seanmonstar	playbot: let mut x = ::std::collections::HashMap::new(); x.insert(&1i32, "foo"); x.get(&&1i32)
2015-06-01 20:39:41	--	Notice(playbot): <anon>:9:67: 9:71 error: borrowed value does not live long enough
2015-06-01 20:39:41	--	Notice(playbot): <anon>:9         let mut x = ::std::collections::HashMap::new(); x.insert(&1i32, "foo"); x.get(&&1i32)
2015-06-01 20:39:41	--	Notice(playbot): output truncated; full output at: http://bit.ly/1FQUog8
2015-06-01 20:39:48	seanmonstar	bleh, whatever
2015-06-01 20:39:59	Moonlightning	…wait, `Rc<T>: Hash where T: Hash`?
2015-06-01 20:40:07	-->	Guest38 (textual@moz-4hh.6p3.217.74.IP) has joined #rust
2015-06-01 20:40:18	aatch	playbot: let mut x = ::std::collections::HashMap::new(); x.insert(&1i32, "foo"); show(x.get(&&1i32));
2015-06-01 20:40:19	--	Notice(playbot): <anon>:9:67: 9:71 error: borrowed value does not live long enough
2015-06-01 20:40:20	--	Notice(playbot): <anon>:9         let mut x = ::std::collections::HashMap::new(); x.insert(&1i32, "foo"); show(x.get(&&1i32));
2015-06-01 20:40:20	--	Notice(playbot): output truncated; full output at: http://bit.ly/1I3rJrN
2015-06-01 20:40:23	Brochacho	Is there a macro to get a function name?
2015-06-01 20:40:29	aatch	meh
2015-06-01 20:40:38	aatch	Brochacho, not that I know of.
2015-06-01 20:40:47	Brochacho	aatch: rats
2015-06-01 20:41:03	seanmonstar	there was an rfc for that...
2015-06-01 20:41:17	<--	p32blo (p32blo@moz-v36o87.cpe.netcabo.pt) has quit (Ping timeout: 121 seconds)
2015-06-01 20:41:41	<--	hroi (hroi@moz-d273ub.static.netgroup.dk) has quit (Ping timeout: 121 seconds)
2015-06-01 20:42:14	seanmonstar	https://github.com/rust-lang/rfcs/pull/466
2015-06-01 20:42:29	<--	lenstr (lenstr@moz-9fj.vju.25.171.IP) has quit (Ping timeout: 121 seconds)
2015-06-01 20:43:39	Brochacho	seanmonstar: Says merged but not sure to what, not familiar with the RFC process
2015-06-01 20:43:43	<--	jedireza (textual@moz-u3dg2t.sfo1.mozilla.com) has left #rust ("Textual IRC Client: www.textualapp.com")
2015-06-01 20:43:47	seanmonstar	yea it looks broken
2015-06-01 20:45:41	<--	FlyingFoX (quassel@moz-j2ui1r.unity-media.net) has quit (Connection closed)
2015-06-01 20:46:06	<--	kngl (Adium@moz-rmgnkh.dynamic.voo.be) has quit (Quit: Leaving.)
2015-06-01 20:46:07	<--	drbawb (drbawb@moz-q7c35u.res.rr.com) has quit (Ping timeout: 121 seconds)
2015-06-01 20:46:34	<--	kgrandon (Adium@moz-renl33.2rkg.9kg1.0101.2620.IP) has quit (Quit: Leaving.)
2015-06-01 20:46:44	dirvine	Gstatus
2015-06-01 20:46:55	seanmonstar	and i cant find anything else, perhaps it was just lost/given up
2015-06-01 20:47:03	<--	tristanseifert (tristanseif@moz-r0t7ns.res.rr.com) has quit (Ping timeout: 121 seconds)
2015-06-01 20:48:03	<--	copycat (Thunderbird@moz-dpm.8hc.223.111.IP) has quit (Client exited)
2015-06-01 20:48:07	-->	copycat (Thunderbird@moz-dpm.8hc.223.111.IP) has joined #rust
2015-06-01 20:48:50	<--	skeuomorf (skeuomorf@moz-a8h.ni9.32.197.IP) has quit (Ping timeout: 121 seconds)
2015-06-01 20:49:12	<--	cholcombe (chris@moz-mtfab9.or.comcast.net) has quit (Ping timeout: 121 seconds)
2015-06-01 20:49:27	-->	skeuomorf (skeuomorf@moz-a8h.ni9.32.197.IP) has joined #rust
2015-06-01 20:50:10	-->	p32blo (p32blo@moz-v36o87.cpe.netcabo.pt) has joined #rust
2015-06-01 20:51:11	-->	dhole (dhole@moz-rjjp04.dynamic.jazztel.es) has joined #rust
2015-06-01 20:51:13	-->	daschl (Adium@moz-mp6.9pg.169.206.IP) has joined #rust
2015-06-01 20:51:45	-->	thor1 (thor@moz-n7n1a4.res.rr.com) has joined #rust
2015-06-01 20:51:47	<--	dhole_ (dhole@moz-22n.slc.218.87.IP) has quit (Ping timeout: 121 seconds)
2015-06-01 20:54:24	<--	rovar (rovar@moz-6iq.47m.88.38.IP) has quit (NickServ (RECOVER command used by rovar_))
2015-06-01 20:54:24	--	rovar_ is now known as rovar
2015-06-01 20:54:33	--	gaye is now known as gaye|sleep
2015-06-01 20:54:36	-->	rovar_ (rovar@moz-6iq.47m.88.38.IP) has joined #rust
2015-06-01 20:55:40	<--	eckhardt_ (eckhardt@moz-s9e.ov1.227.199.IP) has quit (Connection closed)
2015-06-01 20:55:48	-->	kgrandon (Adium@moz-ba3te3.2rkg.9kg1.0101.2620.IP) has joined #rust
2015-06-01 20:56:05	-->	mattkrea (textual@moz-26n25s.flt3.ptd.net) has joined #rust
2015-06-01 20:56:06	-->	joneshf-laptop (joneshf@moz-l4h.b5s.208.98.IP) has joined #rust
2015-06-01 20:56:26	-->	blank_na1e (blank_name@moz-p4egrb.mi.frontiernet.net) has joined #rust
2015-06-01 20:57:16	<--	jensnockert (jensnockert@moz-pvj.o2f.219.84.IP) has quit (Connection closed)
2015-06-01 20:57:42	<--	ajhager (aajhager@moz-mcdsgi.iplsin.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2015-06-01 20:58:35	<--	Kingsquee (kingsley@moz-3fm07c.bchsia.telus.net) has quit (Quit: Konversation terminated!)
2015-06-01 20:58:39	-->	jjthrash (jjthrash@moz-la0q45.res.rr.com) has joined #rust
2015-06-01 20:59:01	<--	harrisonclarke (harrisoncla@moz-uur7pt.eastlink.ca) has quit (Connection closed)
2015-06-01 20:59:19	<--	blank_name (blank_name@moz-j00b3g.mi.frontiernet.net) has quit (Ping timeout: 121 seconds)
2015-06-01 21:00:47	-->	eckhardt (eckhardt@moz-s9e.ov1.227.199.IP) has joined #rust
2015-06-01 21:01:03	-->	SiegeLord (sl@moz-9jtaei.ca.comcast.net) has joined #rust
2015-06-01 21:01:28	<--	skeuomorf (skeuomorf@moz-a8h.ni9.32.197.IP) has quit (Ping timeout: 121 seconds)
2015-06-01 21:01:39	<--	datanoise (kent@moz-nd2iqs.fl.atlanticbb.net) has quit (Ping timeout: 121 seconds)
2015-06-01 21:01:57	<--	rbranson (rbranson@moz-i7m.9o0.201.199.IP) has quit (Quit: Computer has gone to sleep.)
2015-06-01 21:01:58	<--	hjr3 (hradtke@moz-lei.av4.169.69.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2015-06-01 21:02:12	--	irc: disconnected from server
