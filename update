#!/bin/bash

echo Updating local file system from repo...

set -o verbose

OLDDIR=$(pwd)
cd $(dirname $0)

# git config
cp git/.gitignore_core ~
git config --global core.excludesfile '~/.gitignore_core'
cp -R git/.git_template ~
git config --global init.templatedir '~/.git_template'

# vim config
git submodule init
git submodule update

cp -R vim ~/.vim
ln -s ~/.vim/vimrc ~/.vimrc

# emacs config
cp -R spacemacs ~/.spacemacs.d
git clone https://github.com/syl20bnr/spacemacs.git ~/.emacs.d

# weechat config
cp -R weechat ~/.weechat

# xorg config
cp xorg+awesome/.Xdefaults ~
cp xorg+awesome/.xinitrc ~

# awesome wm config
mkdir -p ~/.config/awesome
cp -R xorg+awesome/alttab ~/.config/awesome
cp xorg+awesome/rc.lua ~/.config/awesome
cp xorg+awesome/cal.lua ~/.config/awesome
cp xorg+awesome/sysmonitor.lua ~/.config/awesome
cp xorg+awesome/update_notifications.lua ~/.config/awesome

# zsh config
cp zsh/.zlogin ~
cp zsh/.zshrc ~
cp zsh/.zshenv ~

# other config
cp other/.toprc ~

# note that there's probably a more robust way to do this 
# e.g. this will break if the path of $AWESOME_LOG_FILE changes
mkdir -p ~/.cache/awesome
touch ~/.cache/awesome/awesome.log

touch ~/.watched_packages

cd $OLDDIR

set +o verbose

echo Done!
echo You will probably need to edit ~/.xinitrc.
